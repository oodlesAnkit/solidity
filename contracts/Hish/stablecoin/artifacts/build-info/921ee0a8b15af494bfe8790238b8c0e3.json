{
	"id": "921ee0a8b15af494bfe8790238b8c0e3",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.4.17",
	"solcLongVersion": "0.4.17+commit.bdeb9e52",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/stablecoin/stablecoin_contract.sol": {
				"content": "/**\n *Submitted for verification at Etherscan.io on 2017-11-28\n*/\n\npragma solidity ^0.4.17;\n\n/**\n * @title SafeMath\n * @dev Math operations with safety checks that throw on error\n */\nlibrary SafeMath {\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n        uint256 c = a * b;\n        assert(c / a == b);\n        return c;\n    }\n\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        // assert(b > 0); // Solidity automatically throws when dividing by 0\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n        return c;\n    }\n\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        assert(b <= a);\n        return a - b;\n    }\n\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        assert(c >= a);\n        return c;\n    }\n}\n\n/**\n * @title Ownable\n * @dev The Ownable contract has an owner address, and provides basic authorization control\n * functions, this simplifies the implementation of \"user permissions\".\n */\ncontract Ownable {\n    address public owner;\n\n    /**\n      * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n      * account.\n      */\n    function Ownable() public {\n        owner = msg.sender;\n    }\n\n    /**\n      * @dev Throws if called by any account other than the owner.\n      */\n    modifier onlyOwner() {\n        require(msg.sender == owner);\n        _;\n    }\n\n    /**\n    * @dev Allows the current owner to transfer control of the contract to a newOwner.\n    * @param newOwner The address to transfer ownership to.\n    */\n    function transferOwnership(address newOwner) public onlyOwner {\n        if (newOwner != address(0)) {\n            owner = newOwner;\n        }\n    }\n\n}\n\n\ncontract ZRC20Basic {\n    uint public _totalSupply;\n    function totalSupply() public constant returns (uint);\n    function balanceOf(address who) public constant returns (uint);\n    function transfer(address to, uint value) public;\n    event Transfer(address indexed from, address indexed to, uint value);\n}\n\n\ncontract ZRC20 is ZRC20Basic {\n    function allowance(address owner, address spender) public constant returns (uint);\n    function transferFrom(address from, address to, uint value) public;\n    function approve(address spender, uint value) public;\n    event Approval(address indexed owner, address indexed spender, uint value);\n}\n\n/**\n * @title Basic token\n * @dev Basic version of StandardToken, with no allowances.\n */\ncontract BasicToken is Ownable, ZRC20Basic {\n    using SafeMath for uint;\n\n    mapping(address => uint) public balances;\n\n    // additional variables for use if transaction fees ever became necessary\n    uint public basisPointsRate = 0;\n    uint public maximumFee = 0;\n\n    /**\n    * @dev Fix for the ZRC20 short address attack.\n    */\n    modifier onlyPayloadSize(uint size) {\n        require(!(msg.data.length < size + 4));\n        _;\n    }\n\n    /**\n    * @dev transfer token for a specified address\n    * @param _to The address to transfer to.\n    * @param _value The amount to be transferred.\n    */\n    function transfer(address _to, uint _value) public onlyPayloadSize(2 * 32) {\n        uint fee = (_value.mul(basisPointsRate)).div(10000);\n        if (fee > maximumFee) {\n            fee = maximumFee;\n        }\n        uint sendAmount = _value.sub(fee);\n        balances[msg.sender] = balances[msg.sender].sub(_value);\n        balances[_to] = balances[_to].add(sendAmount);\n        if (fee > 0) {\n            balances[owner] = balances[owner].add(fee);\n            Transfer(msg.sender, owner, fee);\n        }\n        Transfer(msg.sender, _to, sendAmount);\n    }\n\n    /**\n    * @dev Gets the balance of the specified address.\n    * @param _owner The address to query the the balance of.\n    * @return An uint representing the amount owned by the passed address.\n    */\n    function balanceOf(address _owner) public constant returns (uint balance) {\n        return balances[_owner];\n    }\n\n}\n\n\ncontract StandardToken is BasicToken, ZRC20 {\n\n    mapping (address => mapping (address => uint)) public allowed;\n\n    uint public constant MAX_UINT = 2**256 - 1;\n\n    /**\n    * @dev Transfer tokens from one address to another\n    * @param _from address The address which you want to send tokens from\n    * @param _to address The address which you want to transfer to\n    * @param _value uint the amount of tokens to be transferred\n    */\n    function transferFrom(address _from, address _to, uint _value) public onlyPayloadSize(3 * 32) {\n        var _allowance = allowed[_from][msg.sender];\n\n        // Check is not needed because sub(_allowance, _value) will already throw if this condition is not met\n        // if (_value > _allowance) throw;\n\n        uint fee = (_value.mul(basisPointsRate)).div(10000);\n        if (fee > maximumFee) {\n            fee = maximumFee;\n        }\n        if (_allowance < MAX_UINT) {\n            allowed[_from][msg.sender] = _allowance.sub(_value);\n        }\n        uint sendAmount = _value.sub(fee);\n        balances[_from] = balances[_from].sub(_value);\n        balances[_to] = balances[_to].add(sendAmount);\n        if (fee > 0) {\n            balances[owner] = balances[owner].add(fee);\n            Transfer(_from, owner, fee);\n        }\n        Transfer(_from, _to, sendAmount);\n    }\n\n    /**\n    * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\n    * @param _spender The address which will spend the funds.\n    * @param _value The amount of tokens to be spent.\n    */\n    function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {\n\n        // To change the approve amount you first have to reduce the addresses`\n        //  allowance to zero by calling `approve(_spender, 0)` if it is not\n        //  already 0 to mitigate the race condition described here:\n        //  https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n        require(!((_value != 0) && (allowed[msg.sender][_spender] != 0)));\n\n        allowed[msg.sender][_spender] = _value;\n        Approval(msg.sender, _spender, _value);\n    }\n\n    /**\n    * @dev Function to check the amount of tokens than an owner allowed to a spender.\n    * @param _owner address The address which owns the funds.\n    * @param _spender address The address which will spend the funds.\n    * @return A uint specifying the amount of tokens still available for the spender.\n    */\n    function allowance(address _owner, address _spender) public constant returns (uint remaining) {\n        return allowed[_owner][_spender];\n    }\n\n}\n\n\n/**\n * @title Pausable\n * @dev Base contract which allows children to implement an emergency stop mechanism.\n */\ncontract Pausable is Ownable {\n  event Pause();\n  event Unpause();\n\n  bool public paused = false;\n\n\n  /**\n   * @dev Modifier to make a function callable only when the contract is not paused.\n   */\n  modifier whenNotPaused() {\n    require(!paused);\n    _;\n  }\n\n  /**\n   * @dev Modifier to make a function callable only when the contract is paused.\n   */\n  modifier whenPaused() {\n    require(paused);\n    _;\n  }\n\n  /**\n   * @dev called by the owner to pause, triggers stopped state\n   */\n  function pause() onlyOwner whenNotPaused public {\n    paused = true;\n    Pause();\n  }\n\n  /**\n   * @dev called by the owner to unpause, returns to normal state\n   */\n  function unpause() onlyOwner whenPaused public {\n    paused = false;\n    Unpause();\n  }\n}\n\ncontract BlackList is Ownable, BasicToken {\n\n    /////// Getters to allow the same blacklist to be used also by other contracts (including upgraded Tether) ///////\n    function getBlackListStatus(address _maker) external constant returns (bool) {\n        return isBlackListed[_maker];\n    }\n\n    function getOwner() external constant returns (address) {\n        return owner;\n    }\n\n    mapping (address => bool) public isBlackListed;\n    \n    function addBlackList (address _evilUser) public onlyOwner {\n        isBlackListed[_evilUser] = true;\n        AddedBlackList(_evilUser);\n    }\n\n    function removeBlackList (address _clearedUser) public onlyOwner {\n        isBlackListed[_clearedUser] = false;\n        RemovedBlackList(_clearedUser);\n    }\n\n    function destroyBlackFunds (address _blackListedUser) public onlyOwner {\n        require(isBlackListed[_blackListedUser]);\n        uint dirtyFunds = balanceOf(_blackListedUser);\n        balances[_blackListedUser] = 0;\n        _totalSupply -= dirtyFunds;\n\n        Transfer(_blackListedUser, address(0), dirtyFunds);\n        DestroyedBlackFunds(_blackListedUser, dirtyFunds);\n    }\n\n    event DestroyedBlackFunds(address _blackListedUser, uint _balance);\n\n    event AddedBlackList(address _user);\n\n    event RemovedBlackList(address _user);\n\n}\n\ncontract UpgradedStandardToken is StandardToken{\n    // those methods are called by the legacy contract\n    // and they must ensure msg.sender to be the contract address\n    function transferByLegacy(address from, address to, uint value) public;\n    function transferFromByLegacy(address sender, address from, address spender, uint value) public;\n    function approveByLegacy(address from, address spender, uint value) public;\n}\n\ncontract TetherToken is Pausable, StandardToken, BlackList {\n\n    string public name;\n    string public symbol;\n    uint public decimals;\n    address public upgradedAddress;\n    bool public deprecated;\n\n    //  The contract can be initialized with a number of tokens\n    //  All the tokens are deposited to the owner address\n    //\n    // @param _balance Initial supply of the contract\n    // @param _name Token Name\n    // @param _symbol Token symbol\n    // @param _decimals Token decimals\n    function TetherToken(uint _initialSupply, string _name, string _symbol, uint _decimals) public {\n        _totalSupply = _initialSupply;\n        name = _name;\n        symbol = _symbol;\n        decimals = _decimals;\n        balances[owner] = _initialSupply;\n        deprecated = false;\n        Transfer(address(0), owner, _initialSupply);\n\n    }\n\n    // Forward ZRC20 methods to upgraded contract if this one is deprecated\n    function transfer(address _to, uint _value) public whenNotPaused {\n        require(!isBlackListed[msg.sender]);\n        if (deprecated) {\n            return UpgradedStandardToken(upgradedAddress).transferByLegacy(msg.sender, _to, _value);\n        } else {\n            return super.transfer(_to, _value);\n        }\n    }\n\n    // Forward ZRC20 methods to upgraded contract if this one is deprecated\n    function transferFrom(address _from, address _to, uint _value) public whenNotPaused {\n        require(!isBlackListed[_from]);\n        if (deprecated) {\n            return UpgradedStandardToken(upgradedAddress).transferFromByLegacy(msg.sender, _from, _to, _value);\n        } else {\n            return super.transferFrom(_from, _to, _value);\n        }\n    }\n\n    // Forward ZRC20 methods to upgraded contract if this one is deprecated\n    function balanceOf(address who) public constant returns (uint) {\n        if (deprecated) {\n            return UpgradedStandardToken(upgradedAddress).balanceOf(who);\n        } else {\n            return super.balanceOf(who);\n        }\n    }\n\n    // Forward ZRC20 methods to upgraded contract if this one is deprecated\n    function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {\n        if (deprecated) {\n            return UpgradedStandardToken(upgradedAddress).approveByLegacy(msg.sender, _spender, _value);\n        } else {\n            return super.approve(_spender, _value);\n        }\n    }\n\n    // Forward ZRC20 methods to upgraded contract if this one is deprecated\n    function allowance(address _owner, address _spender) public constant returns (uint remaining) {\n        if (deprecated) {\n            return StandardToken(upgradedAddress).allowance(_owner, _spender);\n        } else {\n            return super.allowance(_owner, _spender);\n        }\n    }\n\n    // deprecate current contract in favour of a new one\n    function deprecate(address _upgradedAddress) public onlyOwner {\n        deprecated = true;\n        upgradedAddress = _upgradedAddress;\n        Deprecate(_upgradedAddress);\n    }\n\n    // deprecate current contract if favour of a new one\n    function totalSupply() public constant returns (uint) {\n        if (deprecated) {\n            return StandardToken(upgradedAddress).totalSupply();\n        } else {\n            return _totalSupply;\n        }\n    }\n\n    // Issue a new amount of tokens\n    // these tokens are deposited into the owner address\n    //\n    // @param _amount Number of tokens to be issued\n    function issue(uint amount) public onlyOwner {\n        require(_totalSupply + amount > _totalSupply);\n        require(balances[owner] + amount > balances[owner]);\n\n        balances[owner] += amount;\n        _totalSupply += amount;\n\n        Transfer(address(0), owner, amount);\n        Issue(amount);\n    }\n\n    // Redeem tokens.\n    // These tokens are withdrawn from the owner address\n    // if the balance must be enough to cover the redeem                                                                                                                                                                                        \n    // or the call will fail.\n    // @param _amount Number of tokens to be issued\n    function redeem(uint amount) public onlyOwner {\n        require(_totalSupply >= amount);\n        require(balances[owner] >= amount);\n\n        _totalSupply -= amount;\n        balances[owner] -= amount;\n\n        Transfer(owner,address(0), amount);\n        Redeem(amount);\n    }\n\n    function setParams(uint newBasisPoints, uint newMaxFee) public onlyOwner {\n        // Ensure transparency by hardcoding limit beyond which fees can never be added\n        require(newBasisPoints <=500);\n        require(newMaxFee<=50);\n\n        basisPointsRate = newBasisPoints;\n        maximumFee = newMaxFee.mul(10**decimals);\n\n        Params(basisPointsRate, maximumFee);\n    }\n\n    // Called when new token are issued\n    event Issue(uint amount);\n\n    // Called when tokens are redeemed\n    event Redeem(uint amount);\n\n    // Called when contract is deprecated\n    event Deprecate(address newAddress);\n\n    // Called if contract ever adds fees\n    event Params(uint feeBasisPoints, uint maxFee);\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/stablecoin/stablecoin_contract.sol": {
				"BasicToken": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"name": "balances",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "maximumFee",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "_totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "balance",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_to",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "basisPointsRate",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {
							"balanceOf(address)": {
								"details": "Gets the balance of the specified address.",
								"params": {
									"_owner": "The address to query the the balance of."
								},
								"return": "An uint representing the amount owned by the passed address."
							},
							"transfer(address,uint256)": {
								"details": "transfer token for a specified address",
								"params": {
									"_to": "The address to transfer to.",
									"_value": "The amount to be transferred."
								}
							},
							"transferOwnership(address)": {
								"details": "Allows the current owner to transfer control of the contract to a newOwner.",
								"params": {
									"newOwner": "The address to transfer ownership to."
								}
							}
						},
						"title": "Basic token"
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"_totalSupply()": "3eaaf86b",
							"balanceOf(address)": "70a08231",
							"balances(address)": "27e235e3",
							"basisPointsRate()": "dd644f72",
							"maximumFee()": "35390714",
							"owner()": "8da5cb5b",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "",
					"userdoc": {
						"methods": {}
					}
				},
				"BlackList": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "_evilUser",
									"type": "address"
								}
							],
							"name": "addBlackList",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"name": "balances",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "maximumFee",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "_totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_maker",
									"type": "address"
								}
							],
							"name": "getBlackListStatus",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "balance",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_to",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "basisPointsRate",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"name": "isBlackListed",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_clearedUser",
									"type": "address"
								}
							],
							"name": "removeBlackList",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_blackListedUser",
									"type": "address"
								}
							],
							"name": "destroyBlackFunds",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "_blackListedUser",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "_balance",
									"type": "uint256"
								}
							],
							"name": "DestroyedBlackFunds",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "_user",
									"type": "address"
								}
							],
							"name": "AddedBlackList",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "_user",
									"type": "address"
								}
							],
							"name": "RemovedBlackList",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {
							"balanceOf(address)": {
								"details": "Gets the balance of the specified address.",
								"params": {
									"_owner": "The address to query the the balance of."
								},
								"return": "An uint representing the amount owned by the passed address."
							},
							"transfer(address,uint256)": {
								"details": "transfer token for a specified address",
								"params": {
									"_to": "The address to transfer to.",
									"_value": "The amount to be transferred."
								}
							},
							"transferOwnership(address)": {
								"details": "Allows the current owner to transfer control of the contract to a newOwner.",
								"params": {
									"newOwner": "The address to transfer ownership to."
								}
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"_totalSupply()": "3eaaf86b",
							"addBlackList(address)": "0ecb93c0",
							"balanceOf(address)": "70a08231",
							"balances(address)": "27e235e3",
							"basisPointsRate()": "dd644f72",
							"destroyBlackFunds(address)": "f3bdc228",
							"getBlackListStatus(address)": "59bf1abe",
							"getOwner()": "893d20e8",
							"isBlackListed(address)": "e47d6060",
							"maximumFee()": "35390714",
							"owner()": "8da5cb5b",
							"removeBlackList(address)": "e4997dc5",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "",
					"userdoc": {
						"methods": {
							"getBlackListStatus(address)": {
								"notice": "//// Getters to allow the same blacklist to be used also by other contracts (including upgraded Tether) ///////"
							}
						}
					}
				},
				"Ownable": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"methods": {
							"transferOwnership(address)": {
								"details": "Allows the current owner to transfer control of the contract to a newOwner.",
								"params": {
									"newOwner": "The address to transfer ownership to."
								}
							}
						},
						"title": "Ownable"
					},
					"evm": {
						"assembly": "    /* \"contracts/stablecoin/stablecoin_contract.sol\":1165:1888  contract Ownable {... */\n  mstore(0x40, 0x60)\n    /* \"contracts/stablecoin/stablecoin_contract.sol\":1342:1403  function Ownable() public {... */\n  jumpi(tag_1, iszero(callvalue))\n  0x0\n  dup1\n  revert\ntag_1:\n    /* \"contracts/stablecoin/stablecoin_contract.sol\":1378:1383  owner */\n  0x0\n    /* \"contracts/stablecoin/stablecoin_contract.sol\":1378:1396  owner = msg.sender */\n  dup1\n  sload\n  sub(exp(0x2, 0xa0), 0x1)\n    /* \"contracts/stablecoin/stablecoin_contract.sol\":1386:1396  msg.sender */\n  caller\n    /* \"contracts/stablecoin/stablecoin_contract.sol\":1378:1396  owner = msg.sender */\n  and\n  not(sub(exp(0x2, 0xa0), 0x1))\n  swap1\n  swap2\n  and\n  or\n  swap1\n  sstore\n    /* \"contracts/stablecoin/stablecoin_contract.sol\":1165:1888  contract Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1165:1888  contract Ownable {... */\n      mstore(0x40, 0x60)\n      and(div(calldataload(0x0), 0x100000000000000000000000000000000000000000000000000000000), 0xffffffff)\n      0x8da5cb5b\n      dup2\n      eq\n      tag_2\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_3\n      jumpi\n      0x0\n      dup1\n      revert\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1188:1208  address public owner */\n    tag_2:\n      jumpi(tag_4, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_4:\n      tag_5\n      jump(tag_6)\n    tag_5:\n      mload(0x40)\n      sub(exp(0x2, 0xa0), 0x1)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1738:1885  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_3:\n      jumpi(tag_7, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_7:\n      tag_8\n      and(calldataload(0x4), sub(exp(0x2, 0xa0), 0x1))\n      jump(tag_9)\n    tag_8:\n      stop\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1188:1208  address public owner */\n    tag_6:\n      and(sub(exp(0x2, 0xa0), 0x1), sload(0x0))\n      dup2\n      jump\t// out\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1738:1885  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_9:\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1546:1551  owner */\n      sload(0x0)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1532:1542  msg.sender */\n      caller\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1532:1551  msg.sender == owner */\n      swap1\n      dup2\n      and\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1546:1551  owner */\n      swap2\n      and\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1532:1551  msg.sender == owner */\n      eq\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1524:1552  require(msg.sender == owner) */\n      tag_11\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_11:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1814:1836  newOwner != address(0) */\n      dup2\n      and\n      iszero\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1810:1879  if (newOwner != address(0)) {... */\n      tag_13\n      jumpi\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1852:1857  owner */\n      0x0\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1852:1868  owner = newOwner */\n      dup1\n      sload\n      not(0xffffffffffffffffffffffffffffffffffffffff)\n      and\n      sub(exp(0x2, 0xa0), 0x1)\n      dup4\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1810:1879  if (newOwner != address(0)) {... */\n    tag_13:\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1738:1885  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a72305820192b7e8370087f4dc7ad34ae13a52e6979b76565a80da72c0d679ddb4e587a640029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6060604052341561000f57600080fd5b60008054600160a060020a033316600160a060020a031990911617905561011e8061003b6000396000f300606060405263ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416638da5cb5b81146045578063f2fde38b14607157600080fd5b3415604f57600080fd5b6055608f565b604051600160a060020a03909116815260200160405180910390f35b3415607b57600080fd5b608d600160a060020a0360043516609e565b005b600054600160a060020a031681565b60005433600160a060020a0390811691161460b857600080fd5b600160a060020a0381161560ef576000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161790555b505600a165627a7a72305820192b7e8370087f4dc7ad34ae13a52e6979b76565a80da72c0d679ddb4e587a640029",
							"opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE CALLVALUE ISZERO PUSH2 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB CALLER AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH2 0x11E DUP1 PUSH2 0x3B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x60 PUSH1 0x40 MSTORE PUSH4 0xFFFFFFFF PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD DIV AND PUSH4 0x8DA5CB5B DUP2 EQ PUSH1 0x45 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH1 0x71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH1 0x4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x55 PUSH1 0x8F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH1 0x7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x8D PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x9E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD CALLER PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH1 0xB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND ISZERO PUSH1 0xEF JUMPI PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND OR SWAP1 SSTORE JUMPDEST POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 NOT 0x2b PUSH31 0x8370087F4DC7AD34AE13A52E6979B76565A80DA72C0D679DDB4E587A640029 ",
							"sourceMap": "1165:723:0:-;;;1342:61;;;;;;;;1378:5;:18;;-1:-1:-1;;;;;1386:10:0;1378:18;-1:-1:-1;;;;;;1378:18:0;;;;;;1165:723;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "606060405263ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416638da5cb5b81146045578063f2fde38b14607157600080fd5b3415604f57600080fd5b6055608f565b604051600160a060020a03909116815260200160405180910390f35b3415607b57600080fd5b608d600160a060020a0360043516609e565b005b600054600160a060020a031681565b60005433600160a060020a0390811691161460b857600080fd5b600160a060020a0381161560ef576000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161790555b505600a165627a7a72305820192b7e8370087f4dc7ad34ae13a52e6979b76565a80da72c0d679ddb4e587a640029",
							"opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE PUSH4 0xFFFFFFFF PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD DIV AND PUSH4 0x8DA5CB5B DUP2 EQ PUSH1 0x45 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH1 0x71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH1 0x4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x55 PUSH1 0x8F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH1 0x7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x8D PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x9E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD CALLER PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH1 0xB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND ISZERO PUSH1 0xEF JUMPI PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND OR SWAP1 SSTORE JUMPDEST POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 NOT 0x2b PUSH31 0x8370087F4DC7AD34AE13A52E6979B76565A80DA72C0D679DDB4E587A640029 ",
							"sourceMap": "1165:723:0:-;;;;;;;;;;;;;;;;;;;;;;1188:20;;;;;;;;;;;;;;;-1:-1:-1;;;;;1188:20:0;;;;;;;;;;;;;;1738:147;;;;;;;;;;-1:-1:-1;;;;;1738:147:0;;;;;;;1188:20;;;-1:-1:-1;;;;;1188:20:0;;:::o;1738:147::-;1546:5;;1532:10;-1:-1:-1;;;;;1532:19:0;;;1546:5;;1532:19;1524:28;;;;;;-1:-1:-1;;;;;1814:22:0;;;1810:69;;1852:5;:16;;-1:-1:-1;;1852:16:0;-1:-1:-1;;;;;1852:16:0;;;;;1810:69;1738:147;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "57200",
								"executionCost": "20473",
								"totalCost": "77673"
							},
							"external": {
								"owner()": "505",
								"transferOwnership(address)": "20912"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1165,
									"end": 1888,
									"name": "PUSH",
									"value": "60"
								},
								{
									"begin": 1165,
									"end": 1888,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1165,
									"end": 1888,
									"name": "MSTORE"
								},
								{
									"begin": 1342,
									"end": 1403,
									"name": "CALLVALUE"
								},
								{
									"begin": 1342,
									"end": 1403,
									"name": "ISZERO"
								},
								{
									"begin": 1342,
									"end": 1403,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 1342,
									"end": 1403,
									"name": "JUMPI"
								},
								{
									"begin": 1342,
									"end": 1403,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1342,
									"end": 1403,
									"name": "DUP1"
								},
								{
									"begin": 1342,
									"end": 1403,
									"name": "REVERT"
								},
								{
									"begin": 1342,
									"end": 1403,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 1342,
									"end": 1403,
									"name": "JUMPDEST"
								},
								{
									"begin": 1378,
									"end": 1383,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1378,
									"end": 1396,
									"name": "DUP1"
								},
								{
									"begin": 1378,
									"end": 1396,
									"name": "SLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "EXP"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": 1386,
									"end": 1396,
									"name": "CALLER"
								},
								{
									"begin": 1378,
									"end": 1396,
									"name": "AND"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "EXP"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT"
								},
								{
									"begin": 1378,
									"end": 1396,
									"name": "SWAP1"
								},
								{
									"begin": 1378,
									"end": 1396,
									"name": "SWAP2"
								},
								{
									"begin": 1378,
									"end": 1396,
									"name": "AND"
								},
								{
									"begin": 1378,
									"end": 1396,
									"name": "OR"
								},
								{
									"begin": 1378,
									"end": 1396,
									"name": "SWAP1"
								},
								{
									"begin": 1378,
									"end": 1396,
									"name": "SSTORE"
								},
								{
									"begin": 1165,
									"end": 1888,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1165,
									"end": 1888,
									"name": "DUP1"
								},
								{
									"begin": 1165,
									"end": 1888,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1165,
									"end": 1888,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1165,
									"end": 1888,
									"name": "CODECOPY"
								},
								{
									"begin": 1165,
									"end": 1888,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1165,
									"end": 1888,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820192b7e8370087f4dc7ad34ae13a52e6979b76565a80da72c0d679ddb4e587a640029",
									".code": [
										{
											"begin": 1165,
											"end": 1888,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 1165,
											"end": 1888,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1165,
											"end": 1888,
											"name": "MSTORE"
										},
										{
											"begin": 1165,
											"end": 1888,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1165,
											"end": 1888,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1165,
											"end": 1888,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1165,
											"end": 1888,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1165,
											"end": 1888,
											"name": "DIV"
										},
										{
											"begin": 1165,
											"end": 1888,
											"name": "AND"
										},
										{
											"begin": 1165,
											"end": 1888,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 1165,
											"end": 1888,
											"name": "DUP2"
										},
										{
											"begin": 1165,
											"end": 1888,
											"name": "EQ"
										},
										{
											"begin": 1165,
											"end": 1888,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 1165,
											"end": 1888,
											"name": "JUMPI"
										},
										{
											"begin": 1165,
											"end": 1888,
											"name": "DUP1"
										},
										{
											"begin": 1165,
											"end": 1888,
											"name": "PUSH",
											"value": "F2FDE38B"
										},
										{
											"begin": 1165,
											"end": 1888,
											"name": "EQ"
										},
										{
											"begin": 1165,
											"end": 1888,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 1165,
											"end": 1888,
											"name": "JUMPI"
										},
										{
											"begin": 1165,
											"end": 1888,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1165,
											"end": 1888,
											"name": "DUP1"
										},
										{
											"begin": 1165,
											"end": 1888,
											"name": "REVERT"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "JUMPDEST"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "CALLVALUE"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "ISZERO"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "JUMPI"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "DUP1"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "REVERT"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "JUMPDEST"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "JUMP"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "JUMPDEST"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "SWAP1"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "SWAP2"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "AND"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "DUP2"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "MSTORE"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "ADD"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "MLOAD"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "DUP1"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "SWAP2"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "SUB"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "SWAP1"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "RETURN"
										},
										{
											"begin": 1738,
											"end": 1885,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 1738,
											"end": 1885,
											"name": "JUMPDEST"
										},
										{
											"begin": 1738,
											"end": 1885,
											"name": "CALLVALUE"
										},
										{
											"begin": 1738,
											"end": 1885,
											"name": "ISZERO"
										},
										{
											"begin": 1738,
											"end": 1885,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 1738,
											"end": 1885,
											"name": "JUMPI"
										},
										{
											"begin": 1738,
											"end": 1885,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1738,
											"end": 1885,
											"name": "DUP1"
										},
										{
											"begin": 1738,
											"end": 1885,
											"name": "REVERT"
										},
										{
											"begin": 1738,
											"end": 1885,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 1738,
											"end": 1885,
											"name": "JUMPDEST"
										},
										{
											"begin": 1738,
											"end": 1885,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1738,
											"end": 1885,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1738,
											"end": 1885,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1738,
											"end": 1885,
											"name": "AND"
										},
										{
											"begin": 1738,
											"end": 1885,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 1738,
											"end": 1885,
											"name": "JUMP"
										},
										{
											"begin": 1738,
											"end": 1885,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 1738,
											"end": 1885,
											"name": "JUMPDEST"
										},
										{
											"begin": 1738,
											"end": 1885,
											"name": "STOP"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "JUMPDEST"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "AND"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "DUP2"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1738,
											"end": 1885,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 1738,
											"end": 1885,
											"name": "JUMPDEST"
										},
										{
											"begin": 1546,
											"end": 1551,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1546,
											"end": 1551,
											"name": "SLOAD"
										},
										{
											"begin": 1532,
											"end": 1542,
											"name": "CALLER"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1532,
											"end": 1551,
											"name": "SWAP1"
										},
										{
											"begin": 1532,
											"end": 1551,
											"name": "DUP2"
										},
										{
											"begin": 1532,
											"end": 1551,
											"name": "AND"
										},
										{
											"begin": 1546,
											"end": 1551,
											"name": "SWAP2"
										},
										{
											"begin": 1546,
											"end": 1551,
											"name": "AND"
										},
										{
											"begin": 1532,
											"end": 1551,
											"name": "EQ"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "JUMPI"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "DUP1"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "REVERT"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1814,
											"end": 1836,
											"name": "DUP2"
										},
										{
											"begin": 1814,
											"end": 1836,
											"name": "AND"
										},
										{
											"begin": 1814,
											"end": 1836,
											"name": "ISZERO"
										},
										{
											"begin": 1810,
											"end": 1879,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 1810,
											"end": 1879,
											"name": "JUMPI"
										},
										{
											"begin": 1852,
											"end": 1857,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1852,
											"end": 1868,
											"name": "DUP1"
										},
										{
											"begin": 1852,
											"end": 1868,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 1852,
											"end": 1868,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1852,
											"end": 1868,
											"name": "DUP4"
										},
										{
											"begin": 1852,
											"end": 1868,
											"name": "AND"
										},
										{
											"begin": 1852,
											"end": 1868,
											"name": "OR"
										},
										{
											"begin": 1852,
											"end": 1868,
											"name": "SWAP1"
										},
										{
											"begin": 1852,
											"end": 1868,
											"name": "SSTORE"
										},
										{
											"begin": 1810,
											"end": 1879,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 1810,
											"end": 1879,
											"name": "JUMPDEST"
										},
										{
											"begin": 1738,
											"end": 1885,
											"name": "POP"
										},
										{
											"begin": 1738,
											"end": 1885,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.17+commit.bdeb9e52\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}},\"title\":\"Ownable\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/stablecoin/stablecoin_contract.sol\":\"Ownable\"},\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/stablecoin/stablecoin_contract.sol\":{\"keccak256\":\"0xfbb04d4cdecf81bb1e5eaf950a7bc2a6f55cfd0c7dcef79c100bce8b26b8a47f\",\"urls\":[\"bzzr://f05f2f6a2517a2416853bd5397e0d572a1bd870456f7ad0707356ad7929de6c0\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				},
				"Pausable": {
					"abi": [
						{
							"constant": false,
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "Pause",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "Unpause",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {
							"pause()": {
								"details": "called by the owner to pause, triggers stopped state"
							},
							"transferOwnership(address)": {
								"details": "Allows the current owner to transfer control of the contract to a newOwner.",
								"params": {
									"newOwner": "The address to transfer ownership to."
								}
							},
							"unpause()": {
								"details": "called by the owner to unpause, returns to normal state"
							}
						},
						"title": "Pausable"
					},
					"evm": {
						"assembly": "    /* \"contracts/stablecoin/stablecoin_contract.sol\":6835:7580  contract Pausable is Ownable {... */\n  mstore(0x40, 0x60)\n    /* \"contracts/stablecoin/stablecoin_contract.sol\":6926:6931  false */\n  0x0\n    /* \"contracts/stablecoin/stablecoin_contract.sol\":6905:6931  bool public paused = false */\n  dup1\n  sload\n  sub(exp(0x2, 0xa0), 0x1)\n    /* \"contracts/stablecoin/stablecoin_contract.sol\":1386:1396  msg.sender */\n  caller\n    /* \"contracts/stablecoin/stablecoin_contract.sol\":1378:1396  owner = msg.sender */\n  and\n  not(sub(exp(0x2, 0xa8), 0x1))\n  swap1\n  swap2\n  and\n  or\n  swap1\n  sstore\n    /* \"contracts/stablecoin/stablecoin_contract.sol\":6835:7580  contract Pausable is Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":6835:7580  contract Pausable is Ownable {... */\n      mstore(0x40, 0x60)\n      and(div(calldataload(0x0), 0x100000000000000000000000000000000000000000000000000000000), 0xffffffff)\n      0x3f4ba83a\n      dup2\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_6\n      jumpi\n      0x0\n      dup1\n      revert\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":7491:7578  function unpause() onlyOwner whenPaused public {... */\n    tag_2:\n      jumpi(tag_7, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_7:\n      tag_8\n      jump(tag_9)\n    tag_8:\n      stop\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":6905:6931  bool public paused = false */\n    tag_3:\n      jumpi(tag_10, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_10:\n      tag_11\n      jump(tag_12)\n    tag_11:\n      mload(0x40)\n      swap1\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":7324:7409  function pause() onlyOwner whenNotPaused public {... */\n    tag_4:\n      jumpi(tag_13, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_13:\n      tag_8\n      jump(tag_15)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1188:1208  address public owner */\n    tag_5:\n      jumpi(tag_16, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_16:\n      tag_17\n      jump(tag_18)\n    tag_17:\n      mload(0x40)\n      sub(exp(0x2, 0xa0), 0x1)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1738:1885  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_6:\n      jumpi(tag_19, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_19:\n      tag_8\n      and(calldataload(0x4), sub(exp(0x2, 0xa0), 0x1))\n      jump(tag_21)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":7491:7578  function unpause() onlyOwner whenPaused public {... */\n    tag_9:\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1546:1551  owner */\n      sload(0x0)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1532:1542  msg.sender */\n      caller\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1532:1551  msg.sender == owner */\n      swap1\n      dup2\n      and\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1546:1551  owner */\n      swap2\n      and\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1532:1551  msg.sender == owner */\n      eq\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1524:1552  require(msg.sender == owner) */\n      tag_23\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_23:\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":7226:7232  paused */\n      sload(0x0)\n      exp(0x2, 0xa0)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":7218:7233  require(paused) */\n      iszero\n      iszero\n      tag_25\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_25:\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":7553:7558  false */\n      0x0\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":7544:7558  paused = false */\n      dup1\n      sload\n      not(0xff0000000000000000000000000000000000000000)\n      and\n      swap1\n      sstore\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":7564:7573  Unpause() */\n      0x7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b33\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":7491:7578  function unpause() onlyOwner whenPaused public {... */\n      jump\t// out\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":6905:6931  bool public paused = false */\n    tag_12:\n      sload(0x0)\n      exp(0x2, 0xa0)\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":7324:7409  function pause() onlyOwner whenNotPaused public {... */\n    tag_15:\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1546:1551  owner */\n      sload(0x0)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1532:1542  msg.sender */\n      caller\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1532:1551  msg.sender == owner */\n      swap1\n      dup2\n      and\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1546:1551  owner */\n      swap2\n      and\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1532:1551  msg.sender == owner */\n      eq\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1524:1552  require(msg.sender == owner) */\n      tag_28\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_28:\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":7074:7080  paused */\n      sload(0x0)\n      exp(0x2, 0xa0)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":7073:7080  !paused */\n      iszero\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":7065:7081  require(!paused) */\n      tag_30\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_30:\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":7378:7384  paused */\n      0x0\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":7378:7391  paused = true */\n      dup1\n      sload\n      not(0xff0000000000000000000000000000000000000000)\n      and\n      exp(0x2, 0xa0)\n      or\n      swap1\n      sstore\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":7397:7404  Pause() */\n      0x6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff625\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":7324:7409  function pause() onlyOwner whenNotPaused public {... */\n      jump\t// out\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1188:1208  address public owner */\n    tag_18:\n      and(sub(exp(0x2, 0xa0), 0x1), sload(0x0))\n      dup2\n      jump\t// out\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1738:1885  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_21:\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1546:1551  owner */\n      sload(0x0)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1532:1542  msg.sender */\n      caller\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1532:1551  msg.sender == owner */\n      swap1\n      dup2\n      and\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1546:1551  owner */\n      swap2\n      and\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1532:1551  msg.sender == owner */\n      eq\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1524:1552  require(msg.sender == owner) */\n      tag_33\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_33:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1814:1836  newOwner != address(0) */\n      dup2\n      and\n      iszero\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1810:1879  if (newOwner != address(0)) {... */\n      tag_35\n      jumpi\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1852:1857  owner */\n      0x0\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1852:1868  owner = newOwner */\n      dup1\n      sload\n      not(0xffffffffffffffffffffffffffffffffffffffff)\n      and\n      sub(exp(0x2, 0xa0), 0x1)\n      dup4\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1810:1879  if (newOwner != address(0)) {... */\n    tag_35:\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1738:1885  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a7230582033111a2958878ea668fde7cbc0d796141bea810feee89e9256b784856220268c0029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "606060405260008054600160a060020a033316600160a860020a03199091161790556102a9806100306000396000f300606060405263ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416633f4ba83a81146100685780635c975abb1461007d5780638456cb59146100a45780638da5cb5b146100b7578063f2fde38b146100e657600080fd5b341561007357600080fd5b61007b610105565b005b341561008857600080fd5b610090610184565b604051901515815260200160405180910390f35b34156100af57600080fd5b61007b610194565b34156100c257600080fd5b6100ca610218565b604051600160a060020a03909116815260200160405180910390f35b34156100f157600080fd5b61007b600160a060020a0360043516610227565b60005433600160a060020a0390811691161461012057600080fd5b60005460a060020a900460ff16151561013857600080fd5b6000805474ff0000000000000000000000000000000000000000191690557f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3360405160405180910390a1565b60005460a060020a900460ff1681565b60005433600160a060020a039081169116146101af57600080fd5b60005460a060020a900460ff16156101c657600080fd5b6000805474ff0000000000000000000000000000000000000000191660a060020a1790557f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62560405160405180910390a1565b600054600160a060020a031681565b60005433600160a060020a0390811691161461024257600080fd5b600160a060020a0381161561027a576000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161790555b505600a165627a7a7230582033111a2958878ea668fde7cbc0d796141bea810feee89e9256b784856220268c0029",
							"opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB CALLER AND PUSH1 0x1 PUSH1 0xA8 PUSH1 0x2 EXP SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH2 0x2A9 DUP1 PUSH2 0x30 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x60 PUSH1 0x40 MSTORE PUSH4 0xFFFFFFFF PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD DIV AND PUSH4 0x3F4BA83A DUP2 EQ PUSH2 0x68 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x7D JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0xA4 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xB7 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0x73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7B PUSH2 0x105 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x90 PUSH2 0x184 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0xAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7B PUSH2 0x194 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0xC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCA PUSH2 0x218 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0xF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7B PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x227 JUMP JUMPDEST PUSH1 0x0 SLOAD CALLER PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x138 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH21 0xFF0000000000000000000000000000000000000000 NOT AND SWAP1 SSTORE PUSH32 0x7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD CALLER PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x1AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH21 0xFF0000000000000000000000000000000000000000 NOT AND PUSH1 0xA0 PUSH1 0x2 EXP OR SWAP1 SSTORE PUSH32 0x6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD CALLER PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x242 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND ISZERO PUSH2 0x27A JUMPI PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND OR SWAP1 SSTORE JUMPDEST POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 CALLER GT BYTE 0x29 PC DUP8 DUP15 0xa6 PUSH9 0xFDE7CBC0D796141BEA DUP2 0xf 0xee 0xe8 SWAP15 SWAP3 JUMP 0xb7 DUP5 DUP6 PUSH3 0x20268C STOP 0x29 ",
							"sourceMap": "6835:745:0:-;;;6926:5;6905:26;;-1:-1:-1;;;;;1386:10:0;1378:18;-1:-1:-1;;;;;;1378:18:0;;;;;;6835:745;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "606060405263ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416633f4ba83a81146100685780635c975abb1461007d5780638456cb59146100a45780638da5cb5b146100b7578063f2fde38b146100e657600080fd5b341561007357600080fd5b61007b610105565b005b341561008857600080fd5b610090610184565b604051901515815260200160405180910390f35b34156100af57600080fd5b61007b610194565b34156100c257600080fd5b6100ca610218565b604051600160a060020a03909116815260200160405180910390f35b34156100f157600080fd5b61007b600160a060020a0360043516610227565b60005433600160a060020a0390811691161461012057600080fd5b60005460a060020a900460ff16151561013857600080fd5b6000805474ff0000000000000000000000000000000000000000191690557f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3360405160405180910390a1565b60005460a060020a900460ff1681565b60005433600160a060020a039081169116146101af57600080fd5b60005460a060020a900460ff16156101c657600080fd5b6000805474ff0000000000000000000000000000000000000000191660a060020a1790557f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62560405160405180910390a1565b600054600160a060020a031681565b60005433600160a060020a0390811691161461024257600080fd5b600160a060020a0381161561027a576000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161790555b505600a165627a7a7230582033111a2958878ea668fde7cbc0d796141bea810feee89e9256b784856220268c0029",
							"opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE PUSH4 0xFFFFFFFF PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD DIV AND PUSH4 0x3F4BA83A DUP2 EQ PUSH2 0x68 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x7D JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0xA4 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xB7 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0x73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7B PUSH2 0x105 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x90 PUSH2 0x184 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0xAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7B PUSH2 0x194 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0xC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCA PUSH2 0x218 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0xF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7B PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x227 JUMP JUMPDEST PUSH1 0x0 SLOAD CALLER PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x138 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH21 0xFF0000000000000000000000000000000000000000 NOT AND SWAP1 SSTORE PUSH32 0x7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD CALLER PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x1AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH21 0xFF0000000000000000000000000000000000000000 NOT AND PUSH1 0xA0 PUSH1 0x2 EXP OR SWAP1 SSTORE PUSH32 0x6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD CALLER PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x242 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND ISZERO PUSH2 0x27A JUMPI PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND OR SWAP1 SSTORE JUMPDEST POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 CALLER GT BYTE 0x29 PC DUP8 DUP15 0xa6 PUSH9 0xFDE7CBC0D796141BEA DUP2 0xf 0xee 0xe8 SWAP15 SWAP3 JUMP 0xb7 DUP5 DUP6 PUSH3 0x20268C STOP 0x29 ",
							"sourceMap": "6835:745:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7491:87;;;;;;;;;;;;;;6905:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7324:85;;;;;;;;;;;;1188:20;;;;;;;;;;;;;;;-1:-1:-1;;;;;1188:20:0;;;;;;;;;;;;;;1738:147;;;;;;;;;;-1:-1:-1;;;;;1738:147:0;;;;;7491:87;1546:5;;1532:10;-1:-1:-1;;;;;1532:19:0;;;1546:5;;1532:19;1524:28;;;;;;7226:6;;-1:-1:-1;;;7226:6:0;;;;7218:15;;;;;;;;7553:5;7544:14;;-1:-1:-1;;7544:14:0;;;7564:9;;;;;;;;;;7491:87::o;6905:26::-;;;-1:-1:-1;;;6905:26:0;;;;;:::o;7324:85::-;1546:5;;1532:10;-1:-1:-1;;;;;1532:19:0;;;1546:5;;1532:19;1524:28;;;;;;7074:6;;-1:-1:-1;;;7074:6:0;;;;7073:7;7065:16;;;;;;7378:6;:13;;-1:-1:-1;;7378:13:0;-1:-1:-1;;;7378:13:0;;;7397:7;;;;;;;;;;7324:85::o;1188:20::-;;;-1:-1:-1;;;;;1188:20:0;;:::o;1738:147::-;1546:5;;1532:10;-1:-1:-1;;;;;1532:19:0;;;1546:5;;1532:19;1524:28;;;;;;-1:-1:-1;;;;;1814:22:0;;;1810:69;;1852:5;:16;;-1:-1:-1;;1852:16:0;-1:-1:-1;;;;;1852:16:0;;;;;1810:69;1738:147;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "136200",
								"executionCost": "20532",
								"totalCost": "156732"
							},
							"external": {
								"owner()": "571",
								"pause()": "21821",
								"paused()": "460",
								"transferOwnership(address)": "20978",
								"unpause()": "21711"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 6835,
									"end": 7580,
									"name": "PUSH",
									"value": "60"
								},
								{
									"begin": 6835,
									"end": 7580,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 6835,
									"end": 7580,
									"name": "MSTORE"
								},
								{
									"begin": 6926,
									"end": 6931,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 6905,
									"end": 6931,
									"name": "DUP1"
								},
								{
									"begin": 6905,
									"end": 6931,
									"name": "SLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "EXP"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": 1386,
									"end": 1396,
									"name": "CALLER"
								},
								{
									"begin": 1378,
									"end": 1396,
									"name": "AND"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "EXP"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT"
								},
								{
									"begin": 1378,
									"end": 1396,
									"name": "SWAP1"
								},
								{
									"begin": 1378,
									"end": 1396,
									"name": "SWAP2"
								},
								{
									"begin": 1378,
									"end": 1396,
									"name": "AND"
								},
								{
									"begin": 1378,
									"end": 1396,
									"name": "OR"
								},
								{
									"begin": 1378,
									"end": 1396,
									"name": "SWAP1"
								},
								{
									"begin": 1378,
									"end": 1396,
									"name": "SSTORE"
								},
								{
									"begin": 6835,
									"end": 7580,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6835,
									"end": 7580,
									"name": "DUP1"
								},
								{
									"begin": 6835,
									"end": 7580,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6835,
									"end": 7580,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 6835,
									"end": 7580,
									"name": "CODECOPY"
								},
								{
									"begin": 6835,
									"end": 7580,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 6835,
									"end": 7580,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a7230582033111a2958878ea668fde7cbc0d796141bea810feee89e9256b784856220268c0029",
									".code": [
										{
											"begin": 6835,
											"end": 7580,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 6835,
											"end": 7580,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6835,
											"end": 7580,
											"name": "MSTORE"
										},
										{
											"begin": 6835,
											"end": 7580,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6835,
											"end": 7580,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6835,
											"end": 7580,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6835,
											"end": 7580,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 6835,
											"end": 7580,
											"name": "DIV"
										},
										{
											"begin": 6835,
											"end": 7580,
											"name": "AND"
										},
										{
											"begin": 6835,
											"end": 7580,
											"name": "PUSH",
											"value": "3F4BA83A"
										},
										{
											"begin": 6835,
											"end": 7580,
											"name": "DUP2"
										},
										{
											"begin": 6835,
											"end": 7580,
											"name": "EQ"
										},
										{
											"begin": 6835,
											"end": 7580,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 6835,
											"end": 7580,
											"name": "JUMPI"
										},
										{
											"begin": 6835,
											"end": 7580,
											"name": "DUP1"
										},
										{
											"begin": 6835,
											"end": 7580,
											"name": "PUSH",
											"value": "5C975ABB"
										},
										{
											"begin": 6835,
											"end": 7580,
											"name": "EQ"
										},
										{
											"begin": 6835,
											"end": 7580,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 6835,
											"end": 7580,
											"name": "JUMPI"
										},
										{
											"begin": 6835,
											"end": 7580,
											"name": "DUP1"
										},
										{
											"begin": 6835,
											"end": 7580,
											"name": "PUSH",
											"value": "8456CB59"
										},
										{
											"begin": 6835,
											"end": 7580,
											"name": "EQ"
										},
										{
											"begin": 6835,
											"end": 7580,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 6835,
											"end": 7580,
											"name": "JUMPI"
										},
										{
											"begin": 6835,
											"end": 7580,
											"name": "DUP1"
										},
										{
											"begin": 6835,
											"end": 7580,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 6835,
											"end": 7580,
											"name": "EQ"
										},
										{
											"begin": 6835,
											"end": 7580,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 6835,
											"end": 7580,
											"name": "JUMPI"
										},
										{
											"begin": 6835,
											"end": 7580,
											"name": "DUP1"
										},
										{
											"begin": 6835,
											"end": 7580,
											"name": "PUSH",
											"value": "F2FDE38B"
										},
										{
											"begin": 6835,
											"end": 7580,
											"name": "EQ"
										},
										{
											"begin": 6835,
											"end": 7580,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 6835,
											"end": 7580,
											"name": "JUMPI"
										},
										{
											"begin": 6835,
											"end": 7580,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6835,
											"end": 7580,
											"name": "DUP1"
										},
										{
											"begin": 6835,
											"end": 7580,
											"name": "REVERT"
										},
										{
											"begin": 7491,
											"end": 7578,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 7491,
											"end": 7578,
											"name": "JUMPDEST"
										},
										{
											"begin": 7491,
											"end": 7578,
											"name": "CALLVALUE"
										},
										{
											"begin": 7491,
											"end": 7578,
											"name": "ISZERO"
										},
										{
											"begin": 7491,
											"end": 7578,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 7491,
											"end": 7578,
											"name": "JUMPI"
										},
										{
											"begin": 7491,
											"end": 7578,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7491,
											"end": 7578,
											"name": "DUP1"
										},
										{
											"begin": 7491,
											"end": 7578,
											"name": "REVERT"
										},
										{
											"begin": 7491,
											"end": 7578,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 7491,
											"end": 7578,
											"name": "JUMPDEST"
										},
										{
											"begin": 7491,
											"end": 7578,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 7491,
											"end": 7578,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 7491,
											"end": 7578,
											"name": "JUMP"
										},
										{
											"begin": 7491,
											"end": 7578,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 7491,
											"end": 7578,
											"name": "JUMPDEST"
										},
										{
											"begin": 7491,
											"end": 7578,
											"name": "STOP"
										},
										{
											"begin": 6905,
											"end": 6931,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 6905,
											"end": 6931,
											"name": "JUMPDEST"
										},
										{
											"begin": 6905,
											"end": 6931,
											"name": "CALLVALUE"
										},
										{
											"begin": 6905,
											"end": 6931,
											"name": "ISZERO"
										},
										{
											"begin": 6905,
											"end": 6931,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 6905,
											"end": 6931,
											"name": "JUMPI"
										},
										{
											"begin": 6905,
											"end": 6931,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6905,
											"end": 6931,
											"name": "DUP1"
										},
										{
											"begin": 6905,
											"end": 6931,
											"name": "REVERT"
										},
										{
											"begin": 6905,
											"end": 6931,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 6905,
											"end": 6931,
											"name": "JUMPDEST"
										},
										{
											"begin": 6905,
											"end": 6931,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 6905,
											"end": 6931,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 6905,
											"end": 6931,
											"name": "JUMP"
										},
										{
											"begin": 6905,
											"end": 6931,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 6905,
											"end": 6931,
											"name": "JUMPDEST"
										},
										{
											"begin": 6905,
											"end": 6931,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6905,
											"end": 6931,
											"name": "MLOAD"
										},
										{
											"begin": 6905,
											"end": 6931,
											"name": "SWAP1"
										},
										{
											"begin": 6905,
											"end": 6931,
											"name": "ISZERO"
										},
										{
											"begin": 6905,
											"end": 6931,
											"name": "ISZERO"
										},
										{
											"begin": 6905,
											"end": 6931,
											"name": "DUP2"
										},
										{
											"begin": 6905,
											"end": 6931,
											"name": "MSTORE"
										},
										{
											"begin": 6905,
											"end": 6931,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6905,
											"end": 6931,
											"name": "ADD"
										},
										{
											"begin": 6905,
											"end": 6931,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6905,
											"end": 6931,
											"name": "MLOAD"
										},
										{
											"begin": 6905,
											"end": 6931,
											"name": "DUP1"
										},
										{
											"begin": 6905,
											"end": 6931,
											"name": "SWAP2"
										},
										{
											"begin": 6905,
											"end": 6931,
											"name": "SUB"
										},
										{
											"begin": 6905,
											"end": 6931,
											"name": "SWAP1"
										},
										{
											"begin": 6905,
											"end": 6931,
											"name": "RETURN"
										},
										{
											"begin": 7324,
											"end": 7409,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 7324,
											"end": 7409,
											"name": "JUMPDEST"
										},
										{
											"begin": 7324,
											"end": 7409,
											"name": "CALLVALUE"
										},
										{
											"begin": 7324,
											"end": 7409,
											"name": "ISZERO"
										},
										{
											"begin": 7324,
											"end": 7409,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 7324,
											"end": 7409,
											"name": "JUMPI"
										},
										{
											"begin": 7324,
											"end": 7409,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7324,
											"end": 7409,
											"name": "DUP1"
										},
										{
											"begin": 7324,
											"end": 7409,
											"name": "REVERT"
										},
										{
											"begin": 7324,
											"end": 7409,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 7324,
											"end": 7409,
											"name": "JUMPDEST"
										},
										{
											"begin": 7324,
											"end": 7409,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 7324,
											"end": 7409,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 7324,
											"end": 7409,
											"name": "JUMP"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "JUMPDEST"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "CALLVALUE"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "ISZERO"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "JUMPI"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "DUP1"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "REVERT"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "JUMPDEST"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "JUMP"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "JUMPDEST"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "SWAP1"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "SWAP2"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "AND"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "DUP2"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "MSTORE"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "ADD"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "MLOAD"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "DUP1"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "SWAP2"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "SUB"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "SWAP1"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "RETURN"
										},
										{
											"begin": 1738,
											"end": 1885,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 1738,
											"end": 1885,
											"name": "JUMPDEST"
										},
										{
											"begin": 1738,
											"end": 1885,
											"name": "CALLVALUE"
										},
										{
											"begin": 1738,
											"end": 1885,
											"name": "ISZERO"
										},
										{
											"begin": 1738,
											"end": 1885,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 1738,
											"end": 1885,
											"name": "JUMPI"
										},
										{
											"begin": 1738,
											"end": 1885,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1738,
											"end": 1885,
											"name": "DUP1"
										},
										{
											"begin": 1738,
											"end": 1885,
											"name": "REVERT"
										},
										{
											"begin": 1738,
											"end": 1885,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 1738,
											"end": 1885,
											"name": "JUMPDEST"
										},
										{
											"begin": 1738,
											"end": 1885,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1738,
											"end": 1885,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1738,
											"end": 1885,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1738,
											"end": 1885,
											"name": "AND"
										},
										{
											"begin": 1738,
											"end": 1885,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 1738,
											"end": 1885,
											"name": "JUMP"
										},
										{
											"begin": 7491,
											"end": 7578,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 7491,
											"end": 7578,
											"name": "JUMPDEST"
										},
										{
											"begin": 1546,
											"end": 1551,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1546,
											"end": 1551,
											"name": "SLOAD"
										},
										{
											"begin": 1532,
											"end": 1542,
											"name": "CALLER"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1532,
											"end": 1551,
											"name": "SWAP1"
										},
										{
											"begin": 1532,
											"end": 1551,
											"name": "DUP2"
										},
										{
											"begin": 1532,
											"end": 1551,
											"name": "AND"
										},
										{
											"begin": 1546,
											"end": 1551,
											"name": "SWAP2"
										},
										{
											"begin": 1546,
											"end": 1551,
											"name": "AND"
										},
										{
											"begin": 1532,
											"end": 1551,
											"name": "EQ"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "JUMPI"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "DUP1"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "REVERT"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "JUMPDEST"
										},
										{
											"begin": 7226,
											"end": 7232,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7226,
											"end": 7232,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": 7226,
											"end": 7232,
											"name": "SWAP1"
										},
										{
											"begin": 7226,
											"end": 7232,
											"name": "DIV"
										},
										{
											"begin": 7226,
											"end": 7232,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 7226,
											"end": 7232,
											"name": "AND"
										},
										{
											"begin": 7218,
											"end": 7233,
											"name": "ISZERO"
										},
										{
											"begin": 7218,
											"end": 7233,
											"name": "ISZERO"
										},
										{
											"begin": 7218,
											"end": 7233,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 7218,
											"end": 7233,
											"name": "JUMPI"
										},
										{
											"begin": 7218,
											"end": 7233,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7218,
											"end": 7233,
											"name": "DUP1"
										},
										{
											"begin": 7218,
											"end": 7233,
											"name": "REVERT"
										},
										{
											"begin": 7218,
											"end": 7233,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 7218,
											"end": 7233,
											"name": "JUMPDEST"
										},
										{
											"begin": 7553,
											"end": 7558,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7544,
											"end": 7558,
											"name": "DUP1"
										},
										{
											"begin": 7544,
											"end": 7558,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FF0000000000000000000000000000000000000000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 7544,
											"end": 7558,
											"name": "AND"
										},
										{
											"begin": 7544,
											"end": 7558,
											"name": "SWAP1"
										},
										{
											"begin": 7544,
											"end": 7558,
											"name": "SSTORE"
										},
										{
											"begin": 7564,
											"end": 7573,
											"name": "PUSH",
											"value": "7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33"
										},
										{
											"begin": 7564,
											"end": 7573,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7564,
											"end": 7573,
											"name": "MLOAD"
										},
										{
											"begin": 7564,
											"end": 7573,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7564,
											"end": 7573,
											"name": "MLOAD"
										},
										{
											"begin": 7564,
											"end": 7573,
											"name": "DUP1"
										},
										{
											"begin": 7564,
											"end": 7573,
											"name": "SWAP2"
										},
										{
											"begin": 7564,
											"end": 7573,
											"name": "SUB"
										},
										{
											"begin": 7564,
											"end": 7573,
											"name": "SWAP1"
										},
										{
											"begin": 7564,
											"end": 7573,
											"name": "LOG1"
										},
										{
											"begin": 7491,
											"end": 7578,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 6905,
											"end": 6931,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 6905,
											"end": 6931,
											"name": "JUMPDEST"
										},
										{
											"begin": 6905,
											"end": 6931,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6905,
											"end": 6931,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": 6905,
											"end": 6931,
											"name": "SWAP1"
										},
										{
											"begin": 6905,
											"end": 6931,
											"name": "DIV"
										},
										{
											"begin": 6905,
											"end": 6931,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 6905,
											"end": 6931,
											"name": "AND"
										},
										{
											"begin": 6905,
											"end": 6931,
											"name": "DUP2"
										},
										{
											"begin": 6905,
											"end": 6931,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7324,
											"end": 7409,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 7324,
											"end": 7409,
											"name": "JUMPDEST"
										},
										{
											"begin": 1546,
											"end": 1551,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1546,
											"end": 1551,
											"name": "SLOAD"
										},
										{
											"begin": 1532,
											"end": 1542,
											"name": "CALLER"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1532,
											"end": 1551,
											"name": "SWAP1"
										},
										{
											"begin": 1532,
											"end": 1551,
											"name": "DUP2"
										},
										{
											"begin": 1532,
											"end": 1551,
											"name": "AND"
										},
										{
											"begin": 1546,
											"end": 1551,
											"name": "SWAP2"
										},
										{
											"begin": 1546,
											"end": 1551,
											"name": "AND"
										},
										{
											"begin": 1532,
											"end": 1551,
											"name": "EQ"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "JUMPI"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "DUP1"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "REVERT"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "JUMPDEST"
										},
										{
											"begin": 7074,
											"end": 7080,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7074,
											"end": 7080,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": 7074,
											"end": 7080,
											"name": "SWAP1"
										},
										{
											"begin": 7074,
											"end": 7080,
											"name": "DIV"
										},
										{
											"begin": 7074,
											"end": 7080,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 7074,
											"end": 7080,
											"name": "AND"
										},
										{
											"begin": 7073,
											"end": 7080,
											"name": "ISZERO"
										},
										{
											"begin": 7065,
											"end": 7081,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 7065,
											"end": 7081,
											"name": "JUMPI"
										},
										{
											"begin": 7065,
											"end": 7081,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7065,
											"end": 7081,
											"name": "DUP1"
										},
										{
											"begin": 7065,
											"end": 7081,
											"name": "REVERT"
										},
										{
											"begin": 7065,
											"end": 7081,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 7065,
											"end": 7081,
											"name": "JUMPDEST"
										},
										{
											"begin": 7378,
											"end": 7384,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7378,
											"end": 7391,
											"name": "DUP1"
										},
										{
											"begin": 7378,
											"end": 7391,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FF0000000000000000000000000000000000000000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 7378,
											"end": 7391,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": 7378,
											"end": 7391,
											"name": "OR"
										},
										{
											"begin": 7378,
											"end": 7391,
											"name": "SWAP1"
										},
										{
											"begin": 7378,
											"end": 7391,
											"name": "SSTORE"
										},
										{
											"begin": 7397,
											"end": 7404,
											"name": "PUSH",
											"value": "6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625"
										},
										{
											"begin": 7397,
											"end": 7404,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7397,
											"end": 7404,
											"name": "MLOAD"
										},
										{
											"begin": 7397,
											"end": 7404,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7397,
											"end": 7404,
											"name": "MLOAD"
										},
										{
											"begin": 7397,
											"end": 7404,
											"name": "DUP1"
										},
										{
											"begin": 7397,
											"end": 7404,
											"name": "SWAP2"
										},
										{
											"begin": 7397,
											"end": 7404,
											"name": "SUB"
										},
										{
											"begin": 7397,
											"end": 7404,
											"name": "SWAP1"
										},
										{
											"begin": 7397,
											"end": 7404,
											"name": "LOG1"
										},
										{
											"begin": 7324,
											"end": 7409,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "JUMPDEST"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "AND"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "DUP2"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1738,
											"end": 1885,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 1738,
											"end": 1885,
											"name": "JUMPDEST"
										},
										{
											"begin": 1546,
											"end": 1551,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1546,
											"end": 1551,
											"name": "SLOAD"
										},
										{
											"begin": 1532,
											"end": 1542,
											"name": "CALLER"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1532,
											"end": 1551,
											"name": "SWAP1"
										},
										{
											"begin": 1532,
											"end": 1551,
											"name": "DUP2"
										},
										{
											"begin": 1532,
											"end": 1551,
											"name": "AND"
										},
										{
											"begin": 1546,
											"end": 1551,
											"name": "SWAP2"
										},
										{
											"begin": 1546,
											"end": 1551,
											"name": "AND"
										},
										{
											"begin": 1532,
											"end": 1551,
											"name": "EQ"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "JUMPI"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "DUP1"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "REVERT"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1814,
											"end": 1836,
											"name": "DUP2"
										},
										{
											"begin": 1814,
											"end": 1836,
											"name": "AND"
										},
										{
											"begin": 1814,
											"end": 1836,
											"name": "ISZERO"
										},
										{
											"begin": 1810,
											"end": 1879,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 1810,
											"end": 1879,
											"name": "JUMPI"
										},
										{
											"begin": 1852,
											"end": 1857,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1852,
											"end": 1868,
											"name": "DUP1"
										},
										{
											"begin": 1852,
											"end": 1868,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 1852,
											"end": 1868,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1852,
											"end": 1868,
											"name": "DUP4"
										},
										{
											"begin": 1852,
											"end": 1868,
											"name": "AND"
										},
										{
											"begin": 1852,
											"end": 1868,
											"name": "OR"
										},
										{
											"begin": 1852,
											"end": 1868,
											"name": "SWAP1"
										},
										{
											"begin": 1852,
											"end": 1868,
											"name": "SSTORE"
										},
										{
											"begin": 1810,
											"end": 1879,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 1810,
											"end": 1879,
											"name": "JUMPDEST"
										},
										{
											"begin": 1738,
											"end": 1885,
											"name": "POP"
										},
										{
											"begin": 1738,
											"end": 1885,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.17+commit.bdeb9e52\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"pause()\":{\"details\":\"called by the owner to pause, triggers stopped state\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}},\"unpause()\":{\"details\":\"called by the owner to unpause, returns to normal state\"}},\"title\":\"Pausable\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/stablecoin/stablecoin_contract.sol\":\"Pausable\"},\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/stablecoin/stablecoin_contract.sol\":{\"keccak256\":\"0xfbb04d4cdecf81bb1e5eaf950a7bc2a6f55cfd0c7dcef79c100bce8b26b8a47f\",\"urls\":[\"bzzr://f05f2f6a2517a2416853bd5397e0d572a1bd870456f7ad0707356ad7929de6c0\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"methods": {},
						"title": "SafeMath"
					},
					"evm": {
						"assembly": "    /* \"contracts/stablecoin/stablecoin_contract.sol\":183:973  library SafeMath {... */\n  mstore(0x40, 0x60)\n  jumpi(tag_1, iszero(callvalue))\n  0x0\n  dup1\n  revert\ntag_1:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":183:973  library SafeMath {... */\n      mstore(0x40, 0x60)\n      0x0\n      dup1\n      revert\n\n    auxdata: 0xa165627a7a723058209d019c79fb5741ddd75ee1eb36f4058b5c4bf76e569d2286e3b96fa076e674ff0029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60606040523415600e57600080fd5b603580601b6000396000f3006060604052600080fd00a165627a7a723058209d019c79fb5741ddd75ee1eb36f4058b5c4bf76e569d2286e3b96fa076e674ff0029",
							"opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE CALLVALUE ISZERO PUSH1 0xE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x35 DUP1 PUSH1 0x1B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 SWAP14 ADD SWAP13 PUSH26 0xFB5741DDD75EE1EB36F4058B5C4BF76E569D2286E3B96FA076E6 PUSH21 0xFF0029000000000000000000000000000000000000 ",
							"sourceMap": "183:790:0:-;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6060604052600080fd00a165627a7a723058209d019c79fb5741ddd75ee1eb36f4058b5c4bf76e569d2286e3b96fa076e674ff0029",
							"opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 SWAP14 ADD SWAP13 PUSH26 0xFB5741DDD75EE1EB36F4058B5C4BF76E569D2286E3B96FA076E6 PUSH21 0xFF0029000000000000000000000000000000000000 ",
							"sourceMap": "183:790:0:-;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "10600",
								"executionCost": "61",
								"totalCost": "10661"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 183,
									"end": 973,
									"name": "PUSH",
									"value": "60"
								},
								{
									"begin": 183,
									"end": 973,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 183,
									"end": 973,
									"name": "MSTORE"
								},
								{
									"begin": 183,
									"end": 973,
									"name": "CALLVALUE"
								},
								{
									"begin": 183,
									"end": 973,
									"name": "ISZERO"
								},
								{
									"begin": 183,
									"end": 973,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 183,
									"end": 973,
									"name": "JUMPI"
								},
								{
									"begin": 183,
									"end": 973,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 183,
									"end": 973,
									"name": "DUP1"
								},
								{
									"begin": 183,
									"end": 973,
									"name": "REVERT"
								},
								{
									"begin": 183,
									"end": 973,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 183,
									"end": 973,
									"name": "JUMPDEST"
								},
								{
									"begin": 183,
									"end": 973,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 183,
									"end": 973,
									"name": "DUP1"
								},
								{
									"begin": 183,
									"end": 973,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 183,
									"end": 973,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 183,
									"end": 973,
									"name": "CODECOPY"
								},
								{
									"begin": 183,
									"end": 973,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 183,
									"end": 973,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a723058209d019c79fb5741ddd75ee1eb36f4058b5c4bf76e569d2286e3b96fa076e674ff0029",
									".code": [
										{
											"begin": 183,
											"end": 973,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 183,
											"end": 973,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 183,
											"end": 973,
											"name": "MSTORE"
										},
										{
											"begin": 183,
											"end": 973,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 183,
											"end": 973,
											"name": "DUP1"
										},
										{
											"begin": 183,
											"end": 973,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.17+commit.bdeb9e52\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{},\"title\":\"SafeMath\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/stablecoin/stablecoin_contract.sol\":\"SafeMath\"},\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/stablecoin/stablecoin_contract.sol\":{\"keccak256\":\"0xfbb04d4cdecf81bb1e5eaf950a7bc2a6f55cfd0c7dcef79c100bce8b26b8a47f\",\"urls\":[\"bzzr://f05f2f6a2517a2416853bd5397e0d572a1bd870456f7ad0707356ad7929de6c0\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				},
				"StandardToken": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "_spender",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_from",
									"type": "address"
								},
								{
									"name": "_to",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"name": "balances",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "maximumFee",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "_totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								},
								{
									"name": "",
									"type": "address"
								}
							],
							"name": "allowed",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "balance",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_to",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_owner",
									"type": "address"
								},
								{
									"name": "_spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"name": "remaining",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "basisPointsRate",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MAX_UINT",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {
							"allowance(address,address)": {
								"details": "Function to check the amount of tokens than an owner allowed to a spender.",
								"params": {
									"_owner": "address The address which owns the funds.",
									"_spender": "address The address which will spend the funds."
								},
								"return": "A uint specifying the amount of tokens still available for the spender."
							},
							"approve(address,uint256)": {
								"details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.",
								"params": {
									"_spender": "The address which will spend the funds.",
									"_value": "The amount of tokens to be spent."
								}
							},
							"balanceOf(address)": {
								"details": "Gets the balance of the specified address.",
								"params": {
									"_owner": "The address to query the the balance of."
								},
								"return": "An uint representing the amount owned by the passed address."
							},
							"transfer(address,uint256)": {
								"details": "transfer token for a specified address",
								"params": {
									"_to": "The address to transfer to.",
									"_value": "The amount to be transferred."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfer tokens from one address to another",
								"params": {
									"_from": "address The address which you want to send tokens from",
									"_to": "address The address which you want to transfer to",
									"_value": "uint the amount of tokens to be transferred"
								}
							},
							"transferOwnership(address)": {
								"details": "Allows the current owner to transfer control of the contract to a newOwner.",
								"params": {
									"newOwner": "The address to transfer ownership to."
								}
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"MAX_UINT()": "e5b5019a",
							"_totalSupply()": "3eaaf86b",
							"allowance(address,address)": "dd62ed3e",
							"allowed(address,address)": "5c658165",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"balances(address)": "27e235e3",
							"basisPointsRate()": "dd644f72",
							"maximumFee()": "35390714",
							"owner()": "8da5cb5b",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "",
					"userdoc": {
						"methods": {}
					}
				},
				"TetherToken": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_upgradedAddress",
									"type": "address"
								}
							],
							"name": "deprecate",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_spender",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "deprecated",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_evilUser",
									"type": "address"
								}
							],
							"name": "addBlackList",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_from",
									"type": "address"
								},
								{
									"name": "_to",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "upgradedAddress",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"name": "balances",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "maximumFee",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "_totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_maker",
									"type": "address"
								}
							],
							"name": "getBlackListStatus",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								},
								{
									"name": "",
									"type": "address"
								}
							],
							"name": "allowed",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "who",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_to",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "newBasisPoints",
									"type": "uint256"
								},
								{
									"name": "newMaxFee",
									"type": "uint256"
								}
							],
							"name": "setParams",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "issue",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "redeem",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_owner",
									"type": "address"
								},
								{
									"name": "_spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"name": "remaining",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "basisPointsRate",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"name": "isBlackListed",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_clearedUser",
									"type": "address"
								}
							],
							"name": "removeBlackList",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MAX_UINT",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_blackListedUser",
									"type": "address"
								}
							],
							"name": "destroyBlackFunds",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"name": "_initialSupply",
									"type": "uint256"
								},
								{
									"name": "_name",
									"type": "string"
								},
								{
									"name": "_symbol",
									"type": "string"
								},
								{
									"name": "_decimals",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Issue",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Redeem",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "Deprecate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "feeBasisPoints",
									"type": "uint256"
								},
								{
									"indexed": false,
									"name": "maxFee",
									"type": "uint256"
								}
							],
							"name": "Params",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "_blackListedUser",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "_balance",
									"type": "uint256"
								}
							],
							"name": "DestroyedBlackFunds",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "_user",
									"type": "address"
								}
							],
							"name": "AddedBlackList",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "_user",
									"type": "address"
								}
							],
							"name": "RemovedBlackList",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "Pause",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "Unpause",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {
							"pause()": {
								"details": "called by the owner to pause, triggers stopped state"
							},
							"transferOwnership(address)": {
								"details": "Allows the current owner to transfer control of the contract to a newOwner.",
								"params": {
									"newOwner": "The address to transfer ownership to."
								}
							},
							"unpause()": {
								"details": "called by the owner to unpause, returns to normal state"
							}
						}
					},
					"evm": {
						"assembly": "    /* \"contracts/stablecoin/stablecoin_contract.sol\":9310:14420  contract TetherToken is Pausable, StandardToken, BlackList {... */\n  mstore(0x40, 0x60)\n    /* \"contracts/stablecoin/stablecoin_contract.sol\":6926:6931  false */\n  0x0\n    /* \"contracts/stablecoin/stablecoin_contract.sol\":6905:6931  bool public paused = false */\n  dup1\n  sload\n  not(mul(0xff, exp(0x2, 0xa0)))\n  and\n  dup2\n  sstore\n    /* \"contracts/stablecoin/stablecoin_contract.sol\":2827:2858  uint public basisPointsRate = 0 */\n  0x3\n  dup2\n  swap1\n  sstore\n    /* \"contracts/stablecoin/stablecoin_contract.sol\":2864:2890  uint public maximumFee = 0 */\n  0x4\n  sstore\n    /* \"contracts/stablecoin/stablecoin_contract.sol\":9805:10148  function TetherToken(uint _initialSupply, string _name, string _symbol, uint _decimals) public {... */\n  jumpi(tag_1, iszero(callvalue))\n  0x0\n  dup1\n  revert\ntag_1:\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  mstore\n  dup1\n  dup1\n  mload\n  swap2\n  swap1\n  0x20\n  add\n  dup1\n  mload\n  dup3\n  add\n  swap2\n  swap1\n  0x20\n  add\n  dup1\n  mload\n  dup3\n  add\n  swap2\n  swap1\n  0x20\n  add\n  dup1\n  mload\n    /* \"contracts/stablecoin/stablecoin_contract.sol\":1378:1383  owner */\n  0x0\n    /* \"contracts/stablecoin/stablecoin_contract.sol\":1378:1396  owner = msg.sender */\n  dup1\n  sload\n  not(sub(exp(0x2, 0xa0), 0x1))\n  and\n    /* \"contracts/stablecoin/stablecoin_contract.sol\":1386:1396  msg.sender */\n  caller\n  sub(exp(0x2, 0xa0), 0x1)\n    /* \"contracts/stablecoin/stablecoin_contract.sol\":1378:1396  owner = msg.sender */\n  and\n  or\n  swap1\n  sstore\n  0x1\n    /* \"contracts/stablecoin/stablecoin_contract.sol\":9910:9939  _totalSupply = _initialSupply */\n  dup7\n  swap1\n  sstore\n    /* \"contracts/stablecoin/stablecoin_contract.sol\":9805:10148  function TetherToken(uint _initialSupply, string _name, string _symbol, uint _decimals) public {... */\n  swap2\n  pop\n    /* \"contracts/stablecoin/stablecoin_contract.sol\":9949:9953  name */\n  0x7\n  swap1\n  pop\n    /* \"contracts/stablecoin/stablecoin_contract.sol\":9956:9961  _name */\n  dup4\n  dup1\n    /* \"contracts/stablecoin/stablecoin_contract.sol\":9949:9961  name = _name */\n  mload\n  tag_6\n  swap3\n  swap2\n  0x20\n  add\n  swap1\n  jump\t// in(tag_7)\ntag_6:\n  pop\n    /* \"contracts/stablecoin/stablecoin_contract.sol\":9971:9977  symbol */\n  0x8\n    /* \"contracts/stablecoin/stablecoin_contract.sol\":9980:9987  _symbol */\n  dup3\n  dup1\n    /* \"contracts/stablecoin/stablecoin_contract.sol\":9971:9987  symbol = _symbol */\n  mload\n  tag_8\n  swap3\n  swap2\n  0x20\n  add\n  swap1\n  jump\t// in(tag_7)\ntag_8:\n  pop\n    /* \"contracts/stablecoin/stablecoin_contract.sol\":9997:10005  decimals */\n  0x9\n    /* \"contracts/stablecoin/stablecoin_contract.sol\":9997:10017  decimals = _decimals */\n  dup2\n  swap1\n  sstore\n    /* \"contracts/stablecoin/stablecoin_contract.sol\":10027:10042  balances[owner] */\n  0x0\n    /* \"contracts/stablecoin/stablecoin_contract.sol\":10036:10041  owner */\n  dup1\n  sload\n  sub(exp(0x2, 0xa0), 0x1)\n  swap1\n  dup2\n  and\n    /* \"contracts/stablecoin/stablecoin_contract.sol\":10027:10042  balances[owner] */\n  dup3\n  mstore\n    /* \"contracts/stablecoin/stablecoin_contract.sol\":10027:10035  balances */\n  0x2\n    /* \"contracts/stablecoin/stablecoin_contract.sol\":10027:10042  balances[owner] */\n  0x20\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n    /* \"contracts/stablecoin/stablecoin_contract.sol\":10027:10059  balances[owner] = _initialSupply */\n  dup8\n  swap1\n  sstore\n    /* \"contracts/stablecoin/stablecoin_contract.sol\":10069:10079  deprecated */\n  0xa\n    /* \"contracts/stablecoin/stablecoin_contract.sol\":10069:10087  deprecated = false */\n  dup1\n  sload\n  not(mul(0xff, exp(0x2, 0xa0)))\n  and\n  swap1\n  sstore\n    /* \"contracts/stablecoin/stablecoin_contract.sol\":10118:10123  owner */\n  dup3\n  sload\n  swap1\n  swap2\n  and\n  swap2\n    /* \"contracts/stablecoin/stablecoin_contract.sol\":10027:10042  balances[owner] */\n  swap1\n    /* \"contracts/stablecoin/stablecoin_contract.sol\":10097:10140  Transfer(address(0), owner, _initialSupply) */\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n  swap1\n    /* \"contracts/stablecoin/stablecoin_contract.sol\":10045:10059  _initialSupply */\n  dup8\n  swap1\n    /* \"contracts/stablecoin/stablecoin_contract.sol\":10097:10140  Transfer(address(0), owner, _initialSupply) */\n  mload\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/stablecoin/stablecoin_contract.sol\":9805:10148  function TetherToken(uint _initialSupply, string _name, string _symbol, uint _decimals) public {... */\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/stablecoin/stablecoin_contract.sol\":9310:14420  contract TetherToken is Pausable, StandardToken, BlackList {... */\n  jump(tag_9)\ntag_7:\n  dup3\n  dup1\n  sload\n  0x1\n  dup2\n  0x1\n  and\n  iszero\n  0x100\n  mul\n  sub\n  and\n  0x2\n  swap1\n  div\n  swap1\n  0x0\n  mstore\n  keccak256(0x0, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_11\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_13)\ntag_11:\n  dup3\n  dup1\n  add\n  0x1\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_13\n  jumpi\n  swap2\n  dup3\n  add\ntag_12:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_13\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x1\n  add\n  swap1\n  jump(tag_12)\ntag_13:\n  pop\n  tag_14\n  swap3\n  swap2\n  pop\n  jump\t// in(tag_15)\ntag_14:\n  pop\n  swap1\n  jump\t// out\ntag_15:\n  tag_16\n  swap2\n  swap1\ntag_17:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_14\n  jumpi\n  0x0\n  dup2\n  sstore\n  0x1\n  add\n  jump(tag_17)\ntag_16:\n  swap1\n  jump\t// out\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":9310:14420  contract TetherToken is Pausable, StandardToken, BlackList {... */\n      mstore(0x40, 0x60)\n      jumpi(tag_1, iszero(calldatasize))\n      and(div(calldataload(0x0), exp(0x2, 0xe0)), 0xffffffff)\n      0x6fdde03\n      dup2\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x753c30c\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x95ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xe136b19\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xecb93c0\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x26976e3f\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x27e235e3\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x35390714\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x3eaaf86b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x59bf1abe\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x5c658165\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x893d20e8\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xc0324c77\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xcc872b66\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xdb006a75\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xdd644f72\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xe47d6060\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xe4997dc5\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xe5b5019a\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xf3bdc228\n      eq\n      tag_33\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":9376:9394  string public name */\n    tag_2:\n      jumpi(tag_34, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_34:\n      tag_35\n      jump(tag_36)\n    tag_35:\n      mload(0x40)\n      0x20\n      dup1\n      dup3\n      mstore\n      dup2\n      swap1\n      dup2\n      add\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x0\n        /* \"--CODEGEN--\":8:108   */\n    tag_37:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:29   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_38\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:93   */\n      add\n        /* \"--CODEGEN--\":84:89   */\n      mload\n        /* \"--CODEGEN--\":71:74   */\n      dup4\n      dup3\n      add\n        /* \"--CODEGEN--\":64:70   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":45:48   */\n      add\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_37)\n    tag_38:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"--CODEGEN--\":3:112   */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_40\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x1\n      dup4\n      0x20\n      sub\n      0x100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_40:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":12116:12293  function deprecate(address _upgradedAddress) public onlyOwner {... */\n    tag_3:\n      jumpi(tag_41, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_41:\n      tag_42\n      and(calldataload(0x4), sub(exp(0x2, 0xa0), 0x1))\n      jump(tag_43)\n    tag_42:\n      stop\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":11388:11684  function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {... */\n    tag_4:\n      jumpi(tag_44, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_44:\n      tag_42\n      and(calldataload(0x4), sub(exp(0x2, 0xa0), 0x1))\n      calldataload(0x24)\n      jump(tag_46)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":9488:9510  bool public deprecated */\n    tag_5:\n      jumpi(tag_47, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_47:\n      tag_48\n      jump(tag_49)\n    tag_48:\n      mload(0x40)\n      swap1\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":8026:8168  function addBlackList (address _evilUser) public onlyOwner {... */\n    tag_6:\n      jumpi(tag_50, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_50:\n      tag_42\n      and(calldataload(0x4), sub(exp(0x2, 0xa0), 0x1))\n      jump(tag_52)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":12356:12568  function totalSupply() public constant returns (uint) {... */\n    tag_7:\n      jumpi(tag_53, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_53:\n      tag_54\n      jump(tag_55)\n    tag_54:\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":10631:10986  function transferFrom(address _from, address _to, uint _value) public whenNotPaused {... */\n    tag_8:\n      jumpi(tag_56, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_56:\n      tag_42\n      sub(exp(0x2, 0xa0), 0x1)\n      calldataload(0x4)\n      dup2\n      and\n      swap1\n      calldataload(0x24)\n      and\n      calldataload(0x44)\n      jump(tag_58)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":9452:9482  address public upgradedAddress */\n    tag_9:\n      jumpi(tag_59, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_59:\n      tag_60\n      jump(tag_61)\n    tag_60:\n      mload(0x40)\n      sub(exp(0x2, 0xa0), 0x1)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":2702:2742  mapping(address => uint) public balances */\n    tag_10:\n      jumpi(tag_62, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_62:\n      tag_54\n      and(calldataload(0x4), sub(exp(0x2, 0xa0), 0x1))\n      jump(tag_64)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":9426:9446  uint public decimals */\n    tag_11:\n      jumpi(tag_65, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_65:\n      tag_54\n      jump(tag_67)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":2864:2890  uint public maximumFee = 0 */\n    tag_12:\n      jumpi(tag_68, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_68:\n      tag_54\n      jump(tag_70)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1917:1941  uint public _totalSupply */\n    tag_13:\n      jumpi(tag_71, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_71:\n      tag_54\n      jump(tag_73)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":7491:7578  function unpause() onlyOwner whenPaused public {... */\n    tag_14:\n      jumpi(tag_74, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_74:\n      tag_42\n      jump(tag_76)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":7750:7872  function getBlackListStatus(address _maker) external constant returns (bool) {... */\n    tag_15:\n      jumpi(tag_77, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_77:\n      tag_48\n      and(calldataload(0x4), sub(exp(0x2, 0xa0), 0x1))\n      jump(tag_79)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":4173:4234  mapping (address => mapping (address => uint)) public allowed */\n    tag_16:\n      jumpi(tag_80, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_80:\n      tag_54\n      sub(exp(0x2, 0xa0), 0x1)\n      calldataload(0x4)\n      dup2\n      and\n      swap1\n      calldataload(0x24)\n      and\n      jump(tag_82)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":6905:6931  bool public paused = false */\n    tag_17:\n      jumpi(tag_83, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_83:\n      tag_48\n      jump(tag_85)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":11068:11306  function balanceOf(address who) public constant returns (uint) {... */\n    tag_18:\n      jumpi(tag_86, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_86:\n      tag_54\n      and(calldataload(0x4), sub(exp(0x2, 0xa0), 0x1))\n      jump(tag_88)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":7324:7409  function pause() onlyOwner whenNotPaused public {... */\n    tag_19:\n      jumpi(tag_89, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_89:\n      tag_42\n      jump(tag_91)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":7878:7963  function getOwner() external constant returns (address) {... */\n    tag_20:\n      jumpi(tag_92, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_92:\n      tag_60\n      jump(tag_94)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1188:1208  address public owner */\n    tag_21:\n      jumpi(tag_95, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_95:\n      tag_60\n      jump(tag_97)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":9400:9420  string public symbol */\n    tag_22:\n      jumpi(tag_98, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_98:\n      tag_35\n      jump(tag_100)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":10230:10549  function transfer(address _to, uint _value) public whenNotPaused {... */\n    tag_23:\n      jumpi(tag_105, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_105:\n      tag_42\n      and(calldataload(0x4), sub(exp(0x2, 0xa0), 0x1))\n      calldataload(0x24)\n      jump(tag_107)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":13720:14098  function setParams(uint newBasisPoints, uint newMaxFee) public onlyOwner {... */\n    tag_24:\n      jumpi(tag_108, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_108:\n      tag_42\n      calldataload(0x4)\n      calldataload(0x24)\n      jump(tag_110)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":12726:13031  function issue(uint amount) public onlyOwner {... */\n    tag_25:\n      jumpi(tag_111, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_111:\n      tag_42\n      calldataload(0x4)\n      jump(tag_113)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":13439:13714  function redeem(uint amount) public onlyOwner {... */\n    tag_26:\n      jumpi(tag_114, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_114:\n      tag_42\n      calldataload(0x4)\n      jump(tag_116)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":11766:12053  function allowance(address _owner, address _spender) public constant returns (uint remaining) {... */\n    tag_27:\n      jumpi(tag_117, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_117:\n      tag_54\n      sub(exp(0x2, 0xa0), 0x1)\n      calldataload(0x4)\n      dup2\n      and\n      swap1\n      calldataload(0x24)\n      and\n      jump(tag_119)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":2827:2858  uint public basisPointsRate = 0 */\n    tag_28:\n      jumpi(tag_120, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_120:\n      tag_54\n      jump(tag_122)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":7969:8015  mapping (address => bool) public isBlackListed */\n    tag_29:\n      jumpi(tag_123, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_123:\n      tag_48\n      and(calldataload(0x4), sub(exp(0x2, 0xa0), 0x1))\n      jump(tag_125)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":8174:8331  function removeBlackList (address _clearedUser) public onlyOwner {... */\n    tag_30:\n      jumpi(tag_126, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_126:\n      tag_42\n      and(calldataload(0x4), sub(exp(0x2, 0xa0), 0x1))\n      jump(tag_128)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":4241:4283  uint public constant MAX_UINT = 2**256 - 1 */\n    tag_31:\n      jumpi(tag_129, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_129:\n      tag_54\n      jump(tag_131)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1738:1885  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_32:\n      jumpi(tag_132, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_132:\n      tag_42\n      and(calldataload(0x4), sub(exp(0x2, 0xa0), 0x1))\n      jump(tag_134)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":8337:8716  function destroyBlackFunds (address _blackListedUser) public onlyOwner {... */\n    tag_33:\n      jumpi(tag_135, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_135:\n      tag_42\n      and(calldataload(0x4), sub(exp(0x2, 0xa0), 0x1))\n      jump(tag_137)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":9376:9394  string public name */\n    tag_36:\n      0x7\n      dup1\n      sload\n      0x1\n      dup2\n      0x1\n      and\n      iszero\n      0x100\n      mul\n      sub\n      and\n      0x2\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x1\n      dup2\n      0x1\n      and\n      iszero\n      0x100\n      mul\n      sub\n      and\n      0x2\n      swap1\n      div\n      dup1\n      iszero\n      tag_138\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_139\n      jumpi\n      0x100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_138)\n    tag_139:\n      dup3\n      add\n      swap2\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      swap1\n    tag_140:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x1\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_140\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_138:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":12116:12293  function deprecate(address _upgradedAddress) public onlyOwner {... */\n    tag_43:\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1546:1551  owner */\n      sload(0x0)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1532:1542  msg.sender */\n      caller\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1532:1551  msg.sender == owner */\n      swap1\n      dup2\n      and\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1546:1551  owner */\n      swap2\n      and\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1532:1551  msg.sender == owner */\n      eq\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1524:1552  require(msg.sender == owner) */\n      tag_142\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_142:\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":12188:12198  deprecated */\n      0xa\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":12188:12205  deprecated = true */\n      dup1\n      sload\n      exp(0x2, 0xa0)\n      not(0xff0000000000000000000000000000000000000000)\n      swap1\n      swap2\n      and\n      or\n      not(0xffffffffffffffffffffffffffffffffffffffff)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":12215:12249  upgradedAddress = _upgradedAddress */\n      and\n      sub(exp(0x2, 0xa0), 0x1)\n      dup4\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":12259:12286  Deprecate(_upgradedAddress) */\n      0xcc358699805e9a8b7f77b522628c7cb9abd07d9efb86b6fb616af1609036a99e\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":12215:12249  upgradedAddress = _upgradedAddress */\n      dup2\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":12259:12286  Deprecate(_upgradedAddress) */\n      mload(0x40)\n      sub(exp(0x2, 0xa0), 0x1)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":12116:12293  function deprecate(address _upgradedAddress) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":11388:11684  function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {... */\n    tag_46:\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":11459:11465  2 * 32 */\n      0x40\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3037:3045  size + 4 */\n      0x44\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3019:3027  msg.data */\n      calldatasize\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3019:3045  msg.data.length < size + 4 */\n      lt\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3017:3046  !(msg.data.length < size + 4) */\n      iszero\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3009:3047  require(!(msg.data.length < size + 4)) */\n      tag_145\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_145:\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":11481:11491  deprecated */\n      sload(0xa)\n      exp(0x2, 0xa0)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":11477:11678  if (deprecated) {... */\n      iszero\n      tag_147\n      jumpi\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":11536:11551  upgradedAddress */\n      and(sub(exp(0x2, 0xa0), 0x1), sload(0xa))\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":11514:11568  UpgradedStandardToken(upgradedAddress).approveByLegacy */\n      0xaee92d33\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":11569:11579  msg.sender */\n      caller\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":11581:11589  _spender */\n      dup6\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":11591:11597  _value */\n      dup6\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":11514:11598  UpgradedStandardToken(upgradedAddress).approveByLegacy(msg.sender, _spender, _value) */\n      mload(0x40)\n      exp(0x2, 0xe0)\n      0xffffffff\n      dup7\n      and\n      mul\n      dup2\n      mstore\n      sub(exp(0x2, 0xa0), 0x1)\n      swap4\n      dup5\n      and\n      0x4\n      dup3\n      add\n      mstore\n      swap2\n      swap1\n      swap3\n      and\n      0x24\n      dup3\n      add\n      mstore\n      0x44\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x64\n      add\n      0x0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n      iszero\n      tag_148\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_148:\n      sub(gas, 0x2c6)\n      call\n      iszero\n      iszero\n      tag_149\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_149:\n      pop\n      pop\n      pop\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":11507:11598  return UpgradedStandardToken(upgradedAddress).approveByLegacy(msg.sender, _spender, _value) */\n      jump(tag_151)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":11477:11678  if (deprecated) {... */\n    tag_147:\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":11636:11667  super.approve(_spender, _value) */\n      tag_151\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":11650:11658  _spender */\n      dup4\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":11660:11666  _value */\n      dup4\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":11636:11649  super.approve */\n      tag_152\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":11636:11667  super.approve(_spender, _value) */\n      jump\t// in\n    tag_151:\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":11388:11684  function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":9488:9510  bool public deprecated */\n    tag_49:\n      sload(0xa)\n      exp(0x2, 0xa0)\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":8026:8168  function addBlackList (address _evilUser) public onlyOwner {... */\n    tag_52:\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1546:1551  owner */\n      sload(0x0)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1532:1542  msg.sender */\n      caller\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1532:1551  msg.sender == owner */\n      swap1\n      dup2\n      and\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1546:1551  owner */\n      swap2\n      and\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1532:1551  msg.sender == owner */\n      eq\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1524:1552  require(msg.sender == owner) */\n      tag_154\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_154:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":8095:8119  isBlackListed[_evilUser] */\n      dup2\n      and\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":8095:8108  isBlackListed */\n      0x6\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":8095:8119  isBlackListed[_evilUser] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":8095:8126  isBlackListed[_evilUser] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":8122:8126  true */\n      0x1\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":8095:8126  isBlackListed[_evilUser] = true */\n      or\n      swap1\n      sstore\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":8136:8161  AddedBlackList(_evilUser) */\n      0x42e160154868087d6bfdc0ca23d96a1c1cfa32f1b72ba9ba27b69b98a0d819dc\n      swap1\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":8109:8118  _evilUser */\n      dup3\n      swap1\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":8136:8161  AddedBlackList(_evilUser) */\n      mload\n      sub(exp(0x2, 0xa0), 0x1)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":8026:8168  function addBlackList (address _evilUser) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":12356:12568  function totalSupply() public constant returns (uint) {... */\n    tag_55:\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":12424:12434  deprecated */\n      sload(0xa)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":12404:12408  uint */\n      0x0\n      swap1\n      exp(0x2, 0xa0)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":12424:12434  deprecated */\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":12420:12562  if (deprecated) {... */\n      iszero\n      tag_157\n      jumpi\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":12471:12486  upgradedAddress */\n      and(sub(exp(0x2, 0xa0), 0x1), sload(0xa))\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":12457:12499  StandardToken(upgradedAddress).totalSupply */\n      0x18160ddd\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":12471:12486  upgradedAddress */\n      0x0\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":12457:12501  StandardToken(upgradedAddress).totalSupply() */\n      add(0x20, mload(0x40))\n      mstore\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      exp(0x2, 0xe0)\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n      iszero\n      tag_158\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_158:\n      sub(gas, 0x2c6)\n      call\n      iszero\n      iszero\n      tag_159\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_159:\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      mload\n      swap1\n      pop\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":12450:12501  return StandardToken(upgradedAddress).totalSupply() */\n      swap1\n      pop\n      jump(tag_160)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":12420:12562  if (deprecated) {... */\n    tag_157:\n      pop\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":12539:12551  _totalSupply */\n      sload(0x1)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":12420:12562  if (deprecated) {... */\n    tag_160:\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":12356:12568  function totalSupply() public constant returns (uint) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":10631:10986  function transferFrom(address _from, address _to, uint _value) public whenNotPaused {... */\n    tag_58:\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":7074:7080  paused */\n      sload(0x0)\n      exp(0x2, 0xa0)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":7073:7080  !paused */\n      iszero\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":7065:7081  require(!paused) */\n      tag_162\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_162:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":10734:10754  isBlackListed[_from] */\n      dup4\n      and\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":10734:10747  isBlackListed */\n      0x6\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":10734:10754  isBlackListed[_from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":10733:10754  !isBlackListed[_from] */\n      iszero\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":10725:10755  require(!isBlackListed[_from]) */\n      tag_164\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_164:\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":10769:10779  deprecated */\n      sload(0xa)\n      exp(0x2, 0xa0)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":10765:10980  if (deprecated) {... */\n      iszero\n      tag_165\n      jumpi\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":10824:10839  upgradedAddress */\n      and(sub(exp(0x2, 0xa0), 0x1), sload(0xa))\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":10802:10861  UpgradedStandardToken(upgradedAddress).transferFromByLegacy */\n      0x8b477adb\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":10862:10872  msg.sender */\n      caller\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":10874:10879  _from */\n      dup6\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":10881:10884  _to */\n      dup6\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":10886:10892  _value */\n      dup6\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":10802:10893  UpgradedStandardToken(upgradedAddress).transferFromByLegacy(msg.sender, _from, _to, _value) */\n      mload(0x40)\n      exp(0x2, 0xe0)\n      0xffffffff\n      dup8\n      and\n      mul\n      dup2\n      mstore\n      sub(exp(0x2, 0xa0), 0x1)\n      swap5\n      dup6\n      and\n      0x4\n      dup3\n      add\n      mstore\n      swap3\n      dup5\n      and\n      0x24\n      dup5\n      add\n      mstore\n      swap3\n      and\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x84\n      add\n      0x0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n      iszero\n      tag_148\n      jumpi\n      0x0\n      dup1\n      revert\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":10765:10980  if (deprecated) {... */\n    tag_165:\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":10931:10969  super.transferFrom(_from, _to, _value) */\n      tag_151\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":10950:10955  _from */\n      dup4\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":10957:10960  _to */\n      dup4\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":10962:10968  _value */\n      dup4\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":10931:10949  super.transferFrom */\n      tag_170\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":10931:10969  super.transferFrom(_from, _to, _value) */\n      jump\t// in\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":9452:9482  address public upgradedAddress */\n    tag_61:\n      and(sub(exp(0x2, 0xa0), 0x1), sload(0xa))\n      dup2\n      jump\t// out\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":2702:2742  mapping(address => uint) public balances */\n    tag_64:\n      mstore(0x20, 0x2)\n      0x0\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":9426:9446  uint public decimals */\n    tag_67:\n      sload(0x9)\n      dup2\n      jump\t// out\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":2864:2890  uint public maximumFee = 0 */\n    tag_70:\n      sload(0x4)\n      dup2\n      jump\t// out\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1917:1941  uint public _totalSupply */\n    tag_73:\n      sload(0x1)\n      dup2\n      jump\t// out\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":7491:7578  function unpause() onlyOwner whenPaused public {... */\n    tag_76:\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1546:1551  owner */\n      sload(0x0)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1532:1542  msg.sender */\n      caller\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1532:1551  msg.sender == owner */\n      swap1\n      dup2\n      and\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1546:1551  owner */\n      swap2\n      and\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1532:1551  msg.sender == owner */\n      eq\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1524:1552  require(msg.sender == owner) */\n      tag_172\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_172:\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":7226:7232  paused */\n      sload(0x0)\n      exp(0x2, 0xa0)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":7218:7233  require(paused) */\n      iszero\n      iszero\n      tag_174\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_174:\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":7553:7558  false */\n      0x0\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":7544:7558  paused = false */\n      dup1\n      sload\n      not(0xff0000000000000000000000000000000000000000)\n      and\n      swap1\n      sstore\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":7564:7573  Unpause() */\n      0x7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b33\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":7491:7578  function unpause() onlyOwner whenPaused public {... */\n      jump\t// out\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":7750:7872  function getBlackListStatus(address _maker) external constant returns (bool) {... */\n    tag_79:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":7844:7865  isBlackListed[_maker] */\n      dup2\n      and\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":7821:7825  bool */\n      0x0\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":7844:7865  isBlackListed[_maker] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":7844:7857  isBlackListed */\n      0x6\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":7844:7865  isBlackListed[_maker] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":7750:7872  function getBlackListStatus(address _maker) external constant returns (bool) {... */\n    tag_176:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":4173:4234  mapping (address => mapping (address => uint)) public allowed */\n    tag_82:\n      0x5\n      0x20\n      swap1\n      dup2\n      mstore\n      0x0\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":6905:6931  bool public paused = false */\n    tag_85:\n      sload(0x0)\n      exp(0x2, 0xa0)\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":11068:11306  function balanceOf(address who) public constant returns (uint) {... */\n    tag_88:\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":11145:11155  deprecated */\n      sload(0xa)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":11125:11129  uint */\n      0x0\n      swap1\n      exp(0x2, 0xa0)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":11145:11155  deprecated */\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":11141:11300  if (deprecated) {... */\n      iszero\n      tag_178\n      jumpi\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":11200:11215  upgradedAddress */\n      and(sub(exp(0x2, 0xa0), 0x1), sload(0xa))\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":11178:11226  UpgradedStandardToken(upgradedAddress).balanceOf */\n      0x70a08231\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":11227:11230  who */\n      dup4\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":11200:11215  upgradedAddress */\n      0x0\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":11178:11231  UpgradedStandardToken(upgradedAddress).balanceOf(who) */\n      add(0x20, mload(0x40))\n      mstore\n      mload(0x40)\n      exp(0x2, 0xe0)\n      0xffffffff\n      dup5\n      and\n      mul\n      dup2\n      mstore\n      sub(exp(0x2, 0xa0), 0x1)\n      swap1\n      swap2\n      and\n      0x4\n      dup3\n      add\n      mstore\n      0x24\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n      iszero\n      tag_179\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_179:\n      sub(gas, 0x2c6)\n      call\n      iszero\n      iszero\n      tag_180\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_180:\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      mload\n      swap1\n      pop\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":11171:11231  return UpgradedStandardToken(upgradedAddress).balanceOf(who) */\n      swap1\n      pop\n      jump(tag_176)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":11141:11300  if (deprecated) {... */\n    tag_178:\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":11269:11289  super.balanceOf(who) */\n      tag_182\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":11285:11288  who */\n      dup3\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":11269:11284  super.balanceOf */\n      tag_183\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":11269:11289  super.balanceOf(who) */\n      jump\t// in\n    tag_182:\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":11262:11289  return super.balanceOf(who) */\n      swap1\n      pop\n      jump(tag_176)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":7324:7409  function pause() onlyOwner whenNotPaused public {... */\n    tag_91:\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1546:1551  owner */\n      sload(0x0)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1532:1542  msg.sender */\n      caller\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1532:1551  msg.sender == owner */\n      swap1\n      dup2\n      and\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1546:1551  owner */\n      swap2\n      and\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1532:1551  msg.sender == owner */\n      eq\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1524:1552  require(msg.sender == owner) */\n      tag_185\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_185:\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":7074:7080  paused */\n      sload(0x0)\n      exp(0x2, 0xa0)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":7073:7080  !paused */\n      iszero\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":7065:7081  require(!paused) */\n      tag_187\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_187:\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":7378:7384  paused */\n      0x0\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":7378:7391  paused = true */\n      dup1\n      sload\n      not(0xff0000000000000000000000000000000000000000)\n      and\n      exp(0x2, 0xa0)\n      or\n      swap1\n      sstore\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":7397:7404  Pause() */\n      0x6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff625\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":7324:7409  function pause() onlyOwner whenNotPaused public {... */\n      jump\t// out\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":7878:7963  function getOwner() external constant returns (address) {... */\n    tag_94:\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":7925:7932  address */\n      0x0\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":7951:7956  owner */\n      sload\n      sub(exp(0x2, 0xa0), 0x1)\n      and\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":7878:7963  function getOwner() external constant returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1188:1208  address public owner */\n    tag_97:\n      and(sub(exp(0x2, 0xa0), 0x1), sload(0x0))\n      dup2\n      jump\t// out\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":9400:9420  string public symbol */\n    tag_100:\n      0x8\n      dup1\n      sload\n      0x1\n      dup2\n      0x1\n      and\n      iszero\n      0x100\n      mul\n      sub\n      and\n      0x2\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x1\n      dup2\n      0x1\n      and\n      iszero\n      0x100\n      mul\n      sub\n      and\n      0x2\n      swap1\n      div\n      dup1\n      iszero\n      tag_138\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_139\n      jumpi\n      0x100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_138)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":10230:10549  function transfer(address _to, uint _value) public whenNotPaused {... */\n    tag_107:\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":7074:7080  paused */\n      sload(0x0)\n      exp(0x2, 0xa0)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":7073:7080  !paused */\n      iszero\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":7065:7081  require(!paused) */\n      tag_194\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_194:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":10328:10338  msg.sender */\n      caller\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":10314:10339  isBlackListed[msg.sender] */\n      and\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":10314:10327  isBlackListed */\n      0x6\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":10314:10339  isBlackListed[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":10313:10339  !isBlackListed[msg.sender] */\n      iszero\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":10305:10340  require(!isBlackListed[msg.sender]) */\n      tag_196\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_196:\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":10354:10364  deprecated */\n      sload(0xa)\n      exp(0x2, 0xa0)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":10350:10543  if (deprecated) {... */\n      iszero\n      tag_197\n      jumpi\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":10409:10424  upgradedAddress */\n      and(sub(exp(0x2, 0xa0), 0x1), sload(0xa))\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":10387:10442  UpgradedStandardToken(upgradedAddress).transferByLegacy */\n      0x6e18980a\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":10443:10453  msg.sender */\n      caller\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":10455:10458  _to */\n      dup5\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":10460:10466  _value */\n      dup5\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":10387:10467  UpgradedStandardToken(upgradedAddress).transferByLegacy(msg.sender, _to, _value) */\n      mload(0x40)\n      exp(0x2, 0xe0)\n      0xffffffff\n      dup7\n      and\n      mul\n      dup2\n      mstore\n      sub(exp(0x2, 0xa0), 0x1)\n      swap4\n      dup5\n      and\n      0x4\n      dup3\n      add\n      mstore\n      swap2\n      swap1\n      swap3\n      and\n      0x24\n      dup3\n      add\n      mstore\n      0x44\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x64\n      add\n      0x0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n      iszero\n      tag_198\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_198:\n      sub(gas, 0x2c6)\n      call\n      iszero\n      iszero\n      tag_199\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_199:\n      pop\n      pop\n      pop\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":10380:10467  return UpgradedStandardToken(upgradedAddress).transferByLegacy(msg.sender, _to, _value) */\n      jump(tag_201)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":10350:10543  if (deprecated) {... */\n    tag_197:\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":10505:10532  super.transfer(_to, _value) */\n      tag_201\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":10520:10523  _to */\n      dup3\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":10525:10531  _value */\n      dup3\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":10505:10519  super.transfer */\n      tag_202\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":10505:10532  super.transfer(_to, _value) */\n      jump\t// in\n    tag_201:\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":10230:10549  function transfer(address _to, uint _value) public whenNotPaused {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":13720:14098  function setParams(uint newBasisPoints, uint newMaxFee) public onlyOwner {... */\n    tag_110:\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1546:1551  owner */\n      sload(0x0)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1532:1542  msg.sender */\n      caller\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1532:1551  msg.sender == owner */\n      swap1\n      dup2\n      and\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1546:1551  owner */\n      swap2\n      and\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1532:1551  msg.sender == owner */\n      eq\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1524:1552  require(msg.sender == owner) */\n      tag_204\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_204:\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":13916:13919  500 */\n      0x1f4\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":13899:13919  newBasisPoints <=500 */\n      dup3\n      gt\n      iszero\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":13891:13920  require(newBasisPoints <=500) */\n      tag_206\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_206:\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":13949:13951  50 */\n      0x32\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":13938:13951  newMaxFee<=50 */\n      dup2\n      gt\n      iszero\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":13930:13952  require(newMaxFee<=50) */\n      tag_207\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_207:\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":13963:13978  basisPointsRate */\n      0x3\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":13963:13995  basisPointsRate = newBasisPoints */\n      dup3\n      swap1\n      sstore\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":14036:14044  decimals */\n      sload(0x9)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":14018:14045  newMaxFee.mul(10**decimals) */\n      tag_208\n      swap1\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":14018:14027  newMaxFee */\n      dup3\n      swap1\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":14032:14034  10 */\n      0xa\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":14032:14044  10**decimals */\n      exp\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":14018:14045  newMaxFee.mul(10**decimals) */\n      0xffffffff\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":14018:14031  newMaxFee.mul */\n      tag_209\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":14018:14045  newMaxFee.mul(10**decimals) */\n      and\n      jump\t// in\n    tag_208:\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":14005:14015  maximumFee */\n      0x4\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":14005:14045  maximumFee = newMaxFee.mul(10**decimals) */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":14063:14078  basisPointsRate */\n      sload(0x3)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":14056:14091  Params(basisPointsRate, maximumFee) */\n      0xb044a1e409eac5c48e5af22d4af52670dd1a99059537a78b31b48c6500a6354e\n      swap2\n      mload(0x40)\n      swap2\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      mstore\n      0x40\n      swap1\n      dup2\n      add\n      swap1\n      mload\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":13720:14098  function setParams(uint newBasisPoints, uint newMaxFee) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":12726:13031  function issue(uint amount) public onlyOwner {... */\n    tag_113:\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1546:1551  owner */\n      sload(0x0)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1532:1542  msg.sender */\n      caller\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1532:1551  msg.sender == owner */\n      swap1\n      dup2\n      and\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1546:1551  owner */\n      swap2\n      and\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1532:1551  msg.sender == owner */\n      eq\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1524:1552  require(msg.sender == owner) */\n      tag_211\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_211:\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":12813:12825  _totalSupply */\n      sload(0x1)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":12789:12810  _totalSupply + amount */\n      dup2\n      dup2\n      add\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":12789:12825  _totalSupply + amount > _totalSupply */\n      gt\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":12781:12826  require(_totalSupply + amount > _totalSupply) */\n      tag_213\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_213:\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":12871:12886  balances[owner] */\n      0x0\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":12880:12885  owner */\n      dup1\n      sload\n      sub(exp(0x2, 0xa0), 0x1)\n      and\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":12871:12886  balances[owner] */\n      dup2\n      mstore\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":12871:12879  balances */\n      0x2\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":12871:12886  balances[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":12844:12868  balances[owner] + amount */\n      dup2\n      dup2\n      add\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":12844:12886  balances[owner] + amount > balances[owner] */\n      gt\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":12836:12887  require(balances[owner] + amount > balances[owner]) */\n      tag_214\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_214:\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":12898:12913  balances[owner] */\n      0x0\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":12907:12912  owner */\n      dup1\n      sload\n      sub(exp(0x2, 0xa0), 0x1)\n      swap1\n      dup2\n      and\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":12898:12913  balances[owner] */\n      dup3\n      mstore\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":12898:12906  balances */\n      0x2\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":12898:12913  balances[owner] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":12898:12923  balances[owner] += amount */\n      dup1\n      sload\n      dup6\n      add\n      swap1\n      sstore\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":12907:12912  owner */\n      0x1\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":12933:12955  _totalSupply += amount */\n      dup1\n      sload\n      dup6\n      add\n      swap1\n      sstore\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":12987:12992  owner */\n      dup3\n      sload\n      swap1\n      swap2\n      and\n      swap2\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":12898:12913  balances[owner] */\n      swap1\n      0x0\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":12966:13001  Transfer(address(0), owner, amount) */\n      swap1\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":12917:12923  amount */\n      dup5\n      swap1\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":12966:13001  Transfer(address(0), owner, amount) */\n      mload\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":13011:13024  Issue(amount) */\n      0xcb8241adb0c3fdb35b70c24ce35c5eb0c17af7431c99f827d44a445ca624176a\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":13017:13023  amount */\n      dup2\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":13011:13024  Issue(amount) */\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":12726:13031  function issue(uint amount) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":13439:13714  function redeem(uint amount) public onlyOwner {... */\n    tag_116:\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1546:1551  owner */\n      sload(0x0)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1532:1542  msg.sender */\n      caller\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1532:1551  msg.sender == owner */\n      swap1\n      dup2\n      and\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1546:1551  owner */\n      swap2\n      and\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1532:1551  msg.sender == owner */\n      eq\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1524:1552  require(msg.sender == owner) */\n      tag_216\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_216:\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":13503:13515  _totalSupply */\n      sload(0x1)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":13503:13525  _totalSupply >= amount */\n      dup2\n      swap1\n      lt\n      iszero\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":13495:13526  require(_totalSupply >= amount) */\n      tag_218\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_218:\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":13544:13559  balances[owner] */\n      0x0\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":13553:13558  owner */\n      dup1\n      sload\n      sub(exp(0x2, 0xa0), 0x1)\n      and\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":13544:13559  balances[owner] */\n      dup2\n      mstore\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":13544:13552  balances */\n      0x2\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":13544:13559  balances[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":13544:13569  balances[owner] >= amount */\n      dup2\n      swap1\n      lt\n      iszero\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":13536:13570  require(balances[owner] >= amount) */\n      tag_219\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_219:\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":13581:13593  _totalSupply */\n      0x1\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":13581:13603  _totalSupply -= amount */\n      dup1\n      sload\n      dup3\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":13581:13593  _totalSupply */\n      0x0\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":13622:13627  owner */\n      dup1\n      sload\n      sub(exp(0x2, 0xa0), 0x1)\n      swap1\n      dup2\n      and\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":13613:13628  balances[owner] */\n      dup3\n      mstore\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":13613:13621  balances */\n      0x2\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":13613:13628  balances[owner] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":13613:13638  balances[owner] -= amount */\n      dup1\n      sload\n      dup6\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":13658:13663  owner */\n      dup3\n      sload\n      swap1\n      swap2\n      and\n      swap1\n      0x0\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":13649:13683  Transfer(owner,address(0), amount) */\n      swap1\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":13597:13603  amount */\n      dup5\n      swap1\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":13649:13683  Transfer(owner,address(0), amount) */\n      mload\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":13693:13707  Redeem(amount) */\n      0x702d5967f45f6513a38ffc42d6ba9bf230bd40e8f53b16363c7eb4fd2deb9a44\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":13700:13706  amount */\n      dup2\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":13693:13707  Redeem(amount) */\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":13439:13714  function redeem(uint amount) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":11766:12053  function allowance(address _owner, address _spender) public constant returns (uint remaining) {... */\n    tag_119:\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":11874:11884  deprecated */\n      sload(0xa)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":11844:11858  uint remaining */\n      0x0\n      swap1\n      exp(0x2, 0xa0)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":11874:11884  deprecated */\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":11870:12047  if (deprecated) {... */\n      iszero\n      tag_221\n      jumpi\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":11921:11936  upgradedAddress */\n      and(sub(exp(0x2, 0xa0), 0x1), sload(0xa))\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":11907:11947  StandardToken(upgradedAddress).allowance */\n      0xdd62ed3e\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":11948:11954  _owner */\n      dup5\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":11956:11964  _spender */\n      dup5\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":11921:11936  upgradedAddress */\n      0x0\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":11907:11965  StandardToken(upgradedAddress).allowance(_owner, _spender) */\n      add(0x20, mload(0x40))\n      mstore\n      mload(0x40)\n      exp(0x2, 0xe0)\n      0xffffffff\n      dup6\n      and\n      mul\n      dup2\n      mstore\n      sub(exp(0x2, 0xa0), 0x1)\n      swap3\n      dup4\n      and\n      0x4\n      dup3\n      add\n      mstore\n      swap2\n      and\n      0x24\n      dup3\n      add\n      mstore\n      0x44\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n      iszero\n      tag_222\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_222:\n      sub(gas, 0x2c6)\n      call\n      iszero\n      iszero\n      tag_223\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_223:\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      mload\n      swap1\n      pop\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":11900:11965  return StandardToken(upgradedAddress).allowance(_owner, _spender) */\n      swap1\n      pop\n      jump(tag_224)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":11870:12047  if (deprecated) {... */\n    tag_221:\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":12003:12036  super.allowance(_owner, _spender) */\n      tag_225\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":12019:12025  _owner */\n      dup4\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":12027:12035  _spender */\n      dup4\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":12003:12018  super.allowance */\n      tag_226\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":12003:12036  super.allowance(_owner, _spender) */\n      jump\t// in\n    tag_225:\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":11996:12036  return super.allowance(_owner, _spender) */\n      swap1\n      pop\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":11870:12047  if (deprecated) {... */\n    tag_224:\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":11766:12053  function allowance(address _owner, address _spender) public constant returns (uint remaining) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":2827:2858  uint public basisPointsRate = 0 */\n    tag_122:\n      sload(0x3)\n      dup2\n      jump\t// out\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":7969:8015  mapping (address => bool) public isBlackListed */\n    tag_125:\n      mstore(0x20, 0x6)\n      0x0\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":8174:8331  function removeBlackList (address _clearedUser) public onlyOwner {... */\n    tag_128:\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1546:1551  owner */\n      sload(0x0)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1532:1542  msg.sender */\n      caller\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1532:1551  msg.sender == owner */\n      swap1\n      dup2\n      and\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1546:1551  owner */\n      swap2\n      and\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1532:1551  msg.sender == owner */\n      eq\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1524:1552  require(msg.sender == owner) */\n      tag_228\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_228:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":8249:8276  isBlackListed[_clearedUser] */\n      dup2\n      and\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":8279:8284  false */\n      0x0\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":8249:8276  isBlackListed[_clearedUser] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":8249:8262  isBlackListed */\n      0x6\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":8249:8276  isBlackListed[_clearedUser] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":8249:8284  isBlackListed[_clearedUser] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":8294:8324  RemovedBlackList(_clearedUser) */\n      0xd7e9ec6e6ecd65492dce6bf513cd6867560d49544421d0783ddf06e76c24470c\n      swap1\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":8263:8275  _clearedUser */\n      dup3\n      swap1\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":8294:8324  RemovedBlackList(_clearedUser) */\n      mload\n      sub(exp(0x2, 0xa0), 0x1)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":8174:8331  function removeBlackList (address _clearedUser) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":4241:4283  uint public constant MAX_UINT = 2**256 - 1 */\n    tag_131:\n      not(0x0)\n      dup2\n      jump\t// out\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1738:1885  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_134:\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1546:1551  owner */\n      sload(0x0)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1532:1542  msg.sender */\n      caller\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1532:1551  msg.sender == owner */\n      swap1\n      dup2\n      and\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1546:1551  owner */\n      swap2\n      and\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1532:1551  msg.sender == owner */\n      eq\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1524:1552  require(msg.sender == owner) */\n      tag_231\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_231:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1814:1836  newOwner != address(0) */\n      dup2\n      and\n      iszero\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1810:1879  if (newOwner != address(0)) {... */\n      tag_233\n      jumpi\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1852:1857  owner */\n      0x0\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1852:1868  owner = newOwner */\n      dup1\n      sload\n      not(0xffffffffffffffffffffffffffffffffffffffff)\n      and\n      sub(exp(0x2, 0xa0), 0x1)\n      dup4\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1810:1879  if (newOwner != address(0)) {... */\n    tag_233:\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1738:1885  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":8337:8716  function destroyBlackFunds (address _blackListedUser) public onlyOwner {... */\n    tag_137:\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":8468:8483  uint dirtyFunds */\n      0x0\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1546:1551  owner */\n      dup1\n      sload\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1532:1542  msg.sender */\n      caller\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1532:1551  msg.sender == owner */\n      swap1\n      dup2\n      and\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1546:1551  owner */\n      swap2\n      and\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1532:1551  msg.sender == owner */\n      eq\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":1524:1552  require(msg.sender == owner) */\n      tag_235\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_235:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":8426:8457  isBlackListed[_blackListedUser] */\n      dup3\n      and\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":8426:8439  isBlackListed */\n      0x6\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":8426:8457  isBlackListed[_blackListedUser] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":8418:8458  require(isBlackListed[_blackListedUser]) */\n      iszero\n      iszero\n      tag_237\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_237:\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":8486:8513  balanceOf(_blackListedUser) */\n      tag_238\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":8496:8512  _blackListedUser */\n      dup3\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":8486:8495  balanceOf */\n      tag_88\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":8486:8513  balanceOf(_blackListedUser) */\n      jump\t// in\n    tag_238:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":8523:8549  balances[_blackListedUser] */\n      dup4\n      and\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":8552:8553  0 */\n      0x0\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":8523:8549  balances[_blackListedUser] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":8523:8531  balances */\n      0x2\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":8523:8549  balances[_blackListedUser] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":8523:8553  balances[_blackListedUser] = 0 */\n      dup3\n      swap1\n      sstore\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":8563:8575  _totalSupply */\n      0x1\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":8563:8589  _totalSupply -= dirtyFunds */\n      dup1\n      sload\n      dup6\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":8468:8513  uint dirtyFunds = balanceOf(_blackListedUser) */\n      swap3\n      swap4\n      pop\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":8552:8553  0 */\n      swap2\n      0x0\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":8600:8650  Transfer(_blackListedUser, address(0), dirtyFunds) */\n      swap1\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":8468:8513  uint dirtyFunds = balanceOf(_blackListedUser) */\n      dup5\n      swap1\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":8600:8650  Transfer(_blackListedUser, address(0), dirtyFunds) */\n      mload\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":8660:8709  DestroyedBlackFunds(_blackListedUser, dirtyFunds) */\n      0x61e6e66b0d6339b2980aecc6ccc0039736791f0ccde9ed512e789a7fbdd698c6\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":8680:8696  _blackListedUser */\n      dup3\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":8698:8708  dirtyFunds */\n      dup3\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":8660:8709  DestroyedBlackFunds(_blackListedUser, dirtyFunds) */\n      mload(0x40)\n      sub(exp(0x2, 0xa0), 0x1)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      mstore\n      0x40\n      swap1\n      dup2\n      add\n      swap1\n      mload\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":8337:8716  function destroyBlackFunds (address _blackListedUser) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":5685:6248  function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {... */\n    tag_152:\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":5756:5762  2 * 32 */\n      0x40\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3037:3045  size + 4 */\n      0x44\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3019:3027  msg.data */\n      calldatasize\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3019:3045  msg.data.length < size + 4 */\n      lt\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3017:3046  !(msg.data.length < size + 4) */\n      iszero\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3009:3047  require(!(msg.data.length < size + 4)) */\n      tag_240\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_240:\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":6090:6101  _value != 0 */\n      dup2\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":6089:6142  (_value != 0) && (allowed[msg.sender][_spender] != 0) */\n      tag_242\n      jumpi\n      pop\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":6115:6125  msg.sender */\n      caller\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":6107:6126  allowed[msg.sender] */\n      dup2\n      and\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":6107:6114  allowed */\n      0x5\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":6107:6126  allowed[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":6107:6136  allowed[msg.sender][_spender] */\n      swap4\n      dup8\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":6107:6141  allowed[msg.sender][_spender] != 0 */\n      iszero\n      iszero\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":6089:6142  (_value != 0) && (allowed[msg.sender][_spender] != 0) */\n    tag_242:\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":6087:6143  !((_value != 0) && (allowed[msg.sender][_spender] != 0)) */\n      iszero\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":6079:6144  require(!((_value != 0) && (allowed[msg.sender][_spender] != 0))) */\n      tag_243\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_243:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":6163:6173  msg.sender */\n      caller\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":6155:6174  allowed[msg.sender] */\n      dup2\n      and\n      0x0\n      dup2\n      dup2\n      mstore\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":6155:6162  allowed */\n      0x5\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":6155:6174  allowed[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":6155:6184  allowed[msg.sender][_spender] */\n      swap5\n      dup9\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      swap1\n      swap2\n      mstore\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":6155:6193  allowed[msg.sender][_spender] = _value */\n      dup6\n      swap1\n      sstore\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":6203:6241  Approval(msg.sender, _spender, _value) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap1\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":6187:6193  _value */\n      dup6\n      swap1\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":6203:6241  Approval(msg.sender, _spender, _value) */\n      mload\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":5685:6248  function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":4565:5445  function transferFrom(address _from, address _to, uint _value) public onlyPayloadSize(3 * 32) {... */\n    tag_170:\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":4669:4683  var _allowance */\n      0x0\n      dup1\n      dup1\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":4651:4657  3 * 32 */\n      0x60\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3037:3045  size + 4 */\n      0x64\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3019:3027  msg.data */\n      calldatasize\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3019:3045  msg.data.length < size + 4 */\n      lt\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3017:3046  !(msg.data.length < size + 4) */\n      iszero\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3009:3047  require(!(msg.data.length < size + 4)) */\n      tag_245\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_245:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":4686:4700  allowed[_from] */\n      dup1\n      dup9\n      and\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":4686:4693  allowed */\n      0x5\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":4686:4700  allowed[_from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":4701:4711  msg.sender */\n      caller\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":4686:4712  allowed[_from][msg.sender] */\n      swap1\n      swap5\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":4901:4916  basisPointsRate */\n      sload(0x3)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":4686:4712  allowed[_from][msg.sender] */\n      swap1\n      swap5\n      pop\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":4889:4929  (_value.mul(basisPointsRate)).div(10000) */\n      tag_247\n      swap1\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":4923:4928  10000 */\n      0x2710\n      swap1\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":4890:4917  _value.mul(basisPointsRate) */\n      tag_248\n      swap1\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":4890:4896  _value */\n      dup9\n      swap1\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":4890:4917  _value.mul(basisPointsRate) */\n      0xffffffff\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":4890:4900  _value.mul */\n      tag_209\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":4890:4917  _value.mul(basisPointsRate) */\n      and\n      jump\t// in\n    tag_248:\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":4889:4922  (_value.mul(basisPointsRate)).div */\n      swap1\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":4889:4929  (_value.mul(basisPointsRate)).div(10000) */\n      0xffffffff\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":4889:4922  (_value.mul(basisPointsRate)).div */\n      tag_249\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":4889:4929  (_value.mul(basisPointsRate)).div(10000) */\n      and\n      jump\t// in\n    tag_247:\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":4878:4929  uint fee = (_value.mul(basisPointsRate)).div(10000) */\n      swap3\n      pop\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":4949:4959  maximumFee */\n      sload(0x4)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":4943:4946  fee */\n      dup4\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":4943:4959  fee > maximumFee */\n      gt\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":4939:5002  if (fee > maximumFee) {... */\n      iszero\n      tag_250\n      jumpi\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":4981:4991  maximumFee */\n      sload(0x4)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":4975:4991  fee = maximumFee */\n      swap3\n      pop\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":4939:5002  if (fee > maximumFee) {... */\n    tag_250:\n      not(0x0)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":5015:5025  _allowance */\n      dup5\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":5015:5036  _allowance < MAX_UINT */\n      lt\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":5011:5114  if (_allowance < MAX_UINT) {... */\n      iszero\n      tag_251\n      jumpi\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":5081:5103  _allowance.sub(_value) */\n      tag_252\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":5081:5091  _allowance */\n      dup5\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":5096:5102  _value */\n      dup7\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":5081:5103  _allowance.sub(_value) */\n      0xffffffff\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":5081:5095  _allowance.sub */\n      tag_253\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":5081:5103  _allowance.sub(_value) */\n      and\n      jump\t// in\n    tag_252:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":5052:5066  allowed[_from] */\n      dup1\n      dup10\n      and\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":5052:5059  allowed */\n      0x5\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":5052:5066  allowed[_from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":5067:5077  msg.sender */\n      caller\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":5052:5078  allowed[_from][msg.sender] */\n      swap1\n      swap5\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":5052:5103  allowed[_from][msg.sender] = _allowance.sub(_value) */\n      sstore\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":5011:5114  if (_allowance < MAX_UINT) {... */\n    tag_251:\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":5141:5156  _value.sub(fee) */\n      tag_254\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":5141:5147  _value */\n      dup6\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":5152:5155  fee */\n      dup5\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":5141:5156  _value.sub(fee) */\n      0xffffffff\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":5141:5151  _value.sub */\n      tag_253\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":5141:5156  _value.sub(fee) */\n      and\n      jump\t// in\n    tag_254:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":5184:5199  balances[_from] */\n      dup9\n      and\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":5184:5192  balances */\n      0x2\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":5184:5199  balances[_from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":5123:5156  uint sendAmount = _value.sub(fee) */\n      swap1\n      swap3\n      pop\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":5184:5211  balances[_from].sub(_value) */\n      tag_255\n      swap1\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":5204:5210  _value */\n      dup7\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":5184:5211  balances[_from].sub(_value) */\n      0xffffffff\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":5184:5203  balances[_from].sub */\n      tag_253\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":5184:5211  balances[_from].sub(_value) */\n      and\n      jump\t// in\n    tag_255:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":5166:5181  balances[_from] */\n      dup1\n      dup10\n      and\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":5166:5174  balances */\n      0x2\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":5166:5181  balances[_from] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":5166:5211  balances[_from] = balances[_from].sub(_value) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":5237:5250  balances[_to] */\n      swap1\n      dup9\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":5237:5266  balances[_to].add(sendAmount) */\n      tag_256\n      swap1\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":5255:5265  sendAmount */\n      dup4\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":5237:5266  balances[_to].add(sendAmount) */\n      0xffffffff\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":5237:5254  balances[_to].add */\n      tag_257\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":5237:5266  balances[_to].add(sendAmount) */\n      and\n      jump\t// in\n    tag_256:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":5221:5234  balances[_to] */\n      dup8\n      and\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":5221:5229  balances */\n      0x2\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":5221:5234  balances[_to] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":5221:5266  balances[_to] = balances[_to].add(sendAmount) */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":5280:5287  fee > 0 */\n      dup4\n      gt\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":5276:5397  if (fee > 0) {... */\n      iszero\n      tag_258\n      jumpi\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":5321:5336  balances[owner] */\n      0x0\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":5330:5335  owner */\n      dup1\n      sload\n      sub(exp(0x2, 0xa0), 0x1)\n      and\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":5321:5336  balances[owner] */\n      dup2\n      mstore\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":5321:5329  balances */\n      0x2\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":5321:5336  balances[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":5321:5345  balances[owner].add(fee) */\n      tag_259\n      swap1\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":5341:5344  fee */\n      dup5\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":5321:5345  balances[owner].add(fee) */\n      0xffffffff\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":5321:5340  balances[owner].add */\n      tag_257\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":5321:5345  balances[owner].add(fee) */\n      and\n      jump\t// in\n    tag_259:\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":5303:5318  balances[owner] */\n      0x0\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":5312:5317  owner */\n      dup1\n      sload\n      sub(exp(0x2, 0xa0), 0x1)\n      swap1\n      dup2\n      and\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":5303:5318  balances[owner] */\n      dup3\n      mstore\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":5303:5311  balances */\n      0x2\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":5303:5318  balances[owner] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":5303:5345  balances[owner] = balances[owner].add(fee) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":5375:5380  owner */\n      swap1\n      sload\n      dup2\n      and\n      swap2\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":5359:5386  Transfer(_from, owner, fee) */\n      swap1\n      dup10\n      and\n      swap1\n      0x0\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      swap1\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":5382:5385  fee */\n      dup7\n      swap1\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":5359:5386  Transfer(_from, owner, fee) */\n      mload\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":5276:5397  if (fee > 0) {... */\n    tag_258:\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":5422:5425  _to */\n      dup6\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":5406:5438  Transfer(_from, _to, sendAmount) */\n      and\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":5415:5420  _from */\n      dup8\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":5406:5438  Transfer(_from, _to, sendAmount) */\n      and\n      0x0\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":5427:5437  sendAmount */\n      dup5\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":5406:5438  Transfer(_from, _to, sendAmount) */\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":4565:5445  function transferFrom(address _from, address _to, uint _value) public onlyPayloadSize(3 * 32) {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":4002:4116  function balanceOf(address _owner) public constant returns (uint balance) {... */\n    tag_183:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":4093:4109  balances[_owner] */\n      and\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":4062:4074  uint balance */\n      0x0\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":4093:4109  balances[_owner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":4093:4101  balances */\n      0x2\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":4093:4109  balances[_owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":4002:4116  function balanceOf(address _owner) public constant returns (uint balance) {... */\n      jump\t// out\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3231:3791  function transfer(address _to, uint _value) public onlyPayloadSize(2 * 32) {... */\n    tag_202:\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3316:3324  uint fee */\n      0x0\n      dup1\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3298:3304  2 * 32 */\n      0x40\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3037:3045  size + 4 */\n      0x44\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3019:3027  msg.data */\n      calldatasize\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3019:3045  msg.data.length < size + 4 */\n      lt\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3017:3046  !(msg.data.length < size + 4) */\n      iszero\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3009:3047  require(!(msg.data.length < size + 4)) */\n      tag_262\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_262:\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3327:3367  (_value.mul(basisPointsRate)).div(10000) */\n      tag_264\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3361:3366  10000 */\n      0x2710\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3328:3355  _value.mul(basisPointsRate) */\n      tag_248\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3339:3354  basisPointsRate */\n      sload(0x3)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3328:3334  _value */\n      dup8\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3328:3338  _value.mul */\n      tag_209\n      swap1\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3328:3355  _value.mul(basisPointsRate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3327:3367  (_value.mul(basisPointsRate)).div(10000) */\n    tag_264:\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3316:3367  uint fee = (_value.mul(basisPointsRate)).div(10000) */\n      swap3\n      pop\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3387:3397  maximumFee */\n      sload(0x4)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3381:3384  fee */\n      dup4\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3381:3397  fee > maximumFee */\n      gt\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3377:3440  if (fee > maximumFee) {... */\n      iszero\n      tag_266\n      jumpi\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3419:3429  maximumFee */\n      sload(0x4)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3413:3429  fee = maximumFee */\n      swap3\n      pop\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3377:3440  if (fee > maximumFee) {... */\n    tag_266:\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3467:3482  _value.sub(fee) */\n      tag_267\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3467:3473  _value */\n      dup5\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3478:3481  fee */\n      dup5\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3467:3482  _value.sub(fee) */\n      0xffffffff\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3467:3477  _value.sub */\n      tag_253\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3467:3482  _value.sub(fee) */\n      and\n      jump\t// in\n    tag_267:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3524:3534  msg.sender */\n      caller\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3515:3535  balances[msg.sender] */\n      and\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3515:3523  balances */\n      0x2\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3515:3535  balances[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3449:3482  uint sendAmount = _value.sub(fee) */\n      swap1\n      swap3\n      pop\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3515:3547  balances[msg.sender].sub(_value) */\n      tag_268\n      swap1\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3540:3546  _value */\n      dup6\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3515:3547  balances[msg.sender].sub(_value) */\n      0xffffffff\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3515:3539  balances[msg.sender].sub */\n      tag_253\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3515:3547  balances[msg.sender].sub(_value) */\n      and\n      jump\t// in\n    tag_268:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3501:3511  msg.sender */\n      caller\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3492:3512  balances[msg.sender] */\n      dup2\n      and\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3492:3500  balances */\n      0x2\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3492:3512  balances[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3492:3547  balances[msg.sender] = balances[msg.sender].sub(_value) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3573:3586  balances[_to] */\n      swap1\n      dup8\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3573:3602  balances[_to].add(sendAmount) */\n      tag_269\n      swap1\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3591:3601  sendAmount */\n      dup4\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3573:3602  balances[_to].add(sendAmount) */\n      0xffffffff\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3573:3590  balances[_to].add */\n      tag_257\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3573:3602  balances[_to].add(sendAmount) */\n      and\n      jump\t// in\n    tag_269:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3557:3570  balances[_to] */\n      dup7\n      and\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3557:3565  balances */\n      0x2\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3557:3570  balances[_to] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3557:3602  balances[_to] = balances[_to].add(sendAmount) */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3616:3623  fee > 0 */\n      dup4\n      gt\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3612:3738  if (fee > 0) {... */\n      iszero\n      tag_270\n      jumpi\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3657:3672  balances[owner] */\n      0x0\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3666:3671  owner */\n      dup1\n      sload\n      sub(exp(0x2, 0xa0), 0x1)\n      and\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3657:3672  balances[owner] */\n      dup2\n      mstore\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3657:3665  balances */\n      0x2\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3657:3672  balances[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3657:3681  balances[owner].add(fee) */\n      tag_271\n      swap1\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3677:3680  fee */\n      dup5\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3657:3681  balances[owner].add(fee) */\n      0xffffffff\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3657:3676  balances[owner].add */\n      tag_257\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3657:3681  balances[owner].add(fee) */\n      and\n      jump\t// in\n    tag_271:\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3639:3654  balances[owner] */\n      0x0\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3648:3653  owner */\n      dup1\n      sload\n      sub(exp(0x2, 0xa0), 0x1)\n      swap1\n      dup2\n      and\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3639:3654  balances[owner] */\n      dup3\n      mstore\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3639:3647  balances */\n      0x2\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3639:3654  balances[owner] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3639:3681  balances[owner] = balances[owner].add(fee) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3716:3721  owner */\n      swap1\n      sload\n      dup2\n      and\n      swap2\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3704:3714  msg.sender */\n      caller\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3695:3727  Transfer(msg.sender, owner, fee) */\n      swap1\n      swap2\n      and\n      swap1\n      0x0\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      swap1\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3723:3726  fee */\n      dup7\n      swap1\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3695:3727  Transfer(msg.sender, owner, fee) */\n      mload\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3612:3738  if (fee > 0) {... */\n    tag_270:\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3768:3771  _to */\n      dup5\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3747:3784  Transfer(msg.sender, _to, sendAmount) */\n      and\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3756:3766  msg.sender */\n      caller\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3747:3784  Transfer(msg.sender, _to, sendAmount) */\n      and\n      0x0\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3773:3783  sendAmount */\n      dup5\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3747:3784  Transfer(msg.sender, _to, sendAmount) */\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":3231:3791  function transfer(address _to, uint _value) public onlyPayloadSize(2 * 32) {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":206:407  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_209:\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":264:271  uint256 */\n      0x0\n      dup1\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":287:293  a == 0 */\n      dup4\n      iszero\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":283:328  if (a == 0) {... */\n      iszero\n      tag_273\n      jumpi\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":316:317  0 */\n      0x0\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":309:317  return 0 */\n      swap2\n      pop\n      jump(tag_272)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":283:328  if (a == 0) {... */\n    tag_273:\n      pop\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":349:354  a * b */\n      dup3\n      dup3\n      mul\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":353:354  b */\n      dup3\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":349:350  a */\n      dup5\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":349:354  a * b */\n      dup3\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":371:376  c / a */\n      dup2\n      iszero\n      iszero\n      tag_274\n      jumpi\n      invalid\n    tag_274:\n      div\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":371:381  c / a == b */\n      eq\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":364:382  assert(c / a == b) */\n      tag_275\n      jumpi\n      invalid\n    tag_275:\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":399:400  c */\n      dup1\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":392:400  return c */\n      swap2\n      pop\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":206:407  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_272:\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":6573:6716  function allowance(address _owner, address _spender) public constant returns (uint remaining) {... */\n    tag_226:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":6684:6699  allowed[_owner] */\n      swap2\n      dup3\n      and\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":6651:6665  uint remaining */\n      0x0\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":6684:6699  allowed[_owner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":6684:6691  allowed */\n      0x5\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":6684:6699  allowed[_owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":6684:6709  allowed[_owner][_spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":6573:6716  function allowance(address _owner, address _spender) public constant returns (uint remaining) {... */\n      jump\t// out\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":413:696  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_249:\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":471:478  uint256 */\n      0x0\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":568:577  uint256 c */\n      dup1\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":584:585  b */\n      dup3\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":580:581  a */\n      dup5\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":580:585  a / b */\n      dup2\n      iszero\n      iszero\n      tag_278\n      jumpi\n      invalid\n    tag_278:\n      div\n      swap5\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":413:696  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":702:822  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_253:\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":760:767  uint256 */\n      0x0\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":786:792  b <= a */\n      dup3\n      dup3\n      gt\n      iszero\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":779:793  assert(b <= a) */\n      tag_280\n      jumpi\n      invalid\n    tag_280:\n      pop\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":810:815  a - b */\n      swap1\n      sub\n      swap1\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":702:822  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":828:971  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_257:\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":886:893  uint256 */\n      0x0\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":917:922  a + b */\n      dup3\n      dup3\n      add\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":939:945  c >= a */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"contracts/stablecoin/stablecoin_contract.sol\":932:946  assert(c >= a) */\n      tag_275\n      jumpi\n      invalid\n    stop\n    data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n\n    auxdata: 0xa165627a7a72305820bd6e432aa3d0131141f94dd374296a539fc00392b87d5ebf6eff25667fbb9e510029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60606040526000805460a060020a60ff0219168155600381905560045534156200002857600080fd5b6040516200188a3803806200188a833981016040528080519190602001805182019190602001805182019190602001805160008054600160a060020a03191633600160a060020a031617905560018690559150600790508380516200009292916020019062000120565b506008828051620000a892916020019062000120565b50600981905560008054600160a060020a03908116825260026020526040808320879055600a805460a060020a60ff0219169055825490911691907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9087905190815260200160405180910390a350505050620001c5565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200016357805160ff191683800117855562000193565b8280016001018555821562000193579182015b828111156200019357825182559160200191906001019062000176565b50620001a1929150620001a5565b5090565b620001c291905b80821115620001a15760008155600101620001ac565b90565b6116b580620001d56000396000f3006060604052361561017a5763ffffffff60e060020a60003504166306fdde03811461017f5780630753c30c14610209578063095ea7b31461022a5780630e136b191461024c5780630ecb93c01461027357806318160ddd1461029257806323b872dd146102b757806326976e3f146102df57806327e235e31461030e578063313ce5671461032d57806335390714146103405780633eaaf86b146103535780633f4ba83a1461036657806359bf1abe146103795780635c658165146103985780635c975abb146103bd57806370a08231146103d05780638456cb59146103ef578063893d20e8146104025780638da5cb5b1461041557806395d89b4114610428578063a9059cbb1461043b578063c0324c771461045d578063cc872b6614610476578063db006a751461048c578063dd62ed3e146104a2578063dd644f72146104c7578063e47d6060146104da578063e4997dc5146104f9578063e5b5019a14610518578063f2fde38b1461052b578063f3bdc2281461054a575b600080fd5b341561018a57600080fd5b610192610569565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156101ce5780820151838201526020016101b6565b50505050905090810190601f1680156101fb5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561021457600080fd5b610228600160a060020a0360043516610607565b005b341561023557600080fd5b610228600160a060020a03600435166024356106aa565b341561025757600080fd5b61025f610757565b604051901515815260200160405180910390f35b341561027e57600080fd5b610228600160a060020a0360043516610767565b341561029d57600080fd5b6102a56107e7565b60405190815260200160405180910390f35b34156102c257600080fd5b610228600160a060020a036004358116906024351660443561086e565b34156102ea57600080fd5b6102f2610932565b604051600160a060020a03909116815260200160405180910390f35b341561031957600080fd5b6102a5600160a060020a0360043516610941565b341561033857600080fd5b6102a5610953565b341561034b57600080fd5b6102a5610959565b341561035e57600080fd5b6102a561095f565b341561037157600080fd5b610228610965565b341561038457600080fd5b61025f600160a060020a03600435166109e4565b34156103a357600080fd5b6102a5600160a060020a0360043581169060243516610a06565b34156103c857600080fd5b61025f610a23565b34156103db57600080fd5b6102a5600160a060020a0360043516610a33565b34156103fa57600080fd5b610228610ad3565b341561040d57600080fd5b6102f2610b57565b341561042057600080fd5b6102f2610b66565b341561043357600080fd5b610192610b75565b341561044657600080fd5b610228600160a060020a0360043516602435610be0565b341561046857600080fd5b610228600435602435610cb9565b341561048157600080fd5b610228600435610d52565b341561049757600080fd5b610228600435610e2a565b34156104ad57600080fd5b6102a5600160a060020a0360043581169060243516610f03565b34156104d257600080fd5b6102a5610fae565b34156104e557600080fd5b61025f600160a060020a0360043516610fb4565b341561050457600080fd5b610228600160a060020a0360043516610fc9565b341561052357600080fd5b6102a5611046565b341561053657600080fd5b610228600160a060020a036004351661104c565b341561055557600080fd5b610228600160a060020a03600435166110a2565b60078054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105ff5780601f106105d4576101008083540402835291602001916105ff565b820191906000526020600020905b8154815290600101906020018083116105e257829003601f168201915b505050505081565b60005433600160a060020a0390811691161461062257600080fd5b600a805460a060020a74ff0000000000000000000000000000000000000000199091161773ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161790557fcc358699805e9a8b7f77b522628c7cb9abd07d9efb86b6fb616af1609036a99e81604051600160a060020a03909116815260200160405180910390a150565b604060443610156106ba57600080fd5b600a5460a060020a900460ff161561074857600a54600160a060020a031663aee92d3333858560405160e060020a63ffffffff8616028152600160a060020a0393841660048201529190921660248201526044810191909152606401600060405180830381600087803b151561072f57600080fd5b6102c65a03f1151561074057600080fd5b505050610752565b6107528383611180565b505050565b600a5460a060020a900460ff1681565b60005433600160a060020a0390811691161461078257600080fd5b600160a060020a03811660009081526006602052604090819020805460ff191660011790557f42e160154868087d6bfdc0ca23d96a1c1cfa32f1b72ba9ba27b69b98a0d819dc90829051600160a060020a03909116815260200160405180910390a150565b600a5460009060a060020a900460ff161561086657600a54600160a060020a03166318160ddd6000604051602001526040518163ffffffff1660e060020a028152600401602060405180830381600087803b151561084457600080fd5b6102c65a03f1151561085557600080fd5b50505060405180519050905061086b565b506001545b90565b60005460a060020a900460ff161561088557600080fd5b600160a060020a03831660009081526006602052604090205460ff16156108ab57600080fd5b600a5460a060020a900460ff161561092757600a54600160a060020a0316638b477adb3385858560405160e060020a63ffffffff8716028152600160a060020a0394851660048201529284166024840152921660448201526064810191909152608401600060405180830381600087803b151561072f57600080fd5b610752838383611232565b600a54600160a060020a031681565b60026020526000908152604090205481565b60095481565b60045481565b60015481565b60005433600160a060020a0390811691161461098057600080fd5b60005460a060020a900460ff16151561099857600080fd5b6000805474ff0000000000000000000000000000000000000000191690557f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3360405160405180910390a1565b600160a060020a03811660009081526006602052604090205460ff165b919050565b600560209081526000928352604080842090915290825290205481565b60005460a060020a900460ff1681565b600a5460009060a060020a900460ff1615610ac357600a54600160a060020a03166370a082318360006040516020015260405160e060020a63ffffffff8416028152600160a060020a039091166004820152602401602060405180830381600087803b1515610aa157600080fd5b6102c65a03f11515610ab257600080fd5b505050604051805190509050610a01565b610acc82611431565b9050610a01565b60005433600160a060020a03908116911614610aee57600080fd5b60005460a060020a900460ff1615610b0557600080fd5b6000805474ff0000000000000000000000000000000000000000191660a060020a1790557f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62560405160405180910390a1565b600054600160a060020a031690565b600054600160a060020a031681565b60088054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105ff5780601f106105d4576101008083540402835291602001916105ff565b60005460a060020a900460ff1615610bf757600080fd5b600160a060020a03331660009081526006602052604090205460ff1615610c1d57600080fd5b600a5460a060020a900460ff1615610cab57600a54600160a060020a0316636e18980a33848460405160e060020a63ffffffff8616028152600160a060020a0393841660048201529190921660248201526044810191909152606401600060405180830381600087803b1515610c9257600080fd5b6102c65a03f11515610ca357600080fd5b505050610cb5565b610cb5828261144c565b5050565b60005433600160a060020a03908116911614610cd457600080fd5b6101f4821115610ce357600080fd5b6032811115610cf157600080fd5b6003829055600954610d0d908290600a0a63ffffffff6115d016565b60048190556003547fb044a1e409eac5c48e5af22d4af52670dd1a99059537a78b31b48c6500a6354e9160405191825260208201526040908101905180910390a15050565b60005433600160a060020a03908116911614610d6d57600080fd5b60015481810111610d7d57600080fd5b60008054600160a060020a031681526002602052604090205481810111610da357600080fd5b60008054600160a060020a0390811682526002602052604080832080548501905560018054850190558254909116919060008051602061166a8339815191529084905190815260200160405180910390a37fcb8241adb0c3fdb35b70c24ce35c5eb0c17af7431c99f827d44a445ca624176a8160405190815260200160405180910390a150565b60005433600160a060020a03908116911614610e4557600080fd5b60015481901015610e5557600080fd5b60008054600160a060020a031681526002602052604090205481901015610e7b57600080fd5b60018054829003905560008054600160a060020a039081168252600260205260408083208054859003905582549091169060008051602061166a8339815191529084905190815260200160405180910390a37f702d5967f45f6513a38ffc42d6ba9bf230bd40e8f53b16363c7eb4fd2deb9a448160405190815260200160405180910390a150565b600a5460009060a060020a900460ff1615610f9b57600a54600160a060020a031663dd62ed3e848460006040516020015260405160e060020a63ffffffff8516028152600160a060020a03928316600482015291166024820152604401602060405180830381600087803b1515610f7957600080fd5b6102c65a03f11515610f8a57600080fd5b505050604051805190509050610fa8565b610fa58383611606565b90505b92915050565b60035481565b60066020526000908152604090205460ff1681565b60005433600160a060020a03908116911614610fe457600080fd5b600160a060020a03811660009081526006602052604090819020805460ff191690557fd7e9ec6e6ecd65492dce6bf513cd6867560d49544421d0783ddf06e76c24470c90829051600160a060020a03909116815260200160405180910390a150565b60001981565b60005433600160a060020a0390811691161461106757600080fd5b600160a060020a0381161561109f576000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161790555b50565b6000805433600160a060020a039081169116146110be57600080fd5b600160a060020a03821660009081526006602052604090205460ff1615156110e557600080fd5b6110ee82610a33565b600160a060020a0383166000818152600260205260408082208290556001805485900390559293509160008051602061166a8339815191529084905190815260200160405180910390a37f61e6e66b0d6339b2980aecc6ccc0039736791f0ccde9ed512e789a7fbdd698c68282604051600160a060020a03909216825260208201526040908101905180910390a15050565b6040604436101561119057600080fd5b81158015906111c35750600160a060020a0333811660009081526005602090815260408083209387168352929052205415155b156111cd57600080fd5b600160a060020a03338116600081815260056020908152604080832094881680845294909152908190208590557f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259085905190815260200160405180910390a3505050565b600080806060606436101561124657600080fd5b600160a060020a0380881660009081526005602090815260408083203390941683529290522054600354909450611298906127109061128c90889063ffffffff6115d016565b9063ffffffff61163116565b92506004548311156112aa5760045492505b6000198410156112ec576112c4848663ffffffff61164816565b600160a060020a03808916600090815260056020908152604080832033909416835292905220555b6112fc858463ffffffff61164816565b600160a060020a038816600090815260026020526040902054909250611328908663ffffffff61164816565b600160a060020a03808916600090815260026020526040808220939093559088168152205461135d908363ffffffff61165a16565b600160a060020a0387166000908152600260205260408120919091558311156113f35760008054600160a060020a03168152600260205260409020546113a9908463ffffffff61165a16565b60008054600160a060020a039081168252600260205260408083209390935590548116919089169060008051602061166a8339815191529086905190815260200160405180910390a35b85600160a060020a031687600160a060020a031660008051602061166a8339815191528460405190815260200160405180910390a350505050505050565b600160a060020a031660009081526002602052604090205490565b6000806040604436101561145f57600080fd5b61147a61271061128c600354876115d090919063ffffffff16565b925060045483111561148c5760045492505b61149c848463ffffffff61164816565b600160a060020a0333166000908152600260205260409020549092506114c8908563ffffffff61164816565b600160a060020a0333811660009081526002602052604080822093909355908716815220546114fd908363ffffffff61165a16565b600160a060020a0386166000908152600260205260408120919091558311156115945760008054600160a060020a0316815260026020526040902054611549908463ffffffff61165a16565b60008054600160a060020a03908116825260026020526040808320939093559054811691339091169060008051602061166a8339815191529086905190815260200160405180910390a35b84600160a060020a031633600160a060020a031660008051602061166a8339815191528460405190815260200160405180910390a35050505050565b6000808315156115e357600091506115ff565b508282028284828115156115f357fe5b04146115fb57fe5b8091505b5092915050565b600160a060020a03918216600090815260056020908152604080832093909416825291909152205490565b600080828481151561163f57fe5b04949350505050565b60008282111561165457fe5b50900390565b6000828201838110156115fb57fe00ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa165627a7a72305820bd6e432aa3d0131141f94dd374296a539fc00392b87d5ebf6eff25667fbb9e510029",
							"opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0xA0 PUSH1 0x2 EXP PUSH1 0xFF MUL NOT AND DUP2 SSTORE PUSH1 0x3 DUP2 SWAP1 SSTORE PUSH1 0x4 SSTORE CALLVALUE ISZERO PUSH3 0x28 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x188A CODESIZE SUB DUP1 PUSH3 0x188A DUP4 CODECOPY DUP2 ADD PUSH1 0x40 MSTORE DUP1 DUP1 MLOAD SWAP2 SWAP1 PUSH1 0x20 ADD DUP1 MLOAD DUP3 ADD SWAP2 SWAP1 PUSH1 0x20 ADD DUP1 MLOAD DUP3 ADD SWAP2 SWAP1 PUSH1 0x20 ADD DUP1 MLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND CALLER PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND OR SWAP1 SSTORE PUSH1 0x1 DUP7 SWAP1 SSTORE SWAP2 POP PUSH1 0x7 SWAP1 POP DUP4 DUP1 MLOAD PUSH3 0x92 SWAP3 SWAP2 PUSH1 0x20 ADD SWAP1 PUSH3 0x120 JUMP JUMPDEST POP PUSH1 0x8 DUP3 DUP1 MLOAD PUSH3 0xA8 SWAP3 SWAP2 PUSH1 0x20 ADD SWAP1 PUSH3 0x120 JUMP JUMPDEST POP PUSH1 0x9 DUP2 SWAP1 SSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 SWAP1 SSTORE PUSH1 0xA DUP1 SLOAD PUSH1 0xA0 PUSH1 0x2 EXP PUSH1 0xFF MUL NOT AND SWAP1 SSTORE DUP3 SLOAD SWAP1 SWAP2 AND SWAP2 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP8 SWAP1 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP PUSH3 0x1C5 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x163 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x193 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x193 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x193 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x176 JUMP JUMPDEST POP PUSH3 0x1A1 SWAP3 SWAP2 POP PUSH3 0x1A5 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH3 0x1C2 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x1A1 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1AC JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x16B5 DUP1 PUSH3 0x1D5 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x60 PUSH1 0x40 MSTORE CALLDATASIZE ISZERO PUSH2 0x17A JUMPI PUSH4 0xFFFFFFFF PUSH1 0xE0 PUSH1 0x2 EXP PUSH1 0x0 CALLDATALOAD DIV AND PUSH4 0x6FDDE03 DUP2 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x753C30C EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0xE136B19 EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0xECB93C0 EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2B7 JUMPI DUP1 PUSH4 0x26976E3F EQ PUSH2 0x2DF JUMPI DUP1 PUSH4 0x27E235E3 EQ PUSH2 0x30E JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x32D JUMPI DUP1 PUSH4 0x35390714 EQ PUSH2 0x340 JUMPI DUP1 PUSH4 0x3EAAF86B EQ PUSH2 0x353 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x366 JUMPI DUP1 PUSH4 0x59BF1ABE EQ PUSH2 0x379 JUMPI DUP1 PUSH4 0x5C658165 EQ PUSH2 0x398 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x3BD JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3D0 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x3EF JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x402 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x415 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x428 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x43B JUMPI DUP1 PUSH4 0xC0324C77 EQ PUSH2 0x45D JUMPI DUP1 PUSH4 0xCC872B66 EQ PUSH2 0x476 JUMPI DUP1 PUSH4 0xDB006A75 EQ PUSH2 0x48C JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4A2 JUMPI DUP1 PUSH4 0xDD644F72 EQ PUSH2 0x4C7 JUMPI DUP1 PUSH4 0xE47D6060 EQ PUSH2 0x4DA JUMPI DUP1 PUSH4 0xE4997DC5 EQ PUSH2 0x4F9 JUMPI DUP1 PUSH4 0xE5B5019A EQ PUSH2 0x518 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x52B JUMPI DUP1 PUSH4 0xF3BDC228 EQ PUSH2 0x54A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0x18A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x192 PUSH2 0x569 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 SWAP1 DUP2 ADD DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1CE JUMPI DUP1 DUP3 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1B6 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1FB JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x214 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x228 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x607 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x235 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x228 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0x6AA JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x257 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x25F PUSH2 0x757 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x27E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x228 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x767 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x29D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2A5 PUSH2 0x7E7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x2C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x228 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD DUP2 AND SWAP1 PUSH1 0x24 CALLDATALOAD AND PUSH1 0x44 CALLDATALOAD PUSH2 0x86E JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x2EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2F2 PUSH2 0x932 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x319 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2A5 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x941 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x338 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2A5 PUSH2 0x953 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x34B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2A5 PUSH2 0x959 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x35E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2A5 PUSH2 0x95F JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x371 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x228 PUSH2 0x965 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x384 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x25F PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x9E4 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x3A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2A5 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD DUP2 AND SWAP1 PUSH1 0x24 CALLDATALOAD AND PUSH2 0xA06 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x3C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x25F PUSH2 0xA23 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x3DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2A5 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0xA33 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x3FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x228 PUSH2 0xAD3 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x40D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2F2 PUSH2 0xB57 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x420 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2F2 PUSH2 0xB66 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x433 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x192 PUSH2 0xB75 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x446 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x228 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0xBE0 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x468 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x228 PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH2 0xCB9 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x481 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x228 PUSH1 0x4 CALLDATALOAD PUSH2 0xD52 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x497 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x228 PUSH1 0x4 CALLDATALOAD PUSH2 0xE2A JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x4AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2A5 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD DUP2 AND SWAP1 PUSH1 0x24 CALLDATALOAD AND PUSH2 0xF03 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x4D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2A5 PUSH2 0xFAE JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x4E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x25F PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0xFB4 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x504 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x228 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0xFC9 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x523 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2A5 PUSH2 0x1046 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x536 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x228 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x104C JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x555 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x228 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x10A2 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x5FF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5D4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5FF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5E2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD CALLER PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x622 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0xA0 PUSH1 0x2 EXP PUSH21 0xFF0000000000000000000000000000000000000000 NOT SWAP1 SWAP2 AND OR PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND OR SWAP1 SSTORE PUSH32 0xCC358699805E9A8B7F77B522628C7CB9ABD07D9EFB86B6FB616AF1609036A99E DUP2 PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x40 PUSH1 0x44 CALLDATASIZE LT ISZERO PUSH2 0x6BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA SLOAD PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x748 JUMPI PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH4 0xAEE92D33 CALLER DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0xFFFFFFFF DUP7 AND MUL DUP2 MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x72F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0x740 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH2 0x752 JUMP JUMPDEST PUSH2 0x752 DUP4 DUP4 PUSH2 0x1180 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD CALLER PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x782 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x42E160154868087D6BFDC0CA23D96A1C1CFA32F1B72BA9BA27B69B98A0D819DC SWAP1 DUP3 SWAP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x0 SWAP1 PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x866 JUMPI PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH4 0x18160DDD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD MSTORE PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 PUSH1 0x2 EXP MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x844 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0x855 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD DUP1 MLOAD SWAP1 POP SWAP1 POP PUSH2 0x86B JUMP JUMPDEST POP PUSH1 0x1 SLOAD JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x885 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x8AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA SLOAD PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x927 JUMPI PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH4 0x8B477ADB CALLER DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0xFFFFFFFF DUP8 AND MUL DUP2 MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP5 DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 DUP5 AND PUSH1 0x24 DUP5 ADD MSTORE SWAP3 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x84 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x72F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x752 DUP4 DUP4 DUP4 PUSH2 0x1232 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD CALLER PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x980 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x998 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH21 0xFF0000000000000000000000000000000000000000 NOT AND SWAP1 SSTORE PUSH32 0x7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x0 SWAP1 PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xAC3 JUMPI PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH4 0x70A08231 DUP4 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD MSTORE PUSH1 0x40 MLOAD PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0xFFFFFFFF DUP5 AND MUL DUP2 MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0xAA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0xAB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD DUP1 MLOAD SWAP1 POP SWAP1 POP PUSH2 0xA01 JUMP JUMPDEST PUSH2 0xACC DUP3 PUSH2 0x1431 JUMP JUMPDEST SWAP1 POP PUSH2 0xA01 JUMP JUMPDEST PUSH1 0x0 SLOAD CALLER PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xAEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xB05 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH21 0xFF0000000000000000000000000000000000000000 NOT AND PUSH1 0xA0 PUSH1 0x2 EXP OR SWAP1 SSTORE PUSH32 0x6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x5FF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5D4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5FF JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xBF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB CALLER AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xC1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA SLOAD PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xCAB JUMPI PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH4 0x6E18980A CALLER DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0xFFFFFFFF DUP7 AND MUL DUP2 MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0xC92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0xCA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH2 0xCB5 JUMP JUMPDEST PUSH2 0xCB5 DUP3 DUP3 PUSH2 0x144C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD CALLER PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xCD4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F4 DUP3 GT ISZERO PUSH2 0xCE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x32 DUP2 GT ISZERO PUSH2 0xCF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 DUP3 SWAP1 SSTORE PUSH1 0x9 SLOAD PUSH2 0xD0D SWAP1 DUP3 SWAP1 PUSH1 0xA EXP PUSH4 0xFFFFFFFF PUSH2 0x15D0 AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE PUSH1 0x3 SLOAD PUSH32 0xB044A1E409EAC5C48E5AF22D4AF52670DD1A99059537A78B31B48C6500A6354E SWAP2 PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 SWAP1 DUP2 ADD SWAP1 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD CALLER PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xD6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD DUP2 DUP2 ADD GT PUSH2 0xD7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 ADD GT PUSH2 0xDA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP6 ADD SWAP1 SSTORE PUSH1 0x1 DUP1 SLOAD DUP6 ADD SWAP1 SSTORE DUP3 SLOAD SWAP1 SWAP2 AND SWAP2 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x166A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP5 SWAP1 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH32 0xCB8241ADB0C3FDB35B70C24CE35C5EB0C17AF7431C99F827D44A445CA624176A DUP2 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD CALLER PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xE45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD DUP2 SWAP1 LT ISZERO PUSH2 0xE55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 SWAP1 LT ISZERO PUSH2 0xE7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP6 SWAP1 SUB SWAP1 SSTORE DUP3 SLOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x166A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP5 SWAP1 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH32 0x702D5967F45F6513A38FFC42D6BA9BF230BD40E8F53B16363C7EB4FD2DEB9A44 DUP2 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x0 SWAP1 PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xF9B JUMPI PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH4 0xDD62ED3E DUP5 DUP5 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD MSTORE PUSH1 0x40 MLOAD PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0xFFFFFFFF DUP6 AND MUL DUP2 MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0xF79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0xF8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD DUP1 MLOAD SWAP1 POP SWAP1 POP PUSH2 0xFA8 JUMP JUMPDEST PUSH2 0xFA5 DUP4 DUP4 PUSH2 0x1606 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD CALLER PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xFE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0xD7E9EC6E6ECD65492DCE6BF513CD6867560D49544421D0783DDF06E76C24470C SWAP1 DUP3 SWAP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 NOT DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD CALLER PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x1067 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND ISZERO PUSH2 0x109F JUMPI PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND OR SWAP1 SSTORE JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x10BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x10E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10EE DUP3 PUSH2 0xA33 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0x1 DUP1 SLOAD DUP6 SWAP1 SUB SWAP1 SSTORE SWAP3 SWAP4 POP SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x166A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP5 SWAP1 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH32 0x61E6E66B0D6339B2980AECC6CCC0039736791F0CCDE9ED512E789A7FBDD698C6 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 SWAP1 DUP2 ADD SWAP1 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x40 PUSH1 0x44 CALLDATASIZE LT ISZERO PUSH2 0x1190 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x11C3 JUMPI POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB CALLER DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x11CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB CALLER DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP9 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 DUP6 SWAP1 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH1 0x60 PUSH1 0x64 CALLDATASIZE LT ISZERO PUSH2 0x1246 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x3 SLOAD SWAP1 SWAP5 POP PUSH2 0x1298 SWAP1 PUSH2 0x2710 SWAP1 PUSH2 0x128C SWAP1 DUP9 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x15D0 AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1631 AND JUMP JUMPDEST SWAP3 POP PUSH1 0x4 SLOAD DUP4 GT ISZERO PUSH2 0x12AA JUMPI PUSH1 0x4 SLOAD SWAP3 POP JUMPDEST PUSH1 0x0 NOT DUP5 LT ISZERO PUSH2 0x12EC JUMPI PUSH2 0x12C4 DUP5 DUP7 PUSH4 0xFFFFFFFF PUSH2 0x1648 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SSTORE JUMPDEST PUSH2 0x12FC DUP6 DUP5 PUSH4 0xFFFFFFFF PUSH2 0x1648 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP3 POP PUSH2 0x1328 SWAP1 DUP7 PUSH4 0xFFFFFFFF PUSH2 0x1648 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP9 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x135D SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x165A AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE DUP4 GT ISZERO PUSH2 0x13F3 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x13A9 SWAP1 DUP5 PUSH4 0xFFFFFFFF PUSH2 0x165A AND JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 SLOAD DUP2 AND SWAP2 SWAP1 DUP10 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x166A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP7 SWAP1 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST DUP6 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP8 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x166A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 PUSH1 0x44 CALLDATASIZE LT ISZERO PUSH2 0x145F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x147A PUSH2 0x2710 PUSH2 0x128C PUSH1 0x3 SLOAD DUP8 PUSH2 0x15D0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP PUSH1 0x4 SLOAD DUP4 GT ISZERO PUSH2 0x148C JUMPI PUSH1 0x4 SLOAD SWAP3 POP JUMPDEST PUSH2 0x149C DUP5 DUP5 PUSH4 0xFFFFFFFF PUSH2 0x1648 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB CALLER AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP3 POP PUSH2 0x14C8 SWAP1 DUP6 PUSH4 0xFFFFFFFF PUSH2 0x1648 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB CALLER DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP8 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x14FD SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x165A AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE DUP4 GT ISZERO PUSH2 0x1594 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1549 SWAP1 DUP5 PUSH4 0xFFFFFFFF PUSH2 0x165A AND JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 SLOAD DUP2 AND SWAP2 CALLER SWAP1 SWAP2 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x166A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP7 SWAP1 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST DUP5 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x166A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 ISZERO ISZERO PUSH2 0x15E3 JUMPI PUSH1 0x0 SWAP2 POP PUSH2 0x15FF JUMP JUMPDEST POP DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 ISZERO ISZERO PUSH2 0x15F3 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x15FB JUMPI INVALID JUMPDEST DUP1 SWAP2 POP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 DUP2 ISZERO ISZERO PUSH2 0x163F JUMPI INVALID JUMPDEST DIV SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x1654 JUMPI INVALID JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x15FB JUMPI INVALID STOP 0xdd CALLCODE MSTORE 0xad 0x1b 0xe2 0xc8 SWAP12 PUSH10 0xC2B068FC378DAA952BA7 CALL PUSH4 0xC4A11628 0xf5 GAS 0x4d 0xf5 0x23 0xb3 0xef LOG1 PUSH6 0x627A7A723058 KECCAK256 0xbd PUSH15 0x432AA3D0131141F94DD374296A539F 0xc0 SUB SWAP3 0xb8 PUSH30 0x5EBF6EFF25667FBB9E510029000000000000000000000000000000000000 ",
							"sourceMap": "9310:5110:0:-;;;6926:5;6905:26;;-1:-1:-1;;;;;;6905:26:0;;;2827:31;;;;2864:26;;9805:343;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1378:5;:18;;-1:-1:-1;;;;;;1378:18:0;1386:10;-1:-1:-1;;;;;1378:18:0;;;;-1:-1:-1;9910:29:0;;;9805:343;-1:-1:-1;9949:4:0;;-1:-1:-1;9956:5:0;;9949:12;;;;;;;;:::i;:::-;-1:-1:-1;9971:6:0;9980:7;;9971:16;;;;;;;;:::i;:::-;-1:-1:-1;9997:8:0;:20;;;10027:15;10036:5;;-1:-1:-1;;;;;10036:5:0;;;10027:15;;:8;:15;;;;;;:32;;;10069:10;:18;;-1:-1:-1;;;;;;10069:18:0;;;10118:5;;;;;;10027:15;10097:43;;10045:14;;10097:43;;;;;;;;;;;;;9805:343;;;;9310:5110;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9310:5110:0;;;-1:-1:-1;9310:5110:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6060604052361561017a5763ffffffff60e060020a60003504166306fdde03811461017f5780630753c30c14610209578063095ea7b31461022a5780630e136b191461024c5780630ecb93c01461027357806318160ddd1461029257806323b872dd146102b757806326976e3f146102df57806327e235e31461030e578063313ce5671461032d57806335390714146103405780633eaaf86b146103535780633f4ba83a1461036657806359bf1abe146103795780635c658165146103985780635c975abb146103bd57806370a08231146103d05780638456cb59146103ef578063893d20e8146104025780638da5cb5b1461041557806395d89b4114610428578063a9059cbb1461043b578063c0324c771461045d578063cc872b6614610476578063db006a751461048c578063dd62ed3e146104a2578063dd644f72146104c7578063e47d6060146104da578063e4997dc5146104f9578063e5b5019a14610518578063f2fde38b1461052b578063f3bdc2281461054a575b600080fd5b341561018a57600080fd5b610192610569565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156101ce5780820151838201526020016101b6565b50505050905090810190601f1680156101fb5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561021457600080fd5b610228600160a060020a0360043516610607565b005b341561023557600080fd5b610228600160a060020a03600435166024356106aa565b341561025757600080fd5b61025f610757565b604051901515815260200160405180910390f35b341561027e57600080fd5b610228600160a060020a0360043516610767565b341561029d57600080fd5b6102a56107e7565b60405190815260200160405180910390f35b34156102c257600080fd5b610228600160a060020a036004358116906024351660443561086e565b34156102ea57600080fd5b6102f2610932565b604051600160a060020a03909116815260200160405180910390f35b341561031957600080fd5b6102a5600160a060020a0360043516610941565b341561033857600080fd5b6102a5610953565b341561034b57600080fd5b6102a5610959565b341561035e57600080fd5b6102a561095f565b341561037157600080fd5b610228610965565b341561038457600080fd5b61025f600160a060020a03600435166109e4565b34156103a357600080fd5b6102a5600160a060020a0360043581169060243516610a06565b34156103c857600080fd5b61025f610a23565b34156103db57600080fd5b6102a5600160a060020a0360043516610a33565b34156103fa57600080fd5b610228610ad3565b341561040d57600080fd5b6102f2610b57565b341561042057600080fd5b6102f2610b66565b341561043357600080fd5b610192610b75565b341561044657600080fd5b610228600160a060020a0360043516602435610be0565b341561046857600080fd5b610228600435602435610cb9565b341561048157600080fd5b610228600435610d52565b341561049757600080fd5b610228600435610e2a565b34156104ad57600080fd5b6102a5600160a060020a0360043581169060243516610f03565b34156104d257600080fd5b6102a5610fae565b34156104e557600080fd5b61025f600160a060020a0360043516610fb4565b341561050457600080fd5b610228600160a060020a0360043516610fc9565b341561052357600080fd5b6102a5611046565b341561053657600080fd5b610228600160a060020a036004351661104c565b341561055557600080fd5b610228600160a060020a03600435166110a2565b60078054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105ff5780601f106105d4576101008083540402835291602001916105ff565b820191906000526020600020905b8154815290600101906020018083116105e257829003601f168201915b505050505081565b60005433600160a060020a0390811691161461062257600080fd5b600a805460a060020a74ff0000000000000000000000000000000000000000199091161773ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161790557fcc358699805e9a8b7f77b522628c7cb9abd07d9efb86b6fb616af1609036a99e81604051600160a060020a03909116815260200160405180910390a150565b604060443610156106ba57600080fd5b600a5460a060020a900460ff161561074857600a54600160a060020a031663aee92d3333858560405160e060020a63ffffffff8616028152600160a060020a0393841660048201529190921660248201526044810191909152606401600060405180830381600087803b151561072f57600080fd5b6102c65a03f1151561074057600080fd5b505050610752565b6107528383611180565b505050565b600a5460a060020a900460ff1681565b60005433600160a060020a0390811691161461078257600080fd5b600160a060020a03811660009081526006602052604090819020805460ff191660011790557f42e160154868087d6bfdc0ca23d96a1c1cfa32f1b72ba9ba27b69b98a0d819dc90829051600160a060020a03909116815260200160405180910390a150565b600a5460009060a060020a900460ff161561086657600a54600160a060020a03166318160ddd6000604051602001526040518163ffffffff1660e060020a028152600401602060405180830381600087803b151561084457600080fd5b6102c65a03f1151561085557600080fd5b50505060405180519050905061086b565b506001545b90565b60005460a060020a900460ff161561088557600080fd5b600160a060020a03831660009081526006602052604090205460ff16156108ab57600080fd5b600a5460a060020a900460ff161561092757600a54600160a060020a0316638b477adb3385858560405160e060020a63ffffffff8716028152600160a060020a0394851660048201529284166024840152921660448201526064810191909152608401600060405180830381600087803b151561072f57600080fd5b610752838383611232565b600a54600160a060020a031681565b60026020526000908152604090205481565b60095481565b60045481565b60015481565b60005433600160a060020a0390811691161461098057600080fd5b60005460a060020a900460ff16151561099857600080fd5b6000805474ff0000000000000000000000000000000000000000191690557f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3360405160405180910390a1565b600160a060020a03811660009081526006602052604090205460ff165b919050565b600560209081526000928352604080842090915290825290205481565b60005460a060020a900460ff1681565b600a5460009060a060020a900460ff1615610ac357600a54600160a060020a03166370a082318360006040516020015260405160e060020a63ffffffff8416028152600160a060020a039091166004820152602401602060405180830381600087803b1515610aa157600080fd5b6102c65a03f11515610ab257600080fd5b505050604051805190509050610a01565b610acc82611431565b9050610a01565b60005433600160a060020a03908116911614610aee57600080fd5b60005460a060020a900460ff1615610b0557600080fd5b6000805474ff0000000000000000000000000000000000000000191660a060020a1790557f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62560405160405180910390a1565b600054600160a060020a031690565b600054600160a060020a031681565b60088054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105ff5780601f106105d4576101008083540402835291602001916105ff565b60005460a060020a900460ff1615610bf757600080fd5b600160a060020a03331660009081526006602052604090205460ff1615610c1d57600080fd5b600a5460a060020a900460ff1615610cab57600a54600160a060020a0316636e18980a33848460405160e060020a63ffffffff8616028152600160a060020a0393841660048201529190921660248201526044810191909152606401600060405180830381600087803b1515610c9257600080fd5b6102c65a03f11515610ca357600080fd5b505050610cb5565b610cb5828261144c565b5050565b60005433600160a060020a03908116911614610cd457600080fd5b6101f4821115610ce357600080fd5b6032811115610cf157600080fd5b6003829055600954610d0d908290600a0a63ffffffff6115d016565b60048190556003547fb044a1e409eac5c48e5af22d4af52670dd1a99059537a78b31b48c6500a6354e9160405191825260208201526040908101905180910390a15050565b60005433600160a060020a03908116911614610d6d57600080fd5b60015481810111610d7d57600080fd5b60008054600160a060020a031681526002602052604090205481810111610da357600080fd5b60008054600160a060020a0390811682526002602052604080832080548501905560018054850190558254909116919060008051602061166a8339815191529084905190815260200160405180910390a37fcb8241adb0c3fdb35b70c24ce35c5eb0c17af7431c99f827d44a445ca624176a8160405190815260200160405180910390a150565b60005433600160a060020a03908116911614610e4557600080fd5b60015481901015610e5557600080fd5b60008054600160a060020a031681526002602052604090205481901015610e7b57600080fd5b60018054829003905560008054600160a060020a039081168252600260205260408083208054859003905582549091169060008051602061166a8339815191529084905190815260200160405180910390a37f702d5967f45f6513a38ffc42d6ba9bf230bd40e8f53b16363c7eb4fd2deb9a448160405190815260200160405180910390a150565b600a5460009060a060020a900460ff1615610f9b57600a54600160a060020a031663dd62ed3e848460006040516020015260405160e060020a63ffffffff8516028152600160a060020a03928316600482015291166024820152604401602060405180830381600087803b1515610f7957600080fd5b6102c65a03f11515610f8a57600080fd5b505050604051805190509050610fa8565b610fa58383611606565b90505b92915050565b60035481565b60066020526000908152604090205460ff1681565b60005433600160a060020a03908116911614610fe457600080fd5b600160a060020a03811660009081526006602052604090819020805460ff191690557fd7e9ec6e6ecd65492dce6bf513cd6867560d49544421d0783ddf06e76c24470c90829051600160a060020a03909116815260200160405180910390a150565b60001981565b60005433600160a060020a0390811691161461106757600080fd5b600160a060020a0381161561109f576000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161790555b50565b6000805433600160a060020a039081169116146110be57600080fd5b600160a060020a03821660009081526006602052604090205460ff1615156110e557600080fd5b6110ee82610a33565b600160a060020a0383166000818152600260205260408082208290556001805485900390559293509160008051602061166a8339815191529084905190815260200160405180910390a37f61e6e66b0d6339b2980aecc6ccc0039736791f0ccde9ed512e789a7fbdd698c68282604051600160a060020a03909216825260208201526040908101905180910390a15050565b6040604436101561119057600080fd5b81158015906111c35750600160a060020a0333811660009081526005602090815260408083209387168352929052205415155b156111cd57600080fd5b600160a060020a03338116600081815260056020908152604080832094881680845294909152908190208590557f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259085905190815260200160405180910390a3505050565b600080806060606436101561124657600080fd5b600160a060020a0380881660009081526005602090815260408083203390941683529290522054600354909450611298906127109061128c90889063ffffffff6115d016565b9063ffffffff61163116565b92506004548311156112aa5760045492505b6000198410156112ec576112c4848663ffffffff61164816565b600160a060020a03808916600090815260056020908152604080832033909416835292905220555b6112fc858463ffffffff61164816565b600160a060020a038816600090815260026020526040902054909250611328908663ffffffff61164816565b600160a060020a03808916600090815260026020526040808220939093559088168152205461135d908363ffffffff61165a16565b600160a060020a0387166000908152600260205260408120919091558311156113f35760008054600160a060020a03168152600260205260409020546113a9908463ffffffff61165a16565b60008054600160a060020a039081168252600260205260408083209390935590548116919089169060008051602061166a8339815191529086905190815260200160405180910390a35b85600160a060020a031687600160a060020a031660008051602061166a8339815191528460405190815260200160405180910390a350505050505050565b600160a060020a031660009081526002602052604090205490565b6000806040604436101561145f57600080fd5b61147a61271061128c600354876115d090919063ffffffff16565b925060045483111561148c5760045492505b61149c848463ffffffff61164816565b600160a060020a0333166000908152600260205260409020549092506114c8908563ffffffff61164816565b600160a060020a0333811660009081526002602052604080822093909355908716815220546114fd908363ffffffff61165a16565b600160a060020a0386166000908152600260205260408120919091558311156115945760008054600160a060020a0316815260026020526040902054611549908463ffffffff61165a16565b60008054600160a060020a03908116825260026020526040808320939093559054811691339091169060008051602061166a8339815191529086905190815260200160405180910390a35b84600160a060020a031633600160a060020a031660008051602061166a8339815191528460405190815260200160405180910390a35050505050565b6000808315156115e357600091506115ff565b508282028284828115156115f357fe5b04146115fb57fe5b8091505b5092915050565b600160a060020a03918216600090815260056020908152604080832093909416825291909152205490565b600080828481151561163f57fe5b04949350505050565b60008282111561165457fe5b50900390565b6000828201838110156115fb57fe00ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa165627a7a72305820bd6e432aa3d0131141f94dd374296a539fc00392b87d5ebf6eff25667fbb9e510029",
							"opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE CALLDATASIZE ISZERO PUSH2 0x17A JUMPI PUSH4 0xFFFFFFFF PUSH1 0xE0 PUSH1 0x2 EXP PUSH1 0x0 CALLDATALOAD DIV AND PUSH4 0x6FDDE03 DUP2 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x753C30C EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0xE136B19 EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0xECB93C0 EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2B7 JUMPI DUP1 PUSH4 0x26976E3F EQ PUSH2 0x2DF JUMPI DUP1 PUSH4 0x27E235E3 EQ PUSH2 0x30E JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x32D JUMPI DUP1 PUSH4 0x35390714 EQ PUSH2 0x340 JUMPI DUP1 PUSH4 0x3EAAF86B EQ PUSH2 0x353 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x366 JUMPI DUP1 PUSH4 0x59BF1ABE EQ PUSH2 0x379 JUMPI DUP1 PUSH4 0x5C658165 EQ PUSH2 0x398 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x3BD JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3D0 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x3EF JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x402 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x415 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x428 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x43B JUMPI DUP1 PUSH4 0xC0324C77 EQ PUSH2 0x45D JUMPI DUP1 PUSH4 0xCC872B66 EQ PUSH2 0x476 JUMPI DUP1 PUSH4 0xDB006A75 EQ PUSH2 0x48C JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4A2 JUMPI DUP1 PUSH4 0xDD644F72 EQ PUSH2 0x4C7 JUMPI DUP1 PUSH4 0xE47D6060 EQ PUSH2 0x4DA JUMPI DUP1 PUSH4 0xE4997DC5 EQ PUSH2 0x4F9 JUMPI DUP1 PUSH4 0xE5B5019A EQ PUSH2 0x518 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x52B JUMPI DUP1 PUSH4 0xF3BDC228 EQ PUSH2 0x54A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0x18A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x192 PUSH2 0x569 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 SWAP1 DUP2 ADD DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1CE JUMPI DUP1 DUP3 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1B6 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1FB JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x214 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x228 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x607 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x235 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x228 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0x6AA JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x257 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x25F PUSH2 0x757 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x27E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x228 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x767 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x29D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2A5 PUSH2 0x7E7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x2C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x228 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD DUP2 AND SWAP1 PUSH1 0x24 CALLDATALOAD AND PUSH1 0x44 CALLDATALOAD PUSH2 0x86E JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x2EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2F2 PUSH2 0x932 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x319 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2A5 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x941 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x338 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2A5 PUSH2 0x953 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x34B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2A5 PUSH2 0x959 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x35E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2A5 PUSH2 0x95F JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x371 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x228 PUSH2 0x965 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x384 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x25F PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x9E4 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x3A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2A5 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD DUP2 AND SWAP1 PUSH1 0x24 CALLDATALOAD AND PUSH2 0xA06 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x3C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x25F PUSH2 0xA23 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x3DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2A5 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0xA33 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x3FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x228 PUSH2 0xAD3 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x40D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2F2 PUSH2 0xB57 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x420 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2F2 PUSH2 0xB66 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x433 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x192 PUSH2 0xB75 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x446 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x228 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0xBE0 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x468 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x228 PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH2 0xCB9 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x481 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x228 PUSH1 0x4 CALLDATALOAD PUSH2 0xD52 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x497 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x228 PUSH1 0x4 CALLDATALOAD PUSH2 0xE2A JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x4AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2A5 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD DUP2 AND SWAP1 PUSH1 0x24 CALLDATALOAD AND PUSH2 0xF03 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x4D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2A5 PUSH2 0xFAE JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x4E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x25F PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0xFB4 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x504 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x228 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0xFC9 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x523 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2A5 PUSH2 0x1046 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x536 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x228 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x104C JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x555 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x228 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x10A2 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x5FF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5D4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5FF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5E2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD CALLER PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x622 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0xA0 PUSH1 0x2 EXP PUSH21 0xFF0000000000000000000000000000000000000000 NOT SWAP1 SWAP2 AND OR PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND OR SWAP1 SSTORE PUSH32 0xCC358699805E9A8B7F77B522628C7CB9ABD07D9EFB86B6FB616AF1609036A99E DUP2 PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x40 PUSH1 0x44 CALLDATASIZE LT ISZERO PUSH2 0x6BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA SLOAD PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x748 JUMPI PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH4 0xAEE92D33 CALLER DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0xFFFFFFFF DUP7 AND MUL DUP2 MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x72F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0x740 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH2 0x752 JUMP JUMPDEST PUSH2 0x752 DUP4 DUP4 PUSH2 0x1180 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD CALLER PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x782 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x42E160154868087D6BFDC0CA23D96A1C1CFA32F1B72BA9BA27B69B98A0D819DC SWAP1 DUP3 SWAP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x0 SWAP1 PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x866 JUMPI PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH4 0x18160DDD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD MSTORE PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 PUSH1 0x2 EXP MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x844 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0x855 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD DUP1 MLOAD SWAP1 POP SWAP1 POP PUSH2 0x86B JUMP JUMPDEST POP PUSH1 0x1 SLOAD JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x885 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x8AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA SLOAD PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x927 JUMPI PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH4 0x8B477ADB CALLER DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0xFFFFFFFF DUP8 AND MUL DUP2 MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP5 DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 DUP5 AND PUSH1 0x24 DUP5 ADD MSTORE SWAP3 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x84 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x72F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x752 DUP4 DUP4 DUP4 PUSH2 0x1232 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD CALLER PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x980 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x998 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH21 0xFF0000000000000000000000000000000000000000 NOT AND SWAP1 SSTORE PUSH32 0x7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x0 SWAP1 PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xAC3 JUMPI PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH4 0x70A08231 DUP4 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD MSTORE PUSH1 0x40 MLOAD PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0xFFFFFFFF DUP5 AND MUL DUP2 MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0xAA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0xAB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD DUP1 MLOAD SWAP1 POP SWAP1 POP PUSH2 0xA01 JUMP JUMPDEST PUSH2 0xACC DUP3 PUSH2 0x1431 JUMP JUMPDEST SWAP1 POP PUSH2 0xA01 JUMP JUMPDEST PUSH1 0x0 SLOAD CALLER PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xAEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xB05 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH21 0xFF0000000000000000000000000000000000000000 NOT AND PUSH1 0xA0 PUSH1 0x2 EXP OR SWAP1 SSTORE PUSH32 0x6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x5FF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5D4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5FF JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xBF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB CALLER AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xC1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA SLOAD PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xCAB JUMPI PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH4 0x6E18980A CALLER DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0xFFFFFFFF DUP7 AND MUL DUP2 MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0xC92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0xCA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH2 0xCB5 JUMP JUMPDEST PUSH2 0xCB5 DUP3 DUP3 PUSH2 0x144C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD CALLER PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xCD4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F4 DUP3 GT ISZERO PUSH2 0xCE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x32 DUP2 GT ISZERO PUSH2 0xCF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 DUP3 SWAP1 SSTORE PUSH1 0x9 SLOAD PUSH2 0xD0D SWAP1 DUP3 SWAP1 PUSH1 0xA EXP PUSH4 0xFFFFFFFF PUSH2 0x15D0 AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE PUSH1 0x3 SLOAD PUSH32 0xB044A1E409EAC5C48E5AF22D4AF52670DD1A99059537A78B31B48C6500A6354E SWAP2 PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 SWAP1 DUP2 ADD SWAP1 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD CALLER PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xD6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD DUP2 DUP2 ADD GT PUSH2 0xD7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 ADD GT PUSH2 0xDA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP6 ADD SWAP1 SSTORE PUSH1 0x1 DUP1 SLOAD DUP6 ADD SWAP1 SSTORE DUP3 SLOAD SWAP1 SWAP2 AND SWAP2 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x166A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP5 SWAP1 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH32 0xCB8241ADB0C3FDB35B70C24CE35C5EB0C17AF7431C99F827D44A445CA624176A DUP2 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD CALLER PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xE45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD DUP2 SWAP1 LT ISZERO PUSH2 0xE55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 SWAP1 LT ISZERO PUSH2 0xE7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP6 SWAP1 SUB SWAP1 SSTORE DUP3 SLOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x166A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP5 SWAP1 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH32 0x702D5967F45F6513A38FFC42D6BA9BF230BD40E8F53B16363C7EB4FD2DEB9A44 DUP2 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x0 SWAP1 PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xF9B JUMPI PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH4 0xDD62ED3E DUP5 DUP5 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD MSTORE PUSH1 0x40 MLOAD PUSH1 0xE0 PUSH1 0x2 EXP PUSH4 0xFFFFFFFF DUP6 AND MUL DUP2 MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0xF79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0xF8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD DUP1 MLOAD SWAP1 POP SWAP1 POP PUSH2 0xFA8 JUMP JUMPDEST PUSH2 0xFA5 DUP4 DUP4 PUSH2 0x1606 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD CALLER PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xFE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0xD7E9EC6E6ECD65492DCE6BF513CD6867560D49544421D0783DDF06E76C24470C SWAP1 DUP3 SWAP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 NOT DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD CALLER PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x1067 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND ISZERO PUSH2 0x109F JUMPI PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND OR SWAP1 SSTORE JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x10BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x10E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10EE DUP3 PUSH2 0xA33 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0x1 DUP1 SLOAD DUP6 SWAP1 SUB SWAP1 SSTORE SWAP3 SWAP4 POP SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x166A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP5 SWAP1 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH32 0x61E6E66B0D6339B2980AECC6CCC0039736791F0CCDE9ED512E789A7FBDD698C6 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 SWAP1 DUP2 ADD SWAP1 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x40 PUSH1 0x44 CALLDATASIZE LT ISZERO PUSH2 0x1190 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x11C3 JUMPI POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB CALLER DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x11CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB CALLER DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP9 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 DUP6 SWAP1 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH1 0x60 PUSH1 0x64 CALLDATASIZE LT ISZERO PUSH2 0x1246 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x3 SLOAD SWAP1 SWAP5 POP PUSH2 0x1298 SWAP1 PUSH2 0x2710 SWAP1 PUSH2 0x128C SWAP1 DUP9 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x15D0 AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1631 AND JUMP JUMPDEST SWAP3 POP PUSH1 0x4 SLOAD DUP4 GT ISZERO PUSH2 0x12AA JUMPI PUSH1 0x4 SLOAD SWAP3 POP JUMPDEST PUSH1 0x0 NOT DUP5 LT ISZERO PUSH2 0x12EC JUMPI PUSH2 0x12C4 DUP5 DUP7 PUSH4 0xFFFFFFFF PUSH2 0x1648 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SSTORE JUMPDEST PUSH2 0x12FC DUP6 DUP5 PUSH4 0xFFFFFFFF PUSH2 0x1648 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP3 POP PUSH2 0x1328 SWAP1 DUP7 PUSH4 0xFFFFFFFF PUSH2 0x1648 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP9 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x135D SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x165A AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE DUP4 GT ISZERO PUSH2 0x13F3 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x13A9 SWAP1 DUP5 PUSH4 0xFFFFFFFF PUSH2 0x165A AND JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 SLOAD DUP2 AND SWAP2 SWAP1 DUP10 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x166A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP7 SWAP1 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST DUP6 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP8 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x166A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 PUSH1 0x44 CALLDATASIZE LT ISZERO PUSH2 0x145F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x147A PUSH2 0x2710 PUSH2 0x128C PUSH1 0x3 SLOAD DUP8 PUSH2 0x15D0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP PUSH1 0x4 SLOAD DUP4 GT ISZERO PUSH2 0x148C JUMPI PUSH1 0x4 SLOAD SWAP3 POP JUMPDEST PUSH2 0x149C DUP5 DUP5 PUSH4 0xFFFFFFFF PUSH2 0x1648 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB CALLER AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP3 POP PUSH2 0x14C8 SWAP1 DUP6 PUSH4 0xFFFFFFFF PUSH2 0x1648 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB CALLER DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP8 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x14FD SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x165A AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE DUP4 GT ISZERO PUSH2 0x1594 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1549 SWAP1 DUP5 PUSH4 0xFFFFFFFF PUSH2 0x165A AND JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 SLOAD DUP2 AND SWAP2 CALLER SWAP1 SWAP2 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x166A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP7 SWAP1 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST DUP5 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x166A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 ISZERO ISZERO PUSH2 0x15E3 JUMPI PUSH1 0x0 SWAP2 POP PUSH2 0x15FF JUMP JUMPDEST POP DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 ISZERO ISZERO PUSH2 0x15F3 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x15FB JUMPI INVALID JUMPDEST DUP1 SWAP2 POP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 DUP2 ISZERO ISZERO PUSH2 0x163F JUMPI INVALID JUMPDEST DIV SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x1654 JUMPI INVALID JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x15FB JUMPI INVALID STOP 0xdd CALLCODE MSTORE 0xad 0x1b 0xe2 0xc8 SWAP12 PUSH10 0xC2B068FC378DAA952BA7 CALL PUSH4 0xC4A11628 0xf5 GAS 0x4d 0xf5 0x23 0xb3 0xef LOG1 PUSH6 0x627A7A723058 KECCAK256 0xbd PUSH15 0x432AA3D0131141F94DD374296A539F 0xc0 SUB SWAP3 0xb8 PUSH30 0x5EBF6EFF25667FBB9E510029000000000000000000000000000000000000 ",
							"sourceMap": "9310:5110:0:-;;;;;;;;-1:-1:-1;;;9310:5110:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9376:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;71:3;;;64:6;52:2;45:3;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12116:177:0;;;;;;;;;;-1:-1:-1;;;;;12116:177:0;;;;;;;11388:296;;;;;;;;;;-1:-1:-1;;;;;11388:296:0;;;;;;;9488:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8026:142;;;;;;;;;;-1:-1:-1;;;;;8026:142:0;;;;;12356:212;;;;;;;;;;;;;;;;;;;;;;;;;;;10631:355;;;;;;;;;;-1:-1:-1;;;;;10631:355:0;;;;;;;;;;;;9452:30;;;;;;;;;;;;;;;-1:-1:-1;;;;;9452:30:0;;;;;;;;;;;;;;2702:40;;;;;;;;;;-1:-1:-1;;;;;2702:40:0;;;;;9426:20;;;;;;;;;;;;2864:26;;;;;;;;;;;;1917:24;;;;;;;;;;;;7491:87;;;;;;;;;;;;7750:122;;;;;;;;;;-1:-1:-1;;;;;7750:122:0;;;;;4173:61;;;;;;;;;;-1:-1:-1;;;;;4173:61:0;;;;;;;;;;6905:26;;;;;;;;;;;;11068:238;;;;;;;;;;-1:-1:-1;;;;;11068:238:0;;;;;7324:85;;;;;;;;;;;;7878;;;;;;;;;;;;1188:20;;;;;;;;;;;;9400;;;;;;;;;;;;10230:319;;;;;;;;;;-1:-1:-1;;;;;10230:319:0;;;;;;;13720:378;;;;;;;;;;;;;;;;12726:305;;;;;;;;;;;;;;13439:275;;;;;;;;;;;;;;11766:287;;;;;;;;;;-1:-1:-1;;;;;11766:287:0;;;;;;;;;;2827:31;;;;;;;;;;;;7969:46;;;;;;;;;;-1:-1:-1;;;;;7969:46:0;;;;;8174:157;;;;;;;;;;-1:-1:-1;;;;;8174:157:0;;;;;4241:42;;;;;;;;;;;;1738:147;;;;;;;;;;-1:-1:-1;;;;;1738:147:0;;;;;8337:379;;;;;;;;;;-1:-1:-1;;;;;8337:379:0;;;;;9376:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;12116:177::-;1546:5;;1532:10;-1:-1:-1;;;;;1532:19:0;;;1546:5;;1532:19;1524:28;;;;;;12188:10;:17;;-1:-1:-1;;;;;12188:17:0;;;;-1:-1:-1;;12215:34:0;-1:-1:-1;;;;;12215:34:0;;;;;12259:27;12215:34;12259:27;;-1:-1:-1;;;;;12259:27:0;;;;;;;;;;;;;;12116:177;:::o;11388:296::-;11459:6;3037:8;3019;:26;3017:29;3009:38;;;;;;11481:10;;-1:-1:-1;;;11481:10:0;;;;11477:201;;;11536:15;;-1:-1:-1;;;;;11536:15:0;11514:54;11569:10;11581:8;11591:6;11514:84;;-1:-1:-1;;;11514:84:0;;;;;;-1:-1:-1;;;;;11514:84:0;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11514:84:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11507:91;;11477:201;11636:31;11650:8;11660:6;11636:13;:31::i;:::-;11388:296;;;:::o;9488:22::-;;;-1:-1:-1;;;9488:22:0;;;;;:::o;8026:142::-;1546:5;;1532:10;-1:-1:-1;;;;;1532:19:0;;;1546:5;;1532:19;1524:28;;;;;;-1:-1:-1;;;;;8095:24:0;;;;;;:13;:24;;;;;;;:31;;-1:-1:-1;;8095:31:0;8122:4;8095:31;;;8136:25;;8109:9;;8136:25;-1:-1:-1;;;;;8136:25:0;;;;;;;;;;;;;;8026:142;:::o;12356:212::-;12424:10;;12404:4;;-1:-1:-1;;;12424:10:0;;;;12420:142;;;12471:15;;-1:-1:-1;;;;;12471:15:0;12457:42;12471:15;12457:44;;;;;;;;;;-1:-1:-1;;;12457:44:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12450:51;;;;12420:142;-1:-1:-1;12539:12:0;;12420:142;12356:212;:::o;10631:355::-;7074:6;;-1:-1:-1;;;7074:6:0;;;;7073:7;7065:16;;;;;;-1:-1:-1;;;;;10734:20:0;;;;;;:13;:20;;;;;;;;10733:21;10725:30;;;;;;10769:10;;-1:-1:-1;;;10769:10:0;;;;10765:215;;;10824:15;;-1:-1:-1;;;;;10824:15:0;10802:59;10862:10;10874:5;10881:3;10886:6;10802:91;;-1:-1:-1;;;10802:91:0;;;;;;-1:-1:-1;;;;;10802:91:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10802:91:0;;;;;;;;;;;;;;;;;10765:215;10931:38;10950:5;10957:3;10962:6;10931:18;:38::i;9452:30::-;;;-1:-1:-1;;;;;9452:30:0;;:::o;2702:40::-;;;;;;;;;;;;;:::o;9426:20::-;;;;:::o;2864:26::-;;;;:::o;1917:24::-;;;;:::o;7491:87::-;1546:5;;1532:10;-1:-1:-1;;;;;1532:19:0;;;1546:5;;1532:19;1524:28;;;;;;7226:6;;-1:-1:-1;;;7226:6:0;;;;7218:15;;;;;;;;7553:5;7544:14;;-1:-1:-1;;7544:14:0;;;7564:9;;;;;;;;;;7491:87::o;7750:122::-;-1:-1:-1;;;;;7844:21:0;;7821:4;7844:21;;;:13;:21;;;;;;;;7750:122;;;;:::o;4173:61::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;6905:26::-;;;-1:-1:-1;;;6905:26:0;;;;;:::o;11068:238::-;11145:10;;11125:4;;-1:-1:-1;;;11145:10:0;;;;11141:159;;;11200:15;;-1:-1:-1;;;;;11200:15:0;11178:48;11227:3;11200:15;11178:53;;;;;;;-1:-1:-1;;;11178:53:0;;;;;;-1:-1:-1;;;;;11178:53:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11171:60;;;;11141:159;11269:20;11285:3;11269:15;:20::i;:::-;11262:27;;;;7324:85;1546:5;;1532:10;-1:-1:-1;;;;;1532:19:0;;;1546:5;;1532:19;1524:28;;;;;;7074:6;;-1:-1:-1;;;7074:6:0;;;;7073:7;7065:16;;;;;;7378:6;:13;;-1:-1:-1;;7378:13:0;-1:-1:-1;;;7378:13:0;;;7397:7;;;;;;;;;;7324:85::o;7878:::-;7925:7;7951:5;-1:-1:-1;;;;;7951:5:0;7878:85;:::o;1188:20::-;;;-1:-1:-1;;;;;1188:20:0;;:::o;9400:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10230:319;7074:6;;-1:-1:-1;;;7074:6:0;;;;7073:7;7065:16;;;;;;-1:-1:-1;;;;;10328:10:0;10314:25;;;;;:13;:25;;;;;;;;10313:26;10305:35;;;;;;10354:10;;-1:-1:-1;;;10354:10:0;;;;10350:193;;;10409:15;;-1:-1:-1;;;;;10409:15:0;10387:55;10443:10;10455:3;10460:6;10387:80;;-1:-1:-1;;;10387:80:0;;;;;;-1:-1:-1;;;;;10387:80:0;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10387:80:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10380:87;;10350:193;10505:27;10520:3;10525:6;10505:14;:27::i;:::-;10230:319;;:::o;13720:378::-;1546:5;;1532:10;-1:-1:-1;;;;;1532:19:0;;;1546:5;;1532:19;1524:28;;;;;;13916:3;13899:20;;;13891:29;;;;;;13949:2;13938:13;;;13930:22;;;;;;13963:15;:32;;;14036:8;;14018:27;;:9;;14032:2;:12;14018:27;:13;:27;:::i;:::-;14005:10;:40;;;14063:15;;14056:35;;;;;;;;;;;;;;;;;;;;;;13720:378;;:::o;12726:305::-;1546:5;;1532:10;-1:-1:-1;;;;;1532:19:0;;;1546:5;;1532:19;1524:28;;;;;;12813:12;;12789:21;;;:36;12781:45;;;;;;12871:15;12880:5;;-1:-1:-1;;;;;12880:5:0;12871:15;;:8;:15;;;;;;12844:24;;;:42;12836:51;;;;;;12898:15;12907:5;;-1:-1:-1;;;;;12907:5:0;;;12898:15;;:8;:15;;;;;;:25;;;;;;12907:5;12933:22;;;;;;12987:5;;;;;;12898:15;-1:-1:-1;;;;;;;;;;;12966:35:0;12917:6;;12966:35;;;;;;;;;;;;;13011:13;13017:6;13011:13;;;;;;;;;;;;;;12726:305;:::o;13439:275::-;1546:5;;1532:10;-1:-1:-1;;;;;1532:19:0;;;1546:5;;1532:19;1524:28;;;;;;13503:12;;:22;;;;13495:31;;;;;;13544:15;13553:5;;-1:-1:-1;;;;;13553:5:0;13544:15;;:8;:15;;;;;;:25;;;;13536:34;;;;;;13581:12;:22;;;;;;;:12;13622:5;;-1:-1:-1;;;;;13622:5:0;;;13613:15;;:8;:15;;;;;;:25;;;;;;;13658:5;;;;;;-1:-1:-1;;;;;;;;;;;13649:34:0;13597:6;;13649:34;;;;;;;;;;;;;13693:14;13700:6;13693:14;;;;;;;;;;;;;;13439:275;:::o;11766:287::-;11874:10;;11844:14;;-1:-1:-1;;;11874:10:0;;;;11870:177;;;11921:15;;-1:-1:-1;;;;;11921:15:0;11907:40;11948:6;11956:8;11921:15;11907:58;;;;;;;-1:-1:-1;;;11907:58:0;;;;;;-1:-1:-1;;;;;11907:58:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11900:65;;;;11870:177;12003:33;12019:6;12027:8;12003:15;:33::i;:::-;11996:40;;11870:177;11766:287;;;;:::o;2827:31::-;;;;:::o;7969:46::-;;;;;;;;;;;;;;;:::o;8174:157::-;1546:5;;1532:10;-1:-1:-1;;;;;1532:19:0;;;1546:5;;1532:19;1524:28;;;;;;-1:-1:-1;;;;;8249:27:0;;8279:5;8249:27;;;:13;:27;;;;;;;:35;;-1:-1:-1;;8249:35:0;;;8294:30;;8263:12;;8294:30;-1:-1:-1;;;;;8294:30:0;;;;;;;;;;;;;;8174:157;:::o;4241:42::-;-1:-1:-1;;4241:42:0;:::o;1738:147::-;1546:5;;1532:10;-1:-1:-1;;;;;1532:19:0;;;1546:5;;1532:19;1524:28;;;;;;-1:-1:-1;;;;;1814:22:0;;;1810:69;;1852:5;:16;;-1:-1:-1;;1852:16:0;-1:-1:-1;;;;;1852:16:0;;;;;1810:69;1738:147;:::o;8337:379::-;8468:15;1546:5;;1532:10;-1:-1:-1;;;;;1532:19:0;;;1546:5;;1532:19;1524:28;;;;;;-1:-1:-1;;;;;8426:31:0;;;;;;:13;:31;;;;;;;;8418:40;;;;;;;;8486:27;8496:16;8486:9;:27::i;:::-;-1:-1:-1;;;;;8523:26:0;;8552:1;8523:26;;;:8;:26;;;;;;:30;;;8563:12;:26;;;;;;;8468:45;;-1:-1:-1;8552:1:0;-1:-1:-1;;;;;;;;;;;8600:50:0;8468:45;;8600:50;;;;;;;;;;;;;8660:49;8680:16;8698:10;8660:49;;-1:-1:-1;;;;;8660:49:0;;;;;;;;;;;;;;;;;;;;8337:379;;:::o;5685:563::-;5756:6;3037:8;3019;:26;3017:29;3009:38;;;;;;6090:11;;;;;6089:53;;-1:-1:-1;;;;;;6115:10:0;6107:19;;;;;;:7;:19;;;;;;;;:29;;;;;;;;;;:34;;6089:53;6087:56;6079:65;;;;;;-1:-1:-1;;;;;6163:10:0;6155:19;;;;;;:7;:19;;;;;;;;:29;;;;;;;;;;;;;;:38;;;6203;;6187:6;;6203:38;;;;;;;;;;;;;5685:563;;;:::o;4565:880::-;4669:14;;;4651:6;3037:8;3019;:26;3017:29;3009:38;;;;;;-1:-1:-1;;;;;4686:14:0;;;;;;;:7;:14;;;;;;;;4701:10;4686:26;;;;;;;;;;4901:15;;4686:26;;-1:-1:-1;4889:40:0;;4923:5;;4890:27;;:6;;:27;:10;:27;:::i;:::-;4889:33;:40;:33;:40;:::i;:::-;4878:51;;4949:10;;4943:3;:16;4939:63;;;4981:10;;4975:16;;4939:63;-1:-1:-1;;5015:10:0;:21;5011:103;;;5081:22;:10;5096:6;5081:22;:14;:22;:::i;:::-;-1:-1:-1;;;;;5052:14:0;;;;;;;:7;:14;;;;;;;;5067:10;5052:26;;;;;;;;;:51;5011:103;5141:15;:6;5152:3;5141:15;:10;:15;:::i;:::-;-1:-1:-1;;;;;5184:15:0;;;;;;:8;:15;;;;;;5123:33;;-1:-1:-1;5184:27:0;;5204:6;5184:27;:19;:27;:::i;:::-;-1:-1:-1;;;;;5166:15:0;;;;;;;:8;:15;;;;;;:45;;;;5237:13;;;;;;;:29;;5255:10;5237:29;:17;:29;:::i;:::-;-1:-1:-1;;;;;5221:13:0;;;;;;:8;:13;;;;;:45;;;;5280:7;;5276:121;;;5321:15;5330:5;;-1:-1:-1;;;;;5330:5:0;5321:15;;:8;:15;;;;;;:24;;5341:3;5321:24;:19;:24;:::i;:::-;5303:15;5312:5;;-1:-1:-1;;;;;5312:5:0;;;5303:15;;:8;:15;;;;;;:42;;;;5375:5;;;;;5359:27;;;;-1:-1:-1;;;;;;;;;;;5359:27:0;5382:3;;5359:27;;;;;;;;;;;;;5276:121;5422:3;-1:-1:-1;;;;;5406:32:0;5415:5;-1:-1:-1;;;;;5406:32:0;-1:-1:-1;;;;;;;;;;;5427:10:0;5406:32;;;;;;;;;;;;;;4565:880;;;;;;;:::o;4002:114::-;-1:-1:-1;;;;;4093:16:0;4062:12;4093:16;;;:8;:16;;;;;;;4002:114::o;3231:560::-;3316:8;;3298:6;3037:8;3019;:26;3017:29;3009:38;;;;;;3327:40;3361:5;3328:27;3339:15;;3328:6;:10;;:27;;;;:::i;3327:40::-;3316:51;;3387:10;;3381:3;:16;3377:63;;;3419:10;;3413:16;;3377:63;3467:15;:6;3478:3;3467:15;:10;:15;:::i;:::-;-1:-1:-1;;;;;3524:10:0;3515:20;;;;;:8;:20;;;;;;3449:33;;-1:-1:-1;3515:32:0;;3540:6;3515:32;:24;:32;:::i;:::-;-1:-1:-1;;;;;3501:10:0;3492:20;;;;;;:8;:20;;;;;;:55;;;;3573:13;;;;;;;:29;;3591:10;3573:29;:17;:29;:::i;:::-;-1:-1:-1;;;;;3557:13:0;;;;;;:8;:13;;;;;:45;;;;3616:7;;3612:126;;;3657:15;3666:5;;-1:-1:-1;;;;;3666:5:0;3657:15;;:8;:15;;;;;;:24;;3677:3;3657:24;:19;:24;:::i;:::-;3639:15;3648:5;;-1:-1:-1;;;;;3648:5:0;;;3639:15;;:8;:15;;;;;;:42;;;;3716:5;;;;;3704:10;3695:32;;;;-1:-1:-1;;;;;;;;;;;3695:32:0;3723:3;;3695:32;;;;;;;;;;;;;3612:126;3768:3;-1:-1:-1;;;;;3747:37:0;3756:10;-1:-1:-1;;;;;3747:37:0;-1:-1:-1;;;;;;;;;;;3773:10:0;3747:37;;;;;;;;;;;;;;3231:560;;;;;:::o;206:201::-;264:7;;287:6;;283:45;;;316:1;309:8;;;;283:45;-1:-1:-1;349:5:0;;;353:1;349;:5;371;;;;;;;;:10;364:18;;;;399:1;392:8;;206:201;;;;;;:::o;6573:143::-;-1:-1:-1;;;;;6684:15:0;;;6651:14;6684:15;;;:7;:15;;;;;;;;:25;;;;;;;;;;;;;6573:143::o;413:283::-;471:7;568:9;584:1;580;:5;;;;;;;;;413:283;-1:-1:-1;;;;413:283:0:o;702:120::-;760:7;786:6;;;;779:14;;;;-1:-1:-1;810:5:0;;;702:120::o;828:143::-;886:7;917:5;;;939:6;;;;932:14;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1162600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"MAX_UINT()": "874",
								"_totalSupply()": "675",
								"addBlackList(address)": "22174",
								"allowance(address,address)": "infinite",
								"allowed(address,address)": "975",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "infinite",
								"balances(address)": "756",
								"basisPointsRate()": "1005",
								"decimals()": "631",
								"deprecate(address)": "22114",
								"deprecated()": "585",
								"destroyBlackFunds(address)": "infinite",
								"getBlackListStatus(address)": "962",
								"getOwner()": "982",
								"isBlackListed(address)": "1186",
								"issue(uint256)": "infinite",
								"maximumFee()": "653",
								"name()": "infinite",
								"owner()": "1004",
								"pause()": "22232",
								"paused()": "849",
								"redeem(uint256)": "infinite",
								"removeBlackList(address)": "22696",
								"setParams(uint256,uint256)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "infinite",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "21631",
								"unpause()": "22056",
								"upgradedAddress()": "740"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 9310,
									"end": 14420,
									"name": "PUSH",
									"value": "60"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "MSTORE"
								},
								{
									"begin": 6926,
									"end": 6931,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 6905,
									"end": 6931,
									"name": "DUP1"
								},
								{
									"begin": 6905,
									"end": 6931,
									"name": "SLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "EXP"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MUL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT"
								},
								{
									"begin": 6905,
									"end": 6931,
									"name": "AND"
								},
								{
									"begin": 6905,
									"end": 6931,
									"name": "DUP2"
								},
								{
									"begin": 6905,
									"end": 6931,
									"name": "SSTORE"
								},
								{
									"begin": 2827,
									"end": 2858,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 2827,
									"end": 2858,
									"name": "DUP2"
								},
								{
									"begin": 2827,
									"end": 2858,
									"name": "SWAP1"
								},
								{
									"begin": 2827,
									"end": 2858,
									"name": "SSTORE"
								},
								{
									"begin": 2864,
									"end": 2890,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 2864,
									"end": 2890,
									"name": "SSTORE"
								},
								{
									"begin": 9805,
									"end": 10148,
									"name": "CALLVALUE"
								},
								{
									"begin": 9805,
									"end": 10148,
									"name": "ISZERO"
								},
								{
									"begin": 9805,
									"end": 10148,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 9805,
									"end": 10148,
									"name": "JUMPI"
								},
								{
									"begin": 9805,
									"end": 10148,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 9805,
									"end": 10148,
									"name": "DUP1"
								},
								{
									"begin": 9805,
									"end": 10148,
									"name": "REVERT"
								},
								{
									"begin": 9805,
									"end": 10148,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 9805,
									"end": 10148,
									"name": "JUMPDEST"
								},
								{
									"begin": 9805,
									"end": 10148,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 9805,
									"end": 10148,
									"name": "MLOAD"
								},
								{
									"begin": 9805,
									"end": 10148,
									"name": "PUSHSIZE"
								},
								{
									"begin": 9805,
									"end": 10148,
									"name": "CODESIZE"
								},
								{
									"begin": 9805,
									"end": 10148,
									"name": "SUB"
								},
								{
									"begin": 9805,
									"end": 10148,
									"name": "DUP1"
								},
								{
									"begin": 9805,
									"end": 10148,
									"name": "PUSHSIZE"
								},
								{
									"begin": 9805,
									"end": 10148,
									"name": "DUP4"
								},
								{
									"begin": 9805,
									"end": 10148,
									"name": "CODECOPY"
								},
								{
									"begin": 9805,
									"end": 10148,
									"name": "DUP2"
								},
								{
									"begin": 9805,
									"end": 10148,
									"name": "ADD"
								},
								{
									"begin": 9805,
									"end": 10148,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 9805,
									"end": 10148,
									"name": "MSTORE"
								},
								{
									"begin": 9805,
									"end": 10148,
									"name": "DUP1"
								},
								{
									"begin": 9805,
									"end": 10148,
									"name": "DUP1"
								},
								{
									"begin": 9805,
									"end": 10148,
									"name": "MLOAD"
								},
								{
									"begin": 9805,
									"end": 10148,
									"name": "SWAP2"
								},
								{
									"begin": 9805,
									"end": 10148,
									"name": "SWAP1"
								},
								{
									"begin": 9805,
									"end": 10148,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 9805,
									"end": 10148,
									"name": "ADD"
								},
								{
									"begin": 9805,
									"end": 10148,
									"name": "DUP1"
								},
								{
									"begin": 9805,
									"end": 10148,
									"name": "MLOAD"
								},
								{
									"begin": 9805,
									"end": 10148,
									"name": "DUP3"
								},
								{
									"begin": 9805,
									"end": 10148,
									"name": "ADD"
								},
								{
									"begin": 9805,
									"end": 10148,
									"name": "SWAP2"
								},
								{
									"begin": 9805,
									"end": 10148,
									"name": "SWAP1"
								},
								{
									"begin": 9805,
									"end": 10148,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 9805,
									"end": 10148,
									"name": "ADD"
								},
								{
									"begin": 9805,
									"end": 10148,
									"name": "DUP1"
								},
								{
									"begin": 9805,
									"end": 10148,
									"name": "MLOAD"
								},
								{
									"begin": 9805,
									"end": 10148,
									"name": "DUP3"
								},
								{
									"begin": 9805,
									"end": 10148,
									"name": "ADD"
								},
								{
									"begin": 9805,
									"end": 10148,
									"name": "SWAP2"
								},
								{
									"begin": 9805,
									"end": 10148,
									"name": "SWAP1"
								},
								{
									"begin": 9805,
									"end": 10148,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 9805,
									"end": 10148,
									"name": "ADD"
								},
								{
									"begin": 9805,
									"end": 10148,
									"name": "DUP1"
								},
								{
									"begin": 9805,
									"end": 10148,
									"name": "MLOAD"
								},
								{
									"begin": 1378,
									"end": 1383,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1378,
									"end": 1396,
									"name": "DUP1"
								},
								{
									"begin": 1378,
									"end": 1396,
									"name": "SLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "EXP"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT"
								},
								{
									"begin": 1378,
									"end": 1396,
									"name": "AND"
								},
								{
									"begin": 1386,
									"end": 1396,
									"name": "CALLER"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "EXP"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": 1378,
									"end": 1396,
									"name": "AND"
								},
								{
									"begin": 1378,
									"end": 1396,
									"name": "OR"
								},
								{
									"begin": 1378,
									"end": 1396,
									"name": "SWAP1"
								},
								{
									"begin": 1378,
									"end": 1396,
									"name": "SSTORE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 9910,
									"end": 9939,
									"name": "DUP7"
								},
								{
									"begin": 9910,
									"end": 9939,
									"name": "SWAP1"
								},
								{
									"begin": 9910,
									"end": 9939,
									"name": "SSTORE"
								},
								{
									"begin": 9805,
									"end": 10148,
									"name": "SWAP2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 9949,
									"end": 9953,
									"name": "PUSH",
									"value": "7"
								},
								{
									"begin": 9949,
									"end": 9953,
									"name": "SWAP1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 9956,
									"end": 9961,
									"name": "DUP4"
								},
								{
									"begin": 9956,
									"end": 9961,
									"name": "DUP1"
								},
								{
									"begin": 9949,
									"end": 9961,
									"name": "MLOAD"
								},
								{
									"begin": 9949,
									"end": 9961,
									"name": "PUSH [tag]",
									"value": "6"
								},
								{
									"begin": 9949,
									"end": 9961,
									"name": "SWAP3"
								},
								{
									"begin": 9949,
									"end": 9961,
									"name": "SWAP2"
								},
								{
									"begin": 9949,
									"end": 9961,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 9949,
									"end": 9961,
									"name": "ADD"
								},
								{
									"begin": 9949,
									"end": 9961,
									"name": "SWAP1"
								},
								{
									"begin": 9949,
									"end": 9961,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": 9949,
									"end": 9961,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 9949,
									"end": 9961,
									"name": "tag",
									"value": "6"
								},
								{
									"begin": 9949,
									"end": 9961,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 9971,
									"end": 9977,
									"name": "PUSH",
									"value": "8"
								},
								{
									"begin": 9980,
									"end": 9987,
									"name": "DUP3"
								},
								{
									"begin": 9980,
									"end": 9987,
									"name": "DUP1"
								},
								{
									"begin": 9971,
									"end": 9987,
									"name": "MLOAD"
								},
								{
									"begin": 9971,
									"end": 9987,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 9971,
									"end": 9987,
									"name": "SWAP3"
								},
								{
									"begin": 9971,
									"end": 9987,
									"name": "SWAP2"
								},
								{
									"begin": 9971,
									"end": 9987,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 9971,
									"end": 9987,
									"name": "ADD"
								},
								{
									"begin": 9971,
									"end": 9987,
									"name": "SWAP1"
								},
								{
									"begin": 9971,
									"end": 9987,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": 9971,
									"end": 9987,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 9971,
									"end": 9987,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 9971,
									"end": 9987,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 9997,
									"end": 10005,
									"name": "PUSH",
									"value": "9"
								},
								{
									"begin": 9997,
									"end": 10017,
									"name": "DUP2"
								},
								{
									"begin": 9997,
									"end": 10017,
									"name": "SWAP1"
								},
								{
									"begin": 9997,
									"end": 10017,
									"name": "SSTORE"
								},
								{
									"begin": 10027,
									"end": 10042,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 10036,
									"end": 10041,
									"name": "DUP1"
								},
								{
									"begin": 10036,
									"end": 10041,
									"name": "SLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "EXP"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": 10036,
									"end": 10041,
									"name": "SWAP1"
								},
								{
									"begin": 10036,
									"end": 10041,
									"name": "DUP2"
								},
								{
									"begin": 10036,
									"end": 10041,
									"name": "AND"
								},
								{
									"begin": 10027,
									"end": 10042,
									"name": "DUP3"
								},
								{
									"begin": 10027,
									"end": 10042,
									"name": "MSTORE"
								},
								{
									"begin": 10027,
									"end": 10035,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 10027,
									"end": 10042,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 10027,
									"end": 10042,
									"name": "MSTORE"
								},
								{
									"begin": 10027,
									"end": 10042,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 10027,
									"end": 10042,
									"name": "DUP1"
								},
								{
									"begin": 10027,
									"end": 10042,
									"name": "DUP4"
								},
								{
									"begin": 10027,
									"end": 10042,
									"name": "KECCAK256"
								},
								{
									"begin": 10027,
									"end": 10059,
									"name": "DUP8"
								},
								{
									"begin": 10027,
									"end": 10059,
									"name": "SWAP1"
								},
								{
									"begin": 10027,
									"end": 10059,
									"name": "SSTORE"
								},
								{
									"begin": 10069,
									"end": 10079,
									"name": "PUSH",
									"value": "A"
								},
								{
									"begin": 10069,
									"end": 10087,
									"name": "DUP1"
								},
								{
									"begin": 10069,
									"end": 10087,
									"name": "SLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "EXP"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MUL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT"
								},
								{
									"begin": 10069,
									"end": 10087,
									"name": "AND"
								},
								{
									"begin": 10069,
									"end": 10087,
									"name": "SWAP1"
								},
								{
									"begin": 10069,
									"end": 10087,
									"name": "SSTORE"
								},
								{
									"begin": 10118,
									"end": 10123,
									"name": "DUP3"
								},
								{
									"begin": 10118,
									"end": 10123,
									"name": "SLOAD"
								},
								{
									"begin": 10118,
									"end": 10123,
									"name": "SWAP1"
								},
								{
									"begin": 10118,
									"end": 10123,
									"name": "SWAP2"
								},
								{
									"begin": 10118,
									"end": 10123,
									"name": "AND"
								},
								{
									"begin": 10118,
									"end": 10123,
									"name": "SWAP2"
								},
								{
									"begin": 10027,
									"end": 10042,
									"name": "SWAP1"
								},
								{
									"begin": 10097,
									"end": 10140,
									"name": "PUSH",
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 10097,
									"end": 10140,
									"name": "SWAP1"
								},
								{
									"begin": 10045,
									"end": 10059,
									"name": "DUP8"
								},
								{
									"begin": 10045,
									"end": 10059,
									"name": "SWAP1"
								},
								{
									"begin": 10097,
									"end": 10140,
									"name": "MLOAD"
								},
								{
									"begin": 10097,
									"end": 10140,
									"name": "SWAP1"
								},
								{
									"begin": 10097,
									"end": 10140,
									"name": "DUP2"
								},
								{
									"begin": 10097,
									"end": 10140,
									"name": "MSTORE"
								},
								{
									"begin": 10097,
									"end": 10140,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 10097,
									"end": 10140,
									"name": "ADD"
								},
								{
									"begin": 10097,
									"end": 10140,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 10097,
									"end": 10140,
									"name": "MLOAD"
								},
								{
									"begin": 10097,
									"end": 10140,
									"name": "DUP1"
								},
								{
									"begin": 10097,
									"end": 10140,
									"name": "SWAP2"
								},
								{
									"begin": 10097,
									"end": 10140,
									"name": "SUB"
								},
								{
									"begin": 10097,
									"end": 10140,
									"name": "SWAP1"
								},
								{
									"begin": 10097,
									"end": 10140,
									"name": "LOG3"
								},
								{
									"begin": 9805,
									"end": 10148,
									"name": "POP"
								},
								{
									"begin": 9805,
									"end": 10148,
									"name": "POP"
								},
								{
									"begin": 9805,
									"end": 10148,
									"name": "POP"
								},
								{
									"begin": 9805,
									"end": 10148,
									"name": "POP"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "PUSH [tag]",
									"value": "9"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "JUMP"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "tag",
									"value": "7"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "JUMPDEST"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "DUP3"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "DUP1"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "SLOAD"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "DUP2"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "AND"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "ISZERO"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "MUL"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "SUB"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "AND"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "SWAP1"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "DIV"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "SWAP1"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "MSTORE"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "KECCAK256"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "SWAP1"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "ADD"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "SWAP1"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "DIV"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "DUP2"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "ADD"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "SWAP3"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "DUP3"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "LT"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "JUMPI"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "DUP1"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "MLOAD"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "NOT"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "AND"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "DUP4"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "DUP1"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "ADD"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "OR"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "DUP6"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "SSTORE"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "PUSH [tag]",
									"value": "13"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "JUMP"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "tag",
									"value": "11"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "JUMPDEST"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "DUP3"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "DUP1"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "ADD"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "ADD"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "DUP6"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "SSTORE"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "DUP3"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "ISZERO"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "PUSH [tag]",
									"value": "13"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "JUMPI"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "SWAP2"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "DUP3"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "ADD"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "tag",
									"value": "12"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "JUMPDEST"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "DUP3"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "DUP2"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "GT"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "ISZERO"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "PUSH [tag]",
									"value": "13"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "JUMPI"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "DUP3"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "MLOAD"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "DUP3"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "SSTORE"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "SWAP2"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "ADD"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "SWAP2"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "SWAP1"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "ADD"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "SWAP1"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "JUMP"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "tag",
									"value": "13"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "PUSH [tag]",
									"value": "14"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "SWAP3"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "SWAP2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "PUSH [tag]",
									"value": "15"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "tag",
									"value": "14"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "JUMPDEST"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "POP"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "SWAP1"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "tag",
									"value": "15"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "JUMPDEST"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "PUSH [tag]",
									"value": "16"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "SWAP2"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "SWAP1"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "tag",
									"value": "17"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "JUMPDEST"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "DUP1"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "DUP3"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "GT"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "ISZERO"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "PUSH [tag]",
									"value": "14"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "JUMPI"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "DUP2"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "SSTORE"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "ADD"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "PUSH [tag]",
									"value": "17"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "JUMP"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "tag",
									"value": "16"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "JUMPDEST"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "SWAP1"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "tag",
									"value": "9"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "JUMPDEST"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "DUP1"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "CODECOPY"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 9310,
									"end": 14420,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820bd6e432aa3d0131141f94dd374296a539fc00392b87d5ebf6eff25667fbb9e510029",
									".code": [
										{
											"begin": 9310,
											"end": 14420,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "MSTORE"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "ISZERO"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "JUMPI"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "DIV"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "AND"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "DUP2"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "EQ"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "JUMPI"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "DUP1"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "PUSH",
											"value": "753C30C"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "EQ"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "JUMPI"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "DUP1"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "EQ"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "JUMPI"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "DUP1"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "PUSH",
											"value": "E136B19"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "EQ"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "JUMPI"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "DUP1"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "PUSH",
											"value": "ECB93C0"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "EQ"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "JUMPI"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "DUP1"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "EQ"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "JUMPI"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "DUP1"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "EQ"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "JUMPI"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "DUP1"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "PUSH",
											"value": "26976E3F"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "EQ"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "JUMPI"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "DUP1"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "PUSH",
											"value": "27E235E3"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "EQ"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "JUMPI"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "DUP1"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "EQ"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "JUMPI"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "DUP1"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "PUSH",
											"value": "35390714"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "EQ"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "JUMPI"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "DUP1"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "PUSH",
											"value": "3EAAF86B"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "EQ"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "JUMPI"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "DUP1"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "PUSH",
											"value": "3F4BA83A"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "EQ"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "JUMPI"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "DUP1"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "PUSH",
											"value": "59BF1ABE"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "EQ"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "JUMPI"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "DUP1"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "PUSH",
											"value": "5C658165"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "EQ"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "JUMPI"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "DUP1"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "PUSH",
											"value": "5C975ABB"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "EQ"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "JUMPI"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "DUP1"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "EQ"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "JUMPI"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "DUP1"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "PUSH",
											"value": "8456CB59"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "EQ"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "JUMPI"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "DUP1"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "PUSH",
											"value": "893D20E8"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "EQ"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "JUMPI"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "DUP1"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "EQ"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "JUMPI"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "DUP1"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "EQ"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "JUMPI"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "DUP1"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "EQ"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "JUMPI"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "DUP1"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "PUSH",
											"value": "C0324C77"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "EQ"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "JUMPI"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "DUP1"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "PUSH",
											"value": "CC872B66"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "EQ"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "JUMPI"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "DUP1"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "PUSH",
											"value": "DB006A75"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "EQ"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "JUMPI"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "DUP1"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "EQ"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "JUMPI"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "DUP1"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "PUSH",
											"value": "DD644F72"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "EQ"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "JUMPI"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "DUP1"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "PUSH",
											"value": "E47D6060"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "EQ"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "JUMPI"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "DUP1"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "PUSH",
											"value": "E4997DC5"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "EQ"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "JUMPI"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "DUP1"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "PUSH",
											"value": "E5B5019A"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "EQ"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "JUMPI"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "DUP1"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "PUSH",
											"value": "F2FDE38B"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "EQ"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "JUMPI"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "DUP1"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "PUSH",
											"value": "F3BDC228"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "EQ"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "JUMPI"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "JUMPDEST"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "DUP1"
										},
										{
											"begin": 9310,
											"end": 14420,
											"name": "REVERT"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "JUMPDEST"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "CALLVALUE"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "ISZERO"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "JUMPI"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "DUP1"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "REVERT"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "JUMPDEST"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "JUMP"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "JUMPDEST"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "MLOAD"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "DUP1"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "DUP3"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "MSTORE"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "DUP2"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "SWAP1"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "DUP2"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "ADD"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "DUP4"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "DUP2"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "DUP2"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "MLOAD"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "DUP2"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "MSTORE"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "ADD"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "SWAP2"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "POP"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "DUP1"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "MLOAD"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "SWAP1"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "ADD"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "SWAP1"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "DUP1"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "DUP4"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 29,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 93,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 89,
											"name": "MLOAD"
										},
										{
											"begin": 71,
											"end": 74,
											"name": "DUP4"
										},
										{
											"begin": 71,
											"end": 74,
											"name": "DUP3"
										},
										{
											"begin": 71,
											"end": 74,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 70,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 45,
											"end": 48,
											"name": "ADD"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP2"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "ADD"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "AND"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "ISZERO"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "JUMPI"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP3"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SUB"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "MLOAD"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP4"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SUB"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "EXP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SUB"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "NOT"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "AND"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP2"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "MSTORE"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "ADD"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP2"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "JUMPDEST"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP3"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "MLOAD"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP2"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SUB"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "RETURN"
										},
										{
											"begin": 12116,
											"end": 12293,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 12116,
											"end": 12293,
											"name": "JUMPDEST"
										},
										{
											"begin": 12116,
											"end": 12293,
											"name": "CALLVALUE"
										},
										{
											"begin": 12116,
											"end": 12293,
											"name": "ISZERO"
										},
										{
											"begin": 12116,
											"end": 12293,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 12116,
											"end": 12293,
											"name": "JUMPI"
										},
										{
											"begin": 12116,
											"end": 12293,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12116,
											"end": 12293,
											"name": "DUP1"
										},
										{
											"begin": 12116,
											"end": 12293,
											"name": "REVERT"
										},
										{
											"begin": 12116,
											"end": 12293,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 12116,
											"end": 12293,
											"name": "JUMPDEST"
										},
										{
											"begin": 12116,
											"end": 12293,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 12116,
											"end": 12293,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12116,
											"end": 12293,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12116,
											"end": 12293,
											"name": "AND"
										},
										{
											"begin": 12116,
											"end": 12293,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 12116,
											"end": 12293,
											"name": "JUMP"
										},
										{
											"begin": 12116,
											"end": 12293,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 12116,
											"end": 12293,
											"name": "JUMPDEST"
										},
										{
											"begin": 12116,
											"end": 12293,
											"name": "STOP"
										},
										{
											"begin": 11388,
											"end": 11684,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 11388,
											"end": 11684,
											"name": "JUMPDEST"
										},
										{
											"begin": 11388,
											"end": 11684,
											"name": "CALLVALUE"
										},
										{
											"begin": 11388,
											"end": 11684,
											"name": "ISZERO"
										},
										{
											"begin": 11388,
											"end": 11684,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 11388,
											"end": 11684,
											"name": "JUMPI"
										},
										{
											"begin": 11388,
											"end": 11684,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11388,
											"end": 11684,
											"name": "DUP1"
										},
										{
											"begin": 11388,
											"end": 11684,
											"name": "REVERT"
										},
										{
											"begin": 11388,
											"end": 11684,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 11388,
											"end": 11684,
											"name": "JUMPDEST"
										},
										{
											"begin": 11388,
											"end": 11684,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 11388,
											"end": 11684,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11388,
											"end": 11684,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 11388,
											"end": 11684,
											"name": "AND"
										},
										{
											"begin": 11388,
											"end": 11684,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 11388,
											"end": 11684,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 11388,
											"end": 11684,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 11388,
											"end": 11684,
											"name": "JUMP"
										},
										{
											"begin": 9488,
											"end": 9510,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 9488,
											"end": 9510,
											"name": "JUMPDEST"
										},
										{
											"begin": 9488,
											"end": 9510,
											"name": "CALLVALUE"
										},
										{
											"begin": 9488,
											"end": 9510,
											"name": "ISZERO"
										},
										{
											"begin": 9488,
											"end": 9510,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 9488,
											"end": 9510,
											"name": "JUMPI"
										},
										{
											"begin": 9488,
											"end": 9510,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9488,
											"end": 9510,
											"name": "DUP1"
										},
										{
											"begin": 9488,
											"end": 9510,
											"name": "REVERT"
										},
										{
											"begin": 9488,
											"end": 9510,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 9488,
											"end": 9510,
											"name": "JUMPDEST"
										},
										{
											"begin": 9488,
											"end": 9510,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 9488,
											"end": 9510,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 9488,
											"end": 9510,
											"name": "JUMP"
										},
										{
											"begin": 9488,
											"end": 9510,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 9488,
											"end": 9510,
											"name": "JUMPDEST"
										},
										{
											"begin": 9488,
											"end": 9510,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9488,
											"end": 9510,
											"name": "MLOAD"
										},
										{
											"begin": 9488,
											"end": 9510,
											"name": "SWAP1"
										},
										{
											"begin": 9488,
											"end": 9510,
											"name": "ISZERO"
										},
										{
											"begin": 9488,
											"end": 9510,
											"name": "ISZERO"
										},
										{
											"begin": 9488,
											"end": 9510,
											"name": "DUP2"
										},
										{
											"begin": 9488,
											"end": 9510,
											"name": "MSTORE"
										},
										{
											"begin": 9488,
											"end": 9510,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9488,
											"end": 9510,
											"name": "ADD"
										},
										{
											"begin": 9488,
											"end": 9510,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9488,
											"end": 9510,
											"name": "MLOAD"
										},
										{
											"begin": 9488,
											"end": 9510,
											"name": "DUP1"
										},
										{
											"begin": 9488,
											"end": 9510,
											"name": "SWAP2"
										},
										{
											"begin": 9488,
											"end": 9510,
											"name": "SUB"
										},
										{
											"begin": 9488,
											"end": 9510,
											"name": "SWAP1"
										},
										{
											"begin": 9488,
											"end": 9510,
											"name": "RETURN"
										},
										{
											"begin": 8026,
											"end": 8168,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 8026,
											"end": 8168,
											"name": "JUMPDEST"
										},
										{
											"begin": 8026,
											"end": 8168,
											"name": "CALLVALUE"
										},
										{
											"begin": 8026,
											"end": 8168,
											"name": "ISZERO"
										},
										{
											"begin": 8026,
											"end": 8168,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 8026,
											"end": 8168,
											"name": "JUMPI"
										},
										{
											"begin": 8026,
											"end": 8168,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8026,
											"end": 8168,
											"name": "DUP1"
										},
										{
											"begin": 8026,
											"end": 8168,
											"name": "REVERT"
										},
										{
											"begin": 8026,
											"end": 8168,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 8026,
											"end": 8168,
											"name": "JUMPDEST"
										},
										{
											"begin": 8026,
											"end": 8168,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8026,
											"end": 8168,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8026,
											"end": 8168,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8026,
											"end": 8168,
											"name": "AND"
										},
										{
											"begin": 8026,
											"end": 8168,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 8026,
											"end": 8168,
											"name": "JUMP"
										},
										{
											"begin": 12356,
											"end": 12568,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 12356,
											"end": 12568,
											"name": "JUMPDEST"
										},
										{
											"begin": 12356,
											"end": 12568,
											"name": "CALLVALUE"
										},
										{
											"begin": 12356,
											"end": 12568,
											"name": "ISZERO"
										},
										{
											"begin": 12356,
											"end": 12568,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 12356,
											"end": 12568,
											"name": "JUMPI"
										},
										{
											"begin": 12356,
											"end": 12568,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12356,
											"end": 12568,
											"name": "DUP1"
										},
										{
											"begin": 12356,
											"end": 12568,
											"name": "REVERT"
										},
										{
											"begin": 12356,
											"end": 12568,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 12356,
											"end": 12568,
											"name": "JUMPDEST"
										},
										{
											"begin": 12356,
											"end": 12568,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 12356,
											"end": 12568,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 12356,
											"end": 12568,
											"name": "JUMP"
										},
										{
											"begin": 12356,
											"end": 12568,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 12356,
											"end": 12568,
											"name": "JUMPDEST"
										},
										{
											"begin": 12356,
											"end": 12568,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12356,
											"end": 12568,
											"name": "MLOAD"
										},
										{
											"begin": 12356,
											"end": 12568,
											"name": "SWAP1"
										},
										{
											"begin": 12356,
											"end": 12568,
											"name": "DUP2"
										},
										{
											"begin": 12356,
											"end": 12568,
											"name": "MSTORE"
										},
										{
											"begin": 12356,
											"end": 12568,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12356,
											"end": 12568,
											"name": "ADD"
										},
										{
											"begin": 12356,
											"end": 12568,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12356,
											"end": 12568,
											"name": "MLOAD"
										},
										{
											"begin": 12356,
											"end": 12568,
											"name": "DUP1"
										},
										{
											"begin": 12356,
											"end": 12568,
											"name": "SWAP2"
										},
										{
											"begin": 12356,
											"end": 12568,
											"name": "SUB"
										},
										{
											"begin": 12356,
											"end": 12568,
											"name": "SWAP1"
										},
										{
											"begin": 12356,
											"end": 12568,
											"name": "RETURN"
										},
										{
											"begin": 10631,
											"end": 10986,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 10631,
											"end": 10986,
											"name": "JUMPDEST"
										},
										{
											"begin": 10631,
											"end": 10986,
											"name": "CALLVALUE"
										},
										{
											"begin": 10631,
											"end": 10986,
											"name": "ISZERO"
										},
										{
											"begin": 10631,
											"end": 10986,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 10631,
											"end": 10986,
											"name": "JUMPI"
										},
										{
											"begin": 10631,
											"end": 10986,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10631,
											"end": 10986,
											"name": "DUP1"
										},
										{
											"begin": 10631,
											"end": 10986,
											"name": "REVERT"
										},
										{
											"begin": 10631,
											"end": 10986,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 10631,
											"end": 10986,
											"name": "JUMPDEST"
										},
										{
											"begin": 10631,
											"end": 10986,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 10631,
											"end": 10986,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10631,
											"end": 10986,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 10631,
											"end": 10986,
											"name": "DUP2"
										},
										{
											"begin": 10631,
											"end": 10986,
											"name": "AND"
										},
										{
											"begin": 10631,
											"end": 10986,
											"name": "SWAP1"
										},
										{
											"begin": 10631,
											"end": 10986,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 10631,
											"end": 10986,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 10631,
											"end": 10986,
											"name": "AND"
										},
										{
											"begin": 10631,
											"end": 10986,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 10631,
											"end": 10986,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 10631,
											"end": 10986,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 10631,
											"end": 10986,
											"name": "JUMP"
										},
										{
											"begin": 9452,
											"end": 9482,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 9452,
											"end": 9482,
											"name": "JUMPDEST"
										},
										{
											"begin": 9452,
											"end": 9482,
											"name": "CALLVALUE"
										},
										{
											"begin": 9452,
											"end": 9482,
											"name": "ISZERO"
										},
										{
											"begin": 9452,
											"end": 9482,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 9452,
											"end": 9482,
											"name": "JUMPI"
										},
										{
											"begin": 9452,
											"end": 9482,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9452,
											"end": 9482,
											"name": "DUP1"
										},
										{
											"begin": 9452,
											"end": 9482,
											"name": "REVERT"
										},
										{
											"begin": 9452,
											"end": 9482,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 9452,
											"end": 9482,
											"name": "JUMPDEST"
										},
										{
											"begin": 9452,
											"end": 9482,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 9452,
											"end": 9482,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 9452,
											"end": 9482,
											"name": "JUMP"
										},
										{
											"begin": 9452,
											"end": 9482,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 9452,
											"end": 9482,
											"name": "JUMPDEST"
										},
										{
											"begin": 9452,
											"end": 9482,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9452,
											"end": 9482,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 9452,
											"end": 9482,
											"name": "SWAP1"
										},
										{
											"begin": 9452,
											"end": 9482,
											"name": "SWAP2"
										},
										{
											"begin": 9452,
											"end": 9482,
											"name": "AND"
										},
										{
											"begin": 9452,
											"end": 9482,
											"name": "DUP2"
										},
										{
											"begin": 9452,
											"end": 9482,
											"name": "MSTORE"
										},
										{
											"begin": 9452,
											"end": 9482,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9452,
											"end": 9482,
											"name": "ADD"
										},
										{
											"begin": 9452,
											"end": 9482,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9452,
											"end": 9482,
											"name": "MLOAD"
										},
										{
											"begin": 9452,
											"end": 9482,
											"name": "DUP1"
										},
										{
											"begin": 9452,
											"end": 9482,
											"name": "SWAP2"
										},
										{
											"begin": 9452,
											"end": 9482,
											"name": "SUB"
										},
										{
											"begin": 9452,
											"end": 9482,
											"name": "SWAP1"
										},
										{
											"begin": 9452,
											"end": 9482,
											"name": "RETURN"
										},
										{
											"begin": 2702,
											"end": 2742,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 2702,
											"end": 2742,
											"name": "JUMPDEST"
										},
										{
											"begin": 2702,
											"end": 2742,
											"name": "CALLVALUE"
										},
										{
											"begin": 2702,
											"end": 2742,
											"name": "ISZERO"
										},
										{
											"begin": 2702,
											"end": 2742,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 2702,
											"end": 2742,
											"name": "JUMPI"
										},
										{
											"begin": 2702,
											"end": 2742,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2702,
											"end": 2742,
											"name": "DUP1"
										},
										{
											"begin": 2702,
											"end": 2742,
											"name": "REVERT"
										},
										{
											"begin": 2702,
											"end": 2742,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 2702,
											"end": 2742,
											"name": "JUMPDEST"
										},
										{
											"begin": 2702,
											"end": 2742,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2702,
											"end": 2742,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2702,
											"end": 2742,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2702,
											"end": 2742,
											"name": "AND"
										},
										{
											"begin": 2702,
											"end": 2742,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 2702,
											"end": 2742,
											"name": "JUMP"
										},
										{
											"begin": 9426,
											"end": 9446,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 9426,
											"end": 9446,
											"name": "JUMPDEST"
										},
										{
											"begin": 9426,
											"end": 9446,
											"name": "CALLVALUE"
										},
										{
											"begin": 9426,
											"end": 9446,
											"name": "ISZERO"
										},
										{
											"begin": 9426,
											"end": 9446,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 9426,
											"end": 9446,
											"name": "JUMPI"
										},
										{
											"begin": 9426,
											"end": 9446,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9426,
											"end": 9446,
											"name": "DUP1"
										},
										{
											"begin": 9426,
											"end": 9446,
											"name": "REVERT"
										},
										{
											"begin": 9426,
											"end": 9446,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 9426,
											"end": 9446,
											"name": "JUMPDEST"
										},
										{
											"begin": 9426,
											"end": 9446,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 9426,
											"end": 9446,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 9426,
											"end": 9446,
											"name": "JUMP"
										},
										{
											"begin": 2864,
											"end": 2890,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 2864,
											"end": 2890,
											"name": "JUMPDEST"
										},
										{
											"begin": 2864,
											"end": 2890,
											"name": "CALLVALUE"
										},
										{
											"begin": 2864,
											"end": 2890,
											"name": "ISZERO"
										},
										{
											"begin": 2864,
											"end": 2890,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 2864,
											"end": 2890,
											"name": "JUMPI"
										},
										{
											"begin": 2864,
											"end": 2890,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2864,
											"end": 2890,
											"name": "DUP1"
										},
										{
											"begin": 2864,
											"end": 2890,
											"name": "REVERT"
										},
										{
											"begin": 2864,
											"end": 2890,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 2864,
											"end": 2890,
											"name": "JUMPDEST"
										},
										{
											"begin": 2864,
											"end": 2890,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 2864,
											"end": 2890,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 2864,
											"end": 2890,
											"name": "JUMP"
										},
										{
											"begin": 1917,
											"end": 1941,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 1917,
											"end": 1941,
											"name": "JUMPDEST"
										},
										{
											"begin": 1917,
											"end": 1941,
											"name": "CALLVALUE"
										},
										{
											"begin": 1917,
											"end": 1941,
											"name": "ISZERO"
										},
										{
											"begin": 1917,
											"end": 1941,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 1917,
											"end": 1941,
											"name": "JUMPI"
										},
										{
											"begin": 1917,
											"end": 1941,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1917,
											"end": 1941,
											"name": "DUP1"
										},
										{
											"begin": 1917,
											"end": 1941,
											"name": "REVERT"
										},
										{
											"begin": 1917,
											"end": 1941,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 1917,
											"end": 1941,
											"name": "JUMPDEST"
										},
										{
											"begin": 1917,
											"end": 1941,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 1917,
											"end": 1941,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 1917,
											"end": 1941,
											"name": "JUMP"
										},
										{
											"begin": 7491,
											"end": 7578,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 7491,
											"end": 7578,
											"name": "JUMPDEST"
										},
										{
											"begin": 7491,
											"end": 7578,
											"name": "CALLVALUE"
										},
										{
											"begin": 7491,
											"end": 7578,
											"name": "ISZERO"
										},
										{
											"begin": 7491,
											"end": 7578,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 7491,
											"end": 7578,
											"name": "JUMPI"
										},
										{
											"begin": 7491,
											"end": 7578,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7491,
											"end": 7578,
											"name": "DUP1"
										},
										{
											"begin": 7491,
											"end": 7578,
											"name": "REVERT"
										},
										{
											"begin": 7491,
											"end": 7578,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 7491,
											"end": 7578,
											"name": "JUMPDEST"
										},
										{
											"begin": 7491,
											"end": 7578,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 7491,
											"end": 7578,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 7491,
											"end": 7578,
											"name": "JUMP"
										},
										{
											"begin": 7750,
											"end": 7872,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 7750,
											"end": 7872,
											"name": "JUMPDEST"
										},
										{
											"begin": 7750,
											"end": 7872,
											"name": "CALLVALUE"
										},
										{
											"begin": 7750,
											"end": 7872,
											"name": "ISZERO"
										},
										{
											"begin": 7750,
											"end": 7872,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 7750,
											"end": 7872,
											"name": "JUMPI"
										},
										{
											"begin": 7750,
											"end": 7872,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7750,
											"end": 7872,
											"name": "DUP1"
										},
										{
											"begin": 7750,
											"end": 7872,
											"name": "REVERT"
										},
										{
											"begin": 7750,
											"end": 7872,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 7750,
											"end": 7872,
											"name": "JUMPDEST"
										},
										{
											"begin": 7750,
											"end": 7872,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7750,
											"end": 7872,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7750,
											"end": 7872,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7750,
											"end": 7872,
											"name": "AND"
										},
										{
											"begin": 7750,
											"end": 7872,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 7750,
											"end": 7872,
											"name": "JUMP"
										},
										{
											"begin": 4173,
											"end": 4234,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 4173,
											"end": 4234,
											"name": "JUMPDEST"
										},
										{
											"begin": 4173,
											"end": 4234,
											"name": "CALLVALUE"
										},
										{
											"begin": 4173,
											"end": 4234,
											"name": "ISZERO"
										},
										{
											"begin": 4173,
											"end": 4234,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 4173,
											"end": 4234,
											"name": "JUMPI"
										},
										{
											"begin": 4173,
											"end": 4234,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4173,
											"end": 4234,
											"name": "DUP1"
										},
										{
											"begin": 4173,
											"end": 4234,
											"name": "REVERT"
										},
										{
											"begin": 4173,
											"end": 4234,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 4173,
											"end": 4234,
											"name": "JUMPDEST"
										},
										{
											"begin": 4173,
											"end": 4234,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4173,
											"end": 4234,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4173,
											"end": 4234,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4173,
											"end": 4234,
											"name": "DUP2"
										},
										{
											"begin": 4173,
											"end": 4234,
											"name": "AND"
										},
										{
											"begin": 4173,
											"end": 4234,
											"name": "SWAP1"
										},
										{
											"begin": 4173,
											"end": 4234,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 4173,
											"end": 4234,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4173,
											"end": 4234,
											"name": "AND"
										},
										{
											"begin": 4173,
											"end": 4234,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 4173,
											"end": 4234,
											"name": "JUMP"
										},
										{
											"begin": 6905,
											"end": 6931,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 6905,
											"end": 6931,
											"name": "JUMPDEST"
										},
										{
											"begin": 6905,
											"end": 6931,
											"name": "CALLVALUE"
										},
										{
											"begin": 6905,
											"end": 6931,
											"name": "ISZERO"
										},
										{
											"begin": 6905,
											"end": 6931,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 6905,
											"end": 6931,
											"name": "JUMPI"
										},
										{
											"begin": 6905,
											"end": 6931,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6905,
											"end": 6931,
											"name": "DUP1"
										},
										{
											"begin": 6905,
											"end": 6931,
											"name": "REVERT"
										},
										{
											"begin": 6905,
											"end": 6931,
											"name": "tag",
											"value": "83"
										},
										{
											"begin": 6905,
											"end": 6931,
											"name": "JUMPDEST"
										},
										{
											"begin": 6905,
											"end": 6931,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 6905,
											"end": 6931,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 6905,
											"end": 6931,
											"name": "JUMP"
										},
										{
											"begin": 11068,
											"end": 11306,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 11068,
											"end": 11306,
											"name": "JUMPDEST"
										},
										{
											"begin": 11068,
											"end": 11306,
											"name": "CALLVALUE"
										},
										{
											"begin": 11068,
											"end": 11306,
											"name": "ISZERO"
										},
										{
											"begin": 11068,
											"end": 11306,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 11068,
											"end": 11306,
											"name": "JUMPI"
										},
										{
											"begin": 11068,
											"end": 11306,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11068,
											"end": 11306,
											"name": "DUP1"
										},
										{
											"begin": 11068,
											"end": 11306,
											"name": "REVERT"
										},
										{
											"begin": 11068,
											"end": 11306,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 11068,
											"end": 11306,
											"name": "JUMPDEST"
										},
										{
											"begin": 11068,
											"end": 11306,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 11068,
											"end": 11306,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11068,
											"end": 11306,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 11068,
											"end": 11306,
											"name": "AND"
										},
										{
											"begin": 11068,
											"end": 11306,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 11068,
											"end": 11306,
											"name": "JUMP"
										},
										{
											"begin": 7324,
											"end": 7409,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 7324,
											"end": 7409,
											"name": "JUMPDEST"
										},
										{
											"begin": 7324,
											"end": 7409,
											"name": "CALLVALUE"
										},
										{
											"begin": 7324,
											"end": 7409,
											"name": "ISZERO"
										},
										{
											"begin": 7324,
											"end": 7409,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 7324,
											"end": 7409,
											"name": "JUMPI"
										},
										{
											"begin": 7324,
											"end": 7409,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7324,
											"end": 7409,
											"name": "DUP1"
										},
										{
											"begin": 7324,
											"end": 7409,
											"name": "REVERT"
										},
										{
											"begin": 7324,
											"end": 7409,
											"name": "tag",
											"value": "89"
										},
										{
											"begin": 7324,
											"end": 7409,
											"name": "JUMPDEST"
										},
										{
											"begin": 7324,
											"end": 7409,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 7324,
											"end": 7409,
											"name": "PUSH [tag]",
											"value": "91"
										},
										{
											"begin": 7324,
											"end": 7409,
											"name": "JUMP"
										},
										{
											"begin": 7878,
											"end": 7963,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 7878,
											"end": 7963,
											"name": "JUMPDEST"
										},
										{
											"begin": 7878,
											"end": 7963,
											"name": "CALLVALUE"
										},
										{
											"begin": 7878,
											"end": 7963,
											"name": "ISZERO"
										},
										{
											"begin": 7878,
											"end": 7963,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 7878,
											"end": 7963,
											"name": "JUMPI"
										},
										{
											"begin": 7878,
											"end": 7963,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7878,
											"end": 7963,
											"name": "DUP1"
										},
										{
											"begin": 7878,
											"end": 7963,
											"name": "REVERT"
										},
										{
											"begin": 7878,
											"end": 7963,
											"name": "tag",
											"value": "92"
										},
										{
											"begin": 7878,
											"end": 7963,
											"name": "JUMPDEST"
										},
										{
											"begin": 7878,
											"end": 7963,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 7878,
											"end": 7963,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 7878,
											"end": 7963,
											"name": "JUMP"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "JUMPDEST"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "CALLVALUE"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "ISZERO"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "JUMPI"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "DUP1"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "REVERT"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "tag",
											"value": "95"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "JUMPDEST"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "JUMP"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "JUMPDEST"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "CALLVALUE"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "ISZERO"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "JUMPI"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "DUP1"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "REVERT"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "tag",
											"value": "98"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "JUMPDEST"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "JUMP"
										},
										{
											"begin": 10230,
											"end": 10549,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 10230,
											"end": 10549,
											"name": "JUMPDEST"
										},
										{
											"begin": 10230,
											"end": 10549,
											"name": "CALLVALUE"
										},
										{
											"begin": 10230,
											"end": 10549,
											"name": "ISZERO"
										},
										{
											"begin": 10230,
											"end": 10549,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 10230,
											"end": 10549,
											"name": "JUMPI"
										},
										{
											"begin": 10230,
											"end": 10549,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10230,
											"end": 10549,
											"name": "DUP1"
										},
										{
											"begin": 10230,
											"end": 10549,
											"name": "REVERT"
										},
										{
											"begin": 10230,
											"end": 10549,
											"name": "tag",
											"value": "105"
										},
										{
											"begin": 10230,
											"end": 10549,
											"name": "JUMPDEST"
										},
										{
											"begin": 10230,
											"end": 10549,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 10230,
											"end": 10549,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10230,
											"end": 10549,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 10230,
											"end": 10549,
											"name": "AND"
										},
										{
											"begin": 10230,
											"end": 10549,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 10230,
											"end": 10549,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 10230,
											"end": 10549,
											"name": "PUSH [tag]",
											"value": "107"
										},
										{
											"begin": 10230,
											"end": 10549,
											"name": "JUMP"
										},
										{
											"begin": 13720,
											"end": 14098,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 13720,
											"end": 14098,
											"name": "JUMPDEST"
										},
										{
											"begin": 13720,
											"end": 14098,
											"name": "CALLVALUE"
										},
										{
											"begin": 13720,
											"end": 14098,
											"name": "ISZERO"
										},
										{
											"begin": 13720,
											"end": 14098,
											"name": "PUSH [tag]",
											"value": "108"
										},
										{
											"begin": 13720,
											"end": 14098,
											"name": "JUMPI"
										},
										{
											"begin": 13720,
											"end": 14098,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13720,
											"end": 14098,
											"name": "DUP1"
										},
										{
											"begin": 13720,
											"end": 14098,
											"name": "REVERT"
										},
										{
											"begin": 13720,
											"end": 14098,
											"name": "tag",
											"value": "108"
										},
										{
											"begin": 13720,
											"end": 14098,
											"name": "JUMPDEST"
										},
										{
											"begin": 13720,
											"end": 14098,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 13720,
											"end": 14098,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13720,
											"end": 14098,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 13720,
											"end": 14098,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 13720,
											"end": 14098,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 13720,
											"end": 14098,
											"name": "PUSH [tag]",
											"value": "110"
										},
										{
											"begin": 13720,
											"end": 14098,
											"name": "JUMP"
										},
										{
											"begin": 12726,
											"end": 13031,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 12726,
											"end": 13031,
											"name": "JUMPDEST"
										},
										{
											"begin": 12726,
											"end": 13031,
											"name": "CALLVALUE"
										},
										{
											"begin": 12726,
											"end": 13031,
											"name": "ISZERO"
										},
										{
											"begin": 12726,
											"end": 13031,
											"name": "PUSH [tag]",
											"value": "111"
										},
										{
											"begin": 12726,
											"end": 13031,
											"name": "JUMPI"
										},
										{
											"begin": 12726,
											"end": 13031,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12726,
											"end": 13031,
											"name": "DUP1"
										},
										{
											"begin": 12726,
											"end": 13031,
											"name": "REVERT"
										},
										{
											"begin": 12726,
											"end": 13031,
											"name": "tag",
											"value": "111"
										},
										{
											"begin": 12726,
											"end": 13031,
											"name": "JUMPDEST"
										},
										{
											"begin": 12726,
											"end": 13031,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 12726,
											"end": 13031,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12726,
											"end": 13031,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12726,
											"end": 13031,
											"name": "PUSH [tag]",
											"value": "113"
										},
										{
											"begin": 12726,
											"end": 13031,
											"name": "JUMP"
										},
										{
											"begin": 13439,
											"end": 13714,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 13439,
											"end": 13714,
											"name": "JUMPDEST"
										},
										{
											"begin": 13439,
											"end": 13714,
											"name": "CALLVALUE"
										},
										{
											"begin": 13439,
											"end": 13714,
											"name": "ISZERO"
										},
										{
											"begin": 13439,
											"end": 13714,
											"name": "PUSH [tag]",
											"value": "114"
										},
										{
											"begin": 13439,
											"end": 13714,
											"name": "JUMPI"
										},
										{
											"begin": 13439,
											"end": 13714,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13439,
											"end": 13714,
											"name": "DUP1"
										},
										{
											"begin": 13439,
											"end": 13714,
											"name": "REVERT"
										},
										{
											"begin": 13439,
											"end": 13714,
											"name": "tag",
											"value": "114"
										},
										{
											"begin": 13439,
											"end": 13714,
											"name": "JUMPDEST"
										},
										{
											"begin": 13439,
											"end": 13714,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 13439,
											"end": 13714,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13439,
											"end": 13714,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 13439,
											"end": 13714,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 13439,
											"end": 13714,
											"name": "JUMP"
										},
										{
											"begin": 11766,
											"end": 12053,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 11766,
											"end": 12053,
											"name": "JUMPDEST"
										},
										{
											"begin": 11766,
											"end": 12053,
											"name": "CALLVALUE"
										},
										{
											"begin": 11766,
											"end": 12053,
											"name": "ISZERO"
										},
										{
											"begin": 11766,
											"end": 12053,
											"name": "PUSH [tag]",
											"value": "117"
										},
										{
											"begin": 11766,
											"end": 12053,
											"name": "JUMPI"
										},
										{
											"begin": 11766,
											"end": 12053,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11766,
											"end": 12053,
											"name": "DUP1"
										},
										{
											"begin": 11766,
											"end": 12053,
											"name": "REVERT"
										},
										{
											"begin": 11766,
											"end": 12053,
											"name": "tag",
											"value": "117"
										},
										{
											"begin": 11766,
											"end": 12053,
											"name": "JUMPDEST"
										},
										{
											"begin": 11766,
											"end": 12053,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 11766,
											"end": 12053,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11766,
											"end": 12053,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 11766,
											"end": 12053,
											"name": "DUP2"
										},
										{
											"begin": 11766,
											"end": 12053,
											"name": "AND"
										},
										{
											"begin": 11766,
											"end": 12053,
											"name": "SWAP1"
										},
										{
											"begin": 11766,
											"end": 12053,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 11766,
											"end": 12053,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 11766,
											"end": 12053,
											"name": "AND"
										},
										{
											"begin": 11766,
											"end": 12053,
											"name": "PUSH [tag]",
											"value": "119"
										},
										{
											"begin": 11766,
											"end": 12053,
											"name": "JUMP"
										},
										{
											"begin": 2827,
											"end": 2858,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 2827,
											"end": 2858,
											"name": "JUMPDEST"
										},
										{
											"begin": 2827,
											"end": 2858,
											"name": "CALLVALUE"
										},
										{
											"begin": 2827,
											"end": 2858,
											"name": "ISZERO"
										},
										{
											"begin": 2827,
											"end": 2858,
											"name": "PUSH [tag]",
											"value": "120"
										},
										{
											"begin": 2827,
											"end": 2858,
											"name": "JUMPI"
										},
										{
											"begin": 2827,
											"end": 2858,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2827,
											"end": 2858,
											"name": "DUP1"
										},
										{
											"begin": 2827,
											"end": 2858,
											"name": "REVERT"
										},
										{
											"begin": 2827,
											"end": 2858,
											"name": "tag",
											"value": "120"
										},
										{
											"begin": 2827,
											"end": 2858,
											"name": "JUMPDEST"
										},
										{
											"begin": 2827,
											"end": 2858,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 2827,
											"end": 2858,
											"name": "PUSH [tag]",
											"value": "122"
										},
										{
											"begin": 2827,
											"end": 2858,
											"name": "JUMP"
										},
										{
											"begin": 7969,
											"end": 8015,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 7969,
											"end": 8015,
											"name": "JUMPDEST"
										},
										{
											"begin": 7969,
											"end": 8015,
											"name": "CALLVALUE"
										},
										{
											"begin": 7969,
											"end": 8015,
											"name": "ISZERO"
										},
										{
											"begin": 7969,
											"end": 8015,
											"name": "PUSH [tag]",
											"value": "123"
										},
										{
											"begin": 7969,
											"end": 8015,
											"name": "JUMPI"
										},
										{
											"begin": 7969,
											"end": 8015,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7969,
											"end": 8015,
											"name": "DUP1"
										},
										{
											"begin": 7969,
											"end": 8015,
											"name": "REVERT"
										},
										{
											"begin": 7969,
											"end": 8015,
											"name": "tag",
											"value": "123"
										},
										{
											"begin": 7969,
											"end": 8015,
											"name": "JUMPDEST"
										},
										{
											"begin": 7969,
											"end": 8015,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7969,
											"end": 8015,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7969,
											"end": 8015,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7969,
											"end": 8015,
											"name": "AND"
										},
										{
											"begin": 7969,
											"end": 8015,
											"name": "PUSH [tag]",
											"value": "125"
										},
										{
											"begin": 7969,
											"end": 8015,
											"name": "JUMP"
										},
										{
											"begin": 8174,
											"end": 8331,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 8174,
											"end": 8331,
											"name": "JUMPDEST"
										},
										{
											"begin": 8174,
											"end": 8331,
											"name": "CALLVALUE"
										},
										{
											"begin": 8174,
											"end": 8331,
											"name": "ISZERO"
										},
										{
											"begin": 8174,
											"end": 8331,
											"name": "PUSH [tag]",
											"value": "126"
										},
										{
											"begin": 8174,
											"end": 8331,
											"name": "JUMPI"
										},
										{
											"begin": 8174,
											"end": 8331,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8174,
											"end": 8331,
											"name": "DUP1"
										},
										{
											"begin": 8174,
											"end": 8331,
											"name": "REVERT"
										},
										{
											"begin": 8174,
											"end": 8331,
											"name": "tag",
											"value": "126"
										},
										{
											"begin": 8174,
											"end": 8331,
											"name": "JUMPDEST"
										},
										{
											"begin": 8174,
											"end": 8331,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8174,
											"end": 8331,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8174,
											"end": 8331,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8174,
											"end": 8331,
											"name": "AND"
										},
										{
											"begin": 8174,
											"end": 8331,
											"name": "PUSH [tag]",
											"value": "128"
										},
										{
											"begin": 8174,
											"end": 8331,
											"name": "JUMP"
										},
										{
											"begin": 4241,
											"end": 4283,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 4241,
											"end": 4283,
											"name": "JUMPDEST"
										},
										{
											"begin": 4241,
											"end": 4283,
											"name": "CALLVALUE"
										},
										{
											"begin": 4241,
											"end": 4283,
											"name": "ISZERO"
										},
										{
											"begin": 4241,
											"end": 4283,
											"name": "PUSH [tag]",
											"value": "129"
										},
										{
											"begin": 4241,
											"end": 4283,
											"name": "JUMPI"
										},
										{
											"begin": 4241,
											"end": 4283,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4241,
											"end": 4283,
											"name": "DUP1"
										},
										{
											"begin": 4241,
											"end": 4283,
											"name": "REVERT"
										},
										{
											"begin": 4241,
											"end": 4283,
											"name": "tag",
											"value": "129"
										},
										{
											"begin": 4241,
											"end": 4283,
											"name": "JUMPDEST"
										},
										{
											"begin": 4241,
											"end": 4283,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 4241,
											"end": 4283,
											"name": "PUSH [tag]",
											"value": "131"
										},
										{
											"begin": 4241,
											"end": 4283,
											"name": "JUMP"
										},
										{
											"begin": 1738,
											"end": 1885,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 1738,
											"end": 1885,
											"name": "JUMPDEST"
										},
										{
											"begin": 1738,
											"end": 1885,
											"name": "CALLVALUE"
										},
										{
											"begin": 1738,
											"end": 1885,
											"name": "ISZERO"
										},
										{
											"begin": 1738,
											"end": 1885,
											"name": "PUSH [tag]",
											"value": "132"
										},
										{
											"begin": 1738,
											"end": 1885,
											"name": "JUMPI"
										},
										{
											"begin": 1738,
											"end": 1885,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1738,
											"end": 1885,
											"name": "DUP1"
										},
										{
											"begin": 1738,
											"end": 1885,
											"name": "REVERT"
										},
										{
											"begin": 1738,
											"end": 1885,
											"name": "tag",
											"value": "132"
										},
										{
											"begin": 1738,
											"end": 1885,
											"name": "JUMPDEST"
										},
										{
											"begin": 1738,
											"end": 1885,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1738,
											"end": 1885,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1738,
											"end": 1885,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1738,
											"end": 1885,
											"name": "AND"
										},
										{
											"begin": 1738,
											"end": 1885,
											"name": "PUSH [tag]",
											"value": "134"
										},
										{
											"begin": 1738,
											"end": 1885,
											"name": "JUMP"
										},
										{
											"begin": 8337,
											"end": 8716,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 8337,
											"end": 8716,
											"name": "JUMPDEST"
										},
										{
											"begin": 8337,
											"end": 8716,
											"name": "CALLVALUE"
										},
										{
											"begin": 8337,
											"end": 8716,
											"name": "ISZERO"
										},
										{
											"begin": 8337,
											"end": 8716,
											"name": "PUSH [tag]",
											"value": "135"
										},
										{
											"begin": 8337,
											"end": 8716,
											"name": "JUMPI"
										},
										{
											"begin": 8337,
											"end": 8716,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8337,
											"end": 8716,
											"name": "DUP1"
										},
										{
											"begin": 8337,
											"end": 8716,
											"name": "REVERT"
										},
										{
											"begin": 8337,
											"end": 8716,
											"name": "tag",
											"value": "135"
										},
										{
											"begin": 8337,
											"end": 8716,
											"name": "JUMPDEST"
										},
										{
											"begin": 8337,
											"end": 8716,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8337,
											"end": 8716,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8337,
											"end": 8716,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8337,
											"end": 8716,
											"name": "AND"
										},
										{
											"begin": 8337,
											"end": 8716,
											"name": "PUSH [tag]",
											"value": "137"
										},
										{
											"begin": 8337,
											"end": 8716,
											"name": "JUMP"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "JUMPDEST"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "DUP1"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "SLOAD"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "DUP2"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "AND"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "ISZERO"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "MUL"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "SUB"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "AND"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "SWAP1"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "DIV"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "DUP1"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "ADD"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "DUP1"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "SWAP2"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "DIV"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "MUL"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "ADD"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "MLOAD"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "SWAP1"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "DUP2"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "ADD"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "MSTORE"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "DUP1"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "SWAP3"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "SWAP2"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "SWAP1"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "DUP2"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "DUP2"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "MSTORE"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "ADD"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "DUP3"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "DUP1"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "SLOAD"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "DUP2"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "AND"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "ISZERO"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "MUL"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "SUB"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "AND"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "SWAP1"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "DIV"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "DUP1"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "ISZERO"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "PUSH [tag]",
											"value": "138"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "JUMPI"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "DUP1"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "LT"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "PUSH [tag]",
											"value": "139"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "JUMPI"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "DUP1"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "DUP4"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "SLOAD"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "DIV"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "MUL"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "DUP4"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "MSTORE"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "SWAP2"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "ADD"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "SWAP2"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "PUSH [tag]",
											"value": "138"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "JUMP"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "tag",
											"value": "139"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "JUMPDEST"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "DUP3"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "ADD"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "SWAP2"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "SWAP1"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "MSTORE"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "KECCAK256"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "SWAP1"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "tag",
											"value": "140"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "JUMPDEST"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "DUP2"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "SLOAD"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "DUP2"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "MSTORE"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "SWAP1"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "ADD"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "SWAP1"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "ADD"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "DUP1"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "DUP4"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "GT"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "PUSH [tag]",
											"value": "140"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "JUMPI"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "DUP3"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "SWAP1"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "SUB"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "AND"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "DUP3"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "ADD"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "SWAP2"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "tag",
											"value": "138"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "JUMPDEST"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "POP"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "POP"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "POP"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "POP"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "POP"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "DUP2"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12116,
											"end": 12293,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 12116,
											"end": 12293,
											"name": "JUMPDEST"
										},
										{
											"begin": 1546,
											"end": 1551,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1546,
											"end": 1551,
											"name": "SLOAD"
										},
										{
											"begin": 1532,
											"end": 1542,
											"name": "CALLER"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1532,
											"end": 1551,
											"name": "SWAP1"
										},
										{
											"begin": 1532,
											"end": 1551,
											"name": "DUP2"
										},
										{
											"begin": 1532,
											"end": 1551,
											"name": "AND"
										},
										{
											"begin": 1546,
											"end": 1551,
											"name": "SWAP2"
										},
										{
											"begin": 1546,
											"end": 1551,
											"name": "AND"
										},
										{
											"begin": 1532,
											"end": 1551,
											"name": "EQ"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "PUSH [tag]",
											"value": "142"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "JUMPI"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "DUP1"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "REVERT"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "tag",
											"value": "142"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "JUMPDEST"
										},
										{
											"begin": 12188,
											"end": 12198,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 12188,
											"end": 12205,
											"name": "DUP1"
										},
										{
											"begin": 12188,
											"end": 12205,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FF0000000000000000000000000000000000000000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 12188,
											"end": 12205,
											"name": "SWAP1"
										},
										{
											"begin": 12188,
											"end": 12205,
											"name": "SWAP2"
										},
										{
											"begin": 12188,
											"end": 12205,
											"name": "AND"
										},
										{
											"begin": 12188,
											"end": 12205,
											"name": "OR"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 12215,
											"end": 12249,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 12215,
											"end": 12249,
											"name": "DUP4"
										},
										{
											"begin": 12215,
											"end": 12249,
											"name": "AND"
										},
										{
											"begin": 12215,
											"end": 12249,
											"name": "OR"
										},
										{
											"begin": 12215,
											"end": 12249,
											"name": "SWAP1"
										},
										{
											"begin": 12215,
											"end": 12249,
											"name": "SSTORE"
										},
										{
											"begin": 12259,
											"end": 12286,
											"name": "PUSH",
											"value": "CC358699805E9A8B7F77B522628C7CB9ABD07D9EFB86B6FB616AF1609036A99E"
										},
										{
											"begin": 12215,
											"end": 12249,
											"name": "DUP2"
										},
										{
											"begin": 12259,
											"end": 12286,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12259,
											"end": 12286,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 12259,
											"end": 12286,
											"name": "SWAP1"
										},
										{
											"begin": 12259,
											"end": 12286,
											"name": "SWAP2"
										},
										{
											"begin": 12259,
											"end": 12286,
											"name": "AND"
										},
										{
											"begin": 12259,
											"end": 12286,
											"name": "DUP2"
										},
										{
											"begin": 12259,
											"end": 12286,
											"name": "MSTORE"
										},
										{
											"begin": 12259,
											"end": 12286,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12259,
											"end": 12286,
											"name": "ADD"
										},
										{
											"begin": 12259,
											"end": 12286,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12259,
											"end": 12286,
											"name": "MLOAD"
										},
										{
											"begin": 12259,
											"end": 12286,
											"name": "DUP1"
										},
										{
											"begin": 12259,
											"end": 12286,
											"name": "SWAP2"
										},
										{
											"begin": 12259,
											"end": 12286,
											"name": "SUB"
										},
										{
											"begin": 12259,
											"end": 12286,
											"name": "SWAP1"
										},
										{
											"begin": 12259,
											"end": 12286,
											"name": "LOG1"
										},
										{
											"begin": 12116,
											"end": 12293,
											"name": "POP"
										},
										{
											"begin": 12116,
											"end": 12293,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11388,
											"end": 11684,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 11388,
											"end": 11684,
											"name": "JUMPDEST"
										},
										{
											"begin": 11459,
											"end": 11465,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3037,
											"end": 3045,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 3019,
											"end": 3027,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3019,
											"end": 3045,
											"name": "LT"
										},
										{
											"begin": 3017,
											"end": 3046,
											"name": "ISZERO"
										},
										{
											"begin": 3009,
											"end": 3047,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 3009,
											"end": 3047,
											"name": "JUMPI"
										},
										{
											"begin": 3009,
											"end": 3047,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3009,
											"end": 3047,
											"name": "DUP1"
										},
										{
											"begin": 3009,
											"end": 3047,
											"name": "REVERT"
										},
										{
											"begin": 3009,
											"end": 3047,
											"name": "tag",
											"value": "145"
										},
										{
											"begin": 3009,
											"end": 3047,
											"name": "JUMPDEST"
										},
										{
											"begin": 11481,
											"end": 11491,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 11481,
											"end": 11491,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": 11481,
											"end": 11491,
											"name": "SWAP1"
										},
										{
											"begin": 11481,
											"end": 11491,
											"name": "DIV"
										},
										{
											"begin": 11481,
											"end": 11491,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 11481,
											"end": 11491,
											"name": "AND"
										},
										{
											"begin": 11477,
											"end": 11678,
											"name": "ISZERO"
										},
										{
											"begin": 11477,
											"end": 11678,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 11477,
											"end": 11678,
											"name": "JUMPI"
										},
										{
											"begin": 11536,
											"end": 11551,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 11536,
											"end": 11551,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 11536,
											"end": 11551,
											"name": "AND"
										},
										{
											"begin": 11514,
											"end": 11568,
											"name": "PUSH",
											"value": "AEE92D33"
										},
										{
											"begin": 11569,
											"end": 11579,
											"name": "CALLER"
										},
										{
											"begin": 11581,
											"end": 11589,
											"name": "DUP6"
										},
										{
											"begin": 11591,
											"end": 11597,
											"name": "DUP6"
										},
										{
											"begin": 11514,
											"end": 11598,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11514,
											"end": 11598,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": 11514,
											"end": 11598,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 11514,
											"end": 11598,
											"name": "DUP7"
										},
										{
											"begin": 11514,
											"end": 11598,
											"name": "AND"
										},
										{
											"begin": 11514,
											"end": 11598,
											"name": "MUL"
										},
										{
											"begin": 11514,
											"end": 11598,
											"name": "DUP2"
										},
										{
											"begin": 11514,
											"end": 11598,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 11514,
											"end": 11598,
											"name": "SWAP4"
										},
										{
											"begin": 11514,
											"end": 11598,
											"name": "DUP5"
										},
										{
											"begin": 11514,
											"end": 11598,
											"name": "AND"
										},
										{
											"begin": 11514,
											"end": 11598,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11514,
											"end": 11598,
											"name": "DUP3"
										},
										{
											"begin": 11514,
											"end": 11598,
											"name": "ADD"
										},
										{
											"begin": 11514,
											"end": 11598,
											"name": "MSTORE"
										},
										{
											"begin": 11514,
											"end": 11598,
											"name": "SWAP2"
										},
										{
											"begin": 11514,
											"end": 11598,
											"name": "SWAP1"
										},
										{
											"begin": 11514,
											"end": 11598,
											"name": "SWAP3"
										},
										{
											"begin": 11514,
											"end": 11598,
											"name": "AND"
										},
										{
											"begin": 11514,
											"end": 11598,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 11514,
											"end": 11598,
											"name": "DUP3"
										},
										{
											"begin": 11514,
											"end": 11598,
											"name": "ADD"
										},
										{
											"begin": 11514,
											"end": 11598,
											"name": "MSTORE"
										},
										{
											"begin": 11514,
											"end": 11598,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 11514,
											"end": 11598,
											"name": "DUP2"
										},
										{
											"begin": 11514,
											"end": 11598,
											"name": "ADD"
										},
										{
											"begin": 11514,
											"end": 11598,
											"name": "SWAP2"
										},
										{
											"begin": 11514,
											"end": 11598,
											"name": "SWAP1"
										},
										{
											"begin": 11514,
											"end": 11598,
											"name": "SWAP2"
										},
										{
											"begin": 11514,
											"end": 11598,
											"name": "MSTORE"
										},
										{
											"begin": 11514,
											"end": 11598,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 11514,
											"end": 11598,
											"name": "ADD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11514,
											"end": 11598,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11514,
											"end": 11598,
											"name": "MLOAD"
										},
										{
											"begin": 11514,
											"end": 11598,
											"name": "DUP1"
										},
										{
											"begin": 11514,
											"end": 11598,
											"name": "DUP4"
										},
										{
											"begin": 11514,
											"end": 11598,
											"name": "SUB"
										},
										{
											"begin": 11514,
											"end": 11598,
											"name": "DUP2"
										},
										{
											"begin": 11514,
											"end": 11598,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11514,
											"end": 11598,
											"name": "DUP8"
										},
										{
											"begin": 11514,
											"end": 11598,
											"name": "DUP1"
										},
										{
											"begin": 11514,
											"end": 11598,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 11514,
											"end": 11598,
											"name": "ISZERO"
										},
										{
											"begin": 11514,
											"end": 11598,
											"name": "ISZERO"
										},
										{
											"begin": 11514,
											"end": 11598,
											"name": "PUSH [tag]",
											"value": "148"
										},
										{
											"begin": 11514,
											"end": 11598,
											"name": "JUMPI"
										},
										{
											"begin": 11514,
											"end": 11598,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11514,
											"end": 11598,
											"name": "DUP1"
										},
										{
											"begin": 11514,
											"end": 11598,
											"name": "REVERT"
										},
										{
											"begin": 11514,
											"end": 11598,
											"name": "tag",
											"value": "148"
										},
										{
											"begin": 11514,
											"end": 11598,
											"name": "JUMPDEST"
										},
										{
											"begin": 11514,
											"end": 11598,
											"name": "PUSH",
											"value": "2C6"
										},
										{
											"begin": 11514,
											"end": 11598,
											"name": "GAS"
										},
										{
											"begin": 11514,
											"end": 11598,
											"name": "SUB"
										},
										{
											"begin": 11514,
											"end": 11598,
											"name": "CALL"
										},
										{
											"begin": 11514,
											"end": 11598,
											"name": "ISZERO"
										},
										{
											"begin": 11514,
											"end": 11598,
											"name": "ISZERO"
										},
										{
											"begin": 11514,
											"end": 11598,
											"name": "PUSH [tag]",
											"value": "149"
										},
										{
											"begin": 11514,
											"end": 11598,
											"name": "JUMPI"
										},
										{
											"begin": 11514,
											"end": 11598,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11514,
											"end": 11598,
											"name": "DUP1"
										},
										{
											"begin": 11514,
											"end": 11598,
											"name": "REVERT"
										},
										{
											"begin": 11514,
											"end": 11598,
											"name": "tag",
											"value": "149"
										},
										{
											"begin": 11514,
											"end": 11598,
											"name": "JUMPDEST"
										},
										{
											"begin": 11514,
											"end": 11598,
											"name": "POP"
										},
										{
											"begin": 11514,
											"end": 11598,
											"name": "POP"
										},
										{
											"begin": 11514,
											"end": 11598,
											"name": "POP"
										},
										{
											"begin": 11507,
											"end": 11598,
											"name": "PUSH [tag]",
											"value": "151"
										},
										{
											"begin": 11507,
											"end": 11598,
											"name": "JUMP"
										},
										{
											"begin": 11477,
											"end": 11678,
											"name": "tag",
											"value": "147"
										},
										{
											"begin": 11477,
											"end": 11678,
											"name": "JUMPDEST"
										},
										{
											"begin": 11636,
											"end": 11667,
											"name": "PUSH [tag]",
											"value": "151"
										},
										{
											"begin": 11650,
											"end": 11658,
											"name": "DUP4"
										},
										{
											"begin": 11660,
											"end": 11666,
											"name": "DUP4"
										},
										{
											"begin": 11636,
											"end": 11649,
											"name": "PUSH [tag]",
											"value": "152"
										},
										{
											"begin": 11636,
											"end": 11667,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11636,
											"end": 11667,
											"name": "tag",
											"value": "151"
										},
										{
											"begin": 11636,
											"end": 11667,
											"name": "JUMPDEST"
										},
										{
											"begin": 11388,
											"end": 11684,
											"name": "POP"
										},
										{
											"begin": 11388,
											"end": 11684,
											"name": "POP"
										},
										{
											"begin": 11388,
											"end": 11684,
											"name": "POP"
										},
										{
											"begin": 11388,
											"end": 11684,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 9488,
											"end": 9510,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 9488,
											"end": 9510,
											"name": "JUMPDEST"
										},
										{
											"begin": 9488,
											"end": 9510,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 9488,
											"end": 9510,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": 9488,
											"end": 9510,
											"name": "SWAP1"
										},
										{
											"begin": 9488,
											"end": 9510,
											"name": "DIV"
										},
										{
											"begin": 9488,
											"end": 9510,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 9488,
											"end": 9510,
											"name": "AND"
										},
										{
											"begin": 9488,
											"end": 9510,
											"name": "DUP2"
										},
										{
											"begin": 9488,
											"end": 9510,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8026,
											"end": 8168,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 8026,
											"end": 8168,
											"name": "JUMPDEST"
										},
										{
											"begin": 1546,
											"end": 1551,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1546,
											"end": 1551,
											"name": "SLOAD"
										},
										{
											"begin": 1532,
											"end": 1542,
											"name": "CALLER"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1532,
											"end": 1551,
											"name": "SWAP1"
										},
										{
											"begin": 1532,
											"end": 1551,
											"name": "DUP2"
										},
										{
											"begin": 1532,
											"end": 1551,
											"name": "AND"
										},
										{
											"begin": 1546,
											"end": 1551,
											"name": "SWAP2"
										},
										{
											"begin": 1546,
											"end": 1551,
											"name": "AND"
										},
										{
											"begin": 1532,
											"end": 1551,
											"name": "EQ"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "PUSH [tag]",
											"value": "154"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "JUMPI"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "DUP1"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "REVERT"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "tag",
											"value": "154"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8095,
											"end": 8119,
											"name": "DUP2"
										},
										{
											"begin": 8095,
											"end": 8119,
											"name": "AND"
										},
										{
											"begin": 8095,
											"end": 8119,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8095,
											"end": 8119,
											"name": "SWAP1"
										},
										{
											"begin": 8095,
											"end": 8119,
											"name": "DUP2"
										},
										{
											"begin": 8095,
											"end": 8119,
											"name": "MSTORE"
										},
										{
											"begin": 8095,
											"end": 8108,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 8095,
											"end": 8119,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8095,
											"end": 8119,
											"name": "MSTORE"
										},
										{
											"begin": 8095,
											"end": 8119,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8095,
											"end": 8119,
											"name": "SWAP1"
										},
										{
											"begin": 8095,
											"end": 8119,
											"name": "DUP2"
										},
										{
											"begin": 8095,
											"end": 8119,
											"name": "SWAP1"
										},
										{
											"begin": 8095,
											"end": 8119,
											"name": "KECCAK256"
										},
										{
											"begin": 8095,
											"end": 8126,
											"name": "DUP1"
										},
										{
											"begin": 8095,
											"end": 8126,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 8095,
											"end": 8126,
											"name": "AND"
										},
										{
											"begin": 8122,
											"end": 8126,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 8095,
											"end": 8126,
											"name": "OR"
										},
										{
											"begin": 8095,
											"end": 8126,
											"name": "SWAP1"
										},
										{
											"begin": 8095,
											"end": 8126,
											"name": "SSTORE"
										},
										{
											"begin": 8136,
											"end": 8161,
											"name": "PUSH",
											"value": "42E160154868087D6BFDC0CA23D96A1C1CFA32F1B72BA9BA27B69B98A0D819DC"
										},
										{
											"begin": 8136,
											"end": 8161,
											"name": "SWAP1"
										},
										{
											"begin": 8109,
											"end": 8118,
											"name": "DUP3"
										},
										{
											"begin": 8109,
											"end": 8118,
											"name": "SWAP1"
										},
										{
											"begin": 8136,
											"end": 8161,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8136,
											"end": 8161,
											"name": "SWAP1"
										},
										{
											"begin": 8136,
											"end": 8161,
											"name": "SWAP2"
										},
										{
											"begin": 8136,
											"end": 8161,
											"name": "AND"
										},
										{
											"begin": 8136,
											"end": 8161,
											"name": "DUP2"
										},
										{
											"begin": 8136,
											"end": 8161,
											"name": "MSTORE"
										},
										{
											"begin": 8136,
											"end": 8161,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8136,
											"end": 8161,
											"name": "ADD"
										},
										{
											"begin": 8136,
											"end": 8161,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8136,
											"end": 8161,
											"name": "MLOAD"
										},
										{
											"begin": 8136,
											"end": 8161,
											"name": "DUP1"
										},
										{
											"begin": 8136,
											"end": 8161,
											"name": "SWAP2"
										},
										{
											"begin": 8136,
											"end": 8161,
											"name": "SUB"
										},
										{
											"begin": 8136,
											"end": 8161,
											"name": "SWAP1"
										},
										{
											"begin": 8136,
											"end": 8161,
											"name": "LOG1"
										},
										{
											"begin": 8026,
											"end": 8168,
											"name": "POP"
										},
										{
											"begin": 8026,
											"end": 8168,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12356,
											"end": 12568,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 12356,
											"end": 12568,
											"name": "JUMPDEST"
										},
										{
											"begin": 12424,
											"end": 12434,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 12424,
											"end": 12434,
											"name": "SLOAD"
										},
										{
											"begin": 12404,
											"end": 12408,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12404,
											"end": 12408,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": 12424,
											"end": 12434,
											"name": "SWAP1"
										},
										{
											"begin": 12424,
											"end": 12434,
											"name": "DIV"
										},
										{
											"begin": 12424,
											"end": 12434,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 12424,
											"end": 12434,
											"name": "AND"
										},
										{
											"begin": 12420,
											"end": 12562,
											"name": "ISZERO"
										},
										{
											"begin": 12420,
											"end": 12562,
											"name": "PUSH [tag]",
											"value": "157"
										},
										{
											"begin": 12420,
											"end": 12562,
											"name": "JUMPI"
										},
										{
											"begin": 12471,
											"end": 12486,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 12471,
											"end": 12486,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 12471,
											"end": 12486,
											"name": "AND"
										},
										{
											"begin": 12457,
											"end": 12499,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 12471,
											"end": 12486,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12457,
											"end": 12501,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12457,
											"end": 12501,
											"name": "MLOAD"
										},
										{
											"begin": 12457,
											"end": 12501,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12457,
											"end": 12501,
											"name": "ADD"
										},
										{
											"begin": 12457,
											"end": 12501,
											"name": "MSTORE"
										},
										{
											"begin": 12457,
											"end": 12501,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12457,
											"end": 12501,
											"name": "MLOAD"
										},
										{
											"begin": 12457,
											"end": 12501,
											"name": "DUP2"
										},
										{
											"begin": 12457,
											"end": 12501,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 12457,
											"end": 12501,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": 12457,
											"end": 12501,
											"name": "MUL"
										},
										{
											"begin": 12457,
											"end": 12501,
											"name": "DUP2"
										},
										{
											"begin": 12457,
											"end": 12501,
											"name": "MSTORE"
										},
										{
											"begin": 12457,
											"end": 12501,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12457,
											"end": 12501,
											"name": "ADD"
										},
										{
											"begin": 12457,
											"end": 12501,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12457,
											"end": 12501,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12457,
											"end": 12501,
											"name": "MLOAD"
										},
										{
											"begin": 12457,
											"end": 12501,
											"name": "DUP1"
										},
										{
											"begin": 12457,
											"end": 12501,
											"name": "DUP4"
										},
										{
											"begin": 12457,
											"end": 12501,
											"name": "SUB"
										},
										{
											"begin": 12457,
											"end": 12501,
											"name": "DUP2"
										},
										{
											"begin": 12457,
											"end": 12501,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12457,
											"end": 12501,
											"name": "DUP8"
										},
										{
											"begin": 12457,
											"end": 12501,
											"name": "DUP1"
										},
										{
											"begin": 12457,
											"end": 12501,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 12457,
											"end": 12501,
											"name": "ISZERO"
										},
										{
											"begin": 12457,
											"end": 12501,
											"name": "ISZERO"
										},
										{
											"begin": 12457,
											"end": 12501,
											"name": "PUSH [tag]",
											"value": "158"
										},
										{
											"begin": 12457,
											"end": 12501,
											"name": "JUMPI"
										},
										{
											"begin": 12457,
											"end": 12501,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12457,
											"end": 12501,
											"name": "DUP1"
										},
										{
											"begin": 12457,
											"end": 12501,
											"name": "REVERT"
										},
										{
											"begin": 12457,
											"end": 12501,
											"name": "tag",
											"value": "158"
										},
										{
											"begin": 12457,
											"end": 12501,
											"name": "JUMPDEST"
										},
										{
											"begin": 12457,
											"end": 12501,
											"name": "PUSH",
											"value": "2C6"
										},
										{
											"begin": 12457,
											"end": 12501,
											"name": "GAS"
										},
										{
											"begin": 12457,
											"end": 12501,
											"name": "SUB"
										},
										{
											"begin": 12457,
											"end": 12501,
											"name": "CALL"
										},
										{
											"begin": 12457,
											"end": 12501,
											"name": "ISZERO"
										},
										{
											"begin": 12457,
											"end": 12501,
											"name": "ISZERO"
										},
										{
											"begin": 12457,
											"end": 12501,
											"name": "PUSH [tag]",
											"value": "159"
										},
										{
											"begin": 12457,
											"end": 12501,
											"name": "JUMPI"
										},
										{
											"begin": 12457,
											"end": 12501,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12457,
											"end": 12501,
											"name": "DUP1"
										},
										{
											"begin": 12457,
											"end": 12501,
											"name": "REVERT"
										},
										{
											"begin": 12457,
											"end": 12501,
											"name": "tag",
											"value": "159"
										},
										{
											"begin": 12457,
											"end": 12501,
											"name": "JUMPDEST"
										},
										{
											"begin": 12457,
											"end": 12501,
											"name": "POP"
										},
										{
											"begin": 12457,
											"end": 12501,
											"name": "POP"
										},
										{
											"begin": 12457,
											"end": 12501,
											"name": "POP"
										},
										{
											"begin": 12457,
											"end": 12501,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12457,
											"end": 12501,
											"name": "MLOAD"
										},
										{
											"begin": 12457,
											"end": 12501,
											"name": "DUP1"
										},
										{
											"begin": 12457,
											"end": 12501,
											"name": "MLOAD"
										},
										{
											"begin": 12457,
											"end": 12501,
											"name": "SWAP1"
										},
										{
											"begin": 12457,
											"end": 12501,
											"name": "POP"
										},
										{
											"begin": 12450,
											"end": 12501,
											"name": "SWAP1"
										},
										{
											"begin": 12450,
											"end": 12501,
											"name": "POP"
										},
										{
											"begin": 12450,
											"end": 12501,
											"name": "PUSH [tag]",
											"value": "160"
										},
										{
											"begin": 12450,
											"end": 12501,
											"name": "JUMP"
										},
										{
											"begin": 12420,
											"end": 12562,
											"name": "tag",
											"value": "157"
										},
										{
											"begin": 12420,
											"end": 12562,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 12539,
											"end": 12551,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12539,
											"end": 12551,
											"name": "SLOAD"
										},
										{
											"begin": 12420,
											"end": 12562,
											"name": "tag",
											"value": "160"
										},
										{
											"begin": 12420,
											"end": 12562,
											"name": "JUMPDEST"
										},
										{
											"begin": 12356,
											"end": 12568,
											"name": "SWAP1"
										},
										{
											"begin": 12356,
											"end": 12568,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10631,
											"end": 10986,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 10631,
											"end": 10986,
											"name": "JUMPDEST"
										},
										{
											"begin": 7074,
											"end": 7080,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7074,
											"end": 7080,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": 7074,
											"end": 7080,
											"name": "SWAP1"
										},
										{
											"begin": 7074,
											"end": 7080,
											"name": "DIV"
										},
										{
											"begin": 7074,
											"end": 7080,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 7074,
											"end": 7080,
											"name": "AND"
										},
										{
											"begin": 7073,
											"end": 7080,
											"name": "ISZERO"
										},
										{
											"begin": 7065,
											"end": 7081,
											"name": "PUSH [tag]",
											"value": "162"
										},
										{
											"begin": 7065,
											"end": 7081,
											"name": "JUMPI"
										},
										{
											"begin": 7065,
											"end": 7081,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7065,
											"end": 7081,
											"name": "DUP1"
										},
										{
											"begin": 7065,
											"end": 7081,
											"name": "REVERT"
										},
										{
											"begin": 7065,
											"end": 7081,
											"name": "tag",
											"value": "162"
										},
										{
											"begin": 7065,
											"end": 7081,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 10734,
											"end": 10754,
											"name": "DUP4"
										},
										{
											"begin": 10734,
											"end": 10754,
											"name": "AND"
										},
										{
											"begin": 10734,
											"end": 10754,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10734,
											"end": 10754,
											"name": "SWAP1"
										},
										{
											"begin": 10734,
											"end": 10754,
											"name": "DUP2"
										},
										{
											"begin": 10734,
											"end": 10754,
											"name": "MSTORE"
										},
										{
											"begin": 10734,
											"end": 10747,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 10734,
											"end": 10754,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10734,
											"end": 10754,
											"name": "MSTORE"
										},
										{
											"begin": 10734,
											"end": 10754,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10734,
											"end": 10754,
											"name": "SWAP1"
										},
										{
											"begin": 10734,
											"end": 10754,
											"name": "KECCAK256"
										},
										{
											"begin": 10734,
											"end": 10754,
											"name": "SLOAD"
										},
										{
											"begin": 10734,
											"end": 10754,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 10734,
											"end": 10754,
											"name": "AND"
										},
										{
											"begin": 10733,
											"end": 10754,
											"name": "ISZERO"
										},
										{
											"begin": 10725,
											"end": 10755,
											"name": "PUSH [tag]",
											"value": "164"
										},
										{
											"begin": 10725,
											"end": 10755,
											"name": "JUMPI"
										},
										{
											"begin": 10725,
											"end": 10755,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10725,
											"end": 10755,
											"name": "DUP1"
										},
										{
											"begin": 10725,
											"end": 10755,
											"name": "REVERT"
										},
										{
											"begin": 10725,
											"end": 10755,
											"name": "tag",
											"value": "164"
										},
										{
											"begin": 10725,
											"end": 10755,
											"name": "JUMPDEST"
										},
										{
											"begin": 10769,
											"end": 10779,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 10769,
											"end": 10779,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": 10769,
											"end": 10779,
											"name": "SWAP1"
										},
										{
											"begin": 10769,
											"end": 10779,
											"name": "DIV"
										},
										{
											"begin": 10769,
											"end": 10779,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 10769,
											"end": 10779,
											"name": "AND"
										},
										{
											"begin": 10765,
											"end": 10980,
											"name": "ISZERO"
										},
										{
											"begin": 10765,
											"end": 10980,
											"name": "PUSH [tag]",
											"value": "165"
										},
										{
											"begin": 10765,
											"end": 10980,
											"name": "JUMPI"
										},
										{
											"begin": 10824,
											"end": 10839,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 10824,
											"end": 10839,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 10824,
											"end": 10839,
											"name": "AND"
										},
										{
											"begin": 10802,
											"end": 10861,
											"name": "PUSH",
											"value": "8B477ADB"
										},
										{
											"begin": 10862,
											"end": 10872,
											"name": "CALLER"
										},
										{
											"begin": 10874,
											"end": 10879,
											"name": "DUP6"
										},
										{
											"begin": 10881,
											"end": 10884,
											"name": "DUP6"
										},
										{
											"begin": 10886,
											"end": 10892,
											"name": "DUP6"
										},
										{
											"begin": 10802,
											"end": 10893,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10802,
											"end": 10893,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": 10802,
											"end": 10893,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 10802,
											"end": 10893,
											"name": "DUP8"
										},
										{
											"begin": 10802,
											"end": 10893,
											"name": "AND"
										},
										{
											"begin": 10802,
											"end": 10893,
											"name": "MUL"
										},
										{
											"begin": 10802,
											"end": 10893,
											"name": "DUP2"
										},
										{
											"begin": 10802,
											"end": 10893,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 10802,
											"end": 10893,
											"name": "SWAP5"
										},
										{
											"begin": 10802,
											"end": 10893,
											"name": "DUP6"
										},
										{
											"begin": 10802,
											"end": 10893,
											"name": "AND"
										},
										{
											"begin": 10802,
											"end": 10893,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10802,
											"end": 10893,
											"name": "DUP3"
										},
										{
											"begin": 10802,
											"end": 10893,
											"name": "ADD"
										},
										{
											"begin": 10802,
											"end": 10893,
											"name": "MSTORE"
										},
										{
											"begin": 10802,
											"end": 10893,
											"name": "SWAP3"
										},
										{
											"begin": 10802,
											"end": 10893,
											"name": "DUP5"
										},
										{
											"begin": 10802,
											"end": 10893,
											"name": "AND"
										},
										{
											"begin": 10802,
											"end": 10893,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 10802,
											"end": 10893,
											"name": "DUP5"
										},
										{
											"begin": 10802,
											"end": 10893,
											"name": "ADD"
										},
										{
											"begin": 10802,
											"end": 10893,
											"name": "MSTORE"
										},
										{
											"begin": 10802,
											"end": 10893,
											"name": "SWAP3"
										},
										{
											"begin": 10802,
											"end": 10893,
											"name": "AND"
										},
										{
											"begin": 10802,
											"end": 10893,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 10802,
											"end": 10893,
											"name": "DUP3"
										},
										{
											"begin": 10802,
											"end": 10893,
											"name": "ADD"
										},
										{
											"begin": 10802,
											"end": 10893,
											"name": "MSTORE"
										},
										{
											"begin": 10802,
											"end": 10893,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 10802,
											"end": 10893,
											"name": "DUP2"
										},
										{
											"begin": 10802,
											"end": 10893,
											"name": "ADD"
										},
										{
											"begin": 10802,
											"end": 10893,
											"name": "SWAP2"
										},
										{
											"begin": 10802,
											"end": 10893,
											"name": "SWAP1"
										},
										{
											"begin": 10802,
											"end": 10893,
											"name": "SWAP2"
										},
										{
											"begin": 10802,
											"end": 10893,
											"name": "MSTORE"
										},
										{
											"begin": 10802,
											"end": 10893,
											"name": "PUSH",
											"value": "84"
										},
										{
											"begin": 10802,
											"end": 10893,
											"name": "ADD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10802,
											"end": 10893,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10802,
											"end": 10893,
											"name": "MLOAD"
										},
										{
											"begin": 10802,
											"end": 10893,
											"name": "DUP1"
										},
										{
											"begin": 10802,
											"end": 10893,
											"name": "DUP4"
										},
										{
											"begin": 10802,
											"end": 10893,
											"name": "SUB"
										},
										{
											"begin": 10802,
											"end": 10893,
											"name": "DUP2"
										},
										{
											"begin": 10802,
											"end": 10893,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10802,
											"end": 10893,
											"name": "DUP8"
										},
										{
											"begin": 10802,
											"end": 10893,
											"name": "DUP1"
										},
										{
											"begin": 10802,
											"end": 10893,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 10802,
											"end": 10893,
											"name": "ISZERO"
										},
										{
											"begin": 10802,
											"end": 10893,
											"name": "ISZERO"
										},
										{
											"begin": 10802,
											"end": 10893,
											"name": "PUSH [tag]",
											"value": "148"
										},
										{
											"begin": 10802,
											"end": 10893,
											"name": "JUMPI"
										},
										{
											"begin": 10802,
											"end": 10893,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10802,
											"end": 10893,
											"name": "DUP1"
										},
										{
											"begin": 10802,
											"end": 10893,
											"name": "REVERT"
										},
										{
											"begin": 10765,
											"end": 10980,
											"name": "tag",
											"value": "165"
										},
										{
											"begin": 10765,
											"end": 10980,
											"name": "JUMPDEST"
										},
										{
											"begin": 10931,
											"end": 10969,
											"name": "PUSH [tag]",
											"value": "151"
										},
										{
											"begin": 10950,
											"end": 10955,
											"name": "DUP4"
										},
										{
											"begin": 10957,
											"end": 10960,
											"name": "DUP4"
										},
										{
											"begin": 10962,
											"end": 10968,
											"name": "DUP4"
										},
										{
											"begin": 10931,
											"end": 10949,
											"name": "PUSH [tag]",
											"value": "170"
										},
										{
											"begin": 10931,
											"end": 10969,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9452,
											"end": 9482,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 9452,
											"end": 9482,
											"name": "JUMPDEST"
										},
										{
											"begin": 9452,
											"end": 9482,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 9452,
											"end": 9482,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 9452,
											"end": 9482,
											"name": "AND"
										},
										{
											"begin": 9452,
											"end": 9482,
											"name": "DUP2"
										},
										{
											"begin": 9452,
											"end": 9482,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2702,
											"end": 2742,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 2702,
											"end": 2742,
											"name": "JUMPDEST"
										},
										{
											"begin": 2702,
											"end": 2742,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2702,
											"end": 2742,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2702,
											"end": 2742,
											"name": "MSTORE"
										},
										{
											"begin": 2702,
											"end": 2742,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2702,
											"end": 2742,
											"name": "SWAP1"
										},
										{
											"begin": 2702,
											"end": 2742,
											"name": "DUP2"
										},
										{
											"begin": 2702,
											"end": 2742,
											"name": "MSTORE"
										},
										{
											"begin": 2702,
											"end": 2742,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2702,
											"end": 2742,
											"name": "SWAP1"
										},
										{
											"begin": 2702,
											"end": 2742,
											"name": "KECCAK256"
										},
										{
											"begin": 2702,
											"end": 2742,
											"name": "SLOAD"
										},
										{
											"begin": 2702,
											"end": 2742,
											"name": "DUP2"
										},
										{
											"begin": 2702,
											"end": 2742,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 9426,
											"end": 9446,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 9426,
											"end": 9446,
											"name": "JUMPDEST"
										},
										{
											"begin": 9426,
											"end": 9446,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 9426,
											"end": 9446,
											"name": "SLOAD"
										},
										{
											"begin": 9426,
											"end": 9446,
											"name": "DUP2"
										},
										{
											"begin": 9426,
											"end": 9446,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2864,
											"end": 2890,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 2864,
											"end": 2890,
											"name": "JUMPDEST"
										},
										{
											"begin": 2864,
											"end": 2890,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2864,
											"end": 2890,
											"name": "SLOAD"
										},
										{
											"begin": 2864,
											"end": 2890,
											"name": "DUP2"
										},
										{
											"begin": 2864,
											"end": 2890,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1917,
											"end": 1941,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 1917,
											"end": 1941,
											"name": "JUMPDEST"
										},
										{
											"begin": 1917,
											"end": 1941,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1917,
											"end": 1941,
											"name": "SLOAD"
										},
										{
											"begin": 1917,
											"end": 1941,
											"name": "DUP2"
										},
										{
											"begin": 1917,
											"end": 1941,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7491,
											"end": 7578,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 7491,
											"end": 7578,
											"name": "JUMPDEST"
										},
										{
											"begin": 1546,
											"end": 1551,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1546,
											"end": 1551,
											"name": "SLOAD"
										},
										{
											"begin": 1532,
											"end": 1542,
											"name": "CALLER"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1532,
											"end": 1551,
											"name": "SWAP1"
										},
										{
											"begin": 1532,
											"end": 1551,
											"name": "DUP2"
										},
										{
											"begin": 1532,
											"end": 1551,
											"name": "AND"
										},
										{
											"begin": 1546,
											"end": 1551,
											"name": "SWAP2"
										},
										{
											"begin": 1546,
											"end": 1551,
											"name": "AND"
										},
										{
											"begin": 1532,
											"end": 1551,
											"name": "EQ"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "PUSH [tag]",
											"value": "172"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "JUMPI"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "DUP1"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "REVERT"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "tag",
											"value": "172"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "JUMPDEST"
										},
										{
											"begin": 7226,
											"end": 7232,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7226,
											"end": 7232,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": 7226,
											"end": 7232,
											"name": "SWAP1"
										},
										{
											"begin": 7226,
											"end": 7232,
											"name": "DIV"
										},
										{
											"begin": 7226,
											"end": 7232,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 7226,
											"end": 7232,
											"name": "AND"
										},
										{
											"begin": 7218,
											"end": 7233,
											"name": "ISZERO"
										},
										{
											"begin": 7218,
											"end": 7233,
											"name": "ISZERO"
										},
										{
											"begin": 7218,
											"end": 7233,
											"name": "PUSH [tag]",
											"value": "174"
										},
										{
											"begin": 7218,
											"end": 7233,
											"name": "JUMPI"
										},
										{
											"begin": 7218,
											"end": 7233,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7218,
											"end": 7233,
											"name": "DUP1"
										},
										{
											"begin": 7218,
											"end": 7233,
											"name": "REVERT"
										},
										{
											"begin": 7218,
											"end": 7233,
											"name": "tag",
											"value": "174"
										},
										{
											"begin": 7218,
											"end": 7233,
											"name": "JUMPDEST"
										},
										{
											"begin": 7553,
											"end": 7558,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7544,
											"end": 7558,
											"name": "DUP1"
										},
										{
											"begin": 7544,
											"end": 7558,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FF0000000000000000000000000000000000000000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 7544,
											"end": 7558,
											"name": "AND"
										},
										{
											"begin": 7544,
											"end": 7558,
											"name": "SWAP1"
										},
										{
											"begin": 7544,
											"end": 7558,
											"name": "SSTORE"
										},
										{
											"begin": 7564,
											"end": 7573,
											"name": "PUSH",
											"value": "7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33"
										},
										{
											"begin": 7564,
											"end": 7573,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7564,
											"end": 7573,
											"name": "MLOAD"
										},
										{
											"begin": 7564,
											"end": 7573,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7564,
											"end": 7573,
											"name": "MLOAD"
										},
										{
											"begin": 7564,
											"end": 7573,
											"name": "DUP1"
										},
										{
											"begin": 7564,
											"end": 7573,
											"name": "SWAP2"
										},
										{
											"begin": 7564,
											"end": 7573,
											"name": "SUB"
										},
										{
											"begin": 7564,
											"end": 7573,
											"name": "SWAP1"
										},
										{
											"begin": 7564,
											"end": 7573,
											"name": "LOG1"
										},
										{
											"begin": 7491,
											"end": 7578,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7750,
											"end": 7872,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 7750,
											"end": 7872,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7844,
											"end": 7865,
											"name": "DUP2"
										},
										{
											"begin": 7844,
											"end": 7865,
											"name": "AND"
										},
										{
											"begin": 7821,
											"end": 7825,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7844,
											"end": 7865,
											"name": "SWAP1"
										},
										{
											"begin": 7844,
											"end": 7865,
											"name": "DUP2"
										},
										{
											"begin": 7844,
											"end": 7865,
											"name": "MSTORE"
										},
										{
											"begin": 7844,
											"end": 7857,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 7844,
											"end": 7865,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7844,
											"end": 7865,
											"name": "MSTORE"
										},
										{
											"begin": 7844,
											"end": 7865,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7844,
											"end": 7865,
											"name": "SWAP1"
										},
										{
											"begin": 7844,
											"end": 7865,
											"name": "KECCAK256"
										},
										{
											"begin": 7844,
											"end": 7865,
											"name": "SLOAD"
										},
										{
											"begin": 7844,
											"end": 7865,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 7844,
											"end": 7865,
											"name": "AND"
										},
										{
											"begin": 7750,
											"end": 7872,
											"name": "tag",
											"value": "176"
										},
										{
											"begin": 7750,
											"end": 7872,
											"name": "JUMPDEST"
										},
										{
											"begin": 7750,
											"end": 7872,
											"name": "SWAP2"
										},
										{
											"begin": 7750,
											"end": 7872,
											"name": "SWAP1"
										},
										{
											"begin": 7750,
											"end": 7872,
											"name": "POP"
										},
										{
											"begin": 7750,
											"end": 7872,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4173,
											"end": 4234,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 4173,
											"end": 4234,
											"name": "JUMPDEST"
										},
										{
											"begin": 4173,
											"end": 4234,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 4173,
											"end": 4234,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4173,
											"end": 4234,
											"name": "SWAP1"
										},
										{
											"begin": 4173,
											"end": 4234,
											"name": "DUP2"
										},
										{
											"begin": 4173,
											"end": 4234,
											"name": "MSTORE"
										},
										{
											"begin": 4173,
											"end": 4234,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4173,
											"end": 4234,
											"name": "SWAP3"
										},
										{
											"begin": 4173,
											"end": 4234,
											"name": "DUP4"
										},
										{
											"begin": 4173,
											"end": 4234,
											"name": "MSTORE"
										},
										{
											"begin": 4173,
											"end": 4234,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4173,
											"end": 4234,
											"name": "DUP1"
										},
										{
											"begin": 4173,
											"end": 4234,
											"name": "DUP5"
										},
										{
											"begin": 4173,
											"end": 4234,
											"name": "KECCAK256"
										},
										{
											"begin": 4173,
											"end": 4234,
											"name": "SWAP1"
										},
										{
											"begin": 4173,
											"end": 4234,
											"name": "SWAP2"
										},
										{
											"begin": 4173,
											"end": 4234,
											"name": "MSTORE"
										},
										{
											"begin": 4173,
											"end": 4234,
											"name": "SWAP1"
										},
										{
											"begin": 4173,
											"end": 4234,
											"name": "DUP3"
										},
										{
											"begin": 4173,
											"end": 4234,
											"name": "MSTORE"
										},
										{
											"begin": 4173,
											"end": 4234,
											"name": "SWAP1"
										},
										{
											"begin": 4173,
											"end": 4234,
											"name": "KECCAK256"
										},
										{
											"begin": 4173,
											"end": 4234,
											"name": "SLOAD"
										},
										{
											"begin": 4173,
											"end": 4234,
											"name": "DUP2"
										},
										{
											"begin": 4173,
											"end": 4234,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 6905,
											"end": 6931,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 6905,
											"end": 6931,
											"name": "JUMPDEST"
										},
										{
											"begin": 6905,
											"end": 6931,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6905,
											"end": 6931,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": 6905,
											"end": 6931,
											"name": "SWAP1"
										},
										{
											"begin": 6905,
											"end": 6931,
											"name": "DIV"
										},
										{
											"begin": 6905,
											"end": 6931,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 6905,
											"end": 6931,
											"name": "AND"
										},
										{
											"begin": 6905,
											"end": 6931,
											"name": "DUP2"
										},
										{
											"begin": 6905,
											"end": 6931,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11068,
											"end": 11306,
											"name": "tag",
											"value": "88"
										},
										{
											"begin": 11068,
											"end": 11306,
											"name": "JUMPDEST"
										},
										{
											"begin": 11145,
											"end": 11155,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 11145,
											"end": 11155,
											"name": "SLOAD"
										},
										{
											"begin": 11125,
											"end": 11129,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11125,
											"end": 11129,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": 11145,
											"end": 11155,
											"name": "SWAP1"
										},
										{
											"begin": 11145,
											"end": 11155,
											"name": "DIV"
										},
										{
											"begin": 11145,
											"end": 11155,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 11145,
											"end": 11155,
											"name": "AND"
										},
										{
											"begin": 11141,
											"end": 11300,
											"name": "ISZERO"
										},
										{
											"begin": 11141,
											"end": 11300,
											"name": "PUSH [tag]",
											"value": "178"
										},
										{
											"begin": 11141,
											"end": 11300,
											"name": "JUMPI"
										},
										{
											"begin": 11200,
											"end": 11215,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 11200,
											"end": 11215,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 11200,
											"end": 11215,
											"name": "AND"
										},
										{
											"begin": 11178,
											"end": 11226,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 11227,
											"end": 11230,
											"name": "DUP4"
										},
										{
											"begin": 11200,
											"end": 11215,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11178,
											"end": 11231,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11178,
											"end": 11231,
											"name": "MLOAD"
										},
										{
											"begin": 11178,
											"end": 11231,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11178,
											"end": 11231,
											"name": "ADD"
										},
										{
											"begin": 11178,
											"end": 11231,
											"name": "MSTORE"
										},
										{
											"begin": 11178,
											"end": 11231,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11178,
											"end": 11231,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": 11178,
											"end": 11231,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 11178,
											"end": 11231,
											"name": "DUP5"
										},
										{
											"begin": 11178,
											"end": 11231,
											"name": "AND"
										},
										{
											"begin": 11178,
											"end": 11231,
											"name": "MUL"
										},
										{
											"begin": 11178,
											"end": 11231,
											"name": "DUP2"
										},
										{
											"begin": 11178,
											"end": 11231,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 11178,
											"end": 11231,
											"name": "SWAP1"
										},
										{
											"begin": 11178,
											"end": 11231,
											"name": "SWAP2"
										},
										{
											"begin": 11178,
											"end": 11231,
											"name": "AND"
										},
										{
											"begin": 11178,
											"end": 11231,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11178,
											"end": 11231,
											"name": "DUP3"
										},
										{
											"begin": 11178,
											"end": 11231,
											"name": "ADD"
										},
										{
											"begin": 11178,
											"end": 11231,
											"name": "MSTORE"
										},
										{
											"begin": 11178,
											"end": 11231,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 11178,
											"end": 11231,
											"name": "ADD"
										},
										{
											"begin": 11178,
											"end": 11231,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11178,
											"end": 11231,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11178,
											"end": 11231,
											"name": "MLOAD"
										},
										{
											"begin": 11178,
											"end": 11231,
											"name": "DUP1"
										},
										{
											"begin": 11178,
											"end": 11231,
											"name": "DUP4"
										},
										{
											"begin": 11178,
											"end": 11231,
											"name": "SUB"
										},
										{
											"begin": 11178,
											"end": 11231,
											"name": "DUP2"
										},
										{
											"begin": 11178,
											"end": 11231,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11178,
											"end": 11231,
											"name": "DUP8"
										},
										{
											"begin": 11178,
											"end": 11231,
											"name": "DUP1"
										},
										{
											"begin": 11178,
											"end": 11231,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 11178,
											"end": 11231,
											"name": "ISZERO"
										},
										{
											"begin": 11178,
											"end": 11231,
											"name": "ISZERO"
										},
										{
											"begin": 11178,
											"end": 11231,
											"name": "PUSH [tag]",
											"value": "179"
										},
										{
											"begin": 11178,
											"end": 11231,
											"name": "JUMPI"
										},
										{
											"begin": 11178,
											"end": 11231,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11178,
											"end": 11231,
											"name": "DUP1"
										},
										{
											"begin": 11178,
											"end": 11231,
											"name": "REVERT"
										},
										{
											"begin": 11178,
											"end": 11231,
											"name": "tag",
											"value": "179"
										},
										{
											"begin": 11178,
											"end": 11231,
											"name": "JUMPDEST"
										},
										{
											"begin": 11178,
											"end": 11231,
											"name": "PUSH",
											"value": "2C6"
										},
										{
											"begin": 11178,
											"end": 11231,
											"name": "GAS"
										},
										{
											"begin": 11178,
											"end": 11231,
											"name": "SUB"
										},
										{
											"begin": 11178,
											"end": 11231,
											"name": "CALL"
										},
										{
											"begin": 11178,
											"end": 11231,
											"name": "ISZERO"
										},
										{
											"begin": 11178,
											"end": 11231,
											"name": "ISZERO"
										},
										{
											"begin": 11178,
											"end": 11231,
											"name": "PUSH [tag]",
											"value": "180"
										},
										{
											"begin": 11178,
											"end": 11231,
											"name": "JUMPI"
										},
										{
											"begin": 11178,
											"end": 11231,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11178,
											"end": 11231,
											"name": "DUP1"
										},
										{
											"begin": 11178,
											"end": 11231,
											"name": "REVERT"
										},
										{
											"begin": 11178,
											"end": 11231,
											"name": "tag",
											"value": "180"
										},
										{
											"begin": 11178,
											"end": 11231,
											"name": "JUMPDEST"
										},
										{
											"begin": 11178,
											"end": 11231,
											"name": "POP"
										},
										{
											"begin": 11178,
											"end": 11231,
											"name": "POP"
										},
										{
											"begin": 11178,
											"end": 11231,
											"name": "POP"
										},
										{
											"begin": 11178,
											"end": 11231,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11178,
											"end": 11231,
											"name": "MLOAD"
										},
										{
											"begin": 11178,
											"end": 11231,
											"name": "DUP1"
										},
										{
											"begin": 11178,
											"end": 11231,
											"name": "MLOAD"
										},
										{
											"begin": 11178,
											"end": 11231,
											"name": "SWAP1"
										},
										{
											"begin": 11178,
											"end": 11231,
											"name": "POP"
										},
										{
											"begin": 11171,
											"end": 11231,
											"name": "SWAP1"
										},
										{
											"begin": 11171,
											"end": 11231,
											"name": "POP"
										},
										{
											"begin": 11171,
											"end": 11231,
											"name": "PUSH [tag]",
											"value": "176"
										},
										{
											"begin": 11171,
											"end": 11231,
											"name": "JUMP"
										},
										{
											"begin": 11141,
											"end": 11300,
											"name": "tag",
											"value": "178"
										},
										{
											"begin": 11141,
											"end": 11300,
											"name": "JUMPDEST"
										},
										{
											"begin": 11269,
											"end": 11289,
											"name": "PUSH [tag]",
											"value": "182"
										},
										{
											"begin": 11285,
											"end": 11288,
											"name": "DUP3"
										},
										{
											"begin": 11269,
											"end": 11284,
											"name": "PUSH [tag]",
											"value": "183"
										},
										{
											"begin": 11269,
											"end": 11289,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11269,
											"end": 11289,
											"name": "tag",
											"value": "182"
										},
										{
											"begin": 11269,
											"end": 11289,
											"name": "JUMPDEST"
										},
										{
											"begin": 11262,
											"end": 11289,
											"name": "SWAP1"
										},
										{
											"begin": 11262,
											"end": 11289,
											"name": "POP"
										},
										{
											"begin": 11262,
											"end": 11289,
											"name": "PUSH [tag]",
											"value": "176"
										},
										{
											"begin": 11262,
											"end": 11289,
											"name": "JUMP"
										},
										{
											"begin": 7324,
											"end": 7409,
											"name": "tag",
											"value": "91"
										},
										{
											"begin": 7324,
											"end": 7409,
											"name": "JUMPDEST"
										},
										{
											"begin": 1546,
											"end": 1551,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1546,
											"end": 1551,
											"name": "SLOAD"
										},
										{
											"begin": 1532,
											"end": 1542,
											"name": "CALLER"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1532,
											"end": 1551,
											"name": "SWAP1"
										},
										{
											"begin": 1532,
											"end": 1551,
											"name": "DUP2"
										},
										{
											"begin": 1532,
											"end": 1551,
											"name": "AND"
										},
										{
											"begin": 1546,
											"end": 1551,
											"name": "SWAP2"
										},
										{
											"begin": 1546,
											"end": 1551,
											"name": "AND"
										},
										{
											"begin": 1532,
											"end": 1551,
											"name": "EQ"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "PUSH [tag]",
											"value": "185"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "JUMPI"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "DUP1"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "REVERT"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "tag",
											"value": "185"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "JUMPDEST"
										},
										{
											"begin": 7074,
											"end": 7080,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7074,
											"end": 7080,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": 7074,
											"end": 7080,
											"name": "SWAP1"
										},
										{
											"begin": 7074,
											"end": 7080,
											"name": "DIV"
										},
										{
											"begin": 7074,
											"end": 7080,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 7074,
											"end": 7080,
											"name": "AND"
										},
										{
											"begin": 7073,
											"end": 7080,
											"name": "ISZERO"
										},
										{
											"begin": 7065,
											"end": 7081,
											"name": "PUSH [tag]",
											"value": "187"
										},
										{
											"begin": 7065,
											"end": 7081,
											"name": "JUMPI"
										},
										{
											"begin": 7065,
											"end": 7081,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7065,
											"end": 7081,
											"name": "DUP1"
										},
										{
											"begin": 7065,
											"end": 7081,
											"name": "REVERT"
										},
										{
											"begin": 7065,
											"end": 7081,
											"name": "tag",
											"value": "187"
										},
										{
											"begin": 7065,
											"end": 7081,
											"name": "JUMPDEST"
										},
										{
											"begin": 7378,
											"end": 7384,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7378,
											"end": 7391,
											"name": "DUP1"
										},
										{
											"begin": 7378,
											"end": 7391,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FF0000000000000000000000000000000000000000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 7378,
											"end": 7391,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": 7378,
											"end": 7391,
											"name": "OR"
										},
										{
											"begin": 7378,
											"end": 7391,
											"name": "SWAP1"
										},
										{
											"begin": 7378,
											"end": 7391,
											"name": "SSTORE"
										},
										{
											"begin": 7397,
											"end": 7404,
											"name": "PUSH",
											"value": "6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625"
										},
										{
											"begin": 7397,
											"end": 7404,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7397,
											"end": 7404,
											"name": "MLOAD"
										},
										{
											"begin": 7397,
											"end": 7404,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7397,
											"end": 7404,
											"name": "MLOAD"
										},
										{
											"begin": 7397,
											"end": 7404,
											"name": "DUP1"
										},
										{
											"begin": 7397,
											"end": 7404,
											"name": "SWAP2"
										},
										{
											"begin": 7397,
											"end": 7404,
											"name": "SUB"
										},
										{
											"begin": 7397,
											"end": 7404,
											"name": "SWAP1"
										},
										{
											"begin": 7397,
											"end": 7404,
											"name": "LOG1"
										},
										{
											"begin": 7324,
											"end": 7409,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7878,
											"end": 7963,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 7878,
											"end": 7963,
											"name": "JUMPDEST"
										},
										{
											"begin": 7925,
											"end": 7932,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7951,
											"end": 7956,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7951,
											"end": 7956,
											"name": "AND"
										},
										{
											"begin": 7878,
											"end": 7963,
											"name": "SWAP1"
										},
										{
											"begin": 7878,
											"end": 7963,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "tag",
											"value": "97"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "JUMPDEST"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "AND"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "DUP2"
										},
										{
											"begin": 1188,
											"end": 1208,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "tag",
											"value": "100"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "JUMPDEST"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "DUP1"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "SLOAD"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "DUP2"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "AND"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "ISZERO"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "MUL"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "SUB"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "AND"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "SWAP1"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "DIV"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "DUP1"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "ADD"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "DUP1"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "SWAP2"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "DIV"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "MUL"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "ADD"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "MLOAD"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "SWAP1"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "DUP2"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "ADD"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "MSTORE"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "DUP1"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "SWAP3"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "SWAP2"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "SWAP1"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "DUP2"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "DUP2"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "MSTORE"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "ADD"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "DUP3"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "DUP1"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "SLOAD"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "DUP2"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "AND"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "ISZERO"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "MUL"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "SUB"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "AND"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "SWAP1"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "DIV"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "DUP1"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "ISZERO"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "PUSH [tag]",
											"value": "138"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "JUMPI"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "DUP1"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "LT"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "PUSH [tag]",
											"value": "139"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "JUMPI"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "DUP1"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "DUP4"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "SLOAD"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "DIV"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "MUL"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "DUP4"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "MSTORE"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "SWAP2"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "ADD"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "SWAP2"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "PUSH [tag]",
											"value": "138"
										},
										{
											"begin": 9400,
											"end": 9420,
											"name": "JUMP"
										},
										{
											"begin": 10230,
											"end": 10549,
											"name": "tag",
											"value": "107"
										},
										{
											"begin": 10230,
											"end": 10549,
											"name": "JUMPDEST"
										},
										{
											"begin": 7074,
											"end": 7080,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7074,
											"end": 7080,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": 7074,
											"end": 7080,
											"name": "SWAP1"
										},
										{
											"begin": 7074,
											"end": 7080,
											"name": "DIV"
										},
										{
											"begin": 7074,
											"end": 7080,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 7074,
											"end": 7080,
											"name": "AND"
										},
										{
											"begin": 7073,
											"end": 7080,
											"name": "ISZERO"
										},
										{
											"begin": 7065,
											"end": 7081,
											"name": "PUSH [tag]",
											"value": "194"
										},
										{
											"begin": 7065,
											"end": 7081,
											"name": "JUMPI"
										},
										{
											"begin": 7065,
											"end": 7081,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7065,
											"end": 7081,
											"name": "DUP1"
										},
										{
											"begin": 7065,
											"end": 7081,
											"name": "REVERT"
										},
										{
											"begin": 7065,
											"end": 7081,
											"name": "tag",
											"value": "194"
										},
										{
											"begin": 7065,
											"end": 7081,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 10328,
											"end": 10338,
											"name": "CALLER"
										},
										{
											"begin": 10314,
											"end": 10339,
											"name": "AND"
										},
										{
											"begin": 10314,
											"end": 10339,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10314,
											"end": 10339,
											"name": "SWAP1"
										},
										{
											"begin": 10314,
											"end": 10339,
											"name": "DUP2"
										},
										{
											"begin": 10314,
											"end": 10339,
											"name": "MSTORE"
										},
										{
											"begin": 10314,
											"end": 10327,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 10314,
											"end": 10339,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10314,
											"end": 10339,
											"name": "MSTORE"
										},
										{
											"begin": 10314,
											"end": 10339,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10314,
											"end": 10339,
											"name": "SWAP1"
										},
										{
											"begin": 10314,
											"end": 10339,
											"name": "KECCAK256"
										},
										{
											"begin": 10314,
											"end": 10339,
											"name": "SLOAD"
										},
										{
											"begin": 10314,
											"end": 10339,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 10314,
											"end": 10339,
											"name": "AND"
										},
										{
											"begin": 10313,
											"end": 10339,
											"name": "ISZERO"
										},
										{
											"begin": 10305,
											"end": 10340,
											"name": "PUSH [tag]",
											"value": "196"
										},
										{
											"begin": 10305,
											"end": 10340,
											"name": "JUMPI"
										},
										{
											"begin": 10305,
											"end": 10340,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10305,
											"end": 10340,
											"name": "DUP1"
										},
										{
											"begin": 10305,
											"end": 10340,
											"name": "REVERT"
										},
										{
											"begin": 10305,
											"end": 10340,
											"name": "tag",
											"value": "196"
										},
										{
											"begin": 10305,
											"end": 10340,
											"name": "JUMPDEST"
										},
										{
											"begin": 10354,
											"end": 10364,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 10354,
											"end": 10364,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": 10354,
											"end": 10364,
											"name": "SWAP1"
										},
										{
											"begin": 10354,
											"end": 10364,
											"name": "DIV"
										},
										{
											"begin": 10354,
											"end": 10364,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 10354,
											"end": 10364,
											"name": "AND"
										},
										{
											"begin": 10350,
											"end": 10543,
											"name": "ISZERO"
										},
										{
											"begin": 10350,
											"end": 10543,
											"name": "PUSH [tag]",
											"value": "197"
										},
										{
											"begin": 10350,
											"end": 10543,
											"name": "JUMPI"
										},
										{
											"begin": 10409,
											"end": 10424,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 10409,
											"end": 10424,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 10409,
											"end": 10424,
											"name": "AND"
										},
										{
											"begin": 10387,
											"end": 10442,
											"name": "PUSH",
											"value": "6E18980A"
										},
										{
											"begin": 10443,
											"end": 10453,
											"name": "CALLER"
										},
										{
											"begin": 10455,
											"end": 10458,
											"name": "DUP5"
										},
										{
											"begin": 10460,
											"end": 10466,
											"name": "DUP5"
										},
										{
											"begin": 10387,
											"end": 10467,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10387,
											"end": 10467,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": 10387,
											"end": 10467,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 10387,
											"end": 10467,
											"name": "DUP7"
										},
										{
											"begin": 10387,
											"end": 10467,
											"name": "AND"
										},
										{
											"begin": 10387,
											"end": 10467,
											"name": "MUL"
										},
										{
											"begin": 10387,
											"end": 10467,
											"name": "DUP2"
										},
										{
											"begin": 10387,
											"end": 10467,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 10387,
											"end": 10467,
											"name": "SWAP4"
										},
										{
											"begin": 10387,
											"end": 10467,
											"name": "DUP5"
										},
										{
											"begin": 10387,
											"end": 10467,
											"name": "AND"
										},
										{
											"begin": 10387,
											"end": 10467,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10387,
											"end": 10467,
											"name": "DUP3"
										},
										{
											"begin": 10387,
											"end": 10467,
											"name": "ADD"
										},
										{
											"begin": 10387,
											"end": 10467,
											"name": "MSTORE"
										},
										{
											"begin": 10387,
											"end": 10467,
											"name": "SWAP2"
										},
										{
											"begin": 10387,
											"end": 10467,
											"name": "SWAP1"
										},
										{
											"begin": 10387,
											"end": 10467,
											"name": "SWAP3"
										},
										{
											"begin": 10387,
											"end": 10467,
											"name": "AND"
										},
										{
											"begin": 10387,
											"end": 10467,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 10387,
											"end": 10467,
											"name": "DUP3"
										},
										{
											"begin": 10387,
											"end": 10467,
											"name": "ADD"
										},
										{
											"begin": 10387,
											"end": 10467,
											"name": "MSTORE"
										},
										{
											"begin": 10387,
											"end": 10467,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 10387,
											"end": 10467,
											"name": "DUP2"
										},
										{
											"begin": 10387,
											"end": 10467,
											"name": "ADD"
										},
										{
											"begin": 10387,
											"end": 10467,
											"name": "SWAP2"
										},
										{
											"begin": 10387,
											"end": 10467,
											"name": "SWAP1"
										},
										{
											"begin": 10387,
											"end": 10467,
											"name": "SWAP2"
										},
										{
											"begin": 10387,
											"end": 10467,
											"name": "MSTORE"
										},
										{
											"begin": 10387,
											"end": 10467,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 10387,
											"end": 10467,
											"name": "ADD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10387,
											"end": 10467,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10387,
											"end": 10467,
											"name": "MLOAD"
										},
										{
											"begin": 10387,
											"end": 10467,
											"name": "DUP1"
										},
										{
											"begin": 10387,
											"end": 10467,
											"name": "DUP4"
										},
										{
											"begin": 10387,
											"end": 10467,
											"name": "SUB"
										},
										{
											"begin": 10387,
											"end": 10467,
											"name": "DUP2"
										},
										{
											"begin": 10387,
											"end": 10467,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10387,
											"end": 10467,
											"name": "DUP8"
										},
										{
											"begin": 10387,
											"end": 10467,
											"name": "DUP1"
										},
										{
											"begin": 10387,
											"end": 10467,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 10387,
											"end": 10467,
											"name": "ISZERO"
										},
										{
											"begin": 10387,
											"end": 10467,
											"name": "ISZERO"
										},
										{
											"begin": 10387,
											"end": 10467,
											"name": "PUSH [tag]",
											"value": "198"
										},
										{
											"begin": 10387,
											"end": 10467,
											"name": "JUMPI"
										},
										{
											"begin": 10387,
											"end": 10467,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10387,
											"end": 10467,
											"name": "DUP1"
										},
										{
											"begin": 10387,
											"end": 10467,
											"name": "REVERT"
										},
										{
											"begin": 10387,
											"end": 10467,
											"name": "tag",
											"value": "198"
										},
										{
											"begin": 10387,
											"end": 10467,
											"name": "JUMPDEST"
										},
										{
											"begin": 10387,
											"end": 10467,
											"name": "PUSH",
											"value": "2C6"
										},
										{
											"begin": 10387,
											"end": 10467,
											"name": "GAS"
										},
										{
											"begin": 10387,
											"end": 10467,
											"name": "SUB"
										},
										{
											"begin": 10387,
											"end": 10467,
											"name": "CALL"
										},
										{
											"begin": 10387,
											"end": 10467,
											"name": "ISZERO"
										},
										{
											"begin": 10387,
											"end": 10467,
											"name": "ISZERO"
										},
										{
											"begin": 10387,
											"end": 10467,
											"name": "PUSH [tag]",
											"value": "199"
										},
										{
											"begin": 10387,
											"end": 10467,
											"name": "JUMPI"
										},
										{
											"begin": 10387,
											"end": 10467,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10387,
											"end": 10467,
											"name": "DUP1"
										},
										{
											"begin": 10387,
											"end": 10467,
											"name": "REVERT"
										},
										{
											"begin": 10387,
											"end": 10467,
											"name": "tag",
											"value": "199"
										},
										{
											"begin": 10387,
											"end": 10467,
											"name": "JUMPDEST"
										},
										{
											"begin": 10387,
											"end": 10467,
											"name": "POP"
										},
										{
											"begin": 10387,
											"end": 10467,
											"name": "POP"
										},
										{
											"begin": 10387,
											"end": 10467,
											"name": "POP"
										},
										{
											"begin": 10380,
											"end": 10467,
											"name": "PUSH [tag]",
											"value": "201"
										},
										{
											"begin": 10380,
											"end": 10467,
											"name": "JUMP"
										},
										{
											"begin": 10350,
											"end": 10543,
											"name": "tag",
											"value": "197"
										},
										{
											"begin": 10350,
											"end": 10543,
											"name": "JUMPDEST"
										},
										{
											"begin": 10505,
											"end": 10532,
											"name": "PUSH [tag]",
											"value": "201"
										},
										{
											"begin": 10520,
											"end": 10523,
											"name": "DUP3"
										},
										{
											"begin": 10525,
											"end": 10531,
											"name": "DUP3"
										},
										{
											"begin": 10505,
											"end": 10519,
											"name": "PUSH [tag]",
											"value": "202"
										},
										{
											"begin": 10505,
											"end": 10532,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10505,
											"end": 10532,
											"name": "tag",
											"value": "201"
										},
										{
											"begin": 10505,
											"end": 10532,
											"name": "JUMPDEST"
										},
										{
											"begin": 10230,
											"end": 10549,
											"name": "POP"
										},
										{
											"begin": 10230,
											"end": 10549,
											"name": "POP"
										},
										{
											"begin": 10230,
											"end": 10549,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 13720,
											"end": 14098,
											"name": "tag",
											"value": "110"
										},
										{
											"begin": 13720,
											"end": 14098,
											"name": "JUMPDEST"
										},
										{
											"begin": 1546,
											"end": 1551,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1546,
											"end": 1551,
											"name": "SLOAD"
										},
										{
											"begin": 1532,
											"end": 1542,
											"name": "CALLER"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1532,
											"end": 1551,
											"name": "SWAP1"
										},
										{
											"begin": 1532,
											"end": 1551,
											"name": "DUP2"
										},
										{
											"begin": 1532,
											"end": 1551,
											"name": "AND"
										},
										{
											"begin": 1546,
											"end": 1551,
											"name": "SWAP2"
										},
										{
											"begin": 1546,
											"end": 1551,
											"name": "AND"
										},
										{
											"begin": 1532,
											"end": 1551,
											"name": "EQ"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "PUSH [tag]",
											"value": "204"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "JUMPI"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "DUP1"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "REVERT"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "tag",
											"value": "204"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "JUMPDEST"
										},
										{
											"begin": 13916,
											"end": 13919,
											"name": "PUSH",
											"value": "1F4"
										},
										{
											"begin": 13899,
											"end": 13919,
											"name": "DUP3"
										},
										{
											"begin": 13899,
											"end": 13919,
											"name": "GT"
										},
										{
											"begin": 13899,
											"end": 13919,
											"name": "ISZERO"
										},
										{
											"begin": 13891,
											"end": 13920,
											"name": "PUSH [tag]",
											"value": "206"
										},
										{
											"begin": 13891,
											"end": 13920,
											"name": "JUMPI"
										},
										{
											"begin": 13891,
											"end": 13920,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13891,
											"end": 13920,
											"name": "DUP1"
										},
										{
											"begin": 13891,
											"end": 13920,
											"name": "REVERT"
										},
										{
											"begin": 13891,
											"end": 13920,
											"name": "tag",
											"value": "206"
										},
										{
											"begin": 13891,
											"end": 13920,
											"name": "JUMPDEST"
										},
										{
											"begin": 13949,
											"end": 13951,
											"name": "PUSH",
											"value": "32"
										},
										{
											"begin": 13938,
											"end": 13951,
											"name": "DUP2"
										},
										{
											"begin": 13938,
											"end": 13951,
											"name": "GT"
										},
										{
											"begin": 13938,
											"end": 13951,
											"name": "ISZERO"
										},
										{
											"begin": 13930,
											"end": 13952,
											"name": "PUSH [tag]",
											"value": "207"
										},
										{
											"begin": 13930,
											"end": 13952,
											"name": "JUMPI"
										},
										{
											"begin": 13930,
											"end": 13952,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13930,
											"end": 13952,
											"name": "DUP1"
										},
										{
											"begin": 13930,
											"end": 13952,
											"name": "REVERT"
										},
										{
											"begin": 13930,
											"end": 13952,
											"name": "tag",
											"value": "207"
										},
										{
											"begin": 13930,
											"end": 13952,
											"name": "JUMPDEST"
										},
										{
											"begin": 13963,
											"end": 13978,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 13963,
											"end": 13995,
											"name": "DUP3"
										},
										{
											"begin": 13963,
											"end": 13995,
											"name": "SWAP1"
										},
										{
											"begin": 13963,
											"end": 13995,
											"name": "SSTORE"
										},
										{
											"begin": 14036,
											"end": 14044,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 14036,
											"end": 14044,
											"name": "SLOAD"
										},
										{
											"begin": 14018,
											"end": 14045,
											"name": "PUSH [tag]",
											"value": "208"
										},
										{
											"begin": 14018,
											"end": 14045,
											"name": "SWAP1"
										},
										{
											"begin": 14018,
											"end": 14027,
											"name": "DUP3"
										},
										{
											"begin": 14018,
											"end": 14027,
											"name": "SWAP1"
										},
										{
											"begin": 14032,
											"end": 14034,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 14032,
											"end": 14044,
											"name": "EXP"
										},
										{
											"begin": 14018,
											"end": 14045,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 14018,
											"end": 14031,
											"name": "PUSH [tag]",
											"value": "209"
										},
										{
											"begin": 14018,
											"end": 14045,
											"name": "AND"
										},
										{
											"begin": 14018,
											"end": 14045,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14018,
											"end": 14045,
											"name": "tag",
											"value": "208"
										},
										{
											"begin": 14018,
											"end": 14045,
											"name": "JUMPDEST"
										},
										{
											"begin": 14005,
											"end": 14015,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14005,
											"end": 14045,
											"name": "DUP2"
										},
										{
											"begin": 14005,
											"end": 14045,
											"name": "SWAP1"
										},
										{
											"begin": 14005,
											"end": 14045,
											"name": "SSTORE"
										},
										{
											"begin": 14063,
											"end": 14078,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 14063,
											"end": 14078,
											"name": "SLOAD"
										},
										{
											"begin": 14056,
											"end": 14091,
											"name": "PUSH",
											"value": "B044A1E409EAC5C48E5AF22D4AF52670DD1A99059537A78B31B48C6500A6354E"
										},
										{
											"begin": 14056,
											"end": 14091,
											"name": "SWAP2"
										},
										{
											"begin": 14056,
											"end": 14091,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14056,
											"end": 14091,
											"name": "MLOAD"
										},
										{
											"begin": 14056,
											"end": 14091,
											"name": "SWAP2"
										},
										{
											"begin": 14056,
											"end": 14091,
											"name": "DUP3"
										},
										{
											"begin": 14056,
											"end": 14091,
											"name": "MSTORE"
										},
										{
											"begin": 14056,
											"end": 14091,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14056,
											"end": 14091,
											"name": "DUP3"
										},
										{
											"begin": 14056,
											"end": 14091,
											"name": "ADD"
										},
										{
											"begin": 14056,
											"end": 14091,
											"name": "MSTORE"
										},
										{
											"begin": 14056,
											"end": 14091,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14056,
											"end": 14091,
											"name": "SWAP1"
										},
										{
											"begin": 14056,
											"end": 14091,
											"name": "DUP2"
										},
										{
											"begin": 14056,
											"end": 14091,
											"name": "ADD"
										},
										{
											"begin": 14056,
											"end": 14091,
											"name": "SWAP1"
										},
										{
											"begin": 14056,
											"end": 14091,
											"name": "MLOAD"
										},
										{
											"begin": 14056,
											"end": 14091,
											"name": "DUP1"
										},
										{
											"begin": 14056,
											"end": 14091,
											"name": "SWAP2"
										},
										{
											"begin": 14056,
											"end": 14091,
											"name": "SUB"
										},
										{
											"begin": 14056,
											"end": 14091,
											"name": "SWAP1"
										},
										{
											"begin": 14056,
											"end": 14091,
											"name": "LOG1"
										},
										{
											"begin": 13720,
											"end": 14098,
											"name": "POP"
										},
										{
											"begin": 13720,
											"end": 14098,
											"name": "POP"
										},
										{
											"begin": 13720,
											"end": 14098,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12726,
											"end": 13031,
											"name": "tag",
											"value": "113"
										},
										{
											"begin": 12726,
											"end": 13031,
											"name": "JUMPDEST"
										},
										{
											"begin": 1546,
											"end": 1551,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1546,
											"end": 1551,
											"name": "SLOAD"
										},
										{
											"begin": 1532,
											"end": 1542,
											"name": "CALLER"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1532,
											"end": 1551,
											"name": "SWAP1"
										},
										{
											"begin": 1532,
											"end": 1551,
											"name": "DUP2"
										},
										{
											"begin": 1532,
											"end": 1551,
											"name": "AND"
										},
										{
											"begin": 1546,
											"end": 1551,
											"name": "SWAP2"
										},
										{
											"begin": 1546,
											"end": 1551,
											"name": "AND"
										},
										{
											"begin": 1532,
											"end": 1551,
											"name": "EQ"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "PUSH [tag]",
											"value": "211"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "JUMPI"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "DUP1"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "REVERT"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "tag",
											"value": "211"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "JUMPDEST"
										},
										{
											"begin": 12813,
											"end": 12825,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12813,
											"end": 12825,
											"name": "SLOAD"
										},
										{
											"begin": 12789,
											"end": 12810,
											"name": "DUP2"
										},
										{
											"begin": 12789,
											"end": 12810,
											"name": "DUP2"
										},
										{
											"begin": 12789,
											"end": 12810,
											"name": "ADD"
										},
										{
											"begin": 12789,
											"end": 12825,
											"name": "GT"
										},
										{
											"begin": 12781,
											"end": 12826,
											"name": "PUSH [tag]",
											"value": "213"
										},
										{
											"begin": 12781,
											"end": 12826,
											"name": "JUMPI"
										},
										{
											"begin": 12781,
											"end": 12826,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12781,
											"end": 12826,
											"name": "DUP1"
										},
										{
											"begin": 12781,
											"end": 12826,
											"name": "REVERT"
										},
										{
											"begin": 12781,
											"end": 12826,
											"name": "tag",
											"value": "213"
										},
										{
											"begin": 12781,
											"end": 12826,
											"name": "JUMPDEST"
										},
										{
											"begin": 12871,
											"end": 12886,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12880,
											"end": 12885,
											"name": "DUP1"
										},
										{
											"begin": 12880,
											"end": 12885,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 12880,
											"end": 12885,
											"name": "AND"
										},
										{
											"begin": 12871,
											"end": 12886,
											"name": "DUP2"
										},
										{
											"begin": 12871,
											"end": 12886,
											"name": "MSTORE"
										},
										{
											"begin": 12871,
											"end": 12879,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 12871,
											"end": 12886,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12871,
											"end": 12886,
											"name": "MSTORE"
										},
										{
											"begin": 12871,
											"end": 12886,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12871,
											"end": 12886,
											"name": "SWAP1"
										},
										{
											"begin": 12871,
											"end": 12886,
											"name": "KECCAK256"
										},
										{
											"begin": 12871,
											"end": 12886,
											"name": "SLOAD"
										},
										{
											"begin": 12844,
											"end": 12868,
											"name": "DUP2"
										},
										{
											"begin": 12844,
											"end": 12868,
											"name": "DUP2"
										},
										{
											"begin": 12844,
											"end": 12868,
											"name": "ADD"
										},
										{
											"begin": 12844,
											"end": 12886,
											"name": "GT"
										},
										{
											"begin": 12836,
											"end": 12887,
											"name": "PUSH [tag]",
											"value": "214"
										},
										{
											"begin": 12836,
											"end": 12887,
											"name": "JUMPI"
										},
										{
											"begin": 12836,
											"end": 12887,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12836,
											"end": 12887,
											"name": "DUP1"
										},
										{
											"begin": 12836,
											"end": 12887,
											"name": "REVERT"
										},
										{
											"begin": 12836,
											"end": 12887,
											"name": "tag",
											"value": "214"
										},
										{
											"begin": 12836,
											"end": 12887,
											"name": "JUMPDEST"
										},
										{
											"begin": 12898,
											"end": 12913,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12907,
											"end": 12912,
											"name": "DUP1"
										},
										{
											"begin": 12907,
											"end": 12912,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 12907,
											"end": 12912,
											"name": "SWAP1"
										},
										{
											"begin": 12907,
											"end": 12912,
											"name": "DUP2"
										},
										{
											"begin": 12907,
											"end": 12912,
											"name": "AND"
										},
										{
											"begin": 12898,
											"end": 12913,
											"name": "DUP3"
										},
										{
											"begin": 12898,
											"end": 12913,
											"name": "MSTORE"
										},
										{
											"begin": 12898,
											"end": 12906,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 12898,
											"end": 12913,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12898,
											"end": 12913,
											"name": "MSTORE"
										},
										{
											"begin": 12898,
											"end": 12913,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12898,
											"end": 12913,
											"name": "DUP1"
										},
										{
											"begin": 12898,
											"end": 12913,
											"name": "DUP4"
										},
										{
											"begin": 12898,
											"end": 12913,
											"name": "KECCAK256"
										},
										{
											"begin": 12898,
											"end": 12923,
											"name": "DUP1"
										},
										{
											"begin": 12898,
											"end": 12923,
											"name": "SLOAD"
										},
										{
											"begin": 12898,
											"end": 12923,
											"name": "DUP6"
										},
										{
											"begin": 12898,
											"end": 12923,
											"name": "ADD"
										},
										{
											"begin": 12898,
											"end": 12923,
											"name": "SWAP1"
										},
										{
											"begin": 12898,
											"end": 12923,
											"name": "SSTORE"
										},
										{
											"begin": 12907,
											"end": 12912,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12933,
											"end": 12955,
											"name": "DUP1"
										},
										{
											"begin": 12933,
											"end": 12955,
											"name": "SLOAD"
										},
										{
											"begin": 12933,
											"end": 12955,
											"name": "DUP6"
										},
										{
											"begin": 12933,
											"end": 12955,
											"name": "ADD"
										},
										{
											"begin": 12933,
											"end": 12955,
											"name": "SWAP1"
										},
										{
											"begin": 12933,
											"end": 12955,
											"name": "SSTORE"
										},
										{
											"begin": 12987,
											"end": 12992,
											"name": "DUP3"
										},
										{
											"begin": 12987,
											"end": 12992,
											"name": "SLOAD"
										},
										{
											"begin": 12987,
											"end": 12992,
											"name": "SWAP1"
										},
										{
											"begin": 12987,
											"end": 12992,
											"name": "SWAP2"
										},
										{
											"begin": 12987,
											"end": 12992,
											"name": "AND"
										},
										{
											"begin": 12987,
											"end": 12992,
											"name": "SWAP2"
										},
										{
											"begin": 12898,
											"end": 12913,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 12966,
											"end": 13001,
											"name": "SWAP1"
										},
										{
											"begin": 12917,
											"end": 12923,
											"name": "DUP5"
										},
										{
											"begin": 12917,
											"end": 12923,
											"name": "SWAP1"
										},
										{
											"begin": 12966,
											"end": 13001,
											"name": "MLOAD"
										},
										{
											"begin": 12966,
											"end": 13001,
											"name": "SWAP1"
										},
										{
											"begin": 12966,
											"end": 13001,
											"name": "DUP2"
										},
										{
											"begin": 12966,
											"end": 13001,
											"name": "MSTORE"
										},
										{
											"begin": 12966,
											"end": 13001,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12966,
											"end": 13001,
											"name": "ADD"
										},
										{
											"begin": 12966,
											"end": 13001,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12966,
											"end": 13001,
											"name": "MLOAD"
										},
										{
											"begin": 12966,
											"end": 13001,
											"name": "DUP1"
										},
										{
											"begin": 12966,
											"end": 13001,
											"name": "SWAP2"
										},
										{
											"begin": 12966,
											"end": 13001,
											"name": "SUB"
										},
										{
											"begin": 12966,
											"end": 13001,
											"name": "SWAP1"
										},
										{
											"begin": 12966,
											"end": 13001,
											"name": "LOG3"
										},
										{
											"begin": 13011,
											"end": 13024,
											"name": "PUSH",
											"value": "CB8241ADB0C3FDB35B70C24CE35C5EB0C17AF7431C99F827D44A445CA624176A"
										},
										{
											"begin": 13017,
											"end": 13023,
											"name": "DUP2"
										},
										{
											"begin": 13011,
											"end": 13024,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13011,
											"end": 13024,
											"name": "MLOAD"
										},
										{
											"begin": 13011,
											"end": 13024,
											"name": "SWAP1"
										},
										{
											"begin": 13011,
											"end": 13024,
											"name": "DUP2"
										},
										{
											"begin": 13011,
											"end": 13024,
											"name": "MSTORE"
										},
										{
											"begin": 13011,
											"end": 13024,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13011,
											"end": 13024,
											"name": "ADD"
										},
										{
											"begin": 13011,
											"end": 13024,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13011,
											"end": 13024,
											"name": "MLOAD"
										},
										{
											"begin": 13011,
											"end": 13024,
											"name": "DUP1"
										},
										{
											"begin": 13011,
											"end": 13024,
											"name": "SWAP2"
										},
										{
											"begin": 13011,
											"end": 13024,
											"name": "SUB"
										},
										{
											"begin": 13011,
											"end": 13024,
											"name": "SWAP1"
										},
										{
											"begin": 13011,
											"end": 13024,
											"name": "LOG1"
										},
										{
											"begin": 12726,
											"end": 13031,
											"name": "POP"
										},
										{
											"begin": 12726,
											"end": 13031,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 13439,
											"end": 13714,
											"name": "tag",
											"value": "116"
										},
										{
											"begin": 13439,
											"end": 13714,
											"name": "JUMPDEST"
										},
										{
											"begin": 1546,
											"end": 1551,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1546,
											"end": 1551,
											"name": "SLOAD"
										},
										{
											"begin": 1532,
											"end": 1542,
											"name": "CALLER"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1532,
											"end": 1551,
											"name": "SWAP1"
										},
										{
											"begin": 1532,
											"end": 1551,
											"name": "DUP2"
										},
										{
											"begin": 1532,
											"end": 1551,
											"name": "AND"
										},
										{
											"begin": 1546,
											"end": 1551,
											"name": "SWAP2"
										},
										{
											"begin": 1546,
											"end": 1551,
											"name": "AND"
										},
										{
											"begin": 1532,
											"end": 1551,
											"name": "EQ"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "PUSH [tag]",
											"value": "216"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "JUMPI"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "DUP1"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "REVERT"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "tag",
											"value": "216"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "JUMPDEST"
										},
										{
											"begin": 13503,
											"end": 13515,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13503,
											"end": 13515,
											"name": "SLOAD"
										},
										{
											"begin": 13503,
											"end": 13525,
											"name": "DUP2"
										},
										{
											"begin": 13503,
											"end": 13525,
											"name": "SWAP1"
										},
										{
											"begin": 13503,
											"end": 13525,
											"name": "LT"
										},
										{
											"begin": 13503,
											"end": 13525,
											"name": "ISZERO"
										},
										{
											"begin": 13495,
											"end": 13526,
											"name": "PUSH [tag]",
											"value": "218"
										},
										{
											"begin": 13495,
											"end": 13526,
											"name": "JUMPI"
										},
										{
											"begin": 13495,
											"end": 13526,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13495,
											"end": 13526,
											"name": "DUP1"
										},
										{
											"begin": 13495,
											"end": 13526,
											"name": "REVERT"
										},
										{
											"begin": 13495,
											"end": 13526,
											"name": "tag",
											"value": "218"
										},
										{
											"begin": 13495,
											"end": 13526,
											"name": "JUMPDEST"
										},
										{
											"begin": 13544,
											"end": 13559,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13553,
											"end": 13558,
											"name": "DUP1"
										},
										{
											"begin": 13553,
											"end": 13558,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13553,
											"end": 13558,
											"name": "AND"
										},
										{
											"begin": 13544,
											"end": 13559,
											"name": "DUP2"
										},
										{
											"begin": 13544,
											"end": 13559,
											"name": "MSTORE"
										},
										{
											"begin": 13544,
											"end": 13552,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 13544,
											"end": 13559,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13544,
											"end": 13559,
											"name": "MSTORE"
										},
										{
											"begin": 13544,
											"end": 13559,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13544,
											"end": 13559,
											"name": "SWAP1"
										},
										{
											"begin": 13544,
											"end": 13559,
											"name": "KECCAK256"
										},
										{
											"begin": 13544,
											"end": 13559,
											"name": "SLOAD"
										},
										{
											"begin": 13544,
											"end": 13569,
											"name": "DUP2"
										},
										{
											"begin": 13544,
											"end": 13569,
											"name": "SWAP1"
										},
										{
											"begin": 13544,
											"end": 13569,
											"name": "LT"
										},
										{
											"begin": 13544,
											"end": 13569,
											"name": "ISZERO"
										},
										{
											"begin": 13536,
											"end": 13570,
											"name": "PUSH [tag]",
											"value": "219"
										},
										{
											"begin": 13536,
											"end": 13570,
											"name": "JUMPI"
										},
										{
											"begin": 13536,
											"end": 13570,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13536,
											"end": 13570,
											"name": "DUP1"
										},
										{
											"begin": 13536,
											"end": 13570,
											"name": "REVERT"
										},
										{
											"begin": 13536,
											"end": 13570,
											"name": "tag",
											"value": "219"
										},
										{
											"begin": 13536,
											"end": 13570,
											"name": "JUMPDEST"
										},
										{
											"begin": 13581,
											"end": 13593,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13581,
											"end": 13603,
											"name": "DUP1"
										},
										{
											"begin": 13581,
											"end": 13603,
											"name": "SLOAD"
										},
										{
											"begin": 13581,
											"end": 13603,
											"name": "DUP3"
										},
										{
											"begin": 13581,
											"end": 13603,
											"name": "SWAP1"
										},
										{
											"begin": 13581,
											"end": 13603,
											"name": "SUB"
										},
										{
											"begin": 13581,
											"end": 13603,
											"name": "SWAP1"
										},
										{
											"begin": 13581,
											"end": 13603,
											"name": "SSTORE"
										},
										{
											"begin": 13581,
											"end": 13593,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13622,
											"end": 13627,
											"name": "DUP1"
										},
										{
											"begin": 13622,
											"end": 13627,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13622,
											"end": 13627,
											"name": "SWAP1"
										},
										{
											"begin": 13622,
											"end": 13627,
											"name": "DUP2"
										},
										{
											"begin": 13622,
											"end": 13627,
											"name": "AND"
										},
										{
											"begin": 13613,
											"end": 13628,
											"name": "DUP3"
										},
										{
											"begin": 13613,
											"end": 13628,
											"name": "MSTORE"
										},
										{
											"begin": 13613,
											"end": 13621,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 13613,
											"end": 13628,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13613,
											"end": 13628,
											"name": "MSTORE"
										},
										{
											"begin": 13613,
											"end": 13628,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13613,
											"end": 13628,
											"name": "DUP1"
										},
										{
											"begin": 13613,
											"end": 13628,
											"name": "DUP4"
										},
										{
											"begin": 13613,
											"end": 13628,
											"name": "KECCAK256"
										},
										{
											"begin": 13613,
											"end": 13638,
											"name": "DUP1"
										},
										{
											"begin": 13613,
											"end": 13638,
											"name": "SLOAD"
										},
										{
											"begin": 13613,
											"end": 13638,
											"name": "DUP6"
										},
										{
											"begin": 13613,
											"end": 13638,
											"name": "SWAP1"
										},
										{
											"begin": 13613,
											"end": 13638,
											"name": "SUB"
										},
										{
											"begin": 13613,
											"end": 13638,
											"name": "SWAP1"
										},
										{
											"begin": 13613,
											"end": 13638,
											"name": "SSTORE"
										},
										{
											"begin": 13658,
											"end": 13663,
											"name": "DUP3"
										},
										{
											"begin": 13658,
											"end": 13663,
											"name": "SLOAD"
										},
										{
											"begin": 13658,
											"end": 13663,
											"name": "SWAP1"
										},
										{
											"begin": 13658,
											"end": 13663,
											"name": "SWAP2"
										},
										{
											"begin": 13658,
											"end": 13663,
											"name": "AND"
										},
										{
											"begin": 13658,
											"end": 13663,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 13649,
											"end": 13683,
											"name": "SWAP1"
										},
										{
											"begin": 13597,
											"end": 13603,
											"name": "DUP5"
										},
										{
											"begin": 13597,
											"end": 13603,
											"name": "SWAP1"
										},
										{
											"begin": 13649,
											"end": 13683,
											"name": "MLOAD"
										},
										{
											"begin": 13649,
											"end": 13683,
											"name": "SWAP1"
										},
										{
											"begin": 13649,
											"end": 13683,
											"name": "DUP2"
										},
										{
											"begin": 13649,
											"end": 13683,
											"name": "MSTORE"
										},
										{
											"begin": 13649,
											"end": 13683,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13649,
											"end": 13683,
											"name": "ADD"
										},
										{
											"begin": 13649,
											"end": 13683,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13649,
											"end": 13683,
											"name": "MLOAD"
										},
										{
											"begin": 13649,
											"end": 13683,
											"name": "DUP1"
										},
										{
											"begin": 13649,
											"end": 13683,
											"name": "SWAP2"
										},
										{
											"begin": 13649,
											"end": 13683,
											"name": "SUB"
										},
										{
											"begin": 13649,
											"end": 13683,
											"name": "SWAP1"
										},
										{
											"begin": 13649,
											"end": 13683,
											"name": "LOG3"
										},
										{
											"begin": 13693,
											"end": 13707,
											"name": "PUSH",
											"value": "702D5967F45F6513A38FFC42D6BA9BF230BD40E8F53B16363C7EB4FD2DEB9A44"
										},
										{
											"begin": 13700,
											"end": 13706,
											"name": "DUP2"
										},
										{
											"begin": 13693,
											"end": 13707,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13693,
											"end": 13707,
											"name": "MLOAD"
										},
										{
											"begin": 13693,
											"end": 13707,
											"name": "SWAP1"
										},
										{
											"begin": 13693,
											"end": 13707,
											"name": "DUP2"
										},
										{
											"begin": 13693,
											"end": 13707,
											"name": "MSTORE"
										},
										{
											"begin": 13693,
											"end": 13707,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13693,
											"end": 13707,
											"name": "ADD"
										},
										{
											"begin": 13693,
											"end": 13707,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13693,
											"end": 13707,
											"name": "MLOAD"
										},
										{
											"begin": 13693,
											"end": 13707,
											"name": "DUP1"
										},
										{
											"begin": 13693,
											"end": 13707,
											"name": "SWAP2"
										},
										{
											"begin": 13693,
											"end": 13707,
											"name": "SUB"
										},
										{
											"begin": 13693,
											"end": 13707,
											"name": "SWAP1"
										},
										{
											"begin": 13693,
											"end": 13707,
											"name": "LOG1"
										},
										{
											"begin": 13439,
											"end": 13714,
											"name": "POP"
										},
										{
											"begin": 13439,
											"end": 13714,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11766,
											"end": 12053,
											"name": "tag",
											"value": "119"
										},
										{
											"begin": 11766,
											"end": 12053,
											"name": "JUMPDEST"
										},
										{
											"begin": 11874,
											"end": 11884,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 11874,
											"end": 11884,
											"name": "SLOAD"
										},
										{
											"begin": 11844,
											"end": 11858,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11844,
											"end": 11858,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": 11874,
											"end": 11884,
											"name": "SWAP1"
										},
										{
											"begin": 11874,
											"end": 11884,
											"name": "DIV"
										},
										{
											"begin": 11874,
											"end": 11884,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 11874,
											"end": 11884,
											"name": "AND"
										},
										{
											"begin": 11870,
											"end": 12047,
											"name": "ISZERO"
										},
										{
											"begin": 11870,
											"end": 12047,
											"name": "PUSH [tag]",
											"value": "221"
										},
										{
											"begin": 11870,
											"end": 12047,
											"name": "JUMPI"
										},
										{
											"begin": 11921,
											"end": 11936,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 11921,
											"end": 11936,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 11921,
											"end": 11936,
											"name": "AND"
										},
										{
											"begin": 11907,
											"end": 11947,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 11948,
											"end": 11954,
											"name": "DUP5"
										},
										{
											"begin": 11956,
											"end": 11964,
											"name": "DUP5"
										},
										{
											"begin": 11921,
											"end": 11936,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11907,
											"end": 11965,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11907,
											"end": 11965,
											"name": "MLOAD"
										},
										{
											"begin": 11907,
											"end": 11965,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11907,
											"end": 11965,
											"name": "ADD"
										},
										{
											"begin": 11907,
											"end": 11965,
											"name": "MSTORE"
										},
										{
											"begin": 11907,
											"end": 11965,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11907,
											"end": 11965,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": 11907,
											"end": 11965,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 11907,
											"end": 11965,
											"name": "DUP6"
										},
										{
											"begin": 11907,
											"end": 11965,
											"name": "AND"
										},
										{
											"begin": 11907,
											"end": 11965,
											"name": "MUL"
										},
										{
											"begin": 11907,
											"end": 11965,
											"name": "DUP2"
										},
										{
											"begin": 11907,
											"end": 11965,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 11907,
											"end": 11965,
											"name": "SWAP3"
										},
										{
											"begin": 11907,
											"end": 11965,
											"name": "DUP4"
										},
										{
											"begin": 11907,
											"end": 11965,
											"name": "AND"
										},
										{
											"begin": 11907,
											"end": 11965,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11907,
											"end": 11965,
											"name": "DUP3"
										},
										{
											"begin": 11907,
											"end": 11965,
											"name": "ADD"
										},
										{
											"begin": 11907,
											"end": 11965,
											"name": "MSTORE"
										},
										{
											"begin": 11907,
											"end": 11965,
											"name": "SWAP2"
										},
										{
											"begin": 11907,
											"end": 11965,
											"name": "AND"
										},
										{
											"begin": 11907,
											"end": 11965,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 11907,
											"end": 11965,
											"name": "DUP3"
										},
										{
											"begin": 11907,
											"end": 11965,
											"name": "ADD"
										},
										{
											"begin": 11907,
											"end": 11965,
											"name": "MSTORE"
										},
										{
											"begin": 11907,
											"end": 11965,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 11907,
											"end": 11965,
											"name": "ADD"
										},
										{
											"begin": 11907,
											"end": 11965,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11907,
											"end": 11965,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11907,
											"end": 11965,
											"name": "MLOAD"
										},
										{
											"begin": 11907,
											"end": 11965,
											"name": "DUP1"
										},
										{
											"begin": 11907,
											"end": 11965,
											"name": "DUP4"
										},
										{
											"begin": 11907,
											"end": 11965,
											"name": "SUB"
										},
										{
											"begin": 11907,
											"end": 11965,
											"name": "DUP2"
										},
										{
											"begin": 11907,
											"end": 11965,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11907,
											"end": 11965,
											"name": "DUP8"
										},
										{
											"begin": 11907,
											"end": 11965,
											"name": "DUP1"
										},
										{
											"begin": 11907,
											"end": 11965,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 11907,
											"end": 11965,
											"name": "ISZERO"
										},
										{
											"begin": 11907,
											"end": 11965,
											"name": "ISZERO"
										},
										{
											"begin": 11907,
											"end": 11965,
											"name": "PUSH [tag]",
											"value": "222"
										},
										{
											"begin": 11907,
											"end": 11965,
											"name": "JUMPI"
										},
										{
											"begin": 11907,
											"end": 11965,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11907,
											"end": 11965,
											"name": "DUP1"
										},
										{
											"begin": 11907,
											"end": 11965,
											"name": "REVERT"
										},
										{
											"begin": 11907,
											"end": 11965,
											"name": "tag",
											"value": "222"
										},
										{
											"begin": 11907,
											"end": 11965,
											"name": "JUMPDEST"
										},
										{
											"begin": 11907,
											"end": 11965,
											"name": "PUSH",
											"value": "2C6"
										},
										{
											"begin": 11907,
											"end": 11965,
											"name": "GAS"
										},
										{
											"begin": 11907,
											"end": 11965,
											"name": "SUB"
										},
										{
											"begin": 11907,
											"end": 11965,
											"name": "CALL"
										},
										{
											"begin": 11907,
											"end": 11965,
											"name": "ISZERO"
										},
										{
											"begin": 11907,
											"end": 11965,
											"name": "ISZERO"
										},
										{
											"begin": 11907,
											"end": 11965,
											"name": "PUSH [tag]",
											"value": "223"
										},
										{
											"begin": 11907,
											"end": 11965,
											"name": "JUMPI"
										},
										{
											"begin": 11907,
											"end": 11965,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11907,
											"end": 11965,
											"name": "DUP1"
										},
										{
											"begin": 11907,
											"end": 11965,
											"name": "REVERT"
										},
										{
											"begin": 11907,
											"end": 11965,
											"name": "tag",
											"value": "223"
										},
										{
											"begin": 11907,
											"end": 11965,
											"name": "JUMPDEST"
										},
										{
											"begin": 11907,
											"end": 11965,
											"name": "POP"
										},
										{
											"begin": 11907,
											"end": 11965,
											"name": "POP"
										},
										{
											"begin": 11907,
											"end": 11965,
											"name": "POP"
										},
										{
											"begin": 11907,
											"end": 11965,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11907,
											"end": 11965,
											"name": "MLOAD"
										},
										{
											"begin": 11907,
											"end": 11965,
											"name": "DUP1"
										},
										{
											"begin": 11907,
											"end": 11965,
											"name": "MLOAD"
										},
										{
											"begin": 11907,
											"end": 11965,
											"name": "SWAP1"
										},
										{
											"begin": 11907,
											"end": 11965,
											"name": "POP"
										},
										{
											"begin": 11900,
											"end": 11965,
											"name": "SWAP1"
										},
										{
											"begin": 11900,
											"end": 11965,
											"name": "POP"
										},
										{
											"begin": 11900,
											"end": 11965,
											"name": "PUSH [tag]",
											"value": "224"
										},
										{
											"begin": 11900,
											"end": 11965,
											"name": "JUMP"
										},
										{
											"begin": 11870,
											"end": 12047,
											"name": "tag",
											"value": "221"
										},
										{
											"begin": 11870,
											"end": 12047,
											"name": "JUMPDEST"
										},
										{
											"begin": 12003,
											"end": 12036,
											"name": "PUSH [tag]",
											"value": "225"
										},
										{
											"begin": 12019,
											"end": 12025,
											"name": "DUP4"
										},
										{
											"begin": 12027,
											"end": 12035,
											"name": "DUP4"
										},
										{
											"begin": 12003,
											"end": 12018,
											"name": "PUSH [tag]",
											"value": "226"
										},
										{
											"begin": 12003,
											"end": 12036,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12003,
											"end": 12036,
											"name": "tag",
											"value": "225"
										},
										{
											"begin": 12003,
											"end": 12036,
											"name": "JUMPDEST"
										},
										{
											"begin": 11996,
											"end": 12036,
											"name": "SWAP1"
										},
										{
											"begin": 11996,
											"end": 12036,
											"name": "POP"
										},
										{
											"begin": 11870,
											"end": 12047,
											"name": "tag",
											"value": "224"
										},
										{
											"begin": 11870,
											"end": 12047,
											"name": "JUMPDEST"
										},
										{
											"begin": 11766,
											"end": 12053,
											"name": "SWAP3"
										},
										{
											"begin": 11766,
											"end": 12053,
											"name": "SWAP2"
										},
										{
											"begin": 11766,
											"end": 12053,
											"name": "POP"
										},
										{
											"begin": 11766,
											"end": 12053,
											"name": "POP"
										},
										{
											"begin": 11766,
											"end": 12053,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2827,
											"end": 2858,
											"name": "tag",
											"value": "122"
										},
										{
											"begin": 2827,
											"end": 2858,
											"name": "JUMPDEST"
										},
										{
											"begin": 2827,
											"end": 2858,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 2827,
											"end": 2858,
											"name": "SLOAD"
										},
										{
											"begin": 2827,
											"end": 2858,
											"name": "DUP2"
										},
										{
											"begin": 2827,
											"end": 2858,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7969,
											"end": 8015,
											"name": "tag",
											"value": "125"
										},
										{
											"begin": 7969,
											"end": 8015,
											"name": "JUMPDEST"
										},
										{
											"begin": 7969,
											"end": 8015,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 7969,
											"end": 8015,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7969,
											"end": 8015,
											"name": "MSTORE"
										},
										{
											"begin": 7969,
											"end": 8015,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7969,
											"end": 8015,
											"name": "SWAP1"
										},
										{
											"begin": 7969,
											"end": 8015,
											"name": "DUP2"
										},
										{
											"begin": 7969,
											"end": 8015,
											"name": "MSTORE"
										},
										{
											"begin": 7969,
											"end": 8015,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7969,
											"end": 8015,
											"name": "SWAP1"
										},
										{
											"begin": 7969,
											"end": 8015,
											"name": "KECCAK256"
										},
										{
											"begin": 7969,
											"end": 8015,
											"name": "SLOAD"
										},
										{
											"begin": 7969,
											"end": 8015,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 7969,
											"end": 8015,
											"name": "AND"
										},
										{
											"begin": 7969,
											"end": 8015,
											"name": "DUP2"
										},
										{
											"begin": 7969,
											"end": 8015,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8174,
											"end": 8331,
											"name": "tag",
											"value": "128"
										},
										{
											"begin": 8174,
											"end": 8331,
											"name": "JUMPDEST"
										},
										{
											"begin": 1546,
											"end": 1551,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1546,
											"end": 1551,
											"name": "SLOAD"
										},
										{
											"begin": 1532,
											"end": 1542,
											"name": "CALLER"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1532,
											"end": 1551,
											"name": "SWAP1"
										},
										{
											"begin": 1532,
											"end": 1551,
											"name": "DUP2"
										},
										{
											"begin": 1532,
											"end": 1551,
											"name": "AND"
										},
										{
											"begin": 1546,
											"end": 1551,
											"name": "SWAP2"
										},
										{
											"begin": 1546,
											"end": 1551,
											"name": "AND"
										},
										{
											"begin": 1532,
											"end": 1551,
											"name": "EQ"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "PUSH [tag]",
											"value": "228"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "JUMPI"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "DUP1"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "REVERT"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "tag",
											"value": "228"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8249,
											"end": 8276,
											"name": "DUP2"
										},
										{
											"begin": 8249,
											"end": 8276,
											"name": "AND"
										},
										{
											"begin": 8279,
											"end": 8284,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8249,
											"end": 8276,
											"name": "SWAP1"
										},
										{
											"begin": 8249,
											"end": 8276,
											"name": "DUP2"
										},
										{
											"begin": 8249,
											"end": 8276,
											"name": "MSTORE"
										},
										{
											"begin": 8249,
											"end": 8262,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 8249,
											"end": 8276,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8249,
											"end": 8276,
											"name": "MSTORE"
										},
										{
											"begin": 8249,
											"end": 8276,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8249,
											"end": 8276,
											"name": "SWAP1"
										},
										{
											"begin": 8249,
											"end": 8276,
											"name": "DUP2"
										},
										{
											"begin": 8249,
											"end": 8276,
											"name": "SWAP1"
										},
										{
											"begin": 8249,
											"end": 8276,
											"name": "KECCAK256"
										},
										{
											"begin": 8249,
											"end": 8284,
											"name": "DUP1"
										},
										{
											"begin": 8249,
											"end": 8284,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 8249,
											"end": 8284,
											"name": "AND"
										},
										{
											"begin": 8249,
											"end": 8284,
											"name": "SWAP1"
										},
										{
											"begin": 8249,
											"end": 8284,
											"name": "SSTORE"
										},
										{
											"begin": 8294,
											"end": 8324,
											"name": "PUSH",
											"value": "D7E9EC6E6ECD65492DCE6BF513CD6867560D49544421D0783DDF06E76C24470C"
										},
										{
											"begin": 8294,
											"end": 8324,
											"name": "SWAP1"
										},
										{
											"begin": 8263,
											"end": 8275,
											"name": "DUP3"
										},
										{
											"begin": 8263,
											"end": 8275,
											"name": "SWAP1"
										},
										{
											"begin": 8294,
											"end": 8324,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8294,
											"end": 8324,
											"name": "SWAP1"
										},
										{
											"begin": 8294,
											"end": 8324,
											"name": "SWAP2"
										},
										{
											"begin": 8294,
											"end": 8324,
											"name": "AND"
										},
										{
											"begin": 8294,
											"end": 8324,
											"name": "DUP2"
										},
										{
											"begin": 8294,
											"end": 8324,
											"name": "MSTORE"
										},
										{
											"begin": 8294,
											"end": 8324,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8294,
											"end": 8324,
											"name": "ADD"
										},
										{
											"begin": 8294,
											"end": 8324,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8294,
											"end": 8324,
											"name": "MLOAD"
										},
										{
											"begin": 8294,
											"end": 8324,
											"name": "DUP1"
										},
										{
											"begin": 8294,
											"end": 8324,
											"name": "SWAP2"
										},
										{
											"begin": 8294,
											"end": 8324,
											"name": "SUB"
										},
										{
											"begin": 8294,
											"end": 8324,
											"name": "SWAP1"
										},
										{
											"begin": 8294,
											"end": 8324,
											"name": "LOG1"
										},
										{
											"begin": 8174,
											"end": 8331,
											"name": "POP"
										},
										{
											"begin": 8174,
											"end": 8331,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4241,
											"end": 4283,
											"name": "tag",
											"value": "131"
										},
										{
											"begin": 4241,
											"end": 4283,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 4241,
											"end": 4283,
											"name": "DUP2"
										},
										{
											"begin": 4241,
											"end": 4283,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1738,
											"end": 1885,
											"name": "tag",
											"value": "134"
										},
										{
											"begin": 1738,
											"end": 1885,
											"name": "JUMPDEST"
										},
										{
											"begin": 1546,
											"end": 1551,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1546,
											"end": 1551,
											"name": "SLOAD"
										},
										{
											"begin": 1532,
											"end": 1542,
											"name": "CALLER"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1532,
											"end": 1551,
											"name": "SWAP1"
										},
										{
											"begin": 1532,
											"end": 1551,
											"name": "DUP2"
										},
										{
											"begin": 1532,
											"end": 1551,
											"name": "AND"
										},
										{
											"begin": 1546,
											"end": 1551,
											"name": "SWAP2"
										},
										{
											"begin": 1546,
											"end": 1551,
											"name": "AND"
										},
										{
											"begin": 1532,
											"end": 1551,
											"name": "EQ"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "PUSH [tag]",
											"value": "231"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "JUMPI"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "DUP1"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "REVERT"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "tag",
											"value": "231"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1814,
											"end": 1836,
											"name": "DUP2"
										},
										{
											"begin": 1814,
											"end": 1836,
											"name": "AND"
										},
										{
											"begin": 1814,
											"end": 1836,
											"name": "ISZERO"
										},
										{
											"begin": 1810,
											"end": 1879,
											"name": "PUSH [tag]",
											"value": "233"
										},
										{
											"begin": 1810,
											"end": 1879,
											"name": "JUMPI"
										},
										{
											"begin": 1852,
											"end": 1857,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1852,
											"end": 1868,
											"name": "DUP1"
										},
										{
											"begin": 1852,
											"end": 1868,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 1852,
											"end": 1868,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1852,
											"end": 1868,
											"name": "DUP4"
										},
										{
											"begin": 1852,
											"end": 1868,
											"name": "AND"
										},
										{
											"begin": 1852,
											"end": 1868,
											"name": "OR"
										},
										{
											"begin": 1852,
											"end": 1868,
											"name": "SWAP1"
										},
										{
											"begin": 1852,
											"end": 1868,
											"name": "SSTORE"
										},
										{
											"begin": 1810,
											"end": 1879,
											"name": "tag",
											"value": "233"
										},
										{
											"begin": 1810,
											"end": 1879,
											"name": "JUMPDEST"
										},
										{
											"begin": 1738,
											"end": 1885,
											"name": "POP"
										},
										{
											"begin": 1738,
											"end": 1885,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8337,
											"end": 8716,
											"name": "tag",
											"value": "137"
										},
										{
											"begin": 8337,
											"end": 8716,
											"name": "JUMPDEST"
										},
										{
											"begin": 8468,
											"end": 8483,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1546,
											"end": 1551,
											"name": "DUP1"
										},
										{
											"begin": 1546,
											"end": 1551,
											"name": "SLOAD"
										},
										{
											"begin": 1532,
											"end": 1542,
											"name": "CALLER"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1532,
											"end": 1551,
											"name": "SWAP1"
										},
										{
											"begin": 1532,
											"end": 1551,
											"name": "DUP2"
										},
										{
											"begin": 1532,
											"end": 1551,
											"name": "AND"
										},
										{
											"begin": 1546,
											"end": 1551,
											"name": "SWAP2"
										},
										{
											"begin": 1546,
											"end": 1551,
											"name": "AND"
										},
										{
											"begin": 1532,
											"end": 1551,
											"name": "EQ"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "PUSH [tag]",
											"value": "235"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "JUMPI"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "DUP1"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "REVERT"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "tag",
											"value": "235"
										},
										{
											"begin": 1524,
											"end": 1552,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8426,
											"end": 8457,
											"name": "DUP3"
										},
										{
											"begin": 8426,
											"end": 8457,
											"name": "AND"
										},
										{
											"begin": 8426,
											"end": 8457,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8426,
											"end": 8457,
											"name": "SWAP1"
										},
										{
											"begin": 8426,
											"end": 8457,
											"name": "DUP2"
										},
										{
											"begin": 8426,
											"end": 8457,
											"name": "MSTORE"
										},
										{
											"begin": 8426,
											"end": 8439,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 8426,
											"end": 8457,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8426,
											"end": 8457,
											"name": "MSTORE"
										},
										{
											"begin": 8426,
											"end": 8457,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8426,
											"end": 8457,
											"name": "SWAP1"
										},
										{
											"begin": 8426,
											"end": 8457,
											"name": "KECCAK256"
										},
										{
											"begin": 8426,
											"end": 8457,
											"name": "SLOAD"
										},
										{
											"begin": 8426,
											"end": 8457,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 8426,
											"end": 8457,
											"name": "AND"
										},
										{
											"begin": 8418,
											"end": 8458,
											"name": "ISZERO"
										},
										{
											"begin": 8418,
											"end": 8458,
											"name": "ISZERO"
										},
										{
											"begin": 8418,
											"end": 8458,
											"name": "PUSH [tag]",
											"value": "237"
										},
										{
											"begin": 8418,
											"end": 8458,
											"name": "JUMPI"
										},
										{
											"begin": 8418,
											"end": 8458,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8418,
											"end": 8458,
											"name": "DUP1"
										},
										{
											"begin": 8418,
											"end": 8458,
											"name": "REVERT"
										},
										{
											"begin": 8418,
											"end": 8458,
											"name": "tag",
											"value": "237"
										},
										{
											"begin": 8418,
											"end": 8458,
											"name": "JUMPDEST"
										},
										{
											"begin": 8486,
											"end": 8513,
											"name": "PUSH [tag]",
											"value": "238"
										},
										{
											"begin": 8496,
											"end": 8512,
											"name": "DUP3"
										},
										{
											"begin": 8486,
											"end": 8495,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 8486,
											"end": 8513,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8486,
											"end": 8513,
											"name": "tag",
											"value": "238"
										},
										{
											"begin": 8486,
											"end": 8513,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8523,
											"end": 8549,
											"name": "DUP4"
										},
										{
											"begin": 8523,
											"end": 8549,
											"name": "AND"
										},
										{
											"begin": 8552,
											"end": 8553,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8523,
											"end": 8549,
											"name": "DUP2"
										},
										{
											"begin": 8523,
											"end": 8549,
											"name": "DUP2"
										},
										{
											"begin": 8523,
											"end": 8549,
											"name": "MSTORE"
										},
										{
											"begin": 8523,
											"end": 8531,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 8523,
											"end": 8549,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8523,
											"end": 8549,
											"name": "MSTORE"
										},
										{
											"begin": 8523,
											"end": 8549,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8523,
											"end": 8549,
											"name": "DUP1"
										},
										{
											"begin": 8523,
											"end": 8549,
											"name": "DUP3"
										},
										{
											"begin": 8523,
											"end": 8549,
											"name": "KECCAK256"
										},
										{
											"begin": 8523,
											"end": 8553,
											"name": "DUP3"
										},
										{
											"begin": 8523,
											"end": 8553,
											"name": "SWAP1"
										},
										{
											"begin": 8523,
											"end": 8553,
											"name": "SSTORE"
										},
										{
											"begin": 8563,
											"end": 8575,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 8563,
											"end": 8589,
											"name": "DUP1"
										},
										{
											"begin": 8563,
											"end": 8589,
											"name": "SLOAD"
										},
										{
											"begin": 8563,
											"end": 8589,
											"name": "DUP6"
										},
										{
											"begin": 8563,
											"end": 8589,
											"name": "SWAP1"
										},
										{
											"begin": 8563,
											"end": 8589,
											"name": "SUB"
										},
										{
											"begin": 8563,
											"end": 8589,
											"name": "SWAP1"
										},
										{
											"begin": 8563,
											"end": 8589,
											"name": "SSTORE"
										},
										{
											"begin": 8468,
											"end": 8513,
											"name": "SWAP3"
										},
										{
											"begin": 8468,
											"end": 8513,
											"name": "SWAP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 8552,
											"end": 8553,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 8600,
											"end": 8650,
											"name": "SWAP1"
										},
										{
											"begin": 8468,
											"end": 8513,
											"name": "DUP5"
										},
										{
											"begin": 8468,
											"end": 8513,
											"name": "SWAP1"
										},
										{
											"begin": 8600,
											"end": 8650,
											"name": "MLOAD"
										},
										{
											"begin": 8600,
											"end": 8650,
											"name": "SWAP1"
										},
										{
											"begin": 8600,
											"end": 8650,
											"name": "DUP2"
										},
										{
											"begin": 8600,
											"end": 8650,
											"name": "MSTORE"
										},
										{
											"begin": 8600,
											"end": 8650,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8600,
											"end": 8650,
											"name": "ADD"
										},
										{
											"begin": 8600,
											"end": 8650,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8600,
											"end": 8650,
											"name": "MLOAD"
										},
										{
											"begin": 8600,
											"end": 8650,
											"name": "DUP1"
										},
										{
											"begin": 8600,
											"end": 8650,
											"name": "SWAP2"
										},
										{
											"begin": 8600,
											"end": 8650,
											"name": "SUB"
										},
										{
											"begin": 8600,
											"end": 8650,
											"name": "SWAP1"
										},
										{
											"begin": 8600,
											"end": 8650,
											"name": "LOG3"
										},
										{
											"begin": 8660,
											"end": 8709,
											"name": "PUSH",
											"value": "61E6E66B0D6339B2980AECC6CCC0039736791F0CCDE9ED512E789A7FBDD698C6"
										},
										{
											"begin": 8680,
											"end": 8696,
											"name": "DUP3"
										},
										{
											"begin": 8698,
											"end": 8708,
											"name": "DUP3"
										},
										{
											"begin": 8660,
											"end": 8709,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8660,
											"end": 8709,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8660,
											"end": 8709,
											"name": "SWAP1"
										},
										{
											"begin": 8660,
											"end": 8709,
											"name": "SWAP3"
										},
										{
											"begin": 8660,
											"end": 8709,
											"name": "AND"
										},
										{
											"begin": 8660,
											"end": 8709,
											"name": "DUP3"
										},
										{
											"begin": 8660,
											"end": 8709,
											"name": "MSTORE"
										},
										{
											"begin": 8660,
											"end": 8709,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8660,
											"end": 8709,
											"name": "DUP3"
										},
										{
											"begin": 8660,
											"end": 8709,
											"name": "ADD"
										},
										{
											"begin": 8660,
											"end": 8709,
											"name": "MSTORE"
										},
										{
											"begin": 8660,
											"end": 8709,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8660,
											"end": 8709,
											"name": "SWAP1"
										},
										{
											"begin": 8660,
											"end": 8709,
											"name": "DUP2"
										},
										{
											"begin": 8660,
											"end": 8709,
											"name": "ADD"
										},
										{
											"begin": 8660,
											"end": 8709,
											"name": "SWAP1"
										},
										{
											"begin": 8660,
											"end": 8709,
											"name": "MLOAD"
										},
										{
											"begin": 8660,
											"end": 8709,
											"name": "DUP1"
										},
										{
											"begin": 8660,
											"end": 8709,
											"name": "SWAP2"
										},
										{
											"begin": 8660,
											"end": 8709,
											"name": "SUB"
										},
										{
											"begin": 8660,
											"end": 8709,
											"name": "SWAP1"
										},
										{
											"begin": 8660,
											"end": 8709,
											"name": "LOG1"
										},
										{
											"begin": 8337,
											"end": 8716,
											"name": "POP"
										},
										{
											"begin": 8337,
											"end": 8716,
											"name": "POP"
										},
										{
											"begin": 8337,
											"end": 8716,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5685,
											"end": 6248,
											"name": "tag",
											"value": "152"
										},
										{
											"begin": 5685,
											"end": 6248,
											"name": "JUMPDEST"
										},
										{
											"begin": 5756,
											"end": 5762,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3037,
											"end": 3045,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 3019,
											"end": 3027,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3019,
											"end": 3045,
											"name": "LT"
										},
										{
											"begin": 3017,
											"end": 3046,
											"name": "ISZERO"
										},
										{
											"begin": 3009,
											"end": 3047,
											"name": "PUSH [tag]",
											"value": "240"
										},
										{
											"begin": 3009,
											"end": 3047,
											"name": "JUMPI"
										},
										{
											"begin": 3009,
											"end": 3047,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3009,
											"end": 3047,
											"name": "DUP1"
										},
										{
											"begin": 3009,
											"end": 3047,
											"name": "REVERT"
										},
										{
											"begin": 3009,
											"end": 3047,
											"name": "tag",
											"value": "240"
										},
										{
											"begin": 3009,
											"end": 3047,
											"name": "JUMPDEST"
										},
										{
											"begin": 6090,
											"end": 6101,
											"name": "DUP2"
										},
										{
											"begin": 6090,
											"end": 6101,
											"name": "ISZERO"
										},
										{
											"begin": 6090,
											"end": 6101,
											"name": "DUP1"
										},
										{
											"begin": 6090,
											"end": 6101,
											"name": "ISZERO"
										},
										{
											"begin": 6090,
											"end": 6101,
											"name": "SWAP1"
										},
										{
											"begin": 6089,
											"end": 6142,
											"name": "PUSH [tag]",
											"value": "242"
										},
										{
											"begin": 6089,
											"end": 6142,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 6115,
											"end": 6125,
											"name": "CALLER"
										},
										{
											"begin": 6107,
											"end": 6126,
											"name": "DUP2"
										},
										{
											"begin": 6107,
											"end": 6126,
											"name": "AND"
										},
										{
											"begin": 6107,
											"end": 6126,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6107,
											"end": 6126,
											"name": "SWAP1"
										},
										{
											"begin": 6107,
											"end": 6126,
											"name": "DUP2"
										},
										{
											"begin": 6107,
											"end": 6126,
											"name": "MSTORE"
										},
										{
											"begin": 6107,
											"end": 6114,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 6107,
											"end": 6126,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6107,
											"end": 6126,
											"name": "SWAP1"
										},
										{
											"begin": 6107,
											"end": 6126,
											"name": "DUP2"
										},
										{
											"begin": 6107,
											"end": 6126,
											"name": "MSTORE"
										},
										{
											"begin": 6107,
											"end": 6126,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6107,
											"end": 6126,
											"name": "DUP1"
										},
										{
											"begin": 6107,
											"end": 6126,
											"name": "DUP4"
										},
										{
											"begin": 6107,
											"end": 6126,
											"name": "KECCAK256"
										},
										{
											"begin": 6107,
											"end": 6136,
											"name": "SWAP4"
										},
										{
											"begin": 6107,
											"end": 6136,
											"name": "DUP8"
										},
										{
											"begin": 6107,
											"end": 6136,
											"name": "AND"
										},
										{
											"begin": 6107,
											"end": 6136,
											"name": "DUP4"
										},
										{
											"begin": 6107,
											"end": 6136,
											"name": "MSTORE"
										},
										{
											"begin": 6107,
											"end": 6136,
											"name": "SWAP3"
										},
										{
											"begin": 6107,
											"end": 6136,
											"name": "SWAP1"
										},
										{
											"begin": 6107,
											"end": 6136,
											"name": "MSTORE"
										},
										{
											"begin": 6107,
											"end": 6136,
											"name": "KECCAK256"
										},
										{
											"begin": 6107,
											"end": 6136,
											"name": "SLOAD"
										},
										{
											"begin": 6107,
											"end": 6141,
											"name": "ISZERO"
										},
										{
											"begin": 6107,
											"end": 6141,
											"name": "ISZERO"
										},
										{
											"begin": 6089,
											"end": 6142,
											"name": "tag",
											"value": "242"
										},
										{
											"begin": 6089,
											"end": 6142,
											"name": "JUMPDEST"
										},
										{
											"begin": 6087,
											"end": 6143,
											"name": "ISZERO"
										},
										{
											"begin": 6079,
											"end": 6144,
											"name": "PUSH [tag]",
											"value": "243"
										},
										{
											"begin": 6079,
											"end": 6144,
											"name": "JUMPI"
										},
										{
											"begin": 6079,
											"end": 6144,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6079,
											"end": 6144,
											"name": "DUP1"
										},
										{
											"begin": 6079,
											"end": 6144,
											"name": "REVERT"
										},
										{
											"begin": 6079,
											"end": 6144,
											"name": "tag",
											"value": "243"
										},
										{
											"begin": 6079,
											"end": 6144,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 6163,
											"end": 6173,
											"name": "CALLER"
										},
										{
											"begin": 6155,
											"end": 6174,
											"name": "DUP2"
										},
										{
											"begin": 6155,
											"end": 6174,
											"name": "AND"
										},
										{
											"begin": 6155,
											"end": 6174,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6155,
											"end": 6174,
											"name": "DUP2"
										},
										{
											"begin": 6155,
											"end": 6174,
											"name": "DUP2"
										},
										{
											"begin": 6155,
											"end": 6174,
											"name": "MSTORE"
										},
										{
											"begin": 6155,
											"end": 6162,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 6155,
											"end": 6174,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6155,
											"end": 6174,
											"name": "SWAP1"
										},
										{
											"begin": 6155,
											"end": 6174,
											"name": "DUP2"
										},
										{
											"begin": 6155,
											"end": 6174,
											"name": "MSTORE"
										},
										{
											"begin": 6155,
											"end": 6174,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6155,
											"end": 6174,
											"name": "DUP1"
										},
										{
											"begin": 6155,
											"end": 6174,
											"name": "DUP4"
										},
										{
											"begin": 6155,
											"end": 6174,
											"name": "KECCAK256"
										},
										{
											"begin": 6155,
											"end": 6184,
											"name": "SWAP5"
										},
										{
											"begin": 6155,
											"end": 6184,
											"name": "DUP9"
										},
										{
											"begin": 6155,
											"end": 6184,
											"name": "AND"
										},
										{
											"begin": 6155,
											"end": 6184,
											"name": "DUP1"
										},
										{
											"begin": 6155,
											"end": 6184,
											"name": "DUP5"
										},
										{
											"begin": 6155,
											"end": 6184,
											"name": "MSTORE"
										},
										{
											"begin": 6155,
											"end": 6184,
											"name": "SWAP5"
										},
										{
											"begin": 6155,
											"end": 6184,
											"name": "SWAP1"
										},
										{
											"begin": 6155,
											"end": 6184,
											"name": "SWAP2"
										},
										{
											"begin": 6155,
											"end": 6184,
											"name": "MSTORE"
										},
										{
											"begin": 6155,
											"end": 6184,
											"name": "SWAP1"
										},
										{
											"begin": 6155,
											"end": 6184,
											"name": "DUP2"
										},
										{
											"begin": 6155,
											"end": 6184,
											"name": "SWAP1"
										},
										{
											"begin": 6155,
											"end": 6184,
											"name": "KECCAK256"
										},
										{
											"begin": 6155,
											"end": 6193,
											"name": "DUP6"
										},
										{
											"begin": 6155,
											"end": 6193,
											"name": "SWAP1"
										},
										{
											"begin": 6155,
											"end": 6193,
											"name": "SSTORE"
										},
										{
											"begin": 6203,
											"end": 6241,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 6203,
											"end": 6241,
											"name": "SWAP1"
										},
										{
											"begin": 6187,
											"end": 6193,
											"name": "DUP6"
										},
										{
											"begin": 6187,
											"end": 6193,
											"name": "SWAP1"
										},
										{
											"begin": 6203,
											"end": 6241,
											"name": "MLOAD"
										},
										{
											"begin": 6203,
											"end": 6241,
											"name": "SWAP1"
										},
										{
											"begin": 6203,
											"end": 6241,
											"name": "DUP2"
										},
										{
											"begin": 6203,
											"end": 6241,
											"name": "MSTORE"
										},
										{
											"begin": 6203,
											"end": 6241,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6203,
											"end": 6241,
											"name": "ADD"
										},
										{
											"begin": 6203,
											"end": 6241,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6203,
											"end": 6241,
											"name": "MLOAD"
										},
										{
											"begin": 6203,
											"end": 6241,
											"name": "DUP1"
										},
										{
											"begin": 6203,
											"end": 6241,
											"name": "SWAP2"
										},
										{
											"begin": 6203,
											"end": 6241,
											"name": "SUB"
										},
										{
											"begin": 6203,
											"end": 6241,
											"name": "SWAP1"
										},
										{
											"begin": 6203,
											"end": 6241,
											"name": "LOG3"
										},
										{
											"begin": 5685,
											"end": 6248,
											"name": "POP"
										},
										{
											"begin": 5685,
											"end": 6248,
											"name": "POP"
										},
										{
											"begin": 5685,
											"end": 6248,
											"name": "POP"
										},
										{
											"begin": 5685,
											"end": 6248,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4565,
											"end": 5445,
											"name": "tag",
											"value": "170"
										},
										{
											"begin": 4565,
											"end": 5445,
											"name": "JUMPDEST"
										},
										{
											"begin": 4669,
											"end": 4683,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4669,
											"end": 4683,
											"name": "DUP1"
										},
										{
											"begin": 4669,
											"end": 4683,
											"name": "DUP1"
										},
										{
											"begin": 4651,
											"end": 4657,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 3037,
											"end": 3045,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 3019,
											"end": 3027,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3019,
											"end": 3045,
											"name": "LT"
										},
										{
											"begin": 3017,
											"end": 3046,
											"name": "ISZERO"
										},
										{
											"begin": 3009,
											"end": 3047,
											"name": "PUSH [tag]",
											"value": "245"
										},
										{
											"begin": 3009,
											"end": 3047,
											"name": "JUMPI"
										},
										{
											"begin": 3009,
											"end": 3047,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3009,
											"end": 3047,
											"name": "DUP1"
										},
										{
											"begin": 3009,
											"end": 3047,
											"name": "REVERT"
										},
										{
											"begin": 3009,
											"end": 3047,
											"name": "tag",
											"value": "245"
										},
										{
											"begin": 3009,
											"end": 3047,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4686,
											"end": 4700,
											"name": "DUP1"
										},
										{
											"begin": 4686,
											"end": 4700,
											"name": "DUP9"
										},
										{
											"begin": 4686,
											"end": 4700,
											"name": "AND"
										},
										{
											"begin": 4686,
											"end": 4700,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4686,
											"end": 4700,
											"name": "SWAP1"
										},
										{
											"begin": 4686,
											"end": 4700,
											"name": "DUP2"
										},
										{
											"begin": 4686,
											"end": 4700,
											"name": "MSTORE"
										},
										{
											"begin": 4686,
											"end": 4693,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 4686,
											"end": 4700,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4686,
											"end": 4700,
											"name": "SWAP1"
										},
										{
											"begin": 4686,
											"end": 4700,
											"name": "DUP2"
										},
										{
											"begin": 4686,
											"end": 4700,
											"name": "MSTORE"
										},
										{
											"begin": 4686,
											"end": 4700,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4686,
											"end": 4700,
											"name": "DUP1"
										},
										{
											"begin": 4686,
											"end": 4700,
											"name": "DUP4"
										},
										{
											"begin": 4686,
											"end": 4700,
											"name": "KECCAK256"
										},
										{
											"begin": 4701,
											"end": 4711,
											"name": "CALLER"
										},
										{
											"begin": 4686,
											"end": 4712,
											"name": "SWAP1"
										},
										{
											"begin": 4686,
											"end": 4712,
											"name": "SWAP5"
										},
										{
											"begin": 4686,
											"end": 4712,
											"name": "AND"
										},
										{
											"begin": 4686,
											"end": 4712,
											"name": "DUP4"
										},
										{
											"begin": 4686,
											"end": 4712,
											"name": "MSTORE"
										},
										{
											"begin": 4686,
											"end": 4712,
											"name": "SWAP3"
										},
										{
											"begin": 4686,
											"end": 4712,
											"name": "SWAP1"
										},
										{
											"begin": 4686,
											"end": 4712,
											"name": "MSTORE"
										},
										{
											"begin": 4686,
											"end": 4712,
											"name": "KECCAK256"
										},
										{
											"begin": 4686,
											"end": 4712,
											"name": "SLOAD"
										},
										{
											"begin": 4901,
											"end": 4916,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 4901,
											"end": 4916,
											"name": "SLOAD"
										},
										{
											"begin": 4686,
											"end": 4712,
											"name": "SWAP1"
										},
										{
											"begin": 4686,
											"end": 4712,
											"name": "SWAP5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 4889,
											"end": 4929,
											"name": "PUSH [tag]",
											"value": "247"
										},
										{
											"begin": 4889,
											"end": 4929,
											"name": "SWAP1"
										},
										{
											"begin": 4923,
											"end": 4928,
											"name": "PUSH",
											"value": "2710"
										},
										{
											"begin": 4923,
											"end": 4928,
											"name": "SWAP1"
										},
										{
											"begin": 4890,
											"end": 4917,
											"name": "PUSH [tag]",
											"value": "248"
										},
										{
											"begin": 4890,
											"end": 4917,
											"name": "SWAP1"
										},
										{
											"begin": 4890,
											"end": 4896,
											"name": "DUP9"
										},
										{
											"begin": 4890,
											"end": 4896,
											"name": "SWAP1"
										},
										{
											"begin": 4890,
											"end": 4917,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4890,
											"end": 4900,
											"name": "PUSH [tag]",
											"value": "209"
										},
										{
											"begin": 4890,
											"end": 4917,
											"name": "AND"
										},
										{
											"begin": 4890,
											"end": 4917,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4890,
											"end": 4917,
											"name": "tag",
											"value": "248"
										},
										{
											"begin": 4890,
											"end": 4917,
											"name": "JUMPDEST"
										},
										{
											"begin": 4889,
											"end": 4922,
											"name": "SWAP1"
										},
										{
											"begin": 4889,
											"end": 4929,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4889,
											"end": 4922,
											"name": "PUSH [tag]",
											"value": "249"
										},
										{
											"begin": 4889,
											"end": 4929,
											"name": "AND"
										},
										{
											"begin": 4889,
											"end": 4929,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4889,
											"end": 4929,
											"name": "tag",
											"value": "247"
										},
										{
											"begin": 4889,
											"end": 4929,
											"name": "JUMPDEST"
										},
										{
											"begin": 4878,
											"end": 4929,
											"name": "SWAP3"
										},
										{
											"begin": 4878,
											"end": 4929,
											"name": "POP"
										},
										{
											"begin": 4949,
											"end": 4959,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4949,
											"end": 4959,
											"name": "SLOAD"
										},
										{
											"begin": 4943,
											"end": 4946,
											"name": "DUP4"
										},
										{
											"begin": 4943,
											"end": 4959,
											"name": "GT"
										},
										{
											"begin": 4939,
											"end": 5002,
											"name": "ISZERO"
										},
										{
											"begin": 4939,
											"end": 5002,
											"name": "PUSH [tag]",
											"value": "250"
										},
										{
											"begin": 4939,
											"end": 5002,
											"name": "JUMPI"
										},
										{
											"begin": 4981,
											"end": 4991,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4981,
											"end": 4991,
											"name": "SLOAD"
										},
										{
											"begin": 4975,
											"end": 4991,
											"name": "SWAP3"
										},
										{
											"begin": 4975,
											"end": 4991,
											"name": "POP"
										},
										{
											"begin": 4939,
											"end": 5002,
											"name": "tag",
											"value": "250"
										},
										{
											"begin": 4939,
											"end": 5002,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 5015,
											"end": 5025,
											"name": "DUP5"
										},
										{
											"begin": 5015,
											"end": 5036,
											"name": "LT"
										},
										{
											"begin": 5011,
											"end": 5114,
											"name": "ISZERO"
										},
										{
											"begin": 5011,
											"end": 5114,
											"name": "PUSH [tag]",
											"value": "251"
										},
										{
											"begin": 5011,
											"end": 5114,
											"name": "JUMPI"
										},
										{
											"begin": 5081,
											"end": 5103,
											"name": "PUSH [tag]",
											"value": "252"
										},
										{
											"begin": 5081,
											"end": 5091,
											"name": "DUP5"
										},
										{
											"begin": 5096,
											"end": 5102,
											"name": "DUP7"
										},
										{
											"begin": 5081,
											"end": 5103,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5081,
											"end": 5095,
											"name": "PUSH [tag]",
											"value": "253"
										},
										{
											"begin": 5081,
											"end": 5103,
											"name": "AND"
										},
										{
											"begin": 5081,
											"end": 5103,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5081,
											"end": 5103,
											"name": "tag",
											"value": "252"
										},
										{
											"begin": 5081,
											"end": 5103,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5052,
											"end": 5066,
											"name": "DUP1"
										},
										{
											"begin": 5052,
											"end": 5066,
											"name": "DUP10"
										},
										{
											"begin": 5052,
											"end": 5066,
											"name": "AND"
										},
										{
											"begin": 5052,
											"end": 5066,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5052,
											"end": 5066,
											"name": "SWAP1"
										},
										{
											"begin": 5052,
											"end": 5066,
											"name": "DUP2"
										},
										{
											"begin": 5052,
											"end": 5066,
											"name": "MSTORE"
										},
										{
											"begin": 5052,
											"end": 5059,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 5052,
											"end": 5066,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5052,
											"end": 5066,
											"name": "SWAP1"
										},
										{
											"begin": 5052,
											"end": 5066,
											"name": "DUP2"
										},
										{
											"begin": 5052,
											"end": 5066,
											"name": "MSTORE"
										},
										{
											"begin": 5052,
											"end": 5066,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5052,
											"end": 5066,
											"name": "DUP1"
										},
										{
											"begin": 5052,
											"end": 5066,
											"name": "DUP4"
										},
										{
											"begin": 5052,
											"end": 5066,
											"name": "KECCAK256"
										},
										{
											"begin": 5067,
											"end": 5077,
											"name": "CALLER"
										},
										{
											"begin": 5052,
											"end": 5078,
											"name": "SWAP1"
										},
										{
											"begin": 5052,
											"end": 5078,
											"name": "SWAP5"
										},
										{
											"begin": 5052,
											"end": 5078,
											"name": "AND"
										},
										{
											"begin": 5052,
											"end": 5078,
											"name": "DUP4"
										},
										{
											"begin": 5052,
											"end": 5078,
											"name": "MSTORE"
										},
										{
											"begin": 5052,
											"end": 5078,
											"name": "SWAP3"
										},
										{
											"begin": 5052,
											"end": 5078,
											"name": "SWAP1"
										},
										{
											"begin": 5052,
											"end": 5078,
											"name": "MSTORE"
										},
										{
											"begin": 5052,
											"end": 5078,
											"name": "KECCAK256"
										},
										{
											"begin": 5052,
											"end": 5103,
											"name": "SSTORE"
										},
										{
											"begin": 5011,
											"end": 5114,
											"name": "tag",
											"value": "251"
										},
										{
											"begin": 5011,
											"end": 5114,
											"name": "JUMPDEST"
										},
										{
											"begin": 5141,
											"end": 5156,
											"name": "PUSH [tag]",
											"value": "254"
										},
										{
											"begin": 5141,
											"end": 5147,
											"name": "DUP6"
										},
										{
											"begin": 5152,
											"end": 5155,
											"name": "DUP5"
										},
										{
											"begin": 5141,
											"end": 5156,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5141,
											"end": 5151,
											"name": "PUSH [tag]",
											"value": "253"
										},
										{
											"begin": 5141,
											"end": 5156,
											"name": "AND"
										},
										{
											"begin": 5141,
											"end": 5156,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5141,
											"end": 5156,
											"name": "tag",
											"value": "254"
										},
										{
											"begin": 5141,
											"end": 5156,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5184,
											"end": 5199,
											"name": "DUP9"
										},
										{
											"begin": 5184,
											"end": 5199,
											"name": "AND"
										},
										{
											"begin": 5184,
											"end": 5199,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5184,
											"end": 5199,
											"name": "SWAP1"
										},
										{
											"begin": 5184,
											"end": 5199,
											"name": "DUP2"
										},
										{
											"begin": 5184,
											"end": 5199,
											"name": "MSTORE"
										},
										{
											"begin": 5184,
											"end": 5192,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5184,
											"end": 5199,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5184,
											"end": 5199,
											"name": "MSTORE"
										},
										{
											"begin": 5184,
											"end": 5199,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5184,
											"end": 5199,
											"name": "SWAP1"
										},
										{
											"begin": 5184,
											"end": 5199,
											"name": "KECCAK256"
										},
										{
											"begin": 5184,
											"end": 5199,
											"name": "SLOAD"
										},
										{
											"begin": 5123,
											"end": 5156,
											"name": "SWAP1"
										},
										{
											"begin": 5123,
											"end": 5156,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5184,
											"end": 5211,
											"name": "PUSH [tag]",
											"value": "255"
										},
										{
											"begin": 5184,
											"end": 5211,
											"name": "SWAP1"
										},
										{
											"begin": 5204,
											"end": 5210,
											"name": "DUP7"
										},
										{
											"begin": 5184,
											"end": 5211,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5184,
											"end": 5203,
											"name": "PUSH [tag]",
											"value": "253"
										},
										{
											"begin": 5184,
											"end": 5211,
											"name": "AND"
										},
										{
											"begin": 5184,
											"end": 5211,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5184,
											"end": 5211,
											"name": "tag",
											"value": "255"
										},
										{
											"begin": 5184,
											"end": 5211,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5166,
											"end": 5181,
											"name": "DUP1"
										},
										{
											"begin": 5166,
											"end": 5181,
											"name": "DUP10"
										},
										{
											"begin": 5166,
											"end": 5181,
											"name": "AND"
										},
										{
											"begin": 5166,
											"end": 5181,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5166,
											"end": 5181,
											"name": "SWAP1"
										},
										{
											"begin": 5166,
											"end": 5181,
											"name": "DUP2"
										},
										{
											"begin": 5166,
											"end": 5181,
											"name": "MSTORE"
										},
										{
											"begin": 5166,
											"end": 5174,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5166,
											"end": 5181,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5166,
											"end": 5181,
											"name": "MSTORE"
										},
										{
											"begin": 5166,
											"end": 5181,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5166,
											"end": 5181,
											"name": "DUP1"
										},
										{
											"begin": 5166,
											"end": 5181,
											"name": "DUP3"
										},
										{
											"begin": 5166,
											"end": 5181,
											"name": "KECCAK256"
										},
										{
											"begin": 5166,
											"end": 5211,
											"name": "SWAP4"
										},
										{
											"begin": 5166,
											"end": 5211,
											"name": "SWAP1"
										},
										{
											"begin": 5166,
											"end": 5211,
											"name": "SWAP4"
										},
										{
											"begin": 5166,
											"end": 5211,
											"name": "SSTORE"
										},
										{
											"begin": 5237,
											"end": 5250,
											"name": "SWAP1"
										},
										{
											"begin": 5237,
											"end": 5250,
											"name": "DUP9"
										},
										{
											"begin": 5237,
											"end": 5250,
											"name": "AND"
										},
										{
											"begin": 5237,
											"end": 5250,
											"name": "DUP2"
										},
										{
											"begin": 5237,
											"end": 5250,
											"name": "MSTORE"
										},
										{
											"begin": 5237,
											"end": 5250,
											"name": "KECCAK256"
										},
										{
											"begin": 5237,
											"end": 5250,
											"name": "SLOAD"
										},
										{
											"begin": 5237,
											"end": 5266,
											"name": "PUSH [tag]",
											"value": "256"
										},
										{
											"begin": 5237,
											"end": 5266,
											"name": "SWAP1"
										},
										{
											"begin": 5255,
											"end": 5265,
											"name": "DUP4"
										},
										{
											"begin": 5237,
											"end": 5266,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5237,
											"end": 5254,
											"name": "PUSH [tag]",
											"value": "257"
										},
										{
											"begin": 5237,
											"end": 5266,
											"name": "AND"
										},
										{
											"begin": 5237,
											"end": 5266,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5237,
											"end": 5266,
											"name": "tag",
											"value": "256"
										},
										{
											"begin": 5237,
											"end": 5266,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5221,
											"end": 5234,
											"name": "DUP8"
										},
										{
											"begin": 5221,
											"end": 5234,
											"name": "AND"
										},
										{
											"begin": 5221,
											"end": 5234,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5221,
											"end": 5234,
											"name": "SWAP1"
										},
										{
											"begin": 5221,
											"end": 5234,
											"name": "DUP2"
										},
										{
											"begin": 5221,
											"end": 5234,
											"name": "MSTORE"
										},
										{
											"begin": 5221,
											"end": 5229,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5221,
											"end": 5234,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5221,
											"end": 5234,
											"name": "MSTORE"
										},
										{
											"begin": 5221,
											"end": 5234,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5221,
											"end": 5234,
											"name": "DUP2"
										},
										{
											"begin": 5221,
											"end": 5234,
											"name": "KECCAK256"
										},
										{
											"begin": 5221,
											"end": 5266,
											"name": "SWAP2"
										},
										{
											"begin": 5221,
											"end": 5266,
											"name": "SWAP1"
										},
										{
											"begin": 5221,
											"end": 5266,
											"name": "SWAP2"
										},
										{
											"begin": 5221,
											"end": 5266,
											"name": "SSTORE"
										},
										{
											"begin": 5280,
											"end": 5287,
											"name": "DUP4"
										},
										{
											"begin": 5280,
											"end": 5287,
											"name": "GT"
										},
										{
											"begin": 5276,
											"end": 5397,
											"name": "ISZERO"
										},
										{
											"begin": 5276,
											"end": 5397,
											"name": "PUSH [tag]",
											"value": "258"
										},
										{
											"begin": 5276,
											"end": 5397,
											"name": "JUMPI"
										},
										{
											"begin": 5321,
											"end": 5336,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5330,
											"end": 5335,
											"name": "DUP1"
										},
										{
											"begin": 5330,
											"end": 5335,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5330,
											"end": 5335,
											"name": "AND"
										},
										{
											"begin": 5321,
											"end": 5336,
											"name": "DUP2"
										},
										{
											"begin": 5321,
											"end": 5336,
											"name": "MSTORE"
										},
										{
											"begin": 5321,
											"end": 5329,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5321,
											"end": 5336,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5321,
											"end": 5336,
											"name": "MSTORE"
										},
										{
											"begin": 5321,
											"end": 5336,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5321,
											"end": 5336,
											"name": "SWAP1"
										},
										{
											"begin": 5321,
											"end": 5336,
											"name": "KECCAK256"
										},
										{
											"begin": 5321,
											"end": 5336,
											"name": "SLOAD"
										},
										{
											"begin": 5321,
											"end": 5345,
											"name": "PUSH [tag]",
											"value": "259"
										},
										{
											"begin": 5321,
											"end": 5345,
											"name": "SWAP1"
										},
										{
											"begin": 5341,
											"end": 5344,
											"name": "DUP5"
										},
										{
											"begin": 5321,
											"end": 5345,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5321,
											"end": 5340,
											"name": "PUSH [tag]",
											"value": "257"
										},
										{
											"begin": 5321,
											"end": 5345,
											"name": "AND"
										},
										{
											"begin": 5321,
											"end": 5345,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5321,
											"end": 5345,
											"name": "tag",
											"value": "259"
										},
										{
											"begin": 5321,
											"end": 5345,
											"name": "JUMPDEST"
										},
										{
											"begin": 5303,
											"end": 5318,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5312,
											"end": 5317,
											"name": "DUP1"
										},
										{
											"begin": 5312,
											"end": 5317,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5312,
											"end": 5317,
											"name": "SWAP1"
										},
										{
											"begin": 5312,
											"end": 5317,
											"name": "DUP2"
										},
										{
											"begin": 5312,
											"end": 5317,
											"name": "AND"
										},
										{
											"begin": 5303,
											"end": 5318,
											"name": "DUP3"
										},
										{
											"begin": 5303,
											"end": 5318,
											"name": "MSTORE"
										},
										{
											"begin": 5303,
											"end": 5311,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5303,
											"end": 5318,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5303,
											"end": 5318,
											"name": "MSTORE"
										},
										{
											"begin": 5303,
											"end": 5318,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5303,
											"end": 5318,
											"name": "DUP1"
										},
										{
											"begin": 5303,
											"end": 5318,
											"name": "DUP4"
										},
										{
											"begin": 5303,
											"end": 5318,
											"name": "KECCAK256"
										},
										{
											"begin": 5303,
											"end": 5345,
											"name": "SWAP4"
										},
										{
											"begin": 5303,
											"end": 5345,
											"name": "SWAP1"
										},
										{
											"begin": 5303,
											"end": 5345,
											"name": "SWAP4"
										},
										{
											"begin": 5303,
											"end": 5345,
											"name": "SSTORE"
										},
										{
											"begin": 5375,
											"end": 5380,
											"name": "SWAP1"
										},
										{
											"begin": 5375,
											"end": 5380,
											"name": "SLOAD"
										},
										{
											"begin": 5375,
											"end": 5380,
											"name": "DUP2"
										},
										{
											"begin": 5375,
											"end": 5380,
											"name": "AND"
										},
										{
											"begin": 5375,
											"end": 5380,
											"name": "SWAP2"
										},
										{
											"begin": 5359,
											"end": 5386,
											"name": "SWAP1"
										},
										{
											"begin": 5359,
											"end": 5386,
											"name": "DUP10"
										},
										{
											"begin": 5359,
											"end": 5386,
											"name": "AND"
										},
										{
											"begin": 5359,
											"end": 5386,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 5359,
											"end": 5386,
											"name": "SWAP1"
										},
										{
											"begin": 5382,
											"end": 5385,
											"name": "DUP7"
										},
										{
											"begin": 5382,
											"end": 5385,
											"name": "SWAP1"
										},
										{
											"begin": 5359,
											"end": 5386,
											"name": "MLOAD"
										},
										{
											"begin": 5359,
											"end": 5386,
											"name": "SWAP1"
										},
										{
											"begin": 5359,
											"end": 5386,
											"name": "DUP2"
										},
										{
											"begin": 5359,
											"end": 5386,
											"name": "MSTORE"
										},
										{
											"begin": 5359,
											"end": 5386,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5359,
											"end": 5386,
											"name": "ADD"
										},
										{
											"begin": 5359,
											"end": 5386,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5359,
											"end": 5386,
											"name": "MLOAD"
										},
										{
											"begin": 5359,
											"end": 5386,
											"name": "DUP1"
										},
										{
											"begin": 5359,
											"end": 5386,
											"name": "SWAP2"
										},
										{
											"begin": 5359,
											"end": 5386,
											"name": "SUB"
										},
										{
											"begin": 5359,
											"end": 5386,
											"name": "SWAP1"
										},
										{
											"begin": 5359,
											"end": 5386,
											"name": "LOG3"
										},
										{
											"begin": 5276,
											"end": 5397,
											"name": "tag",
											"value": "258"
										},
										{
											"begin": 5276,
											"end": 5397,
											"name": "JUMPDEST"
										},
										{
											"begin": 5422,
											"end": 5425,
											"name": "DUP6"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5406,
											"end": 5438,
											"name": "AND"
										},
										{
											"begin": 5415,
											"end": 5420,
											"name": "DUP8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5406,
											"end": 5438,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 5427,
											"end": 5437,
											"name": "DUP5"
										},
										{
											"begin": 5406,
											"end": 5438,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5406,
											"end": 5438,
											"name": "MLOAD"
										},
										{
											"begin": 5406,
											"end": 5438,
											"name": "SWAP1"
										},
										{
											"begin": 5406,
											"end": 5438,
											"name": "DUP2"
										},
										{
											"begin": 5406,
											"end": 5438,
											"name": "MSTORE"
										},
										{
											"begin": 5406,
											"end": 5438,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5406,
											"end": 5438,
											"name": "ADD"
										},
										{
											"begin": 5406,
											"end": 5438,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5406,
											"end": 5438,
											"name": "MLOAD"
										},
										{
											"begin": 5406,
											"end": 5438,
											"name": "DUP1"
										},
										{
											"begin": 5406,
											"end": 5438,
											"name": "SWAP2"
										},
										{
											"begin": 5406,
											"end": 5438,
											"name": "SUB"
										},
										{
											"begin": 5406,
											"end": 5438,
											"name": "SWAP1"
										},
										{
											"begin": 5406,
											"end": 5438,
											"name": "LOG3"
										},
										{
											"begin": 4565,
											"end": 5445,
											"name": "POP"
										},
										{
											"begin": 4565,
											"end": 5445,
											"name": "POP"
										},
										{
											"begin": 4565,
											"end": 5445,
											"name": "POP"
										},
										{
											"begin": 4565,
											"end": 5445,
											"name": "POP"
										},
										{
											"begin": 4565,
											"end": 5445,
											"name": "POP"
										},
										{
											"begin": 4565,
											"end": 5445,
											"name": "POP"
										},
										{
											"begin": 4565,
											"end": 5445,
											"name": "POP"
										},
										{
											"begin": 4565,
											"end": 5445,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4002,
											"end": 4116,
											"name": "tag",
											"value": "183"
										},
										{
											"begin": 4002,
											"end": 4116,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4093,
											"end": 4109,
											"name": "AND"
										},
										{
											"begin": 4062,
											"end": 4074,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4093,
											"end": 4109,
											"name": "SWAP1"
										},
										{
											"begin": 4093,
											"end": 4109,
											"name": "DUP2"
										},
										{
											"begin": 4093,
											"end": 4109,
											"name": "MSTORE"
										},
										{
											"begin": 4093,
											"end": 4101,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 4093,
											"end": 4109,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4093,
											"end": 4109,
											"name": "MSTORE"
										},
										{
											"begin": 4093,
											"end": 4109,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4093,
											"end": 4109,
											"name": "SWAP1"
										},
										{
											"begin": 4093,
											"end": 4109,
											"name": "KECCAK256"
										},
										{
											"begin": 4093,
											"end": 4109,
											"name": "SLOAD"
										},
										{
											"begin": 4093,
											"end": 4109,
											"name": "SWAP1"
										},
										{
											"begin": 4002,
											"end": 4116,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3231,
											"end": 3791,
											"name": "tag",
											"value": "202"
										},
										{
											"begin": 3231,
											"end": 3791,
											"name": "JUMPDEST"
										},
										{
											"begin": 3316,
											"end": 3324,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3316,
											"end": 3324,
											"name": "DUP1"
										},
										{
											"begin": 3298,
											"end": 3304,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3037,
											"end": 3045,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 3019,
											"end": 3027,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3019,
											"end": 3045,
											"name": "LT"
										},
										{
											"begin": 3017,
											"end": 3046,
											"name": "ISZERO"
										},
										{
											"begin": 3009,
											"end": 3047,
											"name": "PUSH [tag]",
											"value": "262"
										},
										{
											"begin": 3009,
											"end": 3047,
											"name": "JUMPI"
										},
										{
											"begin": 3009,
											"end": 3047,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3009,
											"end": 3047,
											"name": "DUP1"
										},
										{
											"begin": 3009,
											"end": 3047,
											"name": "REVERT"
										},
										{
											"begin": 3009,
											"end": 3047,
											"name": "tag",
											"value": "262"
										},
										{
											"begin": 3009,
											"end": 3047,
											"name": "JUMPDEST"
										},
										{
											"begin": 3327,
											"end": 3367,
											"name": "PUSH [tag]",
											"value": "264"
										},
										{
											"begin": 3361,
											"end": 3366,
											"name": "PUSH",
											"value": "2710"
										},
										{
											"begin": 3328,
											"end": 3355,
											"name": "PUSH [tag]",
											"value": "248"
										},
										{
											"begin": 3339,
											"end": 3354,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 3339,
											"end": 3354,
											"name": "SLOAD"
										},
										{
											"begin": 3328,
											"end": 3334,
											"name": "DUP8"
										},
										{
											"begin": 3328,
											"end": 3338,
											"name": "PUSH [tag]",
											"value": "209"
										},
										{
											"begin": 3328,
											"end": 3338,
											"name": "SWAP1"
										},
										{
											"begin": 3328,
											"end": 3355,
											"name": "SWAP2"
										},
										{
											"begin": 3328,
											"end": 3355,
											"name": "SWAP1"
										},
										{
											"begin": 3328,
											"end": 3355,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3328,
											"end": 3355,
											"name": "AND"
										},
										{
											"begin": 3328,
											"end": 3355,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3327,
											"end": 3367,
											"name": "tag",
											"value": "264"
										},
										{
											"begin": 3327,
											"end": 3367,
											"name": "JUMPDEST"
										},
										{
											"begin": 3316,
											"end": 3367,
											"name": "SWAP3"
										},
										{
											"begin": 3316,
											"end": 3367,
											"name": "POP"
										},
										{
											"begin": 3387,
											"end": 3397,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3387,
											"end": 3397,
											"name": "SLOAD"
										},
										{
											"begin": 3381,
											"end": 3384,
											"name": "DUP4"
										},
										{
											"begin": 3381,
											"end": 3397,
											"name": "GT"
										},
										{
											"begin": 3377,
											"end": 3440,
											"name": "ISZERO"
										},
										{
											"begin": 3377,
											"end": 3440,
											"name": "PUSH [tag]",
											"value": "266"
										},
										{
											"begin": 3377,
											"end": 3440,
											"name": "JUMPI"
										},
										{
											"begin": 3419,
											"end": 3429,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3419,
											"end": 3429,
											"name": "SLOAD"
										},
										{
											"begin": 3413,
											"end": 3429,
											"name": "SWAP3"
										},
										{
											"begin": 3413,
											"end": 3429,
											"name": "POP"
										},
										{
											"begin": 3377,
											"end": 3440,
											"name": "tag",
											"value": "266"
										},
										{
											"begin": 3377,
											"end": 3440,
											"name": "JUMPDEST"
										},
										{
											"begin": 3467,
											"end": 3482,
											"name": "PUSH [tag]",
											"value": "267"
										},
										{
											"begin": 3467,
											"end": 3473,
											"name": "DUP5"
										},
										{
											"begin": 3478,
											"end": 3481,
											"name": "DUP5"
										},
										{
											"begin": 3467,
											"end": 3482,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3467,
											"end": 3477,
											"name": "PUSH [tag]",
											"value": "253"
										},
										{
											"begin": 3467,
											"end": 3482,
											"name": "AND"
										},
										{
											"begin": 3467,
											"end": 3482,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3467,
											"end": 3482,
											"name": "tag",
											"value": "267"
										},
										{
											"begin": 3467,
											"end": 3482,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3524,
											"end": 3534,
											"name": "CALLER"
										},
										{
											"begin": 3515,
											"end": 3535,
											"name": "AND"
										},
										{
											"begin": 3515,
											"end": 3535,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3515,
											"end": 3535,
											"name": "SWAP1"
										},
										{
											"begin": 3515,
											"end": 3535,
											"name": "DUP2"
										},
										{
											"begin": 3515,
											"end": 3535,
											"name": "MSTORE"
										},
										{
											"begin": 3515,
											"end": 3523,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3515,
											"end": 3535,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3515,
											"end": 3535,
											"name": "MSTORE"
										},
										{
											"begin": 3515,
											"end": 3535,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3515,
											"end": 3535,
											"name": "SWAP1"
										},
										{
											"begin": 3515,
											"end": 3535,
											"name": "KECCAK256"
										},
										{
											"begin": 3515,
											"end": 3535,
											"name": "SLOAD"
										},
										{
											"begin": 3449,
											"end": 3482,
											"name": "SWAP1"
										},
										{
											"begin": 3449,
											"end": 3482,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 3515,
											"end": 3547,
											"name": "PUSH [tag]",
											"value": "268"
										},
										{
											"begin": 3515,
											"end": 3547,
											"name": "SWAP1"
										},
										{
											"begin": 3540,
											"end": 3546,
											"name": "DUP6"
										},
										{
											"begin": 3515,
											"end": 3547,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3515,
											"end": 3539,
											"name": "PUSH [tag]",
											"value": "253"
										},
										{
											"begin": 3515,
											"end": 3547,
											"name": "AND"
										},
										{
											"begin": 3515,
											"end": 3547,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3515,
											"end": 3547,
											"name": "tag",
											"value": "268"
										},
										{
											"begin": 3515,
											"end": 3547,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3501,
											"end": 3511,
											"name": "CALLER"
										},
										{
											"begin": 3492,
											"end": 3512,
											"name": "DUP2"
										},
										{
											"begin": 3492,
											"end": 3512,
											"name": "AND"
										},
										{
											"begin": 3492,
											"end": 3512,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3492,
											"end": 3512,
											"name": "SWAP1"
										},
										{
											"begin": 3492,
											"end": 3512,
											"name": "DUP2"
										},
										{
											"begin": 3492,
											"end": 3512,
											"name": "MSTORE"
										},
										{
											"begin": 3492,
											"end": 3500,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3492,
											"end": 3512,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3492,
											"end": 3512,
											"name": "MSTORE"
										},
										{
											"begin": 3492,
											"end": 3512,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3492,
											"end": 3512,
											"name": "DUP1"
										},
										{
											"begin": 3492,
											"end": 3512,
											"name": "DUP3"
										},
										{
											"begin": 3492,
											"end": 3512,
											"name": "KECCAK256"
										},
										{
											"begin": 3492,
											"end": 3547,
											"name": "SWAP4"
										},
										{
											"begin": 3492,
											"end": 3547,
											"name": "SWAP1"
										},
										{
											"begin": 3492,
											"end": 3547,
											"name": "SWAP4"
										},
										{
											"begin": 3492,
											"end": 3547,
											"name": "SSTORE"
										},
										{
											"begin": 3573,
											"end": 3586,
											"name": "SWAP1"
										},
										{
											"begin": 3573,
											"end": 3586,
											"name": "DUP8"
										},
										{
											"begin": 3573,
											"end": 3586,
											"name": "AND"
										},
										{
											"begin": 3573,
											"end": 3586,
											"name": "DUP2"
										},
										{
											"begin": 3573,
											"end": 3586,
											"name": "MSTORE"
										},
										{
											"begin": 3573,
											"end": 3586,
											"name": "KECCAK256"
										},
										{
											"begin": 3573,
											"end": 3586,
											"name": "SLOAD"
										},
										{
											"begin": 3573,
											"end": 3602,
											"name": "PUSH [tag]",
											"value": "269"
										},
										{
											"begin": 3573,
											"end": 3602,
											"name": "SWAP1"
										},
										{
											"begin": 3591,
											"end": 3601,
											"name": "DUP4"
										},
										{
											"begin": 3573,
											"end": 3602,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3573,
											"end": 3590,
											"name": "PUSH [tag]",
											"value": "257"
										},
										{
											"begin": 3573,
											"end": 3602,
											"name": "AND"
										},
										{
											"begin": 3573,
											"end": 3602,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3573,
											"end": 3602,
											"name": "tag",
											"value": "269"
										},
										{
											"begin": 3573,
											"end": 3602,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3557,
											"end": 3570,
											"name": "DUP7"
										},
										{
											"begin": 3557,
											"end": 3570,
											"name": "AND"
										},
										{
											"begin": 3557,
											"end": 3570,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3557,
											"end": 3570,
											"name": "SWAP1"
										},
										{
											"begin": 3557,
											"end": 3570,
											"name": "DUP2"
										},
										{
											"begin": 3557,
											"end": 3570,
											"name": "MSTORE"
										},
										{
											"begin": 3557,
											"end": 3565,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3557,
											"end": 3570,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3557,
											"end": 3570,
											"name": "MSTORE"
										},
										{
											"begin": 3557,
											"end": 3570,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3557,
											"end": 3570,
											"name": "DUP2"
										},
										{
											"begin": 3557,
											"end": 3570,
											"name": "KECCAK256"
										},
										{
											"begin": 3557,
											"end": 3602,
											"name": "SWAP2"
										},
										{
											"begin": 3557,
											"end": 3602,
											"name": "SWAP1"
										},
										{
											"begin": 3557,
											"end": 3602,
											"name": "SWAP2"
										},
										{
											"begin": 3557,
											"end": 3602,
											"name": "SSTORE"
										},
										{
											"begin": 3616,
											"end": 3623,
											"name": "DUP4"
										},
										{
											"begin": 3616,
											"end": 3623,
											"name": "GT"
										},
										{
											"begin": 3612,
											"end": 3738,
											"name": "ISZERO"
										},
										{
											"begin": 3612,
											"end": 3738,
											"name": "PUSH [tag]",
											"value": "270"
										},
										{
											"begin": 3612,
											"end": 3738,
											"name": "JUMPI"
										},
										{
											"begin": 3657,
											"end": 3672,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3666,
											"end": 3671,
											"name": "DUP1"
										},
										{
											"begin": 3666,
											"end": 3671,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3666,
											"end": 3671,
											"name": "AND"
										},
										{
											"begin": 3657,
											"end": 3672,
											"name": "DUP2"
										},
										{
											"begin": 3657,
											"end": 3672,
											"name": "MSTORE"
										},
										{
											"begin": 3657,
											"end": 3665,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3657,
											"end": 3672,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3672,
											"name": "MSTORE"
										},
										{
											"begin": 3657,
											"end": 3672,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3657,
											"end": 3672,
											"name": "SWAP1"
										},
										{
											"begin": 3657,
											"end": 3672,
											"name": "KECCAK256"
										},
										{
											"begin": 3657,
											"end": 3672,
											"name": "SLOAD"
										},
										{
											"begin": 3657,
											"end": 3681,
											"name": "PUSH [tag]",
											"value": "271"
										},
										{
											"begin": 3657,
											"end": 3681,
											"name": "SWAP1"
										},
										{
											"begin": 3677,
											"end": 3680,
											"name": "DUP5"
										},
										{
											"begin": 3657,
											"end": 3681,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3676,
											"name": "PUSH [tag]",
											"value": "257"
										},
										{
											"begin": 3657,
											"end": 3681,
											"name": "AND"
										},
										{
											"begin": 3657,
											"end": 3681,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3657,
											"end": 3681,
											"name": "tag",
											"value": "271"
										},
										{
											"begin": 3657,
											"end": 3681,
											"name": "JUMPDEST"
										},
										{
											"begin": 3639,
											"end": 3654,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3648,
											"end": 3653,
											"name": "DUP1"
										},
										{
											"begin": 3648,
											"end": 3653,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3648,
											"end": 3653,
											"name": "SWAP1"
										},
										{
											"begin": 3648,
											"end": 3653,
											"name": "DUP2"
										},
										{
											"begin": 3648,
											"end": 3653,
											"name": "AND"
										},
										{
											"begin": 3639,
											"end": 3654,
											"name": "DUP3"
										},
										{
											"begin": 3639,
											"end": 3654,
											"name": "MSTORE"
										},
										{
											"begin": 3639,
											"end": 3647,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3639,
											"end": 3654,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3639,
											"end": 3654,
											"name": "MSTORE"
										},
										{
											"begin": 3639,
											"end": 3654,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3639,
											"end": 3654,
											"name": "DUP1"
										},
										{
											"begin": 3639,
											"end": 3654,
											"name": "DUP4"
										},
										{
											"begin": 3639,
											"end": 3654,
											"name": "KECCAK256"
										},
										{
											"begin": 3639,
											"end": 3681,
											"name": "SWAP4"
										},
										{
											"begin": 3639,
											"end": 3681,
											"name": "SWAP1"
										},
										{
											"begin": 3639,
											"end": 3681,
											"name": "SWAP4"
										},
										{
											"begin": 3639,
											"end": 3681,
											"name": "SSTORE"
										},
										{
											"begin": 3716,
											"end": 3721,
											"name": "SWAP1"
										},
										{
											"begin": 3716,
											"end": 3721,
											"name": "SLOAD"
										},
										{
											"begin": 3716,
											"end": 3721,
											"name": "DUP2"
										},
										{
											"begin": 3716,
											"end": 3721,
											"name": "AND"
										},
										{
											"begin": 3716,
											"end": 3721,
											"name": "SWAP2"
										},
										{
											"begin": 3704,
											"end": 3714,
											"name": "CALLER"
										},
										{
											"begin": 3695,
											"end": 3727,
											"name": "SWAP1"
										},
										{
											"begin": 3695,
											"end": 3727,
											"name": "SWAP2"
										},
										{
											"begin": 3695,
											"end": 3727,
											"name": "AND"
										},
										{
											"begin": 3695,
											"end": 3727,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 3695,
											"end": 3727,
											"name": "SWAP1"
										},
										{
											"begin": 3723,
											"end": 3726,
											"name": "DUP7"
										},
										{
											"begin": 3723,
											"end": 3726,
											"name": "SWAP1"
										},
										{
											"begin": 3695,
											"end": 3727,
											"name": "MLOAD"
										},
										{
											"begin": 3695,
											"end": 3727,
											"name": "SWAP1"
										},
										{
											"begin": 3695,
											"end": 3727,
											"name": "DUP2"
										},
										{
											"begin": 3695,
											"end": 3727,
											"name": "MSTORE"
										},
										{
											"begin": 3695,
											"end": 3727,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3695,
											"end": 3727,
											"name": "ADD"
										},
										{
											"begin": 3695,
											"end": 3727,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3695,
											"end": 3727,
											"name": "MLOAD"
										},
										{
											"begin": 3695,
											"end": 3727,
											"name": "DUP1"
										},
										{
											"begin": 3695,
											"end": 3727,
											"name": "SWAP2"
										},
										{
											"begin": 3695,
											"end": 3727,
											"name": "SUB"
										},
										{
											"begin": 3695,
											"end": 3727,
											"name": "SWAP1"
										},
										{
											"begin": 3695,
											"end": 3727,
											"name": "LOG3"
										},
										{
											"begin": 3612,
											"end": 3738,
											"name": "tag",
											"value": "270"
										},
										{
											"begin": 3612,
											"end": 3738,
											"name": "JUMPDEST"
										},
										{
											"begin": 3768,
											"end": 3771,
											"name": "DUP5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3747,
											"end": 3784,
											"name": "AND"
										},
										{
											"begin": 3756,
											"end": 3766,
											"name": "CALLER"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3747,
											"end": 3784,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 3773,
											"end": 3783,
											"name": "DUP5"
										},
										{
											"begin": 3747,
											"end": 3784,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3747,
											"end": 3784,
											"name": "MLOAD"
										},
										{
											"begin": 3747,
											"end": 3784,
											"name": "SWAP1"
										},
										{
											"begin": 3747,
											"end": 3784,
											"name": "DUP2"
										},
										{
											"begin": 3747,
											"end": 3784,
											"name": "MSTORE"
										},
										{
											"begin": 3747,
											"end": 3784,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3747,
											"end": 3784,
											"name": "ADD"
										},
										{
											"begin": 3747,
											"end": 3784,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3747,
											"end": 3784,
											"name": "MLOAD"
										},
										{
											"begin": 3747,
											"end": 3784,
											"name": "DUP1"
										},
										{
											"begin": 3747,
											"end": 3784,
											"name": "SWAP2"
										},
										{
											"begin": 3747,
											"end": 3784,
											"name": "SUB"
										},
										{
											"begin": 3747,
											"end": 3784,
											"name": "SWAP1"
										},
										{
											"begin": 3747,
											"end": 3784,
											"name": "LOG3"
										},
										{
											"begin": 3231,
											"end": 3791,
											"name": "POP"
										},
										{
											"begin": 3231,
											"end": 3791,
											"name": "POP"
										},
										{
											"begin": 3231,
											"end": 3791,
											"name": "POP"
										},
										{
											"begin": 3231,
											"end": 3791,
											"name": "POP"
										},
										{
											"begin": 3231,
											"end": 3791,
											"name": "POP"
										},
										{
											"begin": 3231,
											"end": 3791,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 206,
											"end": 407,
											"name": "tag",
											"value": "209"
										},
										{
											"begin": 206,
											"end": 407,
											"name": "JUMPDEST"
										},
										{
											"begin": 264,
											"end": 271,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 264,
											"end": 271,
											"name": "DUP1"
										},
										{
											"begin": 287,
											"end": 293,
											"name": "DUP4"
										},
										{
											"begin": 287,
											"end": 293,
											"name": "ISZERO"
										},
										{
											"begin": 283,
											"end": 328,
											"name": "ISZERO"
										},
										{
											"begin": 283,
											"end": 328,
											"name": "PUSH [tag]",
											"value": "273"
										},
										{
											"begin": 283,
											"end": 328,
											"name": "JUMPI"
										},
										{
											"begin": 316,
											"end": 317,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 309,
											"end": 317,
											"name": "SWAP2"
										},
										{
											"begin": 309,
											"end": 317,
											"name": "POP"
										},
										{
											"begin": 309,
											"end": 317,
											"name": "PUSH [tag]",
											"value": "272"
										},
										{
											"begin": 309,
											"end": 317,
											"name": "JUMP"
										},
										{
											"begin": 283,
											"end": 328,
											"name": "tag",
											"value": "273"
										},
										{
											"begin": 283,
											"end": 328,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 349,
											"end": 354,
											"name": "DUP3"
										},
										{
											"begin": 349,
											"end": 354,
											"name": "DUP3"
										},
										{
											"begin": 349,
											"end": 354,
											"name": "MUL"
										},
										{
											"begin": 353,
											"end": 354,
											"name": "DUP3"
										},
										{
											"begin": 349,
											"end": 350,
											"name": "DUP5"
										},
										{
											"begin": 349,
											"end": 354,
											"name": "DUP3"
										},
										{
											"begin": 371,
											"end": 376,
											"name": "DUP2"
										},
										{
											"begin": 371,
											"end": 376,
											"name": "ISZERO"
										},
										{
											"begin": 371,
											"end": 376,
											"name": "ISZERO"
										},
										{
											"begin": 371,
											"end": 376,
											"name": "PUSH [tag]",
											"value": "274"
										},
										{
											"begin": 371,
											"end": 376,
											"name": "JUMPI"
										},
										{
											"begin": 371,
											"end": 376,
											"name": "INVALID"
										},
										{
											"begin": 371,
											"end": 376,
											"name": "tag",
											"value": "274"
										},
										{
											"begin": 371,
											"end": 376,
											"name": "JUMPDEST"
										},
										{
											"begin": 371,
											"end": 376,
											"name": "DIV"
										},
										{
											"begin": 371,
											"end": 381,
											"name": "EQ"
										},
										{
											"begin": 364,
											"end": 382,
											"name": "PUSH [tag]",
											"value": "275"
										},
										{
											"begin": 364,
											"end": 382,
											"name": "JUMPI"
										},
										{
											"begin": 364,
											"end": 382,
											"name": "INVALID"
										},
										{
											"begin": 364,
											"end": 382,
											"name": "tag",
											"value": "275"
										},
										{
											"begin": 364,
											"end": 382,
											"name": "JUMPDEST"
										},
										{
											"begin": 399,
											"end": 400,
											"name": "DUP1"
										},
										{
											"begin": 392,
											"end": 400,
											"name": "SWAP2"
										},
										{
											"begin": 392,
											"end": 400,
											"name": "POP"
										},
										{
											"begin": 206,
											"end": 407,
											"name": "tag",
											"value": "272"
										},
										{
											"begin": 206,
											"end": 407,
											"name": "JUMPDEST"
										},
										{
											"begin": 206,
											"end": 407,
											"name": "POP"
										},
										{
											"begin": 206,
											"end": 407,
											"name": "SWAP3"
										},
										{
											"begin": 206,
											"end": 407,
											"name": "SWAP2"
										},
										{
											"begin": 206,
											"end": 407,
											"name": "POP"
										},
										{
											"begin": 206,
											"end": 407,
											"name": "POP"
										},
										{
											"begin": 206,
											"end": 407,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 6573,
											"end": 6716,
											"name": "tag",
											"value": "226"
										},
										{
											"begin": 6573,
											"end": 6716,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 6684,
											"end": 6699,
											"name": "SWAP2"
										},
										{
											"begin": 6684,
											"end": 6699,
											"name": "DUP3"
										},
										{
											"begin": 6684,
											"end": 6699,
											"name": "AND"
										},
										{
											"begin": 6651,
											"end": 6665,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6684,
											"end": 6699,
											"name": "SWAP1"
										},
										{
											"begin": 6684,
											"end": 6699,
											"name": "DUP2"
										},
										{
											"begin": 6684,
											"end": 6699,
											"name": "MSTORE"
										},
										{
											"begin": 6684,
											"end": 6691,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 6684,
											"end": 6699,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6684,
											"end": 6699,
											"name": "SWAP1"
										},
										{
											"begin": 6684,
											"end": 6699,
											"name": "DUP2"
										},
										{
											"begin": 6684,
											"end": 6699,
											"name": "MSTORE"
										},
										{
											"begin": 6684,
											"end": 6699,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6684,
											"end": 6699,
											"name": "DUP1"
										},
										{
											"begin": 6684,
											"end": 6699,
											"name": "DUP4"
										},
										{
											"begin": 6684,
											"end": 6699,
											"name": "KECCAK256"
										},
										{
											"begin": 6684,
											"end": 6709,
											"name": "SWAP4"
										},
										{
											"begin": 6684,
											"end": 6709,
											"name": "SWAP1"
										},
										{
											"begin": 6684,
											"end": 6709,
											"name": "SWAP5"
										},
										{
											"begin": 6684,
											"end": 6709,
											"name": "AND"
										},
										{
											"begin": 6684,
											"end": 6709,
											"name": "DUP3"
										},
										{
											"begin": 6684,
											"end": 6709,
											"name": "MSTORE"
										},
										{
											"begin": 6684,
											"end": 6709,
											"name": "SWAP2"
										},
										{
											"begin": 6684,
											"end": 6709,
											"name": "SWAP1"
										},
										{
											"begin": 6684,
											"end": 6709,
											"name": "SWAP2"
										},
										{
											"begin": 6684,
											"end": 6709,
											"name": "MSTORE"
										},
										{
											"begin": 6684,
											"end": 6709,
											"name": "KECCAK256"
										},
										{
											"begin": 6684,
											"end": 6709,
											"name": "SLOAD"
										},
										{
											"begin": 6684,
											"end": 6709,
											"name": "SWAP1"
										},
										{
											"begin": 6573,
											"end": 6716,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 413,
											"end": 696,
											"name": "tag",
											"value": "249"
										},
										{
											"begin": 413,
											"end": 696,
											"name": "JUMPDEST"
										},
										{
											"begin": 471,
											"end": 478,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 568,
											"end": 577,
											"name": "DUP1"
										},
										{
											"begin": 584,
											"end": 585,
											"name": "DUP3"
										},
										{
											"begin": 580,
											"end": 581,
											"name": "DUP5"
										},
										{
											"begin": 580,
											"end": 585,
											"name": "DUP2"
										},
										{
											"begin": 580,
											"end": 585,
											"name": "ISZERO"
										},
										{
											"begin": 580,
											"end": 585,
											"name": "ISZERO"
										},
										{
											"begin": 580,
											"end": 585,
											"name": "PUSH [tag]",
											"value": "278"
										},
										{
											"begin": 580,
											"end": 585,
											"name": "JUMPI"
										},
										{
											"begin": 580,
											"end": 585,
											"name": "INVALID"
										},
										{
											"begin": 580,
											"end": 585,
											"name": "tag",
											"value": "278"
										},
										{
											"begin": 580,
											"end": 585,
											"name": "JUMPDEST"
										},
										{
											"begin": 580,
											"end": 585,
											"name": "DIV"
										},
										{
											"begin": 580,
											"end": 585,
											"name": "SWAP5"
										},
										{
											"begin": 413,
											"end": 696,
											"name": "SWAP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 413,
											"end": 696,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 702,
											"end": 822,
											"name": "tag",
											"value": "253"
										},
										{
											"begin": 702,
											"end": 822,
											"name": "JUMPDEST"
										},
										{
											"begin": 760,
											"end": 767,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 786,
											"end": 792,
											"name": "DUP3"
										},
										{
											"begin": 786,
											"end": 792,
											"name": "DUP3"
										},
										{
											"begin": 786,
											"end": 792,
											"name": "GT"
										},
										{
											"begin": 786,
											"end": 792,
											"name": "ISZERO"
										},
										{
											"begin": 779,
											"end": 793,
											"name": "PUSH [tag]",
											"value": "280"
										},
										{
											"begin": 779,
											"end": 793,
											"name": "JUMPI"
										},
										{
											"begin": 779,
											"end": 793,
											"name": "INVALID"
										},
										{
											"begin": 779,
											"end": 793,
											"name": "tag",
											"value": "280"
										},
										{
											"begin": 779,
											"end": 793,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 810,
											"end": 815,
											"name": "SWAP1"
										},
										{
											"begin": 810,
											"end": 815,
											"name": "SUB"
										},
										{
											"begin": 810,
											"end": 815,
											"name": "SWAP1"
										},
										{
											"begin": 702,
											"end": 822,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 828,
											"end": 971,
											"name": "tag",
											"value": "257"
										},
										{
											"begin": 828,
											"end": 971,
											"name": "JUMPDEST"
										},
										{
											"begin": 886,
											"end": 893,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 917,
											"end": 922,
											"name": "DUP3"
										},
										{
											"begin": 917,
											"end": 922,
											"name": "DUP3"
										},
										{
											"begin": 917,
											"end": 922,
											"name": "ADD"
										},
										{
											"begin": 939,
											"end": 945,
											"name": "DUP4"
										},
										{
											"begin": 939,
											"end": 945,
											"name": "DUP2"
										},
										{
											"begin": 939,
											"end": 945,
											"name": "LT"
										},
										{
											"begin": 939,
											"end": 945,
											"name": "ISZERO"
										},
										{
											"begin": 932,
											"end": 946,
											"name": "PUSH [tag]",
											"value": "275"
										},
										{
											"begin": 932,
											"end": 946,
											"name": "JUMPI"
										},
										{
											"begin": 932,
											"end": 946,
											"name": "INVALID"
										}
									],
									".data": {
										"ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
									}
								}
							}
						},
						"methodIdentifiers": {
							"MAX_UINT()": "e5b5019a",
							"_totalSupply()": "3eaaf86b",
							"addBlackList(address)": "0ecb93c0",
							"allowance(address,address)": "dd62ed3e",
							"allowed(address,address)": "5c658165",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"balances(address)": "27e235e3",
							"basisPointsRate()": "dd644f72",
							"decimals()": "313ce567",
							"deprecate(address)": "0753c30c",
							"deprecated()": "0e136b19",
							"destroyBlackFunds(address)": "f3bdc228",
							"getBlackListStatus(address)": "59bf1abe",
							"getOwner()": "893d20e8",
							"isBlackListed(address)": "e47d6060",
							"issue(uint256)": "cc872b66",
							"maximumFee()": "35390714",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"redeem(uint256)": "db006a75",
							"removeBlackList(address)": "e4997dc5",
							"setParams(uint256,uint256)": "c0324c77",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a",
							"upgradedAddress()": "26976e3f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.17+commit.bdeb9e52\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_upgradedAddress\",\"type\":\"address\"}],\"name\":\"deprecate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"deprecated\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_evilUser\",\"type\":\"address\"}],\"name\":\"addBlackList\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"upgradedAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maximumFee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_maker\",\"type\":\"address\"}],\"name\":\"getBlackListStatus\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"who\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newBasisPoints\",\"type\":\"uint256\"},{\"name\":\"newMaxFee\",\"type\":\"uint256\"}],\"name\":\"setParams\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"issue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"redeem\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"basisPointsRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"isBlackListed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_clearedUser\",\"type\":\"address\"}],\"name\":\"removeBlackList\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_UINT\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_blackListedUser\",\"type\":\"address\"}],\"name\":\"destroyBlackFunds\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_initialSupply\",\"type\":\"uint256\"},{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_symbol\",\"type\":\"string\"},{\"name\":\"_decimals\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Issue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Redeem\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"Deprecate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"feeBasisPoints\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"maxFee\",\"type\":\"uint256\"}],\"name\":\"Params\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_blackListedUser\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_balance\",\"type\":\"uint256\"}],\"name\":\"DestroyedBlackFunds\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"AddedBlackList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"RemovedBlackList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"pause()\":{\"details\":\"called by the owner to pause, triggers stopped state\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}},\"unpause()\":{\"details\":\"called by the owner to unpause, returns to normal state\"}}},\"userdoc\":{\"methods\":{\"getBlackListStatus(address)\":{\"notice\":\"//// Getters to allow the same blacklist to be used also by other contracts (including upgraded Tether) ///////\"}}}},\"settings\":{\"compilationTarget\":{\"contracts/stablecoin/stablecoin_contract.sol\":\"TetherToken\"},\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/stablecoin/stablecoin_contract.sol\":{\"keccak256\":\"0xfbb04d4cdecf81bb1e5eaf950a7bc2a6f55cfd0c7dcef79c100bce8b26b8a47f\",\"urls\":[\"bzzr://f05f2f6a2517a2416853bd5397e0d572a1bd870456f7ad0707356ad7929de6c0\"]}},\"version\":1}",
					"userdoc": {
						"methods": {
							"getBlackListStatus(address)": {
								"notice": "//// Getters to allow the same blacklist to be used also by other contracts (including upgraded Tether) ///////"
							}
						}
					}
				},
				"UpgradedStandardToken": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "_spender",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_from",
									"type": "address"
								},
								{
									"name": "_to",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"name": "balances",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "maximumFee",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "_totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								},
								{
									"name": "",
									"type": "address"
								}
							],
							"name": "allowed",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "from",
									"type": "address"
								},
								{
									"name": "to",
									"type": "address"
								},
								{
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferByLegacy",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "balance",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "sender",
									"type": "address"
								},
								{
									"name": "from",
									"type": "address"
								},
								{
									"name": "spender",
									"type": "address"
								},
								{
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromByLegacy",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_to",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "from",
									"type": "address"
								},
								{
									"name": "spender",
									"type": "address"
								},
								{
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveByLegacy",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_owner",
									"type": "address"
								},
								{
									"name": "_spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"name": "remaining",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "basisPointsRate",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MAX_UINT",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {
							"allowance(address,address)": {
								"details": "Function to check the amount of tokens than an owner allowed to a spender.",
								"params": {
									"_owner": "address The address which owns the funds.",
									"_spender": "address The address which will spend the funds."
								},
								"return": "A uint specifying the amount of tokens still available for the spender."
							},
							"approve(address,uint256)": {
								"details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.",
								"params": {
									"_spender": "The address which will spend the funds.",
									"_value": "The amount of tokens to be spent."
								}
							},
							"balanceOf(address)": {
								"details": "Gets the balance of the specified address.",
								"params": {
									"_owner": "The address to query the the balance of."
								},
								"return": "An uint representing the amount owned by the passed address."
							},
							"transfer(address,uint256)": {
								"details": "transfer token for a specified address",
								"params": {
									"_to": "The address to transfer to.",
									"_value": "The amount to be transferred."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfer tokens from one address to another",
								"params": {
									"_from": "address The address which you want to send tokens from",
									"_to": "address The address which you want to transfer to",
									"_value": "uint the amount of tokens to be transferred"
								}
							},
							"transferOwnership(address)": {
								"details": "Allows the current owner to transfer control of the contract to a newOwner.",
								"params": {
									"newOwner": "The address to transfer ownership to."
								}
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"MAX_UINT()": "e5b5019a",
							"_totalSupply()": "3eaaf86b",
							"allowance(address,address)": "dd62ed3e",
							"allowed(address,address)": "5c658165",
							"approve(address,uint256)": "095ea7b3",
							"approveByLegacy(address,address,uint256)": "aee92d33",
							"balanceOf(address)": "70a08231",
							"balances(address)": "27e235e3",
							"basisPointsRate()": "dd644f72",
							"maximumFee()": "35390714",
							"owner()": "8da5cb5b",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferByLegacy(address,address,uint256)": "6e18980a",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromByLegacy(address,address,address,uint256)": "8b477adb",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "",
					"userdoc": {
						"methods": {}
					}
				},
				"ZRC20": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "spender",
									"type": "address"
								},
								{
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "from",
									"type": "address"
								},
								{
									"name": "to",
									"type": "address"
								},
								{
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "_totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "who",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "to",
									"type": "address"
								},
								{
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "owner",
									"type": "address"
								},
								{
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"_totalSupply()": "3eaaf86b",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "",
					"userdoc": {
						"methods": {}
					}
				},
				"ZRC20Basic": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "_totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "who",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "to",
									"type": "address"
								},
								{
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"_totalSupply()": "3eaaf86b",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb"
						}
					},
					"metadata": "",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/stablecoin/stablecoin_contract.sol": {
				"ast": {
					"absolutePath": "contracts/stablecoin/stablecoin_contract.sol",
					"exportedSymbols": {
						"BasicToken": [
							347
						],
						"BlackList": [
							725
						],
						"Ownable": [
							139
						],
						"Pausable": [
							603
						],
						"SafeMath": [
							97
						],
						"StandardToken": [
							546
						],
						"TetherToken": [
							1174
						],
						"UpgradedStandardToken": [
							757
						],
						"ZRC20": [
							205
						],
						"ZRC20Basic": [
							169
						]
					},
					"id": 1175,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "67:24:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@title SafeMath\n@dev Math operations with safety checks that throw on error",
							"fullyImplemented": true,
							"id": 97,
							"linearizedBaseContracts": [
								97
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 33,
										"nodeType": "Block",
										"src": "273:134:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 12,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 10,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "287:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 11,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "292:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "287:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 16,
												"nodeType": "IfStatement",
												"src": "283:45:0",
												"trueBody": {
													"id": 15,
													"nodeType": "Block",
													"src": "295:33:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 13,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "316:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 9,
															"id": 14,
															"nodeType": "Return",
															"src": "309:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													18
												],
												"declarations": [
													{
														"constant": false,
														"id": 18,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 34,
														"src": "337:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 17,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "337:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 22,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 21,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 19,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "349:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 20,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "353:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "349:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "337:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 28,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 26,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 24,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "371:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 25,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "375:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "371:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 27,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "380:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "371:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 23,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1194,
														"src": "364:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 29,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "364:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 30,
												"nodeType": "ExpressionStatement",
												"src": "364:18:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 31,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 18,
													"src": "399:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 9,
												"id": 32,
												"nodeType": "Return",
												"src": "392:8:0"
											}
										]
									},
									"id": 34,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "219:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "219:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "230:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "230:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "218:22:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "264:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 7,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "264:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "263:9:0"
									},
									"scope": 97,
									"src": "206:201:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 51,
										"nodeType": "Block",
										"src": "480:216:0",
										"statements": [
											{
												"assignments": [
													44
												],
												"declarations": [
													{
														"constant": false,
														"id": 44,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 52,
														"src": "568:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 43,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "568:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 48,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 45,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 36,
														"src": "580:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 46,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 38,
														"src": "584:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "580:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "568:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 49,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 44,
													"src": "688:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 42,
												"id": 50,
												"nodeType": "Return",
												"src": "681:8:0"
											}
										]
									},
									"id": 52,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "426:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 35,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "437:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "425:22:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "471:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 40,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "471:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "470:9:0"
									},
									"scope": 97,
									"src": "413:283:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 71,
										"nodeType": "Block",
										"src": "769:53:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 62,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 56,
																"src": "786:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 63,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 54,
																"src": "791:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 61,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1194,
														"src": "779:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "779:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "779:14:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 69,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 67,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "810:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 68,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "814:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "810:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 60,
												"id": 70,
												"nodeType": "Return",
												"src": "803:12:0"
											}
										]
									},
									"id": 72,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "715:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 53,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "715:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 56,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "726:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 55,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "726:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "714:22:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "760:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "760:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "759:9:0"
									},
									"scope": 97,
									"src": "702:120:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 95,
										"nodeType": "Block",
										"src": "895:76:0",
										"statements": [
											{
												"assignments": [
													82
												],
												"declarations": [
													{
														"constant": false,
														"id": 82,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 96,
														"src": "905:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 81,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "905:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 86,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 83,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 74,
														"src": "917:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 84,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 76,
														"src": "921:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "917:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "905:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 90,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 88,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 82,
																"src": "939:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 89,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 74,
																"src": "944:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "939:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 87,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1194,
														"src": "932:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 91,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "932:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 92,
												"nodeType": "ExpressionStatement",
												"src": "932:14:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 93,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 82,
													"src": "963:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 80,
												"id": 94,
												"nodeType": "Return",
												"src": "956:8:0"
											}
										]
									},
									"id": 96,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "841:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 73,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "841:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "852:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "852:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "840:22:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "886:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 78,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "886:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "885:9:0"
									},
									"scope": 97,
									"src": "828:143:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 1175,
							"src": "183:790:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": "@title Ownable\n@dev The Ownable contract has an owner address, and provides basic authorization control\nfunctions, this simplifies the implementation of \"user permissions\".",
							"fullyImplemented": true,
							"id": 139,
							"linearizedBaseContracts": [
								139
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 99,
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"scope": 139,
									"src": "1188:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 98,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1188:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 107,
										"nodeType": "Block",
										"src": "1368:35:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 102,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 99,
														"src": "1378:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 103,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1177,
															"src": "1386:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1386:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1378:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 106,
												"nodeType": "ExpressionStatement",
												"src": "1378:18:0"
											}
										]
									},
									"id": 108,
									"implemented": true,
									"isConstructor": true,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "Ownable",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1358:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1368:0:0"
									},
									"scope": 139,
									"src": "1342:61:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 118,
										"nodeType": "Block",
										"src": "1514:56:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 114,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 111,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1177,
																	"src": "1532:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 112,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1532:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 113,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 99,
																"src": "1546:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1532:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 110,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1195,
														"src": "1524:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1524:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 116,
												"nodeType": "ExpressionStatement",
												"src": "1524:28:0"
											},
											{
												"id": 117,
												"nodeType": "PlaceholderStatement",
												"src": "1562:1:0"
											}
										]
									},
									"id": 119,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1511:2:0"
									},
									"src": "1493:77:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 137,
										"nodeType": "Block",
										"src": "1800:85:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 126,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 121,
														"src": "1814:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 128,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1834:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 127,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1826:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 129,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1826:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1814:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 136,
												"nodeType": "IfStatement",
												"src": "1810:69:0",
												"trueBody": {
													"id": 135,
													"nodeType": "Block",
													"src": "1838:41:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 133,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 131,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 99,
																	"src": "1852:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 132,
																	"name": "newOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 121,
																	"src": "1860:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1852:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 134,
															"nodeType": "ExpressionStatement",
															"src": "1852:16:0"
														}
													]
												}
											}
										]
									},
									"id": 138,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 124,
											"modifierName": {
												"argumentTypes": null,
												"id": 123,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 119,
												"src": "1790:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1790:9:0"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "1765:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1765:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1764:18:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1800:0:0"
									},
									"scope": 139,
									"src": "1738:147:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 1175,
							"src": "1165:723:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": false,
							"id": 169,
							"linearizedBaseContracts": [
								169
							],
							"name": "ZRC20Basic",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 141,
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 169,
									"src": "1917:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 140,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1917:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": null,
									"id": 146,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1967:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "1995:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 143,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1995:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1994:6:0"
									},
									"scope": 169,
									"src": "1947:54:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"id": 153,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"name": "who",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "2025:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2024:13:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "2063:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 150,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2063:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2062:6:0"
									},
									"scope": 169,
									"src": "2006:63:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"id": 160,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2092:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2092:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2104:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2104:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2091:24:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2122:0:0"
									},
									"scope": 169,
									"src": "2074:49:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 168,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "2143:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2143:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "2165:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2165:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "2185:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2185:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2142:54:0"
									},
									"src": "2128:69:0"
								}
							],
							"scope": 1175,
							"src": "1891:308:0"
						},
						{
							"baseContracts": [
								{
									"arguments": [],
									"baseName": {
										"contractScope": null,
										"id": 170,
										"name": "ZRC20Basic",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 169,
										"src": "2220:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ZRC20Basic_$169",
											"typeString": "contract ZRC20Basic"
										}
									},
									"id": 171,
									"nodeType": "InheritanceSpecifier",
									"src": "2220:10:0"
								}
							],
							"contractDependencies": [
								169
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": false,
							"id": 205,
							"linearizedBaseContracts": [
								205,
								169
							],
							"name": "ZRC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"id": 180,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2256:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2256:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2271:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2271:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2255:32:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2313:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 177,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2313:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2312:6:0"
									},
									"scope": 205,
									"src": "2237:82:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"id": 189,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2346:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2360:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2360:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2372:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 185,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2372:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2345:38:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2390:0:0"
									},
									"scope": 205,
									"src": "2324:67:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"id": 196,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "2413:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2413:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 193,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "2430:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 192,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2430:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2412:29:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2448:0:0"
									},
									"scope": 205,
									"src": "2396:53:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 204,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "2469:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 200,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "2492:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2492:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "2517:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 201,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2517:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2468:60:0"
									},
									"src": "2454:75:0"
								}
							],
							"scope": 1175,
							"src": "2202:329:0"
						},
						{
							"baseContracts": [
								{
									"arguments": [],
									"baseName": {
										"contractScope": null,
										"id": 206,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 139,
										"src": "2646:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$139",
											"typeString": "contract Ownable"
										}
									},
									"id": 207,
									"nodeType": "InheritanceSpecifier",
									"src": "2646:7:0"
								},
								{
									"arguments": [],
									"baseName": {
										"contractScope": null,
										"id": 208,
										"name": "ZRC20Basic",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 169,
										"src": "2655:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ZRC20Basic_$169",
											"typeString": "contract ZRC20Basic"
										}
									},
									"id": 209,
									"nodeType": "InheritanceSpecifier",
									"src": "2655:10:0"
								}
							],
							"contractDependencies": [
								139,
								169
							],
							"contractKind": "contract",
							"documentation": "@title Basic token\n@dev Basic version of StandardToken, with no allowances.",
							"fullyImplemented": false,
							"id": 347,
							"linearizedBaseContracts": [
								347,
								169,
								139
							],
							"name": "BasicToken",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 212,
									"libraryName": {
										"contractScope": null,
										"id": 210,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 97,
										"src": "2678:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$97",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "2672:24:0",
									"typeName": {
										"id": 211,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "2691:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 216,
									"name": "balances",
									"nodeType": "VariableDeclaration",
									"scope": 347,
									"src": "2702:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 215,
										"keyType": {
											"id": 213,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2710:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2702:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 214,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "2721:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 219,
									"name": "basisPointsRate",
									"nodeType": "VariableDeclaration",
									"scope": 347,
									"src": "2827:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 217,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "2827:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30",
										"id": 218,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2857:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 222,
									"name": "maximumFee",
									"nodeType": "VariableDeclaration",
									"scope": 347,
									"src": "2864:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 220,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "2864:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30",
										"id": 221,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2889:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 239,
										"nodeType": "Block",
										"src": "2999:66:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "3017:29:0",
															"subExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 233,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 227,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1177,
																					"src": "3019:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 228,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "data",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "3019:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_calldata_ptr",
																					"typeString": "bytes calldata"
																				}
																			},
																			"id": 229,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "3019:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 232,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 230,
																				"name": "size",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 224,
																				"src": "3037:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "34",
																				"id": 231,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3044:1:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "3037:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3019:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 234,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3018:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 226,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1195,
														"src": "3009:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3009:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 237,
												"nodeType": "ExpressionStatement",
												"src": "3009:38:0"
											},
											{
												"id": 238,
												"nodeType": "PlaceholderStatement",
												"src": "3057:1:0"
											}
										]
									},
									"id": 240,
									"name": "onlyPayloadSize",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"name": "size",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "2988:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2988:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2987:11:0"
									},
									"src": "2963:102:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "3306:485:0",
										"statements": [
											{
												"assignments": [
													253
												],
												"declarations": [
													{
														"constant": false,
														"id": 253,
														"name": "fee",
														"nodeType": "VariableDeclaration",
														"scope": 334,
														"src": "3316:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 252,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3316:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 262,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "3130303030",
															"id": 260,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3361:5:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															},
															"value": "10000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															}
														],
														"expression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 256,
																			"name": "basisPointsRate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 219,
																			"src": "3339:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 254,
																			"name": "_value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 244,
																			"src": "3328:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 255,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 34,
																		"src": "3328:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 257,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3328:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 258,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3327:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 259,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 52,
														"src": "3327:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3327:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3316:51:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 263,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 253,
														"src": "3381:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"id": 264,
														"name": "maximumFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 222,
														"src": "3387:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3381:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 271,
												"nodeType": "IfStatement",
												"src": "3377:63:0",
												"trueBody": {
													"id": 270,
													"nodeType": "Block",
													"src": "3399:41:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 266,
																	"name": "fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 253,
																	"src": "3413:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 267,
																	"name": "maximumFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 222,
																	"src": "3419:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3413:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 269,
															"nodeType": "ExpressionStatement",
															"src": "3413:16:0"
														}
													]
												}
											},
											{
												"assignments": [
													273
												],
												"declarations": [
													{
														"constant": false,
														"id": 273,
														"name": "sendAmount",
														"nodeType": "VariableDeclaration",
														"scope": 334,
														"src": "3449:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 272,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3449:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 278,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 276,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 253,
															"src": "3478:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 274,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 244,
															"src": "3467:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 275,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 72,
														"src": "3467:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3467:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3449:33:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 279,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "3492:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 282,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 280,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1177,
																"src": "3501:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3501:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3492:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 288,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 244,
																"src": "3540:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 283,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 216,
																	"src": "3515:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 286,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 284,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1177,
																		"src": "3524:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 285,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "3524:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3515:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 287,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 72,
															"src": "3515:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 289,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3515:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3492:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 291,
												"nodeType": "ExpressionStatement",
												"src": "3492:55:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 292,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "3557:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 294,
														"indexExpression": {
															"argumentTypes": null,
															"id": 293,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3566:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3557:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 299,
																"name": "sendAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 273,
																"src": "3591:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 295,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 216,
																	"src": "3573:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 297,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 296,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 242,
																	"src": "3582:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3573:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 298,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 96,
															"src": "3573:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 300,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3573:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3557:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 302,
												"nodeType": "ExpressionStatement",
												"src": "3557:45:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 303,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 253,
														"src": "3616:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 304,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3622:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3616:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 325,
												"nodeType": "IfStatement",
												"src": "3612:126:0",
												"trueBody": {
													"id": 324,
													"nodeType": "Block",
													"src": "3625:113:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 315,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 306,
																		"name": "balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 216,
																		"src": "3639:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 308,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 307,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 99,
																		"src": "3648:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3639:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 313,
																			"name": "fee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 253,
																			"src": "3677:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 309,
																				"name": "balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 216,
																				"src": "3657:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 311,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 310,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 99,
																				"src": "3666:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3657:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 312,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 96,
																		"src": "3657:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 314,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3657:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3639:42:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 316,
															"nodeType": "ExpressionStatement",
															"src": "3639:42:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 318,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1177,
																			"src": "3704:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 319,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "3704:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 320,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 99,
																		"src": "3716:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 321,
																		"name": "fee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 253,
																		"src": "3723:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 317,
																	"name": "Transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 168,
																	"src": "3695:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 322,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3695:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 323,
															"nodeType": "ExpressionStatement",
															"src": "3695:32:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 327,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1177,
																"src": "3756:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3756:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 329,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3768:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 330,
															"name": "sendAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 273,
															"src": "3773:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 326,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 168,
														"src": "3747:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3747:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 332,
												"nodeType": "ExpressionStatement",
												"src": "3747:37:0"
											}
										]
									},
									"id": 334,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_rational_64_by_1",
														"typeString": "int_const 64"
													},
													"id": 249,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 247,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3298:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "3332",
														"id": 248,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3302:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "3298:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_64_by_1",
														"typeString": "int_const 64"
													}
												}
											],
											"id": 250,
											"modifierName": {
												"argumentTypes": null,
												"id": 246,
												"name": "onlyPayloadSize",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 240,
												"src": "3282:15:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_uint256_$",
													"typeString": "modifier (uint256)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3282:23:0"
										}
									],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "3249:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3249:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 244,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "3262:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 243,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3262:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3248:26:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3306:0:0"
									},
									"scope": 347,
									"src": "3231:560:0",
									"stateMutability": "nonpayable",
									"superFunction": 160,
									"visibility": "public"
								},
								{
									"body": {
										"id": 345,
										"nodeType": "Block",
										"src": "4076:40:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 341,
														"name": "balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 216,
														"src": "4093:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 343,
													"indexExpression": {
														"argumentTypes": null,
														"id": 342,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 336,
														"src": "4102:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4093:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 340,
												"id": 344,
												"nodeType": "Return",
												"src": "4086:23:0"
											}
										]
									},
									"id": 346,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "4021:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4021:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4020:16:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"name": "balance",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "4062:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 338,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4062:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4061:14:0"
									},
									"scope": 347,
									"src": "4002:114:0",
									"stateMutability": "view",
									"superFunction": 153,
									"visibility": "public"
								}
							],
							"scope": 1175,
							"src": "2623:1496:0"
						},
						{
							"baseContracts": [
								{
									"arguments": [],
									"baseName": {
										"contractScope": null,
										"id": 348,
										"name": "BasicToken",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 347,
										"src": "4148:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_BasicToken_$347",
											"typeString": "contract BasicToken"
										}
									},
									"id": 349,
									"nodeType": "InheritanceSpecifier",
									"src": "4148:10:0"
								},
								{
									"arguments": [],
									"baseName": {
										"contractScope": null,
										"id": 350,
										"name": "ZRC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 205,
										"src": "4160:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ZRC20_$205",
											"typeString": "contract ZRC20"
										}
									},
									"id": 351,
									"nodeType": "InheritanceSpecifier",
									"src": "4160:5:0"
								}
							],
							"contractDependencies": [
								139,
								169,
								205,
								347
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": false,
							"id": 546,
							"linearizedBaseContracts": [
								546,
								205,
								347,
								169,
								139
							],
							"name": "StandardToken",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 357,
									"name": "allowed",
									"nodeType": "VariableDeclaration",
									"scope": 546,
									"src": "4173:61:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 356,
										"keyType": {
											"id": 352,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4182:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4173:46:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 355,
											"keyType": {
												"id": 353,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4202:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "4193:25:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 354,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "4213:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 364,
									"name": "MAX_UINT",
									"nodeType": "VariableDeclaration",
									"scope": 546,
									"src": "4241:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 358,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "4241:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
											"typeString": "int_const 115792089237316195423570985008687907853269984665640564039457584007913129639935"
										},
										"id": 363,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"commonType": {
												"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
												"typeString": "int_const 115792089237316195423570985008687907853269984665640564039457584007913129639936"
											},
											"id": 361,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"argumentTypes": null,
												"hexValue": "32",
												"id": 359,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "4273:1:0",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"argumentTypes": null,
												"hexValue": "323536",
												"id": 360,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "4276:3:0",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_rational_256_by_1",
													"typeString": "int_const 256"
												},
												"value": "256"
											},
											"src": "4273:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
												"typeString": "int_const 115792089237316195423570985008687907853269984665640564039457584007913129639936"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"argumentTypes": null,
											"hexValue": "31",
											"id": 362,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "4282:1:0",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "4273:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
											"typeString": "int_const 115792089237316195423570985008687907853269984665640564039457584007913129639935"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 480,
										"nodeType": "Block",
										"src": "4659:786:0",
										"statements": [
											{
												"assignments": [
													378
												],
												"declarations": [
													{
														"constant": false,
														"id": 378,
														"name": "_allowance",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "4669:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": null,
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 385,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 379,
															"name": "allowed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 357,
															"src": "4686:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 381,
														"indexExpression": {
															"argumentTypes": null,
															"id": 380,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 366,
															"src": "4694:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4686:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 384,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 382,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1177,
															"src": "4701:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 383,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "4701:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4686:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4669:43:0"
											},
											{
												"assignments": [
													387
												],
												"declarations": [
													{
														"constant": false,
														"id": 387,
														"name": "fee",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "4878:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 386,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4878:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 396,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "3130303030",
															"id": 394,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4923:5:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															},
															"value": "10000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															}
														],
														"expression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 390,
																			"name": "basisPointsRate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 219,
																			"src": "4901:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 388,
																			"name": "_value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 370,
																			"src": "4890:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 389,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 34,
																		"src": "4890:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4890:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 392,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4889:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 393,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 52,
														"src": "4889:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4889:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4878:51:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 397,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 387,
														"src": "4943:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"id": 398,
														"name": "maximumFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 222,
														"src": "4949:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4943:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 405,
												"nodeType": "IfStatement",
												"src": "4939:63:0",
												"trueBody": {
													"id": 404,
													"nodeType": "Block",
													"src": "4961:41:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 402,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 400,
																	"name": "fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 387,
																	"src": "4975:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 401,
																	"name": "maximumFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 222,
																	"src": "4981:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4975:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 403,
															"nodeType": "ExpressionStatement",
															"src": "4975:16:0"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 406,
														"name": "_allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 378,
														"src": "5015:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 407,
														"name": "MAX_UINT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 364,
														"src": "5028:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5015:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 422,
												"nodeType": "IfStatement",
												"src": "5011:103:0",
												"trueBody": {
													"id": 421,
													"nodeType": "Block",
													"src": "5038:76:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 419,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 409,
																			"name": "allowed",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 357,
																			"src": "5052:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 413,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 410,
																			"name": "_from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 366,
																			"src": "5060:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5052:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 414,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 411,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1177,
																			"src": "5067:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 412,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "5067:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5052:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 417,
																			"name": "_value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 370,
																			"src": "5096:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 415,
																			"name": "_allowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 378,
																			"src": "5081:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 416,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 72,
																		"src": "5081:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 418,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5081:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5052:51:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 420,
															"nodeType": "ExpressionStatement",
															"src": "5052:51:0"
														}
													]
												}
											},
											{
												"assignments": [
													424
												],
												"declarations": [
													{
														"constant": false,
														"id": 424,
														"name": "sendAmount",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "5123:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 423,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5123:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 429,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 427,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 387,
															"src": "5152:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 425,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 370,
															"src": "5141:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 426,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 72,
														"src": "5141:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5141:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5123:33:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 430,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "5166:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 432,
														"indexExpression": {
															"argumentTypes": null,
															"id": 431,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 366,
															"src": "5175:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5166:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 437,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 370,
																"src": "5204:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 433,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 216,
																	"src": "5184:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 435,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 434,
																	"name": "_from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 366,
																	"src": "5193:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5184:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 436,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 72,
															"src": "5184:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 438,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5184:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5166:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 440,
												"nodeType": "ExpressionStatement",
												"src": "5166:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 441,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "5221:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 443,
														"indexExpression": {
															"argumentTypes": null,
															"id": 442,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "5230:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5221:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 448,
																"name": "sendAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 424,
																"src": "5255:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 444,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 216,
																	"src": "5237:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 446,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 445,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 368,
																	"src": "5246:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5237:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 447,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 96,
															"src": "5237:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 449,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5237:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5221:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 451,
												"nodeType": "ExpressionStatement",
												"src": "5221:45:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 452,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 387,
														"src": "5280:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 453,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5286:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5280:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 473,
												"nodeType": "IfStatement",
												"src": "5276:121:0",
												"trueBody": {
													"id": 472,
													"nodeType": "Block",
													"src": "5289:108:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 464,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 455,
																		"name": "balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 216,
																		"src": "5303:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 457,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 456,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 99,
																		"src": "5312:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5303:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 462,
																			"name": "fee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 387,
																			"src": "5341:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 458,
																				"name": "balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 216,
																				"src": "5321:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 460,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 459,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 99,
																				"src": "5330:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5321:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 461,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 96,
																		"src": "5321:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 463,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5321:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5303:42:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 465,
															"nodeType": "ExpressionStatement",
															"src": "5303:42:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 467,
																		"name": "_from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 366,
																		"src": "5368:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 468,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 99,
																		"src": "5375:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 469,
																		"name": "fee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 387,
																		"src": "5382:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 466,
																	"name": "Transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 168,
																	"src": "5359:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 470,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5359:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 471,
															"nodeType": "ExpressionStatement",
															"src": "5359:27:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 475,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 366,
															"src": "5415:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 476,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "5422:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 477,
															"name": "sendAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 424,
															"src": "5427:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 474,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 168,
														"src": "5406:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5406:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 479,
												"nodeType": "ExpressionStatement",
												"src": "5406:32:0"
											}
										]
									},
									"id": 481,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_rational_96_by_1",
														"typeString": "int_const 96"
													},
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"hexValue": "33",
														"id": 373,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4651:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "3332",
														"id": 374,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4655:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "4651:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_96_by_1",
														"typeString": "int_const 96"
													}
												}
											],
											"id": 376,
											"modifierName": {
												"argumentTypes": null,
												"id": 372,
												"name": "onlyPayloadSize",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 240,
												"src": "4635:15:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_uint256_$",
													"typeString": "modifier (uint256)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "4635:23:0"
										}
									],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"name": "_from",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "4587:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4587:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "4602:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4602:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "4615:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 369,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4615:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4586:41:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4659:0:0"
									},
									"scope": 546,
									"src": "4565:880:0",
									"stateMutability": "nonpayable",
									"superFunction": 189,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5764:484:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "6087:56:0",
															"subExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 507,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"components": [
																				{
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 496,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 494,
																						"name": "_value",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 485,
																						"src": "6090:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"argumentTypes": null,
																						"hexValue": "30",
																						"id": 495,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "6100:1:0",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "6090:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"id": 497,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "6089:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"argumentTypes": null,
																			"components": [
																				{
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 505,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"baseExpression": {
																							"argumentTypes": null,
																							"baseExpression": {
																								"argumentTypes": null,
																								"id": 498,
																								"name": "allowed",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 357,
																								"src": "6107:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																									"typeString": "mapping(address => mapping(address => uint256))"
																								}
																							},
																							"id": 501,
																							"indexExpression": {
																								"argumentTypes": null,
																								"expression": {
																									"argumentTypes": null,
																									"id": 499,
																									"name": "msg",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1177,
																									"src": "6115:3:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_magic_message",
																										"typeString": "msg"
																									}
																								},
																								"id": 500,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "sender",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": null,
																								"src": "6115:10:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "6107:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																								"typeString": "mapping(address => uint256)"
																							}
																						},
																						"id": 503,
																						"indexExpression": {
																							"argumentTypes": null,
																							"id": 502,
																							"name": "_spender",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 483,
																							"src": "6127:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "6107:29:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"argumentTypes": null,
																						"hexValue": "30",
																						"id": 504,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "6140:1:0",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "6107:34:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"id": 506,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "6106:36:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "6089:53:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 508,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6088:55:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 493,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1195,
														"src": "6079:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6079:65:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 511,
												"nodeType": "ExpressionStatement",
												"src": "6079:65:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 512,
																"name": "allowed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 357,
																"src": "6155:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 516,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 513,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1177,
																	"src": "6163:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 514,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "6163:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6155:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 517,
														"indexExpression": {
															"argumentTypes": null,
															"id": 515,
															"name": "_spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 483,
															"src": "6175:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6155:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 518,
														"name": "_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "6187:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6155:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 520,
												"nodeType": "ExpressionStatement",
												"src": "6155:38:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 522,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1177,
																"src": "6212:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 523,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "6212:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 524,
															"name": "_spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 483,
															"src": "6224:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 525,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "6234:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 521,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 204,
														"src": "6203:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6203:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "6203:38:0"
											}
										]
									},
									"id": 529,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_rational_64_by_1",
														"typeString": "int_const 64"
													},
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 488,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5756:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "3332",
														"id": 489,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5760:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "5756:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_64_by_1",
														"typeString": "int_const 64"
													}
												}
											],
											"id": 491,
											"modifierName": {
												"argumentTypes": null,
												"id": 487,
												"name": "onlyPayloadSize",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 240,
												"src": "5740:15:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_uint256_$",
													"typeString": "modifier (uint256)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "5740:23:0"
										}
									],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"name": "_spender",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5702:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5702:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 485,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5720:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 484,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5720:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5701:31:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5764:0:0"
									},
									"scope": 546,
									"src": "5685:563:0",
									"stateMutability": "nonpayable",
									"superFunction": 196,
									"visibility": "public"
								},
								{
									"body": {
										"id": 544,
										"nodeType": "Block",
										"src": "6667:49:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 538,
															"name": "allowed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 357,
															"src": "6684:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 540,
														"indexExpression": {
															"argumentTypes": null,
															"id": 539,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "6692:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6684:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 542,
													"indexExpression": {
														"argumentTypes": null,
														"id": 541,
														"name": "_spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 533,
														"src": "6700:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6684:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 537,
												"id": 543,
												"nodeType": "Return",
												"src": "6677:32:0"
											}
										]
									},
									"id": 545,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "6592:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 530,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6592:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 533,
												"name": "_spender",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "6608:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6608:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6591:34:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 536,
												"name": "remaining",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "6651:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6651:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6650:16:0"
									},
									"scope": 546,
									"src": "6573:143:0",
									"stateMutability": "view",
									"superFunction": 180,
									"visibility": "public"
								}
							],
							"scope": 1175,
							"src": "4122:2597:0"
						},
						{
							"baseContracts": [
								{
									"arguments": [],
									"baseName": {
										"contractScope": null,
										"id": 547,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 139,
										"src": "6856:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$139",
											"typeString": "contract Ownable"
										}
									},
									"id": 548,
									"nodeType": "InheritanceSpecifier",
									"src": "6856:7:0"
								}
							],
							"contractDependencies": [
								139
							],
							"contractKind": "contract",
							"documentation": "@title Pausable\n@dev Base contract which allows children to implement an emergency stop mechanism.",
							"fullyImplemented": true,
							"id": 603,
							"linearizedBaseContracts": [
								603,
								139
							],
							"name": "Pausable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 550,
									"name": "Pause",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6879:2:0"
									},
									"src": "6868:14:0"
								},
								{
									"anonymous": false,
									"id": 552,
									"name": "Unpause",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6898:2:0"
									},
									"src": "6885:16:0"
								},
								{
									"constant": false,
									"id": 555,
									"name": "paused",
									"nodeType": "VariableDeclaration",
									"scope": 603,
									"src": "6905:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 553,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "6905:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "66616c7365",
										"id": 554,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "6926:5:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 563,
										"nodeType": "Block",
										"src": "7059:34:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 559,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "7073:7:0",
															"subExpression": {
																"argumentTypes": null,
																"id": 558,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 555,
																"src": "7074:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 557,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1195,
														"src": "7065:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7065:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 561,
												"nodeType": "ExpressionStatement",
												"src": "7065:16:0"
											},
											{
												"id": 562,
												"nodeType": "PlaceholderStatement",
												"src": "7087:1:0"
											}
										]
									},
									"id": 564,
									"name": "whenNotPaused",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7056:2:0"
									},
									"src": "7034:59:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 571,
										"nodeType": "Block",
										"src": "7212:33:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 567,
															"name": "paused",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 555,
															"src": "7226:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 566,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1195,
														"src": "7218:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7218:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 569,
												"nodeType": "ExpressionStatement",
												"src": "7218:15:0"
											},
											{
												"id": 570,
												"nodeType": "PlaceholderStatement",
												"src": "7239:1:0"
											}
										]
									},
									"id": 572,
									"name": "whenPaused",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7209:2:0"
									},
									"src": "7190:55:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 586,
										"nodeType": "Block",
										"src": "7372:37:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 579,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 555,
														"src": "7378:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 580,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7387:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "7378:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 582,
												"nodeType": "ExpressionStatement",
												"src": "7378:13:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 583,
														"name": "Pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 550,
														"src": "7397:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7397:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 585,
												"nodeType": "ExpressionStatement",
												"src": "7397:7:0"
											}
										]
									},
									"id": 587,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 575,
											"modifierName": {
												"argumentTypes": null,
												"id": 574,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 119,
												"src": "7341:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "7341:9:0"
										},
										{
											"arguments": [],
											"id": 577,
											"modifierName": {
												"argumentTypes": null,
												"id": 576,
												"name": "whenNotPaused",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 564,
												"src": "7351:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "7351:13:0"
										}
									],
									"name": "pause",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7338:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7372:0:0"
									},
									"scope": 603,
									"src": "7324:85:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "7538:40:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 594,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 555,
														"src": "7544:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 595,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7553:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "7544:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 597,
												"nodeType": "ExpressionStatement",
												"src": "7544:14:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 598,
														"name": "Unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 552,
														"src": "7564:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7564:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 600,
												"nodeType": "ExpressionStatement",
												"src": "7564:9:0"
											}
										]
									},
									"id": 602,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 590,
											"modifierName": {
												"argumentTypes": null,
												"id": 589,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 119,
												"src": "7510:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "7510:9:0"
										},
										{
											"arguments": [],
											"id": 592,
											"modifierName": {
												"argumentTypes": null,
												"id": 591,
												"name": "whenPaused",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 572,
												"src": "7520:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "7520:10:0"
										}
									],
									"name": "unpause",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7507:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7538:0:0"
									},
									"scope": 603,
									"src": "7491:87:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 1175,
							"src": "6835:745:0"
						},
						{
							"baseContracts": [
								{
									"arguments": [],
									"baseName": {
										"contractScope": null,
										"id": 604,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 139,
										"src": "7604:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$139",
											"typeString": "contract Ownable"
										}
									},
									"id": 605,
									"nodeType": "InheritanceSpecifier",
									"src": "7604:7:0"
								},
								{
									"arguments": [],
									"baseName": {
										"contractScope": null,
										"id": 606,
										"name": "BasicToken",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 347,
										"src": "7613:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_BasicToken_$347",
											"typeString": "contract BasicToken"
										}
									},
									"id": 607,
									"nodeType": "InheritanceSpecifier",
									"src": "7613:10:0"
								}
							],
							"contractDependencies": [
								139,
								169,
								347
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": false,
							"id": 725,
							"linearizedBaseContracts": [
								725,
								347,
								169,
								139
							],
							"name": "BlackList",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 618,
										"nodeType": "Block",
										"src": "7827:45:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 614,
														"name": "isBlackListed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 631,
														"src": "7844:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 616,
													"indexExpression": {
														"argumentTypes": null,
														"id": 615,
														"name": "_maker",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7858:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7844:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 613,
												"id": 617,
												"nodeType": "Return",
												"src": "7837:28:0"
											}
										]
									},
									"id": 619,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "getBlackListStatus",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"name": "_maker",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "7778:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7778:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7777:16:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 612,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "7821:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 611,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7821:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7820:6:0"
									},
									"scope": 725,
									"src": "7750:122:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 626,
										"nodeType": "Block",
										"src": "7934:29:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 624,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 99,
													"src": "7951:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 623,
												"id": 625,
												"nodeType": "Return",
												"src": "7944:12:0"
											}
										]
									},
									"id": 627,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "getOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7895:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "7925:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 621,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7925:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7924:9:0"
									},
									"scope": 725,
									"src": "7878:85:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"constant": false,
									"id": 631,
									"name": "isBlackListed",
									"nodeType": "VariableDeclaration",
									"scope": 725,
									"src": "7969:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 630,
										"keyType": {
											"id": 628,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "7978:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "7969:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 629,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "7989:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 648,
										"nodeType": "Block",
										"src": "8085:83:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 638,
															"name": "isBlackListed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 631,
															"src": "8095:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 640,
														"indexExpression": {
															"argumentTypes": null,
															"id": 639,
															"name": "_evilUser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 633,
															"src": "8109:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8095:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 641,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8122:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "8095:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 643,
												"nodeType": "ExpressionStatement",
												"src": "8095:31:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 645,
															"name": "_evilUser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 633,
															"src": "8151:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 644,
														"name": "AddedBlackList",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 720,
														"src": "8136:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8136:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 647,
												"nodeType": "ExpressionStatement",
												"src": "8136:25:0"
											}
										]
									},
									"id": 649,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 636,
											"modifierName": {
												"argumentTypes": null,
												"id": 635,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 119,
												"src": "8075:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "8075:9:0"
										}
									],
									"name": "addBlackList",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"name": "_evilUser",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "8049:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8049:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8048:19:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8085:0:0"
									},
									"scope": 725,
									"src": "8026:142:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 666,
										"nodeType": "Block",
										"src": "8239:92:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 656,
															"name": "isBlackListed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 631,
															"src": "8249:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 658,
														"indexExpression": {
															"argumentTypes": null,
															"id": 657,
															"name": "_clearedUser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "8263:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8249:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 659,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8279:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "8249:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "ExpressionStatement",
												"src": "8249:35:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 663,
															"name": "_clearedUser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "8311:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 662,
														"name": "RemovedBlackList",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 724,
														"src": "8294:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8294:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 665,
												"nodeType": "ExpressionStatement",
												"src": "8294:30:0"
											}
										]
									},
									"id": 667,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 654,
											"modifierName": {
												"argumentTypes": null,
												"id": 653,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 119,
												"src": "8229:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "8229:9:0"
										}
									],
									"name": "removeBlackList",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"name": "_clearedUser",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "8200:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 650,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8200:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8199:22:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8239:0:0"
									},
									"scope": 725,
									"src": "8174:157:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 709,
										"nodeType": "Block",
										"src": "8408:308:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 675,
																"name": "isBlackListed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 631,
																"src": "8426:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 677,
															"indexExpression": {
																"argumentTypes": null,
																"id": 676,
																"name": "_blackListedUser",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 669,
																"src": "8440:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8426:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 674,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1195,
														"src": "8418:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8418:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 679,
												"nodeType": "ExpressionStatement",
												"src": "8418:40:0"
											},
											{
												"assignments": [
													681
												],
												"declarations": [
													{
														"constant": false,
														"id": 681,
														"name": "dirtyFunds",
														"nodeType": "VariableDeclaration",
														"scope": 710,
														"src": "8468:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 680,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "8468:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 685,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 683,
															"name": "_blackListedUser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "8496:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 682,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															346
														],
														"referencedDeclaration": 346,
														"src": "8486:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8486:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8468:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 686,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "8523:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 688,
														"indexExpression": {
															"argumentTypes": null,
															"id": 687,
															"name": "_blackListedUser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "8532:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8523:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 689,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8552:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8523:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 691,
												"nodeType": "ExpressionStatement",
												"src": "8523:30:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 692,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "8563:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 693,
														"name": "dirtyFunds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 681,
														"src": "8579:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8563:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 695,
												"nodeType": "ExpressionStatement",
												"src": "8563:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 697,
															"name": "_blackListedUser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "8609:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 699,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8635:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 698,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8627:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 700,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8627:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 701,
															"name": "dirtyFunds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 681,
															"src": "8639:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 696,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 168,
														"src": "8600:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8600:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 703,
												"nodeType": "ExpressionStatement",
												"src": "8600:50:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 705,
															"name": "_blackListedUser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "8680:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 706,
															"name": "dirtyFunds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 681,
															"src": "8698:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 704,
														"name": "DestroyedBlackFunds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 716,
														"src": "8660:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8660:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 708,
												"nodeType": "ExpressionStatement",
												"src": "8660:49:0"
											}
										]
									},
									"id": 710,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 672,
											"modifierName": {
												"argumentTypes": null,
												"id": 671,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 119,
												"src": "8398:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "8398:9:0"
										}
									],
									"name": "destroyBlackFunds",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 669,
												"name": "_blackListedUser",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "8365:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 668,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8365:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8364:26:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8408:0:0"
									},
									"scope": 725,
									"src": "8337:379:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 716,
									"name": "DestroyedBlackFunds",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 712,
												"indexed": false,
												"name": "_blackListedUser",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "8748:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 711,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8748:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 714,
												"indexed": false,
												"name": "_balance",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "8774:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 713,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8774:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8747:41:0"
									},
									"src": "8722:67:0"
								},
								{
									"anonymous": false,
									"id": 720,
									"name": "AddedBlackList",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 718,
												"indexed": false,
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "8816:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 717,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8816:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8815:15:0"
									},
									"src": "8795:36:0"
								},
								{
									"anonymous": false,
									"id": 724,
									"name": "RemovedBlackList",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 722,
												"indexed": false,
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "8860:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 721,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8860:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8859:15:0"
									},
									"src": "8837:38:0"
								}
							],
							"scope": 1175,
							"src": "7582:1296:0"
						},
						{
							"baseContracts": [
								{
									"arguments": [],
									"baseName": {
										"contractScope": null,
										"id": 726,
										"name": "StandardToken",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 546,
										"src": "8914:13:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_StandardToken_$546",
											"typeString": "contract StandardToken"
										}
									},
									"id": 727,
									"nodeType": "InheritanceSpecifier",
									"src": "8914:13:0"
								}
							],
							"contractDependencies": [
								546,
								139,
								169,
								205,
								347
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": false,
							"id": 757,
							"linearizedBaseContracts": [
								757,
								546,
								205,
								347,
								169,
								139
							],
							"name": "UpgradedStandardToken",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"id": 736,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "transferByLegacy",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 729,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "9080:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 728,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9080:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 731,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "9094:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 730,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9094:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 733,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "9106:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 732,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9106:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9079:38:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9124:0:0"
									},
									"scope": 757,
									"src": "9054:71:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"id": 747,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "transferFromByLegacy",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 738,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "9160:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 737,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9160:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 740,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "9176:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 739,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9176:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 742,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "9190:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 741,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9190:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 744,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "9207:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 743,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9207:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9159:59:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9225:0:0"
									},
									"scope": 757,
									"src": "9130:96:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"id": 756,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "approveByLegacy",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 749,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "9256:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 748,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9256:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 751,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "9270:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 750,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9270:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 753,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "9287:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 752,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9287:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9255:43:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 755,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9305:0:0"
									},
									"scope": 757,
									"src": "9231:75:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 1175,
							"src": "8880:428:0"
						},
						{
							"baseContracts": [
								{
									"arguments": [],
									"baseName": {
										"contractScope": null,
										"id": 758,
										"name": "Pausable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 603,
										"src": "9334:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Pausable_$603",
											"typeString": "contract Pausable"
										}
									},
									"id": 759,
									"nodeType": "InheritanceSpecifier",
									"src": "9334:8:0"
								},
								{
									"arguments": [],
									"baseName": {
										"contractScope": null,
										"id": 760,
										"name": "StandardToken",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 546,
										"src": "9344:13:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_StandardToken_$546",
											"typeString": "contract StandardToken"
										}
									},
									"id": 761,
									"nodeType": "InheritanceSpecifier",
									"src": "9344:13:0"
								},
								{
									"arguments": [],
									"baseName": {
										"contractScope": null,
										"id": 762,
										"name": "BlackList",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 725,
										"src": "9359:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_BlackList_$725",
											"typeString": "contract BlackList"
										}
									},
									"id": 763,
									"nodeType": "InheritanceSpecifier",
									"src": "9359:9:0"
								}
							],
							"contractDependencies": [
								546,
								139,
								169,
								205,
								347,
								603,
								725
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1174,
							"linearizedBaseContracts": [
								1174,
								725,
								546,
								205,
								347,
								169,
								603,
								139
							],
							"name": "TetherToken",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 765,
									"name": "name",
									"nodeType": "VariableDeclaration",
									"scope": 1174,
									"src": "9376:18:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string storage ref"
									},
									"typeName": {
										"id": 764,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "9376:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string storage pointer"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 767,
									"name": "symbol",
									"nodeType": "VariableDeclaration",
									"scope": 1174,
									"src": "9400:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string storage ref"
									},
									"typeName": {
										"id": 766,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "9400:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string storage pointer"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 769,
									"name": "decimals",
									"nodeType": "VariableDeclaration",
									"scope": 1174,
									"src": "9426:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 768,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "9426:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 771,
									"name": "upgradedAddress",
									"nodeType": "VariableDeclaration",
									"scope": 1174,
									"src": "9452:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 770,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "9452:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 773,
									"name": "deprecated",
									"nodeType": "VariableDeclaration",
									"scope": 1174,
									"src": "9488:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 772,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "9488:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 818,
										"nodeType": "Block",
										"src": "9900:248:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 784,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "9910:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 785,
														"name": "_initialSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 775,
														"src": "9925:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9910:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 787,
												"nodeType": "ExpressionStatement",
												"src": "9910:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 788,
														"name": "name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 765,
														"src": "9949:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 789,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 777,
														"src": "9956:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "9949:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 791,
												"nodeType": "ExpressionStatement",
												"src": "9949:12:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 792,
														"name": "symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "9971:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 793,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 779,
														"src": "9980:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "9971:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 795,
												"nodeType": "ExpressionStatement",
												"src": "9971:16:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 796,
														"name": "decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 769,
														"src": "9997:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 797,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 781,
														"src": "10008:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9997:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 799,
												"nodeType": "ExpressionStatement",
												"src": "9997:20:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 800,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "10027:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 802,
														"indexExpression": {
															"argumentTypes": null,
															"id": 801,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 99,
															"src": "10036:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10027:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 803,
														"name": "_initialSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 775,
														"src": "10045:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10027:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 805,
												"nodeType": "ExpressionStatement",
												"src": "10027:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 806,
														"name": "deprecated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 773,
														"src": "10069:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 807,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10082:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "10069:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 809,
												"nodeType": "ExpressionStatement",
												"src": "10069:18:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 812,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10114:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 811,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10106:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 813,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10106:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 814,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 99,
															"src": "10118:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 815,
															"name": "_initialSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 775,
															"src": "10125:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 810,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 168,
														"src": "10097:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10097:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 817,
												"nodeType": "ExpressionStatement",
												"src": "10097:43:0"
											}
										]
									},
									"id": 819,
									"implemented": true,
									"isConstructor": true,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "TetherToken",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 775,
												"name": "_initialSupply",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "9826:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 774,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9826:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 777,
												"name": "_name",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "9847:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string memory"
												},
												"typeName": {
													"id": 776,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9847:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string storage pointer"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 779,
												"name": "_symbol",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "9861:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string memory"
												},
												"typeName": {
													"id": 778,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9861:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string storage pointer"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 781,
												"name": "_decimals",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "9877:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 780,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9877:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9825:67:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9900:0:0"
									},
									"scope": 1174,
									"src": "9805:343:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 856,
										"nodeType": "Block",
										"src": "10295:254:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 833,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "10313:26:0",
															"subExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 829,
																	"name": "isBlackListed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 631,
																	"src": "10314:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 832,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 830,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1177,
																		"src": "10328:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 831,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "10328:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10314:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 828,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1195,
														"src": "10305:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10305:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 835,
												"nodeType": "ExpressionStatement",
												"src": "10305:35:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 836,
													"name": "deprecated",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 773,
													"src": "10354:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 854,
													"nodeType": "Block",
													"src": "10484:59:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 850,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 821,
																		"src": "10520:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 851,
																		"name": "_value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 823,
																		"src": "10525:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 848,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1216,
																		"src": "10505:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_super$_TetherToken_$1174",
																			"typeString": "contract super TetherToken"
																		}
																	},
																	"id": 849,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 334,
																	"src": "10505:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 852,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10505:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"functionReturnParameters": 827,
															"id": 853,
															"nodeType": "Return",
															"src": "10498:34:0"
														}
													]
												},
												"id": 855,
												"nodeType": "IfStatement",
												"src": "10350:193:0",
												"trueBody": {
													"id": 847,
													"nodeType": "Block",
													"src": "10366:112:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 841,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1177,
																			"src": "10443:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 842,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "10443:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 843,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 821,
																		"src": "10455:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 844,
																		"name": "_value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 823,
																		"src": "10460:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 838,
																				"name": "upgradedAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 771,
																				"src": "10409:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 837,
																			"name": "UpgradedStandardToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 757,
																			"src": "10387:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_UpgradedStandardToken_$757_$",
																				"typeString": "type(contract UpgradedStandardToken)"
																			}
																		},
																		"id": 839,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10387:38:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_UpgradedStandardToken_$757",
																			"typeString": "contract UpgradedStandardToken"
																		}
																	},
																	"id": 840,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transferByLegacy",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 736,
																	"src": "10387:55:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) external"
																	}
																},
																"id": 845,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10387:80:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"functionReturnParameters": 827,
															"id": 846,
															"nodeType": "Return",
															"src": "10380:87:0"
														}
													]
												}
											}
										]
									},
									"id": 857,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 826,
											"modifierName": {
												"argumentTypes": null,
												"id": 825,
												"name": "whenNotPaused",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 564,
												"src": "10281:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "10281:13:0"
										}
									],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 821,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "10248:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 820,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10248:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 823,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "10261:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 822,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10261:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10247:26:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10295:0:0"
									},
									"scope": 1174,
									"src": "10230:319:0",
									"stateMutability": "nonpayable",
									"superFunction": 334,
									"visibility": "public"
								},
								{
									"body": {
										"id": 897,
										"nodeType": "Block",
										"src": "10715:271:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 872,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "10733:21:0",
															"subExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 869,
																	"name": "isBlackListed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 631,
																	"src": "10734:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 871,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 870,
																	"name": "_from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 859,
																	"src": "10748:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10734:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 868,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1195,
														"src": "10725:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10725:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 874,
												"nodeType": "ExpressionStatement",
												"src": "10725:30:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 875,
													"name": "deprecated",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 773,
													"src": "10769:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 895,
													"nodeType": "Block",
													"src": "10910:70:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 890,
																		"name": "_from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 859,
																		"src": "10950:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 891,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 861,
																		"src": "10957:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 892,
																		"name": "_value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 863,
																		"src": "10962:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 888,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1216,
																		"src": "10931:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_super$_TetherToken_$1174",
																			"typeString": "contract super TetherToken"
																		}
																	},
																	"id": 889,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 481,
																	"src": "10931:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 893,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10931:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"functionReturnParameters": 867,
															"id": 894,
															"nodeType": "Return",
															"src": "10924:45:0"
														}
													]
												},
												"id": 896,
												"nodeType": "IfStatement",
												"src": "10765:215:0",
												"trueBody": {
													"id": 887,
													"nodeType": "Block",
													"src": "10781:123:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 880,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1177,
																			"src": "10862:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 881,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "10862:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 882,
																		"name": "_from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 859,
																		"src": "10874:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 883,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 861,
																		"src": "10881:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 884,
																		"name": "_value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 863,
																		"src": "10886:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 877,
																				"name": "upgradedAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 771,
																				"src": "10824:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 876,
																			"name": "UpgradedStandardToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 757,
																			"src": "10802:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_UpgradedStandardToken_$757_$",
																				"typeString": "type(contract UpgradedStandardToken)"
																			}
																		},
																		"id": 878,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10802:38:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_UpgradedStandardToken_$757",
																			"typeString": "contract UpgradedStandardToken"
																		}
																	},
																	"id": 879,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transferFromByLegacy",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 747,
																	"src": "10802:59:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,address,uint256) external"
																	}
																},
																"id": 885,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10802:91:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"functionReturnParameters": 867,
															"id": 886,
															"nodeType": "Return",
															"src": "10795:98:0"
														}
													]
												}
											}
										]
									},
									"id": 898,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 866,
											"modifierName": {
												"argumentTypes": null,
												"id": 865,
												"name": "whenNotPaused",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 564,
												"src": "10701:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "10701:13:0"
										}
									],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 859,
												"name": "_from",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "10653:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 858,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10653:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 861,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "10668:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 860,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 863,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "10681:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 862,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10681:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10652:41:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10715:0:0"
									},
									"scope": 1174,
									"src": "10631:355:0",
									"stateMutability": "nonpayable",
									"superFunction": 481,
									"visibility": "public"
								},
								{
									"body": {
										"id": 921,
										"nodeType": "Block",
										"src": "11131:175:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"id": 905,
													"name": "deprecated",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 773,
													"src": "11145:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 919,
													"nodeType": "Block",
													"src": "11248:52:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 916,
																		"name": "who",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 900,
																		"src": "11285:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 914,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1216,
																		"src": "11269:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_super$_TetherToken_$1174",
																			"typeString": "contract super TetherToken"
																		}
																	},
																	"id": 915,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 346,
																	"src": "11269:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 917,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11269:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 904,
															"id": 918,
															"nodeType": "Return",
															"src": "11262:27:0"
														}
													]
												},
												"id": 920,
												"nodeType": "IfStatement",
												"src": "11141:159:0",
												"trueBody": {
													"id": 913,
													"nodeType": "Block",
													"src": "11157:85:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 910,
																		"name": "who",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 900,
																		"src": "11227:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 907,
																				"name": "upgradedAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 771,
																				"src": "11200:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 906,
																			"name": "UpgradedStandardToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 757,
																			"src": "11178:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_UpgradedStandardToken_$757_$",
																				"typeString": "type(contract UpgradedStandardToken)"
																			}
																		},
																		"id": 908,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11178:38:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_UpgradedStandardToken_$757",
																			"typeString": "contract UpgradedStandardToken"
																		}
																	},
																	"id": 909,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 346,
																	"src": "11178:48:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 911,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11178:53:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 904,
															"id": 912,
															"nodeType": "Return",
															"src": "11171:60:0"
														}
													]
												}
											}
										]
									},
									"id": 922,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"name": "who",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "11087:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 899,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11087:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11086:13:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 903,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "11125:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 902,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11125:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11124:6:0"
									},
									"scope": 1174,
									"src": "11068:238:0",
									"stateMutability": "view",
									"superFunction": 346,
									"visibility": "public"
								},
								{
									"body": {
										"id": 954,
										"nodeType": "Block",
										"src": "11467:217:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"id": 934,
													"name": "deprecated",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 773,
													"src": "11481:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 952,
													"nodeType": "Block",
													"src": "11615:63:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 948,
																		"name": "_spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 924,
																		"src": "11650:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 949,
																		"name": "_value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 926,
																		"src": "11660:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 946,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1216,
																		"src": "11636:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_super$_TetherToken_$1174",
																			"typeString": "contract super TetherToken"
																		}
																	},
																	"id": 947,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "approve",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 529,
																	"src": "11636:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 950,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11636:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"functionReturnParameters": 933,
															"id": 951,
															"nodeType": "Return",
															"src": "11629:38:0"
														}
													]
												},
												"id": 953,
												"nodeType": "IfStatement",
												"src": "11477:201:0",
												"trueBody": {
													"id": 945,
													"nodeType": "Block",
													"src": "11493:116:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 939,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1177,
																			"src": "11569:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 940,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "11569:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 941,
																		"name": "_spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 924,
																		"src": "11581:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 942,
																		"name": "_value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 926,
																		"src": "11591:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 936,
																				"name": "upgradedAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 771,
																				"src": "11536:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 935,
																			"name": "UpgradedStandardToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 757,
																			"src": "11514:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_UpgradedStandardToken_$757_$",
																				"typeString": "type(contract UpgradedStandardToken)"
																			}
																		},
																		"id": 937,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11514:38:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_UpgradedStandardToken_$757",
																			"typeString": "contract UpgradedStandardToken"
																		}
																	},
																	"id": 938,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "approveByLegacy",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 756,
																	"src": "11514:54:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) external"
																	}
																},
																"id": 943,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11514:84:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"functionReturnParameters": 933,
															"id": 944,
															"nodeType": "Return",
															"src": "11507:91:0"
														}
													]
												}
											}
										]
									},
									"id": 955,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_rational_64_by_1",
														"typeString": "int_const 64"
													},
													"id": 931,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 929,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11459:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "3332",
														"id": 930,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11463:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "11459:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_64_by_1",
														"typeString": "int_const 64"
													}
												}
											],
											"id": 932,
											"modifierName": {
												"argumentTypes": null,
												"id": 928,
												"name": "onlyPayloadSize",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 240,
												"src": "11443:15:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_uint256_$",
													"typeString": "modifier (uint256)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "11443:23:0"
										}
									],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 924,
												"name": "_spender",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "11405:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 923,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11405:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 926,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "11423:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 925,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11423:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11404:31:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 933,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11467:0:0"
									},
									"scope": 1174,
									"src": "11388:296:0",
									"stateMutability": "nonpayable",
									"superFunction": 529,
									"visibility": "public"
								},
								{
									"body": {
										"id": 982,
										"nodeType": "Block",
										"src": "11860:193:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"id": 964,
													"name": "deprecated",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 773,
													"src": "11874:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 980,
													"nodeType": "Block",
													"src": "11982:65:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 976,
																		"name": "_owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 957,
																		"src": "12019:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 977,
																		"name": "_spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 959,
																		"src": "12027:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 974,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1216,
																		"src": "12003:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_super$_TetherToken_$1174",
																			"typeString": "contract super TetherToken"
																		}
																	},
																	"id": 975,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "allowance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 545,
																	"src": "12003:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 978,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12003:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 963,
															"id": 979,
															"nodeType": "Return",
															"src": "11996:40:0"
														}
													]
												},
												"id": 981,
												"nodeType": "IfStatement",
												"src": "11870:177:0",
												"trueBody": {
													"id": 973,
													"nodeType": "Block",
													"src": "11886:90:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 969,
																		"name": "_owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 957,
																		"src": "11948:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 970,
																		"name": "_spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 959,
																		"src": "11956:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 966,
																				"name": "upgradedAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 771,
																				"src": "11921:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 965,
																			"name": "StandardToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 546,
																			"src": "11907:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_StandardToken_$546_$",
																				"typeString": "type(contract StandardToken)"
																			}
																		},
																		"id": 967,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11907:30:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_StandardToken_$546",
																			"typeString": "contract StandardToken"
																		}
																	},
																	"id": 968,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "allowance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 545,
																	"src": "11907:40:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view external returns (uint256)"
																	}
																},
																"id": 971,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11907:58:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 963,
															"id": 972,
															"nodeType": "Return",
															"src": "11900:65:0"
														}
													]
												}
											}
										]
									},
									"id": 983,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 957,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "11785:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 956,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11785:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 959,
												"name": "_spender",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "11801:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 958,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11801:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11784:34:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 962,
												"name": "remaining",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "11844:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 961,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11844:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11843:16:0"
									},
									"scope": 1174,
									"src": "11766:287:0",
									"stateMutability": "view",
									"superFunction": 545,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1002,
										"nodeType": "Block",
										"src": "12178:115:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 990,
														"name": "deprecated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 773,
														"src": "12188:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 991,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12201:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "12188:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 993,
												"nodeType": "ExpressionStatement",
												"src": "12188:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 994,
														"name": "upgradedAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 771,
														"src": "12215:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 995,
														"name": "_upgradedAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 985,
														"src": "12233:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12215:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 997,
												"nodeType": "ExpressionStatement",
												"src": "12215:34:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 999,
															"name": "_upgradedAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 985,
															"src": "12269:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 998,
														"name": "Deprecate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1167,
														"src": "12259:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12259:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1001,
												"nodeType": "ExpressionStatement",
												"src": "12259:27:0"
											}
										]
									},
									"id": 1003,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 988,
											"modifierName": {
												"argumentTypes": null,
												"id": 987,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 119,
												"src": "12168:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "12168:9:0"
										}
									],
									"name": "deprecate",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 985,
												"name": "_upgradedAddress",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "12135:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 984,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12135:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12134:26:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 989,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12178:0:0"
									},
									"scope": 1174,
									"src": "12116:177:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1020,
										"nodeType": "Block",
										"src": "12410:158:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"id": 1008,
													"name": "deprecated",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 773,
													"src": "12424:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1018,
													"nodeType": "Block",
													"src": "12518:44:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1016,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 141,
																"src": "12539:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1007,
															"id": 1017,
															"nodeType": "Return",
															"src": "12532:19:0"
														}
													]
												},
												"id": 1019,
												"nodeType": "IfStatement",
												"src": "12420:142:0",
												"trueBody": {
													"id": 1015,
													"nodeType": "Block",
													"src": "12436:76:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1010,
																				"name": "upgradedAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 771,
																				"src": "12471:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1009,
																			"name": "StandardToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 546,
																			"src": "12457:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_StandardToken_$546_$",
																				"typeString": "type(contract StandardToken)"
																			}
																		},
																		"id": 1011,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12457:30:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_StandardToken_$546",
																			"typeString": "contract StandardToken"
																		}
																	},
																	"id": 1012,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "totalSupply",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 146,
																	"src": "12457:42:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																		"typeString": "function () view external returns (uint256)"
																	}
																},
																"id": 1013,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12457:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1007,
															"id": 1014,
															"nodeType": "Return",
															"src": "12450:51:0"
														}
													]
												}
											}
										]
									},
									"id": 1021,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1004,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12376:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 1007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1006,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "12404:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1005,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "12404:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12403:6:0"
									},
									"scope": 1174,
									"src": "12356:212:0",
									"stateMutability": "view",
									"superFunction": 146,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1070,
										"nodeType": "Block",
										"src": "12771:260:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1033,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1031,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1029,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 141,
																	"src": "12789:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1030,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1023,
																	"src": "12804:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12789:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1032,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 141,
																"src": "12813:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12789:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1028,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1195,
														"src": "12781:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12781:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1035,
												"nodeType": "ExpressionStatement",
												"src": "12781:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1045,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1041,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1037,
																		"name": "balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 216,
																		"src": "12844:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1039,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1038,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 99,
																		"src": "12853:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "12844:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1040,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1023,
																	"src": "12862:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12844:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1042,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 216,
																	"src": "12871:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1044,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1043,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 99,
																	"src": "12880:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12871:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12844:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1036,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1195,
														"src": "12836:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12836:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1047,
												"nodeType": "ExpressionStatement",
												"src": "12836:51:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1052,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1048,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "12898:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1050,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1049,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 99,
															"src": "12907:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12898:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1051,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1023,
														"src": "12917:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12898:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1053,
												"nodeType": "ExpressionStatement",
												"src": "12898:25:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1054,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "12933:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1055,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1023,
														"src": "12949:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12933:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1057,
												"nodeType": "ExpressionStatement",
												"src": "12933:22:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1060,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12983:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1059,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12975:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 1061,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12975:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1062,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 99,
															"src": "12987:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1063,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1023,
															"src": "12994:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1058,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 168,
														"src": "12966:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1064,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12966:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1065,
												"nodeType": "ExpressionStatement",
												"src": "12966:35:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1067,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1023,
															"src": "13017:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1066,
														"name": "Issue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1159,
														"src": "13011:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13011:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1069,
												"nodeType": "ExpressionStatement",
												"src": "13011:13:0"
											}
										]
									},
									"id": 1071,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 1026,
											"modifierName": {
												"argumentTypes": null,
												"id": 1025,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 119,
												"src": "12761:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "12761:9:0"
										}
									],
									"name": "issue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1023,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1071,
												"src": "12741:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1022,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "12741:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12740:13:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12771:0:0"
									},
									"scope": 1174,
									"src": "12726:305:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1114,
										"nodeType": "Block",
										"src": "13485:229:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1081,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1079,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 141,
																"src": "13503:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1080,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1073,
																"src": "13519:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13503:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1078,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1195,
														"src": "13495:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13495:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1083,
												"nodeType": "ExpressionStatement",
												"src": "13495:31:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1089,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1085,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 216,
																	"src": "13544:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1087,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1086,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 99,
																	"src": "13553:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "13544:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1088,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1073,
																"src": "13563:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13544:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1084,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1195,
														"src": "13536:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1090,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13536:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1091,
												"nodeType": "ExpressionStatement",
												"src": "13536:34:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1094,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1092,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "13581:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1093,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1073,
														"src": "13597:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13581:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1095,
												"nodeType": "ExpressionStatement",
												"src": "13581:22:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1096,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "13613:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1098,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1097,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 99,
															"src": "13622:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13613:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1099,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1073,
														"src": "13632:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13613:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1101,
												"nodeType": "ExpressionStatement",
												"src": "13613:25:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1103,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 99,
															"src": "13658:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1105,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13672:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1104,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13664:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 1106,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13664:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1107,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1073,
															"src": "13676:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1102,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 168,
														"src": "13649:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13649:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1109,
												"nodeType": "ExpressionStatement",
												"src": "13649:34:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1111,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1073,
															"src": "13700:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1110,
														"name": "Redeem",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1163,
														"src": "13693:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13693:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1113,
												"nodeType": "ExpressionStatement",
												"src": "13693:14:0"
											}
										]
									},
									"id": 1115,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 1076,
											"modifierName": {
												"argumentTypes": null,
												"id": 1075,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 119,
												"src": "13475:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "13475:9:0"
										}
									],
									"name": "redeem",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1073,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1115,
												"src": "13455:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1072,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "13455:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13454:13:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 1077,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13485:0:0"
									},
									"scope": 1174,
									"src": "13439:275:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1154,
										"nodeType": "Block",
										"src": "13793:305:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1127,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1125,
																"name": "newBasisPoints",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1117,
																"src": "13899:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "353030",
																"id": 1126,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13916:3:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_500_by_1",
																	"typeString": "int_const 500"
																},
																"value": "500"
															},
															"src": "13899:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1124,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1195,
														"src": "13891:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13891:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1129,
												"nodeType": "ExpressionStatement",
												"src": "13891:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1131,
																"name": "newMaxFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1119,
																"src": "13938:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "3530",
																"id": 1132,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13949:2:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_50_by_1",
																	"typeString": "int_const 50"
																},
																"value": "50"
															},
															"src": "13938:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1130,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1195,
														"src": "13930:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13930:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1135,
												"nodeType": "ExpressionStatement",
												"src": "13930:22:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1136,
														"name": "basisPointsRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 219,
														"src": "13963:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1137,
														"name": "newBasisPoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1117,
														"src": "13981:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13963:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1139,
												"nodeType": "ExpressionStatement",
												"src": "13963:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1140,
														"name": "maximumFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 222,
														"src": "14005:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1145,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"hexValue": "3130",
																	"id": 1143,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14032:2:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1144,
																	"name": "decimals",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 769,
																	"src": "14036:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14032:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 1141,
																"name": "newMaxFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1119,
																"src": "14018:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1142,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "mul",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 34,
															"src": "14018:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1146,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14018:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14005:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1148,
												"nodeType": "ExpressionStatement",
												"src": "14005:40:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1150,
															"name": "basisPointsRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "14063:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1151,
															"name": "maximumFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 222,
															"src": "14080:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1149,
														"name": "Params",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1173,
														"src": "14056:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14056:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1153,
												"nodeType": "ExpressionStatement",
												"src": "14056:35:0"
											}
										]
									},
									"id": 1155,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 1122,
											"modifierName": {
												"argumentTypes": null,
												"id": 1121,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 119,
												"src": "13783:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "13783:9:0"
										}
									],
									"name": "setParams",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1117,
												"name": "newBasisPoints",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "13739:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1116,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "13739:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1119,
												"name": "newMaxFee",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "13760:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1118,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "13760:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13738:37:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 1123,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13793:0:0"
									},
									"scope": 1174,
									"src": "13720:378:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 1159,
									"name": "Issue",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1157,
												"indexed": false,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "14156:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1156,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "14156:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14155:13:0"
									},
									"src": "14144:25:0"
								},
								{
									"anonymous": false,
									"id": 1163,
									"name": "Redeem",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1161,
												"indexed": false,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "14227:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1160,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "14227:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14226:13:0"
									},
									"src": "14214:26:0"
								},
								{
									"anonymous": false,
									"id": 1167,
									"name": "Deprecate",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1165,
												"indexed": false,
												"name": "newAddress",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "14304:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14304:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14303:20:0"
									},
									"src": "14288:36:0"
								},
								{
									"anonymous": false,
									"id": 1173,
									"name": "Params",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1169,
												"indexed": false,
												"name": "feeBasisPoints",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "14384:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1168,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "14384:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1171,
												"indexed": false,
												"name": "maxFee",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "14405:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1170,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "14405:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14383:34:0"
									},
									"src": "14371:47:0"
								}
							],
							"scope": 1175,
							"src": "9310:5110:0"
						}
					],
					"src": "67:14353:0"
				},
				"id": 0,
				"legacyAST": {
					"attributes": {
						"absolutePath": "contracts/stablecoin/stablecoin_contract.sol",
						"exportedSymbols": {
							"BasicToken": [
								347
							],
							"BlackList": [
								725
							],
							"Ownable": [
								139
							],
							"Pausable": [
								603
							],
							"SafeMath": [
								97
							],
							"StandardToken": [
								546
							],
							"TetherToken": [
								1174
							],
							"UpgradedStandardToken": [
								757
							],
							"ZRC20": [
								205
							],
							"ZRC20Basic": [
								169
							]
						}
					},
					"children": [
						{
							"attributes": {
								"literals": [
									"solidity",
									"^",
									"0.4",
									".17"
								]
							},
							"id": 1,
							"name": "PragmaDirective",
							"src": "67:24:0"
						},
						{
							"attributes": {
								"baseContracts": [
									null
								],
								"contractDependencies": [
									null
								],
								"contractKind": "library",
								"documentation": "@title SafeMath\n@dev Math operations with safety checks that throw on error",
								"fullyImplemented": true,
								"linearizedBaseContracts": [
									97
								],
								"name": "SafeMath",
								"scope": 1175
							},
							"children": [
								{
									"attributes": {
										"constant": true,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "mul",
										"payable": false,
										"scope": 97,
										"stateMutability": "pure",
										"superFunction": null,
										"visibility": "internal"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "a",
														"scope": 34,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 2,
															"name": "ElementaryTypeName",
															"src": "219:7:0"
														}
													],
													"id": 3,
													"name": "VariableDeclaration",
													"src": "219:9:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "b",
														"scope": 34,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 4,
															"name": "ElementaryTypeName",
															"src": "230:7:0"
														}
													],
													"id": 5,
													"name": "VariableDeclaration",
													"src": "230:9:0"
												}
											],
											"id": 6,
											"name": "ParameterList",
											"src": "218:22:0"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 34,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 7,
															"name": "ElementaryTypeName",
															"src": "264:7:0"
														}
													],
													"id": 8,
													"name": "VariableDeclaration",
													"src": "264:7:0"
												}
											],
											"id": 9,
											"name": "ParameterList",
											"src": "263:9:0"
										},
										{
											"children": [
												{
													"attributes": {
														"falseBody": null
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "==",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 3,
																		"type": "uint256",
																		"value": "a"
																	},
																	"id": 10,
																	"name": "Identifier",
																	"src": "287:1:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "30",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "number",
																		"type": "int_const 0",
																		"value": "0"
																	},
																	"id": 11,
																	"name": "Literal",
																	"src": "292:1:0"
																}
															],
															"id": 12,
															"name": "BinaryOperation",
															"src": "287:6:0"
														},
														{
															"children": [
																{
																	"attributes": {
																		"functionReturnParameters": 9
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"hexvalue": "30",
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"subdenomination": null,
																				"token": "number",
																				"type": "int_const 0",
																				"value": "0"
																			},
																			"id": 13,
																			"name": "Literal",
																			"src": "316:1:0"
																		}
																	],
																	"id": 14,
																	"name": "Return",
																	"src": "309:8:0"
																}
															],
															"id": 15,
															"name": "Block",
															"src": "295:33:0"
														}
													],
													"id": 16,
													"name": "IfStatement",
													"src": "283:45:0"
												},
												{
													"attributes": {
														"assignments": [
															18
														]
													},
													"children": [
														{
															"attributes": {
																"constant": false,
																"name": "c",
																"scope": 34,
																"stateVariable": false,
																"storageLocation": "default",
																"type": "uint256",
																"value": null,
																"visibility": "internal"
															},
															"children": [
																{
																	"attributes": {
																		"name": "uint256",
																		"type": "uint256"
																	},
																	"id": 17,
																	"name": "ElementaryTypeName",
																	"src": "337:7:0"
																}
															],
															"id": 18,
															"name": "VariableDeclaration",
															"src": "337:9:0"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "*",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 3,
																		"type": "uint256",
																		"value": "a"
																	},
																	"id": 19,
																	"name": "Identifier",
																	"src": "349:1:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 5,
																		"type": "uint256",
																		"value": "b"
																	},
																	"id": 20,
																	"name": "Identifier",
																	"src": "353:1:0"
																}
															],
															"id": 21,
															"name": "BinaryOperation",
															"src": "349:5:0"
														}
													],
													"id": 22,
													"name": "VariableDeclarationStatement",
													"src": "337:17:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1194,
																		"type": "function (bool) pure",
																		"value": "assert"
																	},
																	"id": 23,
																	"name": "Identifier",
																	"src": "364:6:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "==",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"operator": "/",
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 18,
																						"type": "uint256",
																						"value": "c"
																					},
																					"id": 24,
																					"name": "Identifier",
																					"src": "371:1:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 3,
																						"type": "uint256",
																						"value": "a"
																					},
																					"id": 25,
																					"name": "Identifier",
																					"src": "375:1:0"
																				}
																			],
																			"id": 26,
																			"name": "BinaryOperation",
																			"src": "371:5:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 5,
																				"type": "uint256",
																				"value": "b"
																			},
																			"id": 27,
																			"name": "Identifier",
																			"src": "380:1:0"
																		}
																	],
																	"id": 28,
																	"name": "BinaryOperation",
																	"src": "371:10:0"
																}
															],
															"id": 29,
															"name": "FunctionCall",
															"src": "364:18:0"
														}
													],
													"id": 30,
													"name": "ExpressionStatement",
													"src": "364:18:0"
												},
												{
													"attributes": {
														"functionReturnParameters": 9
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"overloadedDeclarations": [
																	null
																],
																"referencedDeclaration": 18,
																"type": "uint256",
																"value": "c"
															},
															"id": 31,
															"name": "Identifier",
															"src": "399:1:0"
														}
													],
													"id": 32,
													"name": "Return",
													"src": "392:8:0"
												}
											],
											"id": 33,
											"name": "Block",
											"src": "273:134:0"
										}
									],
									"id": 34,
									"name": "FunctionDefinition",
									"src": "206:201:0"
								},
								{
									"attributes": {
										"constant": true,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "div",
										"payable": false,
										"scope": 97,
										"stateMutability": "pure",
										"superFunction": null,
										"visibility": "internal"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "a",
														"scope": 52,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 35,
															"name": "ElementaryTypeName",
															"src": "426:7:0"
														}
													],
													"id": 36,
													"name": "VariableDeclaration",
													"src": "426:9:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "b",
														"scope": 52,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 37,
															"name": "ElementaryTypeName",
															"src": "437:7:0"
														}
													],
													"id": 38,
													"name": "VariableDeclaration",
													"src": "437:9:0"
												}
											],
											"id": 39,
											"name": "ParameterList",
											"src": "425:22:0"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 52,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 40,
															"name": "ElementaryTypeName",
															"src": "471:7:0"
														}
													],
													"id": 41,
													"name": "VariableDeclaration",
													"src": "471:7:0"
												}
											],
											"id": 42,
											"name": "ParameterList",
											"src": "470:9:0"
										},
										{
											"children": [
												{
													"attributes": {
														"assignments": [
															44
														]
													},
													"children": [
														{
															"attributes": {
																"constant": false,
																"name": "c",
																"scope": 52,
																"stateVariable": false,
																"storageLocation": "default",
																"type": "uint256",
																"value": null,
																"visibility": "internal"
															},
															"children": [
																{
																	"attributes": {
																		"name": "uint256",
																		"type": "uint256"
																	},
																	"id": 43,
																	"name": "ElementaryTypeName",
																	"src": "568:7:0"
																}
															],
															"id": 44,
															"name": "VariableDeclaration",
															"src": "568:9:0"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "/",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 36,
																		"type": "uint256",
																		"value": "a"
																	},
																	"id": 45,
																	"name": "Identifier",
																	"src": "580:1:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 38,
																		"type": "uint256",
																		"value": "b"
																	},
																	"id": 46,
																	"name": "Identifier",
																	"src": "584:1:0"
																}
															],
															"id": 47,
															"name": "BinaryOperation",
															"src": "580:5:0"
														}
													],
													"id": 48,
													"name": "VariableDeclarationStatement",
													"src": "568:17:0"
												},
												{
													"attributes": {
														"functionReturnParameters": 42
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"overloadedDeclarations": [
																	null
																],
																"referencedDeclaration": 44,
																"type": "uint256",
																"value": "c"
															},
															"id": 49,
															"name": "Identifier",
															"src": "688:1:0"
														}
													],
													"id": 50,
													"name": "Return",
													"src": "681:8:0"
												}
											],
											"id": 51,
											"name": "Block",
											"src": "480:216:0"
										}
									],
									"id": 52,
									"name": "FunctionDefinition",
									"src": "413:283:0"
								},
								{
									"attributes": {
										"constant": true,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "sub",
										"payable": false,
										"scope": 97,
										"stateMutability": "pure",
										"superFunction": null,
										"visibility": "internal"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "a",
														"scope": 72,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 53,
															"name": "ElementaryTypeName",
															"src": "715:7:0"
														}
													],
													"id": 54,
													"name": "VariableDeclaration",
													"src": "715:9:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "b",
														"scope": 72,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 55,
															"name": "ElementaryTypeName",
															"src": "726:7:0"
														}
													],
													"id": 56,
													"name": "VariableDeclaration",
													"src": "726:9:0"
												}
											],
											"id": 57,
											"name": "ParameterList",
											"src": "714:22:0"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 72,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 58,
															"name": "ElementaryTypeName",
															"src": "760:7:0"
														}
													],
													"id": 59,
													"name": "VariableDeclaration",
													"src": "760:7:0"
												}
											],
											"id": 60,
											"name": "ParameterList",
											"src": "759:9:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1194,
																		"type": "function (bool) pure",
																		"value": "assert"
																	},
																	"id": 61,
																	"name": "Identifier",
																	"src": "779:6:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "<=",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 56,
																				"type": "uint256",
																				"value": "b"
																			},
																			"id": 62,
																			"name": "Identifier",
																			"src": "786:1:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 54,
																				"type": "uint256",
																				"value": "a"
																			},
																			"id": 63,
																			"name": "Identifier",
																			"src": "791:1:0"
																		}
																	],
																	"id": 64,
																	"name": "BinaryOperation",
																	"src": "786:6:0"
																}
															],
															"id": 65,
															"name": "FunctionCall",
															"src": "779:14:0"
														}
													],
													"id": 66,
													"name": "ExpressionStatement",
													"src": "779:14:0"
												},
												{
													"attributes": {
														"functionReturnParameters": 60
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "-",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 54,
																		"type": "uint256",
																		"value": "a"
																	},
																	"id": 67,
																	"name": "Identifier",
																	"src": "810:1:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 56,
																		"type": "uint256",
																		"value": "b"
																	},
																	"id": 68,
																	"name": "Identifier",
																	"src": "814:1:0"
																}
															],
															"id": 69,
															"name": "BinaryOperation",
															"src": "810:5:0"
														}
													],
													"id": 70,
													"name": "Return",
													"src": "803:12:0"
												}
											],
											"id": 71,
											"name": "Block",
											"src": "769:53:0"
										}
									],
									"id": 72,
									"name": "FunctionDefinition",
									"src": "702:120:0"
								},
								{
									"attributes": {
										"constant": true,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "add",
										"payable": false,
										"scope": 97,
										"stateMutability": "pure",
										"superFunction": null,
										"visibility": "internal"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "a",
														"scope": 96,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 73,
															"name": "ElementaryTypeName",
															"src": "841:7:0"
														}
													],
													"id": 74,
													"name": "VariableDeclaration",
													"src": "841:9:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "b",
														"scope": 96,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 75,
															"name": "ElementaryTypeName",
															"src": "852:7:0"
														}
													],
													"id": 76,
													"name": "VariableDeclaration",
													"src": "852:9:0"
												}
											],
											"id": 77,
											"name": "ParameterList",
											"src": "840:22:0"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 96,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 78,
															"name": "ElementaryTypeName",
															"src": "886:7:0"
														}
													],
													"id": 79,
													"name": "VariableDeclaration",
													"src": "886:7:0"
												}
											],
											"id": 80,
											"name": "ParameterList",
											"src": "885:9:0"
										},
										{
											"children": [
												{
													"attributes": {
														"assignments": [
															82
														]
													},
													"children": [
														{
															"attributes": {
																"constant": false,
																"name": "c",
																"scope": 96,
																"stateVariable": false,
																"storageLocation": "default",
																"type": "uint256",
																"value": null,
																"visibility": "internal"
															},
															"children": [
																{
																	"attributes": {
																		"name": "uint256",
																		"type": "uint256"
																	},
																	"id": 81,
																	"name": "ElementaryTypeName",
																	"src": "905:7:0"
																}
															],
															"id": 82,
															"name": "VariableDeclaration",
															"src": "905:9:0"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "+",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 74,
																		"type": "uint256",
																		"value": "a"
																	},
																	"id": 83,
																	"name": "Identifier",
																	"src": "917:1:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 76,
																		"type": "uint256",
																		"value": "b"
																	},
																	"id": 84,
																	"name": "Identifier",
																	"src": "921:1:0"
																}
															],
															"id": 85,
															"name": "BinaryOperation",
															"src": "917:5:0"
														}
													],
													"id": 86,
													"name": "VariableDeclarationStatement",
													"src": "905:17:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1194,
																		"type": "function (bool) pure",
																		"value": "assert"
																	},
																	"id": 87,
																	"name": "Identifier",
																	"src": "932:6:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": ">=",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 82,
																				"type": "uint256",
																				"value": "c"
																			},
																			"id": 88,
																			"name": "Identifier",
																			"src": "939:1:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 74,
																				"type": "uint256",
																				"value": "a"
																			},
																			"id": 89,
																			"name": "Identifier",
																			"src": "944:1:0"
																		}
																	],
																	"id": 90,
																	"name": "BinaryOperation",
																	"src": "939:6:0"
																}
															],
															"id": 91,
															"name": "FunctionCall",
															"src": "932:14:0"
														}
													],
													"id": 92,
													"name": "ExpressionStatement",
													"src": "932:14:0"
												},
												{
													"attributes": {
														"functionReturnParameters": 80
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"overloadedDeclarations": [
																	null
																],
																"referencedDeclaration": 82,
																"type": "uint256",
																"value": "c"
															},
															"id": 93,
															"name": "Identifier",
															"src": "963:1:0"
														}
													],
													"id": 94,
													"name": "Return",
													"src": "956:8:0"
												}
											],
											"id": 95,
											"name": "Block",
											"src": "895:76:0"
										}
									],
									"id": 96,
									"name": "FunctionDefinition",
									"src": "828:143:0"
								}
							],
							"id": 97,
							"name": "ContractDefinition",
							"src": "183:790:0"
						},
						{
							"attributes": {
								"baseContracts": [
									null
								],
								"contractDependencies": [
									null
								],
								"contractKind": "contract",
								"documentation": "@title Ownable\n@dev The Ownable contract has an owner address, and provides basic authorization control\nfunctions, this simplifies the implementation of \"user permissions\".",
								"fullyImplemented": true,
								"linearizedBaseContracts": [
									139
								],
								"name": "Ownable",
								"scope": 1175
							},
							"children": [
								{
									"attributes": {
										"constant": false,
										"name": "owner",
										"scope": 139,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "address",
										"value": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"name": "address",
												"type": "address"
											},
											"id": 98,
											"name": "ElementaryTypeName",
											"src": "1188:7:0"
										}
									],
									"id": 99,
									"name": "VariableDeclaration",
									"src": "1188:20:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": true,
										"modifiers": [
											null
										],
										"name": "Ownable",
										"payable": false,
										"scope": 139,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 100,
											"name": "ParameterList",
											"src": "1358:2:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 101,
											"name": "ParameterList",
											"src": "1368:0:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "address"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 99,
																		"type": "address",
																		"value": "owner"
																	},
																	"id": 102,
																	"name": "Identifier",
																	"src": "1378:5:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "sender",
																		"referencedDeclaration": null,
																		"type": "address"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1177,
																				"type": "msg",
																				"value": "msg"
																			},
																			"id": 103,
																			"name": "Identifier",
																			"src": "1386:3:0"
																		}
																	],
																	"id": 104,
																	"name": "MemberAccess",
																	"src": "1386:10:0"
																}
															],
															"id": 105,
															"name": "Assignment",
															"src": "1378:18:0"
														}
													],
													"id": 106,
													"name": "ExpressionStatement",
													"src": "1378:18:0"
												}
											],
											"id": 107,
											"name": "Block",
											"src": "1368:35:0"
										}
									],
									"id": 108,
									"name": "FunctionDefinition",
									"src": "1342:61:0"
								},
								{
									"attributes": {
										"name": "onlyOwner",
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 109,
											"name": "ParameterList",
											"src": "1511:2:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1195,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 110,
																	"name": "Identifier",
																	"src": "1524:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "==",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "sender",
																				"referencedDeclaration": null,
																				"type": "address"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 1177,
																						"type": "msg",
																						"value": "msg"
																					},
																					"id": 111,
																					"name": "Identifier",
																					"src": "1532:3:0"
																				}
																			],
																			"id": 112,
																			"name": "MemberAccess",
																			"src": "1532:10:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 99,
																				"type": "address",
																				"value": "owner"
																			},
																			"id": 113,
																			"name": "Identifier",
																			"src": "1546:5:0"
																		}
																	],
																	"id": 114,
																	"name": "BinaryOperation",
																	"src": "1532:19:0"
																}
															],
															"id": 115,
															"name": "FunctionCall",
															"src": "1524:28:0"
														}
													],
													"id": 116,
													"name": "ExpressionStatement",
													"src": "1524:28:0"
												},
												{
													"id": 117,
													"name": "PlaceholderStatement",
													"src": "1562:1:0"
												}
											],
											"id": 118,
											"name": "Block",
											"src": "1514:56:0"
										}
									],
									"id": 119,
									"name": "ModifierDefinition",
									"src": "1493:77:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "transferOwnership",
										"payable": false,
										"scope": 139,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "newOwner",
														"scope": 138,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 120,
															"name": "ElementaryTypeName",
															"src": "1765:7:0"
														}
													],
													"id": 121,
													"name": "VariableDeclaration",
													"src": "1765:16:0"
												}
											],
											"id": 122,
											"name": "ParameterList",
											"src": "1764:18:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 125,
											"name": "ParameterList",
											"src": "1800:0:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 119,
														"type": "modifier ()",
														"value": "onlyOwner"
													},
													"id": 123,
													"name": "Identifier",
													"src": "1790:9:0"
												}
											],
											"id": 124,
											"name": "ModifierInvocation",
											"src": "1790:9:0"
										},
										{
											"children": [
												{
													"attributes": {
														"falseBody": null
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "!=",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 121,
																		"type": "address",
																		"value": "newOwner"
																	},
																	"id": 126,
																	"name": "Identifier",
																	"src": "1814:8:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"isStructConstructorCall": false,
																		"lValueRequested": false,
																		"names": [
																			null
																		],
																		"type": "address",
																		"type_conversion": true
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"type": "type(address)",
																				"value": "address"
																			},
																			"id": 127,
																			"name": "ElementaryTypeNameExpression",
																			"src": "1826:7:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"hexvalue": "30",
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"subdenomination": null,
																				"token": "number",
																				"type": "int_const 0",
																				"value": "0"
																			},
																			"id": 128,
																			"name": "Literal",
																			"src": "1834:1:0"
																		}
																	],
																	"id": 129,
																	"name": "FunctionCall",
																	"src": "1826:10:0"
																}
															],
															"id": 130,
															"name": "BinaryOperation",
															"src": "1814:22:0"
														},
														{
															"children": [
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"operator": "=",
																				"type": "address"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 99,
																						"type": "address",
																						"value": "owner"
																					},
																					"id": 131,
																					"name": "Identifier",
																					"src": "1852:5:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 121,
																						"type": "address",
																						"value": "newOwner"
																					},
																					"id": 132,
																					"name": "Identifier",
																					"src": "1860:8:0"
																				}
																			],
																			"id": 133,
																			"name": "Assignment",
																			"src": "1852:16:0"
																		}
																	],
																	"id": 134,
																	"name": "ExpressionStatement",
																	"src": "1852:16:0"
																}
															],
															"id": 135,
															"name": "Block",
															"src": "1838:41:0"
														}
													],
													"id": 136,
													"name": "IfStatement",
													"src": "1810:69:0"
												}
											],
											"id": 137,
											"name": "Block",
											"src": "1800:85:0"
										}
									],
									"id": 138,
									"name": "FunctionDefinition",
									"src": "1738:147:0"
								}
							],
							"id": 139,
							"name": "ContractDefinition",
							"src": "1165:723:0"
						},
						{
							"attributes": {
								"baseContracts": [
									null
								],
								"contractDependencies": [
									null
								],
								"contractKind": "contract",
								"documentation": null,
								"fullyImplemented": false,
								"linearizedBaseContracts": [
									169
								],
								"name": "ZRC20Basic",
								"scope": 1175
							},
							"children": [
								{
									"attributes": {
										"constant": false,
										"name": "_totalSupply",
										"scope": 169,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "uint256",
										"value": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"name": "uint",
												"type": "uint256"
											},
											"id": 140,
											"name": "ElementaryTypeName",
											"src": "1917:4:0"
										}
									],
									"id": 141,
									"name": "VariableDeclaration",
									"src": "1917:24:0"
								},
								{
									"attributes": {
										"body": null,
										"constant": true,
										"implemented": false,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "totalSupply",
										"payable": false,
										"scope": 169,
										"stateMutability": "view",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 142,
											"name": "ParameterList",
											"src": "1967:2:0"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 146,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 143,
															"name": "ElementaryTypeName",
															"src": "1995:4:0"
														}
													],
													"id": 144,
													"name": "VariableDeclaration",
													"src": "1995:4:0"
												}
											],
											"id": 145,
											"name": "ParameterList",
											"src": "1994:6:0"
										}
									],
									"id": 146,
									"name": "FunctionDefinition",
									"src": "1947:54:0"
								},
								{
									"attributes": {
										"body": null,
										"constant": true,
										"implemented": false,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "balanceOf",
										"payable": false,
										"scope": 169,
										"stateMutability": "view",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "who",
														"scope": 153,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 147,
															"name": "ElementaryTypeName",
															"src": "2025:7:0"
														}
													],
													"id": 148,
													"name": "VariableDeclaration",
													"src": "2025:11:0"
												}
											],
											"id": 149,
											"name": "ParameterList",
											"src": "2024:13:0"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 153,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 150,
															"name": "ElementaryTypeName",
															"src": "2063:4:0"
														}
													],
													"id": 151,
													"name": "VariableDeclaration",
													"src": "2063:4:0"
												}
											],
											"id": 152,
											"name": "ParameterList",
											"src": "2062:6:0"
										}
									],
									"id": 153,
									"name": "FunctionDefinition",
									"src": "2006:63:0"
								},
								{
									"attributes": {
										"body": null,
										"constant": false,
										"implemented": false,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "transfer",
										"payable": false,
										"scope": 169,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "to",
														"scope": 160,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 154,
															"name": "ElementaryTypeName",
															"src": "2092:7:0"
														}
													],
													"id": 155,
													"name": "VariableDeclaration",
													"src": "2092:10:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "value",
														"scope": 160,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 156,
															"name": "ElementaryTypeName",
															"src": "2104:4:0"
														}
													],
													"id": 157,
													"name": "VariableDeclaration",
													"src": "2104:10:0"
												}
											],
											"id": 158,
											"name": "ParameterList",
											"src": "2091:24:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 159,
											"name": "ParameterList",
											"src": "2122:0:0"
										}
									],
									"id": 160,
									"name": "FunctionDefinition",
									"src": "2074:49:0"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "Transfer"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "from",
														"scope": 168,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 161,
															"name": "ElementaryTypeName",
															"src": "2143:7:0"
														}
													],
													"id": 162,
													"name": "VariableDeclaration",
													"src": "2143:20:0"
												},
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "to",
														"scope": 168,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 163,
															"name": "ElementaryTypeName",
															"src": "2165:7:0"
														}
													],
													"id": 164,
													"name": "VariableDeclaration",
													"src": "2165:18:0"
												},
												{
													"attributes": {
														"constant": false,
														"indexed": false,
														"name": "value",
														"scope": 168,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 165,
															"name": "ElementaryTypeName",
															"src": "2185:4:0"
														}
													],
													"id": 166,
													"name": "VariableDeclaration",
													"src": "2185:10:0"
												}
											],
											"id": 167,
											"name": "ParameterList",
											"src": "2142:54:0"
										}
									],
									"id": 168,
									"name": "EventDefinition",
									"src": "2128:69:0"
								}
							],
							"id": 169,
							"name": "ContractDefinition",
							"src": "1891:308:0"
						},
						{
							"attributes": {
								"contractDependencies": [
									169
								],
								"contractKind": "contract",
								"documentation": null,
								"fullyImplemented": false,
								"linearizedBaseContracts": [
									205,
									169
								],
								"name": "ZRC20",
								"scope": 1175
							},
							"children": [
								{
									"attributes": {
										"arguments": [
											null
										]
									},
									"children": [
										{
											"attributes": {
												"contractScope": null,
												"name": "ZRC20Basic",
												"referencedDeclaration": 169,
												"type": "contract ZRC20Basic"
											},
											"id": 170,
											"name": "UserDefinedTypeName",
											"src": "2220:10:0"
										}
									],
									"id": 171,
									"name": "InheritanceSpecifier",
									"src": "2220:10:0"
								},
								{
									"attributes": {
										"body": null,
										"constant": true,
										"implemented": false,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "allowance",
										"payable": false,
										"scope": 205,
										"stateMutability": "view",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "owner",
														"scope": 180,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 172,
															"name": "ElementaryTypeName",
															"src": "2256:7:0"
														}
													],
													"id": 173,
													"name": "VariableDeclaration",
													"src": "2256:13:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "spender",
														"scope": 180,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 174,
															"name": "ElementaryTypeName",
															"src": "2271:7:0"
														}
													],
													"id": 175,
													"name": "VariableDeclaration",
													"src": "2271:15:0"
												}
											],
											"id": 176,
											"name": "ParameterList",
											"src": "2255:32:0"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 180,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 177,
															"name": "ElementaryTypeName",
															"src": "2313:4:0"
														}
													],
													"id": 178,
													"name": "VariableDeclaration",
													"src": "2313:4:0"
												}
											],
											"id": 179,
											"name": "ParameterList",
											"src": "2312:6:0"
										}
									],
									"id": 180,
									"name": "FunctionDefinition",
									"src": "2237:82:0"
								},
								{
									"attributes": {
										"body": null,
										"constant": false,
										"implemented": false,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "transferFrom",
										"payable": false,
										"scope": 205,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "from",
														"scope": 189,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 181,
															"name": "ElementaryTypeName",
															"src": "2346:7:0"
														}
													],
													"id": 182,
													"name": "VariableDeclaration",
													"src": "2346:12:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "to",
														"scope": 189,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 183,
															"name": "ElementaryTypeName",
															"src": "2360:7:0"
														}
													],
													"id": 184,
													"name": "VariableDeclaration",
													"src": "2360:10:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "value",
														"scope": 189,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 185,
															"name": "ElementaryTypeName",
															"src": "2372:4:0"
														}
													],
													"id": 186,
													"name": "VariableDeclaration",
													"src": "2372:10:0"
												}
											],
											"id": 187,
											"name": "ParameterList",
											"src": "2345:38:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 188,
											"name": "ParameterList",
											"src": "2390:0:0"
										}
									],
									"id": 189,
									"name": "FunctionDefinition",
									"src": "2324:67:0"
								},
								{
									"attributes": {
										"body": null,
										"constant": false,
										"implemented": false,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "approve",
										"payable": false,
										"scope": 205,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "spender",
														"scope": 196,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 190,
															"name": "ElementaryTypeName",
															"src": "2413:7:0"
														}
													],
													"id": 191,
													"name": "VariableDeclaration",
													"src": "2413:15:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "value",
														"scope": 196,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 192,
															"name": "ElementaryTypeName",
															"src": "2430:4:0"
														}
													],
													"id": 193,
													"name": "VariableDeclaration",
													"src": "2430:10:0"
												}
											],
											"id": 194,
											"name": "ParameterList",
											"src": "2412:29:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 195,
											"name": "ParameterList",
											"src": "2448:0:0"
										}
									],
									"id": 196,
									"name": "FunctionDefinition",
									"src": "2396:53:0"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "Approval"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "owner",
														"scope": 204,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 197,
															"name": "ElementaryTypeName",
															"src": "2469:7:0"
														}
													],
													"id": 198,
													"name": "VariableDeclaration",
													"src": "2469:21:0"
												},
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "spender",
														"scope": 204,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 199,
															"name": "ElementaryTypeName",
															"src": "2492:7:0"
														}
													],
													"id": 200,
													"name": "VariableDeclaration",
													"src": "2492:23:0"
												},
												{
													"attributes": {
														"constant": false,
														"indexed": false,
														"name": "value",
														"scope": 204,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 201,
															"name": "ElementaryTypeName",
															"src": "2517:4:0"
														}
													],
													"id": 202,
													"name": "VariableDeclaration",
													"src": "2517:10:0"
												}
											],
											"id": 203,
											"name": "ParameterList",
											"src": "2468:60:0"
										}
									],
									"id": 204,
									"name": "EventDefinition",
									"src": "2454:75:0"
								}
							],
							"id": 205,
							"name": "ContractDefinition",
							"src": "2202:329:0"
						},
						{
							"attributes": {
								"contractDependencies": [
									139,
									169
								],
								"contractKind": "contract",
								"documentation": "@title Basic token\n@dev Basic version of StandardToken, with no allowances.",
								"fullyImplemented": false,
								"linearizedBaseContracts": [
									347,
									169,
									139
								],
								"name": "BasicToken",
								"scope": 1175
							},
							"children": [
								{
									"attributes": {
										"arguments": [
											null
										]
									},
									"children": [
										{
											"attributes": {
												"contractScope": null,
												"name": "Ownable",
												"referencedDeclaration": 139,
												"type": "contract Ownable"
											},
											"id": 206,
											"name": "UserDefinedTypeName",
											"src": "2646:7:0"
										}
									],
									"id": 207,
									"name": "InheritanceSpecifier",
									"src": "2646:7:0"
								},
								{
									"attributes": {
										"arguments": [
											null
										]
									},
									"children": [
										{
											"attributes": {
												"contractScope": null,
												"name": "ZRC20Basic",
												"referencedDeclaration": 169,
												"type": "contract ZRC20Basic"
											},
											"id": 208,
											"name": "UserDefinedTypeName",
											"src": "2655:10:0"
										}
									],
									"id": 209,
									"name": "InheritanceSpecifier",
									"src": "2655:10:0"
								},
								{
									"children": [
										{
											"attributes": {
												"contractScope": null,
												"name": "SafeMath",
												"referencedDeclaration": 97,
												"type": "library SafeMath"
											},
											"id": 210,
											"name": "UserDefinedTypeName",
											"src": "2678:8:0"
										},
										{
											"attributes": {
												"name": "uint",
												"type": "uint256"
											},
											"id": 211,
											"name": "ElementaryTypeName",
											"src": "2691:4:0"
										}
									],
									"id": 212,
									"name": "UsingForDirective",
									"src": "2672:24:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "balances",
										"scope": 347,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "mapping(address => uint256)",
										"value": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"type": "mapping(address => uint256)"
											},
											"children": [
												{
													"attributes": {
														"name": "address",
														"type": "address"
													},
													"id": 213,
													"name": "ElementaryTypeName",
													"src": "2710:7:0"
												},
												{
													"attributes": {
														"name": "uint",
														"type": "uint256"
													},
													"id": 214,
													"name": "ElementaryTypeName",
													"src": "2721:4:0"
												}
											],
											"id": 215,
											"name": "Mapping",
											"src": "2702:24:0"
										}
									],
									"id": 216,
									"name": "VariableDeclaration",
									"src": "2702:40:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "basisPointsRate",
										"scope": 347,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "uint256",
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"name": "uint",
												"type": "uint256"
											},
											"id": 217,
											"name": "ElementaryTypeName",
											"src": "2827:4:0"
										},
										{
											"attributes": {
												"argumentTypes": null,
												"hexvalue": "30",
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"subdenomination": null,
												"token": "number",
												"type": "int_const 0",
												"value": "0"
											},
											"id": 218,
											"name": "Literal",
											"src": "2857:1:0"
										}
									],
									"id": 219,
									"name": "VariableDeclaration",
									"src": "2827:31:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "maximumFee",
										"scope": 347,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "uint256",
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"name": "uint",
												"type": "uint256"
											},
											"id": 220,
											"name": "ElementaryTypeName",
											"src": "2864:4:0"
										},
										{
											"attributes": {
												"argumentTypes": null,
												"hexvalue": "30",
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"subdenomination": null,
												"token": "number",
												"type": "int_const 0",
												"value": "0"
											},
											"id": 221,
											"name": "Literal",
											"src": "2889:1:0"
										}
									],
									"id": 222,
									"name": "VariableDeclaration",
									"src": "2864:26:0"
								},
								{
									"attributes": {
										"name": "onlyPayloadSize",
										"visibility": "internal"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "size",
														"scope": 240,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 223,
															"name": "ElementaryTypeName",
															"src": "2988:4:0"
														}
													],
													"id": 224,
													"name": "VariableDeclaration",
													"src": "2988:9:0"
												}
											],
											"id": 225,
											"name": "ParameterList",
											"src": "2987:11:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1195,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 226,
																	"name": "Identifier",
																	"src": "3009:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "!",
																		"prefix": true,
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"type": "bool"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"operator": "<",
																						"type": "bool"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"member_name": "length",
																								"referencedDeclaration": null,
																								"type": "uint256"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"member_name": "data",
																										"referencedDeclaration": null,
																										"type": "bytes calldata"
																									},
																									"children": [
																										{
																											"attributes": {
																												"argumentTypes": null,
																												"overloadedDeclarations": [
																													null
																												],
																												"referencedDeclaration": 1177,
																												"type": "msg",
																												"value": "msg"
																											},
																											"id": 227,
																											"name": "Identifier",
																											"src": "3019:3:0"
																										}
																									],
																									"id": 228,
																									"name": "MemberAccess",
																									"src": "3019:8:0"
																								}
																							],
																							"id": 229,
																							"name": "MemberAccess",
																							"src": "3019:15:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"operator": "+",
																								"type": "uint256"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 224,
																										"type": "uint256",
																										"value": "size"
																									},
																									"id": 230,
																									"name": "Identifier",
																									"src": "3037:4:0"
																								},
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"hexvalue": "34",
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"lValueRequested": false,
																										"subdenomination": null,
																										"token": "number",
																										"type": "int_const 4",
																										"value": "4"
																									},
																									"id": 231,
																									"name": "Literal",
																									"src": "3044:1:0"
																								}
																							],
																							"id": 232,
																							"name": "BinaryOperation",
																							"src": "3037:8:0"
																						}
																					],
																					"id": 233,
																					"name": "BinaryOperation",
																					"src": "3019:26:0"
																				}
																			],
																			"id": 234,
																			"name": "TupleExpression",
																			"src": "3018:28:0"
																		}
																	],
																	"id": 235,
																	"name": "UnaryOperation",
																	"src": "3017:29:0"
																}
															],
															"id": 236,
															"name": "FunctionCall",
															"src": "3009:38:0"
														}
													],
													"id": 237,
													"name": "ExpressionStatement",
													"src": "3009:38:0"
												},
												{
													"id": 238,
													"name": "PlaceholderStatement",
													"src": "3057:1:0"
												}
											],
											"id": 239,
											"name": "Block",
											"src": "2999:66:0"
										}
									],
									"id": 240,
									"name": "ModifierDefinition",
									"src": "2963:102:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "transfer",
										"payable": false,
										"scope": 347,
										"stateMutability": "nonpayable",
										"superFunction": 160,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_to",
														"scope": 334,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 241,
															"name": "ElementaryTypeName",
															"src": "3249:7:0"
														}
													],
													"id": 242,
													"name": "VariableDeclaration",
													"src": "3249:11:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "_value",
														"scope": 334,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 243,
															"name": "ElementaryTypeName",
															"src": "3262:4:0"
														}
													],
													"id": 244,
													"name": "VariableDeclaration",
													"src": "3262:11:0"
												}
											],
											"id": 245,
											"name": "ParameterList",
											"src": "3248:26:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 251,
											"name": "ParameterList",
											"src": "3306:0:0"
										},
										{
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 240,
														"type": "modifier (uint256)",
														"value": "onlyPayloadSize"
													},
													"id": 246,
													"name": "Identifier",
													"src": "3282:15:0"
												},
												{
													"attributes": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_rational_64_by_1",
															"typeString": "int_const 64"
														},
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"operator": "*",
														"type": "int_const 64"
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"hexvalue": "32",
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"subdenomination": null,
																"token": "number",
																"type": "int_const 2",
																"value": "2"
															},
															"id": 247,
															"name": "Literal",
															"src": "3298:1:0"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"hexvalue": "3332",
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"subdenomination": null,
																"token": "number",
																"type": "int_const 32",
																"value": "32"
															},
															"id": 248,
															"name": "Literal",
															"src": "3302:2:0"
														}
													],
													"id": 249,
													"name": "BinaryOperation",
													"src": "3298:6:0"
												}
											],
											"id": 250,
											"name": "ModifierInvocation",
											"src": "3282:23:0"
										},
										{
											"children": [
												{
													"attributes": {
														"assignments": [
															253
														]
													},
													"children": [
														{
															"attributes": {
																"constant": false,
																"name": "fee",
																"scope": 334,
																"stateVariable": false,
																"storageLocation": "default",
																"type": "uint256",
																"value": null,
																"visibility": "internal"
															},
															"children": [
																{
																	"attributes": {
																		"name": "uint",
																		"type": "uint256"
																	},
																	"id": 252,
																	"name": "ElementaryTypeName",
																	"src": "3316:4:0"
																}
															],
															"id": 253,
															"name": "VariableDeclaration",
															"src": "3316:8:0"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "uint256",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		],
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "div",
																		"referencedDeclaration": 52,
																		"type": "function (uint256,uint256) pure returns (uint256)"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"isStructConstructorCall": false,
																						"lValueRequested": false,
																						"names": [
																							null
																						],
																						"type": "uint256",
																						"type_conversion": false
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"member_name": "mul",
																								"referencedDeclaration": 34,
																								"type": "function (uint256,uint256) pure returns (uint256)"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 244,
																										"type": "uint256",
																										"value": "_value"
																									},
																									"id": 254,
																									"name": "Identifier",
																									"src": "3328:6:0"
																								}
																							],
																							"id": 255,
																							"name": "MemberAccess",
																							"src": "3328:10:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 219,
																								"type": "uint256",
																								"value": "basisPointsRate"
																							},
																							"id": 256,
																							"name": "Identifier",
																							"src": "3339:15:0"
																						}
																					],
																					"id": 257,
																					"name": "FunctionCall",
																					"src": "3328:27:0"
																				}
																			],
																			"id": 258,
																			"name": "TupleExpression",
																			"src": "3327:29:0"
																		}
																	],
																	"id": 259,
																	"name": "MemberAccess",
																	"src": "3327:33:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "3130303030",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "number",
																		"type": "int_const 10000",
																		"value": "10000"
																	},
																	"id": 260,
																	"name": "Literal",
																	"src": "3361:5:0"
																}
															],
															"id": 261,
															"name": "FunctionCall",
															"src": "3327:40:0"
														}
													],
													"id": 262,
													"name": "VariableDeclarationStatement",
													"src": "3316:51:0"
												},
												{
													"attributes": {
														"falseBody": null
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": ">",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 253,
																		"type": "uint256",
																		"value": "fee"
																	},
																	"id": 263,
																	"name": "Identifier",
																	"src": "3381:3:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 222,
																		"type": "uint256",
																		"value": "maximumFee"
																	},
																	"id": 264,
																	"name": "Identifier",
																	"src": "3387:10:0"
																}
															],
															"id": 265,
															"name": "BinaryOperation",
															"src": "3381:16:0"
														},
														{
															"children": [
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"operator": "=",
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 253,
																						"type": "uint256",
																						"value": "fee"
																					},
																					"id": 266,
																					"name": "Identifier",
																					"src": "3413:3:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 222,
																						"type": "uint256",
																						"value": "maximumFee"
																					},
																					"id": 267,
																					"name": "Identifier",
																					"src": "3419:10:0"
																				}
																			],
																			"id": 268,
																			"name": "Assignment",
																			"src": "3413:16:0"
																		}
																	],
																	"id": 269,
																	"name": "ExpressionStatement",
																	"src": "3413:16:0"
																}
															],
															"id": 270,
															"name": "Block",
															"src": "3399:41:0"
														}
													],
													"id": 271,
													"name": "IfStatement",
													"src": "3377:63:0"
												},
												{
													"attributes": {
														"assignments": [
															273
														]
													},
													"children": [
														{
															"attributes": {
																"constant": false,
																"name": "sendAmount",
																"scope": 334,
																"stateVariable": false,
																"storageLocation": "default",
																"type": "uint256",
																"value": null,
																"visibility": "internal"
															},
															"children": [
																{
																	"attributes": {
																		"name": "uint",
																		"type": "uint256"
																	},
																	"id": 272,
																	"name": "ElementaryTypeName",
																	"src": "3449:4:0"
																}
															],
															"id": 273,
															"name": "VariableDeclaration",
															"src": "3449:15:0"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "uint256",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "sub",
																		"referencedDeclaration": 72,
																		"type": "function (uint256,uint256) pure returns (uint256)"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 244,
																				"type": "uint256",
																				"value": "_value"
																			},
																			"id": 274,
																			"name": "Identifier",
																			"src": "3467:6:0"
																		}
																	],
																	"id": 275,
																	"name": "MemberAccess",
																	"src": "3467:10:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 253,
																		"type": "uint256",
																		"value": "fee"
																	},
																	"id": 276,
																	"name": "Identifier",
																	"src": "3478:3:0"
																}
															],
															"id": 277,
															"name": "FunctionCall",
															"src": "3467:15:0"
														}
													],
													"id": 278,
													"name": "VariableDeclarationStatement",
													"src": "3449:33:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 216,
																				"type": "mapping(address => uint256)",
																				"value": "balances"
																			},
																			"id": 279,
																			"name": "Identifier",
																			"src": "3492:8:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "sender",
																				"referencedDeclaration": null,
																				"type": "address"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 1177,
																						"type": "msg",
																						"value": "msg"
																					},
																					"id": 280,
																					"name": "Identifier",
																					"src": "3501:3:0"
																				}
																			],
																			"id": 281,
																			"name": "MemberAccess",
																			"src": "3501:10:0"
																		}
																	],
																	"id": 282,
																	"name": "IndexAccess",
																	"src": "3492:20:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"isStructConstructorCall": false,
																		"lValueRequested": false,
																		"names": [
																			null
																		],
																		"type": "uint256",
																		"type_conversion": false
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "sub",
																				"referencedDeclaration": 72,
																				"type": "function (uint256,uint256) pure returns (uint256)"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"type": "uint256"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 216,
																								"type": "mapping(address => uint256)",
																								"value": "balances"
																							},
																							"id": 283,
																							"name": "Identifier",
																							"src": "3515:8:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"member_name": "sender",
																								"referencedDeclaration": null,
																								"type": "address"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 1177,
																										"type": "msg",
																										"value": "msg"
																									},
																									"id": 284,
																									"name": "Identifier",
																									"src": "3524:3:0"
																								}
																							],
																							"id": 285,
																							"name": "MemberAccess",
																							"src": "3524:10:0"
																						}
																					],
																					"id": 286,
																					"name": "IndexAccess",
																					"src": "3515:20:0"
																				}
																			],
																			"id": 287,
																			"name": "MemberAccess",
																			"src": "3515:24:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 244,
																				"type": "uint256",
																				"value": "_value"
																			},
																			"id": 288,
																			"name": "Identifier",
																			"src": "3540:6:0"
																		}
																	],
																	"id": 289,
																	"name": "FunctionCall",
																	"src": "3515:32:0"
																}
															],
															"id": 290,
															"name": "Assignment",
															"src": "3492:55:0"
														}
													],
													"id": 291,
													"name": "ExpressionStatement",
													"src": "3492:55:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 216,
																				"type": "mapping(address => uint256)",
																				"value": "balances"
																			},
																			"id": 292,
																			"name": "Identifier",
																			"src": "3557:8:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 242,
																				"type": "address",
																				"value": "_to"
																			},
																			"id": 293,
																			"name": "Identifier",
																			"src": "3566:3:0"
																		}
																	],
																	"id": 294,
																	"name": "IndexAccess",
																	"src": "3557:13:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"isStructConstructorCall": false,
																		"lValueRequested": false,
																		"names": [
																			null
																		],
																		"type": "uint256",
																		"type_conversion": false
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "add",
																				"referencedDeclaration": 96,
																				"type": "function (uint256,uint256) pure returns (uint256)"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"type": "uint256"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 216,
																								"type": "mapping(address => uint256)",
																								"value": "balances"
																							},
																							"id": 295,
																							"name": "Identifier",
																							"src": "3573:8:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 242,
																								"type": "address",
																								"value": "_to"
																							},
																							"id": 296,
																							"name": "Identifier",
																							"src": "3582:3:0"
																						}
																					],
																					"id": 297,
																					"name": "IndexAccess",
																					"src": "3573:13:0"
																				}
																			],
																			"id": 298,
																			"name": "MemberAccess",
																			"src": "3573:17:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 273,
																				"type": "uint256",
																				"value": "sendAmount"
																			},
																			"id": 299,
																			"name": "Identifier",
																			"src": "3591:10:0"
																		}
																	],
																	"id": 300,
																	"name": "FunctionCall",
																	"src": "3573:29:0"
																}
															],
															"id": 301,
															"name": "Assignment",
															"src": "3557:45:0"
														}
													],
													"id": 302,
													"name": "ExpressionStatement",
													"src": "3557:45:0"
												},
												{
													"attributes": {
														"falseBody": null
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": ">",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 253,
																		"type": "uint256",
																		"value": "fee"
																	},
																	"id": 303,
																	"name": "Identifier",
																	"src": "3616:3:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "30",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "number",
																		"type": "int_const 0",
																		"value": "0"
																	},
																	"id": 304,
																	"name": "Literal",
																	"src": "3622:1:0"
																}
															],
															"id": 305,
															"name": "BinaryOperation",
															"src": "3616:7:0"
														},
														{
															"children": [
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"operator": "=",
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"type": "uint256"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 216,
																								"type": "mapping(address => uint256)",
																								"value": "balances"
																							},
																							"id": 306,
																							"name": "Identifier",
																							"src": "3639:8:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 99,
																								"type": "address",
																								"value": "owner"
																							},
																							"id": 307,
																							"name": "Identifier",
																							"src": "3648:5:0"
																						}
																					],
																					"id": 308,
																					"name": "IndexAccess",
																					"src": "3639:15:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"isStructConstructorCall": false,
																						"lValueRequested": false,
																						"names": [
																							null
																						],
																						"type": "uint256",
																						"type_conversion": false
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"member_name": "add",
																								"referencedDeclaration": 96,
																								"type": "function (uint256,uint256) pure returns (uint256)"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"type": "uint256"
																									},
																									"children": [
																										{
																											"attributes": {
																												"argumentTypes": null,
																												"overloadedDeclarations": [
																													null
																												],
																												"referencedDeclaration": 216,
																												"type": "mapping(address => uint256)",
																												"value": "balances"
																											},
																											"id": 309,
																											"name": "Identifier",
																											"src": "3657:8:0"
																										},
																										{
																											"attributes": {
																												"argumentTypes": null,
																												"overloadedDeclarations": [
																													null
																												],
																												"referencedDeclaration": 99,
																												"type": "address",
																												"value": "owner"
																											},
																											"id": 310,
																											"name": "Identifier",
																											"src": "3666:5:0"
																										}
																									],
																									"id": 311,
																									"name": "IndexAccess",
																									"src": "3657:15:0"
																								}
																							],
																							"id": 312,
																							"name": "MemberAccess",
																							"src": "3657:19:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 253,
																								"type": "uint256",
																								"value": "fee"
																							},
																							"id": 313,
																							"name": "Identifier",
																							"src": "3677:3:0"
																						}
																					],
																					"id": 314,
																					"name": "FunctionCall",
																					"src": "3657:24:0"
																				}
																			],
																			"id": 315,
																			"name": "Assignment",
																			"src": "3639:42:0"
																		}
																	],
																	"id": 316,
																	"name": "ExpressionStatement",
																	"src": "3639:42:0"
																},
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "tuple()",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 168,
																						"type": "function (address,address,uint256)",
																						"value": "Transfer"
																					},
																					"id": 317,
																					"name": "Identifier",
																					"src": "3695:8:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "sender",
																						"referencedDeclaration": null,
																						"type": "address"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1177,
																								"type": "msg",
																								"value": "msg"
																							},
																							"id": 318,
																							"name": "Identifier",
																							"src": "3704:3:0"
																						}
																					],
																					"id": 319,
																					"name": "MemberAccess",
																					"src": "3704:10:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 99,
																						"type": "address",
																						"value": "owner"
																					},
																					"id": 320,
																					"name": "Identifier",
																					"src": "3716:5:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 253,
																						"type": "uint256",
																						"value": "fee"
																					},
																					"id": 321,
																					"name": "Identifier",
																					"src": "3723:3:0"
																				}
																			],
																			"id": 322,
																			"name": "FunctionCall",
																			"src": "3695:32:0"
																		}
																	],
																	"id": 323,
																	"name": "ExpressionStatement",
																	"src": "3695:32:0"
																}
															],
															"id": 324,
															"name": "Block",
															"src": "3625:113:0"
														}
													],
													"id": 325,
													"name": "IfStatement",
													"src": "3612:126:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 168,
																		"type": "function (address,address,uint256)",
																		"value": "Transfer"
																	},
																	"id": 326,
																	"name": "Identifier",
																	"src": "3747:8:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "sender",
																		"referencedDeclaration": null,
																		"type": "address"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1177,
																				"type": "msg",
																				"value": "msg"
																			},
																			"id": 327,
																			"name": "Identifier",
																			"src": "3756:3:0"
																		}
																	],
																	"id": 328,
																	"name": "MemberAccess",
																	"src": "3756:10:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 242,
																		"type": "address",
																		"value": "_to"
																	},
																	"id": 329,
																	"name": "Identifier",
																	"src": "3768:3:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 273,
																		"type": "uint256",
																		"value": "sendAmount"
																	},
																	"id": 330,
																	"name": "Identifier",
																	"src": "3773:10:0"
																}
															],
															"id": 331,
															"name": "FunctionCall",
															"src": "3747:37:0"
														}
													],
													"id": 332,
													"name": "ExpressionStatement",
													"src": "3747:37:0"
												}
											],
											"id": 333,
											"name": "Block",
											"src": "3306:485:0"
										}
									],
									"id": 334,
									"name": "FunctionDefinition",
									"src": "3231:560:0"
								},
								{
									"attributes": {
										"constant": true,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "balanceOf",
										"payable": false,
										"scope": 347,
										"stateMutability": "view",
										"superFunction": 153,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_owner",
														"scope": 346,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 335,
															"name": "ElementaryTypeName",
															"src": "4021:7:0"
														}
													],
													"id": 336,
													"name": "VariableDeclaration",
													"src": "4021:14:0"
												}
											],
											"id": 337,
											"name": "ParameterList",
											"src": "4020:16:0"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "balance",
														"scope": 346,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 338,
															"name": "ElementaryTypeName",
															"src": "4062:4:0"
														}
													],
													"id": 339,
													"name": "VariableDeclaration",
													"src": "4062:12:0"
												}
											],
											"id": 340,
											"name": "ParameterList",
											"src": "4061:14:0"
										},
										{
											"children": [
												{
													"attributes": {
														"functionReturnParameters": 340
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 216,
																		"type": "mapping(address => uint256)",
																		"value": "balances"
																	},
																	"id": 341,
																	"name": "Identifier",
																	"src": "4093:8:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 336,
																		"type": "address",
																		"value": "_owner"
																	},
																	"id": 342,
																	"name": "Identifier",
																	"src": "4102:6:0"
																}
															],
															"id": 343,
															"name": "IndexAccess",
															"src": "4093:16:0"
														}
													],
													"id": 344,
													"name": "Return",
													"src": "4086:23:0"
												}
											],
											"id": 345,
											"name": "Block",
											"src": "4076:40:0"
										}
									],
									"id": 346,
									"name": "FunctionDefinition",
									"src": "4002:114:0"
								}
							],
							"id": 347,
							"name": "ContractDefinition",
							"src": "2623:1496:0"
						},
						{
							"attributes": {
								"contractDependencies": [
									139,
									169,
									205,
									347
								],
								"contractKind": "contract",
								"documentation": null,
								"fullyImplemented": false,
								"linearizedBaseContracts": [
									546,
									205,
									347,
									169,
									139
								],
								"name": "StandardToken",
								"scope": 1175
							},
							"children": [
								{
									"attributes": {
										"arguments": [
											null
										]
									},
									"children": [
										{
											"attributes": {
												"contractScope": null,
												"name": "BasicToken",
												"referencedDeclaration": 347,
												"type": "contract BasicToken"
											},
											"id": 348,
											"name": "UserDefinedTypeName",
											"src": "4148:10:0"
										}
									],
									"id": 349,
									"name": "InheritanceSpecifier",
									"src": "4148:10:0"
								},
								{
									"attributes": {
										"arguments": [
											null
										]
									},
									"children": [
										{
											"attributes": {
												"contractScope": null,
												"name": "ZRC20",
												"referencedDeclaration": 205,
												"type": "contract ZRC20"
											},
											"id": 350,
											"name": "UserDefinedTypeName",
											"src": "4160:5:0"
										}
									],
									"id": 351,
									"name": "InheritanceSpecifier",
									"src": "4160:5:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "allowed",
										"scope": 546,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "mapping(address => mapping(address => uint256))",
										"value": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"type": "mapping(address => mapping(address => uint256))"
											},
											"children": [
												{
													"attributes": {
														"name": "address",
														"type": "address"
													},
													"id": 352,
													"name": "ElementaryTypeName",
													"src": "4182:7:0"
												},
												{
													"attributes": {
														"type": "mapping(address => uint256)"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 353,
															"name": "ElementaryTypeName",
															"src": "4202:7:0"
														},
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 354,
															"name": "ElementaryTypeName",
															"src": "4213:4:0"
														}
													],
													"id": 355,
													"name": "Mapping",
													"src": "4193:25:0"
												}
											],
											"id": 356,
											"name": "Mapping",
											"src": "4173:46:0"
										}
									],
									"id": 357,
									"name": "VariableDeclaration",
									"src": "4173:61:0"
								},
								{
									"attributes": {
										"constant": true,
										"name": "MAX_UINT",
										"scope": 546,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "uint256",
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"name": "uint",
												"type": "uint256"
											},
											"id": 358,
											"name": "ElementaryTypeName",
											"src": "4241:4:0"
										},
										{
											"attributes": {
												"argumentTypes": null,
												"commonType": {
													"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
													"typeString": "int_const 115792089237316195423570985008687907853269984665640564039457584007913129639935"
												},
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"operator": "-",
												"type": "int_const 115792089237316195423570985008687907853269984665640564039457584007913129639935"
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
															"typeString": "int_const 115792089237316195423570985008687907853269984665640564039457584007913129639936"
														},
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"operator": "**",
														"type": "int_const 115792089237316195423570985008687907853269984665640564039457584007913129639936"
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"hexvalue": "32",
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"subdenomination": null,
																"token": "number",
																"type": "int_const 2",
																"value": "2"
															},
															"id": 359,
															"name": "Literal",
															"src": "4273:1:0"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"hexvalue": "323536",
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"subdenomination": null,
																"token": "number",
																"type": "int_const 256",
																"value": "256"
															},
															"id": 360,
															"name": "Literal",
															"src": "4276:3:0"
														}
													],
													"id": 361,
													"name": "BinaryOperation",
													"src": "4273:6:0"
												},
												{
													"attributes": {
														"argumentTypes": null,
														"hexvalue": "31",
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"subdenomination": null,
														"token": "number",
														"type": "int_const 1",
														"value": "1"
													},
													"id": 362,
													"name": "Literal",
													"src": "4282:1:0"
												}
											],
											"id": 363,
											"name": "BinaryOperation",
											"src": "4273:10:0"
										}
									],
									"id": 364,
									"name": "VariableDeclaration",
									"src": "4241:42:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "transferFrom",
										"payable": false,
										"scope": 546,
										"stateMutability": "nonpayable",
										"superFunction": 189,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_from",
														"scope": 481,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 365,
															"name": "ElementaryTypeName",
															"src": "4587:7:0"
														}
													],
													"id": 366,
													"name": "VariableDeclaration",
													"src": "4587:13:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "_to",
														"scope": 481,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 367,
															"name": "ElementaryTypeName",
															"src": "4602:7:0"
														}
													],
													"id": 368,
													"name": "VariableDeclaration",
													"src": "4602:11:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "_value",
														"scope": 481,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 369,
															"name": "ElementaryTypeName",
															"src": "4615:4:0"
														}
													],
													"id": 370,
													"name": "VariableDeclaration",
													"src": "4615:11:0"
												}
											],
											"id": 371,
											"name": "ParameterList",
											"src": "4586:41:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 377,
											"name": "ParameterList",
											"src": "4659:0:0"
										},
										{
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 240,
														"type": "modifier (uint256)",
														"value": "onlyPayloadSize"
													},
													"id": 372,
													"name": "Identifier",
													"src": "4635:15:0"
												},
												{
													"attributes": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_rational_96_by_1",
															"typeString": "int_const 96"
														},
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"operator": "*",
														"type": "int_const 96"
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"hexvalue": "33",
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"subdenomination": null,
																"token": "number",
																"type": "int_const 3",
																"value": "3"
															},
															"id": 373,
															"name": "Literal",
															"src": "4651:1:0"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"hexvalue": "3332",
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"subdenomination": null,
																"token": "number",
																"type": "int_const 32",
																"value": "32"
															},
															"id": 374,
															"name": "Literal",
															"src": "4655:2:0"
														}
													],
													"id": 375,
													"name": "BinaryOperation",
													"src": "4651:6:0"
												}
											],
											"id": 376,
											"name": "ModifierInvocation",
											"src": "4635:23:0"
										},
										{
											"children": [
												{
													"attributes": {
														"assignments": [
															378
														]
													},
													"children": [
														{
															"attributes": {
																"constant": false,
																"name": "_allowance",
																"scope": 481,
																"stateVariable": false,
																"storageLocation": "default",
																"type": "uint256",
																"typeName": null,
																"value": null,
																"visibility": "internal"
															},
															"children": [],
															"id": 378,
															"name": "VariableDeclaration",
															"src": "4669:14:0"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"type": "mapping(address => uint256)"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 357,
																				"type": "mapping(address => mapping(address => uint256))",
																				"value": "allowed"
																			},
																			"id": 379,
																			"name": "Identifier",
																			"src": "4686:7:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 366,
																				"type": "address",
																				"value": "_from"
																			},
																			"id": 380,
																			"name": "Identifier",
																			"src": "4694:5:0"
																		}
																	],
																	"id": 381,
																	"name": "IndexAccess",
																	"src": "4686:14:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "sender",
																		"referencedDeclaration": null,
																		"type": "address"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1177,
																				"type": "msg",
																				"value": "msg"
																			},
																			"id": 382,
																			"name": "Identifier",
																			"src": "4701:3:0"
																		}
																	],
																	"id": 383,
																	"name": "MemberAccess",
																	"src": "4701:10:0"
																}
															],
															"id": 384,
															"name": "IndexAccess",
															"src": "4686:26:0"
														}
													],
													"id": 385,
													"name": "VariableDeclarationStatement",
													"src": "4669:43:0"
												},
												{
													"attributes": {
														"assignments": [
															387
														]
													},
													"children": [
														{
															"attributes": {
																"constant": false,
																"name": "fee",
																"scope": 481,
																"stateVariable": false,
																"storageLocation": "default",
																"type": "uint256",
																"value": null,
																"visibility": "internal"
															},
															"children": [
																{
																	"attributes": {
																		"name": "uint",
																		"type": "uint256"
																	},
																	"id": 386,
																	"name": "ElementaryTypeName",
																	"src": "4878:4:0"
																}
															],
															"id": 387,
															"name": "VariableDeclaration",
															"src": "4878:8:0"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "uint256",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		],
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "div",
																		"referencedDeclaration": 52,
																		"type": "function (uint256,uint256) pure returns (uint256)"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"isStructConstructorCall": false,
																						"lValueRequested": false,
																						"names": [
																							null
																						],
																						"type": "uint256",
																						"type_conversion": false
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"member_name": "mul",
																								"referencedDeclaration": 34,
																								"type": "function (uint256,uint256) pure returns (uint256)"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 370,
																										"type": "uint256",
																										"value": "_value"
																									},
																									"id": 388,
																									"name": "Identifier",
																									"src": "4890:6:0"
																								}
																							],
																							"id": 389,
																							"name": "MemberAccess",
																							"src": "4890:10:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 219,
																								"type": "uint256",
																								"value": "basisPointsRate"
																							},
																							"id": 390,
																							"name": "Identifier",
																							"src": "4901:15:0"
																						}
																					],
																					"id": 391,
																					"name": "FunctionCall",
																					"src": "4890:27:0"
																				}
																			],
																			"id": 392,
																			"name": "TupleExpression",
																			"src": "4889:29:0"
																		}
																	],
																	"id": 393,
																	"name": "MemberAccess",
																	"src": "4889:33:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "3130303030",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "number",
																		"type": "int_const 10000",
																		"value": "10000"
																	},
																	"id": 394,
																	"name": "Literal",
																	"src": "4923:5:0"
																}
															],
															"id": 395,
															"name": "FunctionCall",
															"src": "4889:40:0"
														}
													],
													"id": 396,
													"name": "VariableDeclarationStatement",
													"src": "4878:51:0"
												},
												{
													"attributes": {
														"falseBody": null
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": ">",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 387,
																		"type": "uint256",
																		"value": "fee"
																	},
																	"id": 397,
																	"name": "Identifier",
																	"src": "4943:3:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 222,
																		"type": "uint256",
																		"value": "maximumFee"
																	},
																	"id": 398,
																	"name": "Identifier",
																	"src": "4949:10:0"
																}
															],
															"id": 399,
															"name": "BinaryOperation",
															"src": "4943:16:0"
														},
														{
															"children": [
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"operator": "=",
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 387,
																						"type": "uint256",
																						"value": "fee"
																					},
																					"id": 400,
																					"name": "Identifier",
																					"src": "4975:3:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 222,
																						"type": "uint256",
																						"value": "maximumFee"
																					},
																					"id": 401,
																					"name": "Identifier",
																					"src": "4981:10:0"
																				}
																			],
																			"id": 402,
																			"name": "Assignment",
																			"src": "4975:16:0"
																		}
																	],
																	"id": 403,
																	"name": "ExpressionStatement",
																	"src": "4975:16:0"
																}
															],
															"id": 404,
															"name": "Block",
															"src": "4961:41:0"
														}
													],
													"id": 405,
													"name": "IfStatement",
													"src": "4939:63:0"
												},
												{
													"attributes": {
														"falseBody": null
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "<",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 378,
																		"type": "uint256",
																		"value": "_allowance"
																	},
																	"id": 406,
																	"name": "Identifier",
																	"src": "5015:10:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 364,
																		"type": "uint256",
																		"value": "MAX_UINT"
																	},
																	"id": 407,
																	"name": "Identifier",
																	"src": "5028:8:0"
																}
															],
															"id": 408,
															"name": "BinaryOperation",
															"src": "5015:21:0"
														},
														{
															"children": [
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"operator": "=",
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"type": "uint256"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"type": "mapping(address => uint256)"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 357,
																										"type": "mapping(address => mapping(address => uint256))",
																										"value": "allowed"
																									},
																									"id": 409,
																									"name": "Identifier",
																									"src": "5052:7:0"
																								},
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 366,
																										"type": "address",
																										"value": "_from"
																									},
																									"id": 410,
																									"name": "Identifier",
																									"src": "5060:5:0"
																								}
																							],
																							"id": 413,
																							"name": "IndexAccess",
																							"src": "5052:14:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"member_name": "sender",
																								"referencedDeclaration": null,
																								"type": "address"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 1177,
																										"type": "msg",
																										"value": "msg"
																									},
																									"id": 411,
																									"name": "Identifier",
																									"src": "5067:3:0"
																								}
																							],
																							"id": 412,
																							"name": "MemberAccess",
																							"src": "5067:10:0"
																						}
																					],
																					"id": 414,
																					"name": "IndexAccess",
																					"src": "5052:26:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"isStructConstructorCall": false,
																						"lValueRequested": false,
																						"names": [
																							null
																						],
																						"type": "uint256",
																						"type_conversion": false
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"member_name": "sub",
																								"referencedDeclaration": 72,
																								"type": "function (uint256,uint256) pure returns (uint256)"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 378,
																										"type": "uint256",
																										"value": "_allowance"
																									},
																									"id": 415,
																									"name": "Identifier",
																									"src": "5081:10:0"
																								}
																							],
																							"id": 416,
																							"name": "MemberAccess",
																							"src": "5081:14:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 370,
																								"type": "uint256",
																								"value": "_value"
																							},
																							"id": 417,
																							"name": "Identifier",
																							"src": "5096:6:0"
																						}
																					],
																					"id": 418,
																					"name": "FunctionCall",
																					"src": "5081:22:0"
																				}
																			],
																			"id": 419,
																			"name": "Assignment",
																			"src": "5052:51:0"
																		}
																	],
																	"id": 420,
																	"name": "ExpressionStatement",
																	"src": "5052:51:0"
																}
															],
															"id": 421,
															"name": "Block",
															"src": "5038:76:0"
														}
													],
													"id": 422,
													"name": "IfStatement",
													"src": "5011:103:0"
												},
												{
													"attributes": {
														"assignments": [
															424
														]
													},
													"children": [
														{
															"attributes": {
																"constant": false,
																"name": "sendAmount",
																"scope": 481,
																"stateVariable": false,
																"storageLocation": "default",
																"type": "uint256",
																"value": null,
																"visibility": "internal"
															},
															"children": [
																{
																	"attributes": {
																		"name": "uint",
																		"type": "uint256"
																	},
																	"id": 423,
																	"name": "ElementaryTypeName",
																	"src": "5123:4:0"
																}
															],
															"id": 424,
															"name": "VariableDeclaration",
															"src": "5123:15:0"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "uint256",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "sub",
																		"referencedDeclaration": 72,
																		"type": "function (uint256,uint256) pure returns (uint256)"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 370,
																				"type": "uint256",
																				"value": "_value"
																			},
																			"id": 425,
																			"name": "Identifier",
																			"src": "5141:6:0"
																		}
																	],
																	"id": 426,
																	"name": "MemberAccess",
																	"src": "5141:10:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 387,
																		"type": "uint256",
																		"value": "fee"
																	},
																	"id": 427,
																	"name": "Identifier",
																	"src": "5152:3:0"
																}
															],
															"id": 428,
															"name": "FunctionCall",
															"src": "5141:15:0"
														}
													],
													"id": 429,
													"name": "VariableDeclarationStatement",
													"src": "5123:33:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 216,
																				"type": "mapping(address => uint256)",
																				"value": "balances"
																			},
																			"id": 430,
																			"name": "Identifier",
																			"src": "5166:8:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 366,
																				"type": "address",
																				"value": "_from"
																			},
																			"id": 431,
																			"name": "Identifier",
																			"src": "5175:5:0"
																		}
																	],
																	"id": 432,
																	"name": "IndexAccess",
																	"src": "5166:15:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"isStructConstructorCall": false,
																		"lValueRequested": false,
																		"names": [
																			null
																		],
																		"type": "uint256",
																		"type_conversion": false
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "sub",
																				"referencedDeclaration": 72,
																				"type": "function (uint256,uint256) pure returns (uint256)"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"type": "uint256"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 216,
																								"type": "mapping(address => uint256)",
																								"value": "balances"
																							},
																							"id": 433,
																							"name": "Identifier",
																							"src": "5184:8:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 366,
																								"type": "address",
																								"value": "_from"
																							},
																							"id": 434,
																							"name": "Identifier",
																							"src": "5193:5:0"
																						}
																					],
																					"id": 435,
																					"name": "IndexAccess",
																					"src": "5184:15:0"
																				}
																			],
																			"id": 436,
																			"name": "MemberAccess",
																			"src": "5184:19:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 370,
																				"type": "uint256",
																				"value": "_value"
																			},
																			"id": 437,
																			"name": "Identifier",
																			"src": "5204:6:0"
																		}
																	],
																	"id": 438,
																	"name": "FunctionCall",
																	"src": "5184:27:0"
																}
															],
															"id": 439,
															"name": "Assignment",
															"src": "5166:45:0"
														}
													],
													"id": 440,
													"name": "ExpressionStatement",
													"src": "5166:45:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 216,
																				"type": "mapping(address => uint256)",
																				"value": "balances"
																			},
																			"id": 441,
																			"name": "Identifier",
																			"src": "5221:8:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 368,
																				"type": "address",
																				"value": "_to"
																			},
																			"id": 442,
																			"name": "Identifier",
																			"src": "5230:3:0"
																		}
																	],
																	"id": 443,
																	"name": "IndexAccess",
																	"src": "5221:13:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"isStructConstructorCall": false,
																		"lValueRequested": false,
																		"names": [
																			null
																		],
																		"type": "uint256",
																		"type_conversion": false
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "add",
																				"referencedDeclaration": 96,
																				"type": "function (uint256,uint256) pure returns (uint256)"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"type": "uint256"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 216,
																								"type": "mapping(address => uint256)",
																								"value": "balances"
																							},
																							"id": 444,
																							"name": "Identifier",
																							"src": "5237:8:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 368,
																								"type": "address",
																								"value": "_to"
																							},
																							"id": 445,
																							"name": "Identifier",
																							"src": "5246:3:0"
																						}
																					],
																					"id": 446,
																					"name": "IndexAccess",
																					"src": "5237:13:0"
																				}
																			],
																			"id": 447,
																			"name": "MemberAccess",
																			"src": "5237:17:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 424,
																				"type": "uint256",
																				"value": "sendAmount"
																			},
																			"id": 448,
																			"name": "Identifier",
																			"src": "5255:10:0"
																		}
																	],
																	"id": 449,
																	"name": "FunctionCall",
																	"src": "5237:29:0"
																}
															],
															"id": 450,
															"name": "Assignment",
															"src": "5221:45:0"
														}
													],
													"id": 451,
													"name": "ExpressionStatement",
													"src": "5221:45:0"
												},
												{
													"attributes": {
														"falseBody": null
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": ">",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 387,
																		"type": "uint256",
																		"value": "fee"
																	},
																	"id": 452,
																	"name": "Identifier",
																	"src": "5280:3:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "30",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "number",
																		"type": "int_const 0",
																		"value": "0"
																	},
																	"id": 453,
																	"name": "Literal",
																	"src": "5286:1:0"
																}
															],
															"id": 454,
															"name": "BinaryOperation",
															"src": "5280:7:0"
														},
														{
															"children": [
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"operator": "=",
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"type": "uint256"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 216,
																								"type": "mapping(address => uint256)",
																								"value": "balances"
																							},
																							"id": 455,
																							"name": "Identifier",
																							"src": "5303:8:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 99,
																								"type": "address",
																								"value": "owner"
																							},
																							"id": 456,
																							"name": "Identifier",
																							"src": "5312:5:0"
																						}
																					],
																					"id": 457,
																					"name": "IndexAccess",
																					"src": "5303:15:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"isStructConstructorCall": false,
																						"lValueRequested": false,
																						"names": [
																							null
																						],
																						"type": "uint256",
																						"type_conversion": false
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"member_name": "add",
																								"referencedDeclaration": 96,
																								"type": "function (uint256,uint256) pure returns (uint256)"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"type": "uint256"
																									},
																									"children": [
																										{
																											"attributes": {
																												"argumentTypes": null,
																												"overloadedDeclarations": [
																													null
																												],
																												"referencedDeclaration": 216,
																												"type": "mapping(address => uint256)",
																												"value": "balances"
																											},
																											"id": 458,
																											"name": "Identifier",
																											"src": "5321:8:0"
																										},
																										{
																											"attributes": {
																												"argumentTypes": null,
																												"overloadedDeclarations": [
																													null
																												],
																												"referencedDeclaration": 99,
																												"type": "address",
																												"value": "owner"
																											},
																											"id": 459,
																											"name": "Identifier",
																											"src": "5330:5:0"
																										}
																									],
																									"id": 460,
																									"name": "IndexAccess",
																									"src": "5321:15:0"
																								}
																							],
																							"id": 461,
																							"name": "MemberAccess",
																							"src": "5321:19:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 387,
																								"type": "uint256",
																								"value": "fee"
																							},
																							"id": 462,
																							"name": "Identifier",
																							"src": "5341:3:0"
																						}
																					],
																					"id": 463,
																					"name": "FunctionCall",
																					"src": "5321:24:0"
																				}
																			],
																			"id": 464,
																			"name": "Assignment",
																			"src": "5303:42:0"
																		}
																	],
																	"id": 465,
																	"name": "ExpressionStatement",
																	"src": "5303:42:0"
																},
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "tuple()",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 168,
																						"type": "function (address,address,uint256)",
																						"value": "Transfer"
																					},
																					"id": 466,
																					"name": "Identifier",
																					"src": "5359:8:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 366,
																						"type": "address",
																						"value": "_from"
																					},
																					"id": 467,
																					"name": "Identifier",
																					"src": "5368:5:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 99,
																						"type": "address",
																						"value": "owner"
																					},
																					"id": 468,
																					"name": "Identifier",
																					"src": "5375:5:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 387,
																						"type": "uint256",
																						"value": "fee"
																					},
																					"id": 469,
																					"name": "Identifier",
																					"src": "5382:3:0"
																				}
																			],
																			"id": 470,
																			"name": "FunctionCall",
																			"src": "5359:27:0"
																		}
																	],
																	"id": 471,
																	"name": "ExpressionStatement",
																	"src": "5359:27:0"
																}
															],
															"id": 472,
															"name": "Block",
															"src": "5289:108:0"
														}
													],
													"id": 473,
													"name": "IfStatement",
													"src": "5276:121:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 168,
																		"type": "function (address,address,uint256)",
																		"value": "Transfer"
																	},
																	"id": 474,
																	"name": "Identifier",
																	"src": "5406:8:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 366,
																		"type": "address",
																		"value": "_from"
																	},
																	"id": 475,
																	"name": "Identifier",
																	"src": "5415:5:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 368,
																		"type": "address",
																		"value": "_to"
																	},
																	"id": 476,
																	"name": "Identifier",
																	"src": "5422:3:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 424,
																		"type": "uint256",
																		"value": "sendAmount"
																	},
																	"id": 477,
																	"name": "Identifier",
																	"src": "5427:10:0"
																}
															],
															"id": 478,
															"name": "FunctionCall",
															"src": "5406:32:0"
														}
													],
													"id": 479,
													"name": "ExpressionStatement",
													"src": "5406:32:0"
												}
											],
											"id": 480,
											"name": "Block",
											"src": "4659:786:0"
										}
									],
									"id": 481,
									"name": "FunctionDefinition",
									"src": "4565:880:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "approve",
										"payable": false,
										"scope": 546,
										"stateMutability": "nonpayable",
										"superFunction": 196,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_spender",
														"scope": 529,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 482,
															"name": "ElementaryTypeName",
															"src": "5702:7:0"
														}
													],
													"id": 483,
													"name": "VariableDeclaration",
													"src": "5702:16:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "_value",
														"scope": 529,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 484,
															"name": "ElementaryTypeName",
															"src": "5720:4:0"
														}
													],
													"id": 485,
													"name": "VariableDeclaration",
													"src": "5720:11:0"
												}
											],
											"id": 486,
											"name": "ParameterList",
											"src": "5701:31:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 492,
											"name": "ParameterList",
											"src": "5764:0:0"
										},
										{
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 240,
														"type": "modifier (uint256)",
														"value": "onlyPayloadSize"
													},
													"id": 487,
													"name": "Identifier",
													"src": "5740:15:0"
												},
												{
													"attributes": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_rational_64_by_1",
															"typeString": "int_const 64"
														},
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"operator": "*",
														"type": "int_const 64"
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"hexvalue": "32",
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"subdenomination": null,
																"token": "number",
																"type": "int_const 2",
																"value": "2"
															},
															"id": 488,
															"name": "Literal",
															"src": "5756:1:0"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"hexvalue": "3332",
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"subdenomination": null,
																"token": "number",
																"type": "int_const 32",
																"value": "32"
															},
															"id": 489,
															"name": "Literal",
															"src": "5760:2:0"
														}
													],
													"id": 490,
													"name": "BinaryOperation",
													"src": "5756:6:0"
												}
											],
											"id": 491,
											"name": "ModifierInvocation",
											"src": "5740:23:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1195,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 493,
																	"name": "Identifier",
																	"src": "6079:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "!",
																		"prefix": true,
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"type": "bool"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						},
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"operator": "&&",
																						"type": "bool"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isInlineArray": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"type": "bool"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"commonType": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"operator": "!=",
																										"type": "bool"
																									},
																									"children": [
																										{
																											"attributes": {
																												"argumentTypes": null,
																												"overloadedDeclarations": [
																													null
																												],
																												"referencedDeclaration": 485,
																												"type": "uint256",
																												"value": "_value"
																											},
																											"id": 494,
																											"name": "Identifier",
																											"src": "6090:6:0"
																										},
																										{
																											"attributes": {
																												"argumentTypes": null,
																												"hexvalue": "30",
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"lValueRequested": false,
																												"subdenomination": null,
																												"token": "number",
																												"type": "int_const 0",
																												"value": "0"
																											},
																											"id": 495,
																											"name": "Literal",
																											"src": "6100:1:0"
																										}
																									],
																									"id": 496,
																									"name": "BinaryOperation",
																									"src": "6090:11:0"
																								}
																							],
																							"id": 497,
																							"name": "TupleExpression",
																							"src": "6089:13:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isInlineArray": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"type": "bool"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"commonType": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"operator": "!=",
																										"type": "bool"
																									},
																									"children": [
																										{
																											"attributes": {
																												"argumentTypes": null,
																												"isConstant": false,
																												"isLValue": true,
																												"isPure": false,
																												"lValueRequested": false,
																												"type": "uint256"
																											},
																											"children": [
																												{
																													"attributes": {
																														"argumentTypes": null,
																														"isConstant": false,
																														"isLValue": true,
																														"isPure": false,
																														"lValueRequested": false,
																														"type": "mapping(address => uint256)"
																													},
																													"children": [
																														{
																															"attributes": {
																																"argumentTypes": null,
																																"overloadedDeclarations": [
																																	null
																																],
																																"referencedDeclaration": 357,
																																"type": "mapping(address => mapping(address => uint256))",
																																"value": "allowed"
																															},
																															"id": 498,
																															"name": "Identifier",
																															"src": "6107:7:0"
																														},
																														{
																															"attributes": {
																																"argumentTypes": null,
																																"isConstant": false,
																																"isLValue": false,
																																"isPure": false,
																																"lValueRequested": false,
																																"member_name": "sender",
																																"referencedDeclaration": null,
																																"type": "address"
																															},
																															"children": [
																																{
																																	"attributes": {
																																		"argumentTypes": null,
																																		"overloadedDeclarations": [
																																			null
																																		],
																																		"referencedDeclaration": 1177,
																																		"type": "msg",
																																		"value": "msg"
																																	},
																																	"id": 499,
																																	"name": "Identifier",
																																	"src": "6115:3:0"
																																}
																															],
																															"id": 500,
																															"name": "MemberAccess",
																															"src": "6115:10:0"
																														}
																													],
																													"id": 501,
																													"name": "IndexAccess",
																													"src": "6107:19:0"
																												},
																												{
																													"attributes": {
																														"argumentTypes": null,
																														"overloadedDeclarations": [
																															null
																														],
																														"referencedDeclaration": 483,
																														"type": "address",
																														"value": "_spender"
																													},
																													"id": 502,
																													"name": "Identifier",
																													"src": "6127:8:0"
																												}
																											],
																											"id": 503,
																											"name": "IndexAccess",
																											"src": "6107:29:0"
																										},
																										{
																											"attributes": {
																												"argumentTypes": null,
																												"hexvalue": "30",
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"lValueRequested": false,
																												"subdenomination": null,
																												"token": "number",
																												"type": "int_const 0",
																												"value": "0"
																											},
																											"id": 504,
																											"name": "Literal",
																											"src": "6140:1:0"
																										}
																									],
																									"id": 505,
																									"name": "BinaryOperation",
																									"src": "6107:34:0"
																								}
																							],
																							"id": 506,
																							"name": "TupleExpression",
																							"src": "6106:36:0"
																						}
																					],
																					"id": 507,
																					"name": "BinaryOperation",
																					"src": "6089:53:0"
																				}
																			],
																			"id": 508,
																			"name": "TupleExpression",
																			"src": "6088:55:0"
																		}
																	],
																	"id": 509,
																	"name": "UnaryOperation",
																	"src": "6087:56:0"
																}
															],
															"id": 510,
															"name": "FunctionCall",
															"src": "6079:65:0"
														}
													],
													"id": 511,
													"name": "ExpressionStatement",
													"src": "6079:65:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"type": "mapping(address => uint256)"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 357,
																						"type": "mapping(address => mapping(address => uint256))",
																						"value": "allowed"
																					},
																					"id": 512,
																					"name": "Identifier",
																					"src": "6155:7:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "sender",
																						"referencedDeclaration": null,
																						"type": "address"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1177,
																								"type": "msg",
																								"value": "msg"
																							},
																							"id": 513,
																							"name": "Identifier",
																							"src": "6163:3:0"
																						}
																					],
																					"id": 514,
																					"name": "MemberAccess",
																					"src": "6163:10:0"
																				}
																			],
																			"id": 516,
																			"name": "IndexAccess",
																			"src": "6155:19:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 483,
																				"type": "address",
																				"value": "_spender"
																			},
																			"id": 515,
																			"name": "Identifier",
																			"src": "6175:8:0"
																		}
																	],
																	"id": 517,
																	"name": "IndexAccess",
																	"src": "6155:29:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 485,
																		"type": "uint256",
																		"value": "_value"
																	},
																	"id": 518,
																	"name": "Identifier",
																	"src": "6187:6:0"
																}
															],
															"id": 519,
															"name": "Assignment",
															"src": "6155:38:0"
														}
													],
													"id": 520,
													"name": "ExpressionStatement",
													"src": "6155:38:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 204,
																		"type": "function (address,address,uint256)",
																		"value": "Approval"
																	},
																	"id": 521,
																	"name": "Identifier",
																	"src": "6203:8:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "sender",
																		"referencedDeclaration": null,
																		"type": "address"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1177,
																				"type": "msg",
																				"value": "msg"
																			},
																			"id": 522,
																			"name": "Identifier",
																			"src": "6212:3:0"
																		}
																	],
																	"id": 523,
																	"name": "MemberAccess",
																	"src": "6212:10:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 483,
																		"type": "address",
																		"value": "_spender"
																	},
																	"id": 524,
																	"name": "Identifier",
																	"src": "6224:8:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 485,
																		"type": "uint256",
																		"value": "_value"
																	},
																	"id": 525,
																	"name": "Identifier",
																	"src": "6234:6:0"
																}
															],
															"id": 526,
															"name": "FunctionCall",
															"src": "6203:38:0"
														}
													],
													"id": 527,
													"name": "ExpressionStatement",
													"src": "6203:38:0"
												}
											],
											"id": 528,
											"name": "Block",
											"src": "5764:484:0"
										}
									],
									"id": 529,
									"name": "FunctionDefinition",
									"src": "5685:563:0"
								},
								{
									"attributes": {
										"constant": true,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "allowance",
										"payable": false,
										"scope": 546,
										"stateMutability": "view",
										"superFunction": 180,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_owner",
														"scope": 545,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 530,
															"name": "ElementaryTypeName",
															"src": "6592:7:0"
														}
													],
													"id": 531,
													"name": "VariableDeclaration",
													"src": "6592:14:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "_spender",
														"scope": 545,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 532,
															"name": "ElementaryTypeName",
															"src": "6608:7:0"
														}
													],
													"id": 533,
													"name": "VariableDeclaration",
													"src": "6608:16:0"
												}
											],
											"id": 534,
											"name": "ParameterList",
											"src": "6591:34:0"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "remaining",
														"scope": 545,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 535,
															"name": "ElementaryTypeName",
															"src": "6651:4:0"
														}
													],
													"id": 536,
													"name": "VariableDeclaration",
													"src": "6651:14:0"
												}
											],
											"id": 537,
											"name": "ParameterList",
											"src": "6650:16:0"
										},
										{
											"children": [
												{
													"attributes": {
														"functionReturnParameters": 537
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"type": "mapping(address => uint256)"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 357,
																				"type": "mapping(address => mapping(address => uint256))",
																				"value": "allowed"
																			},
																			"id": 538,
																			"name": "Identifier",
																			"src": "6684:7:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 531,
																				"type": "address",
																				"value": "_owner"
																			},
																			"id": 539,
																			"name": "Identifier",
																			"src": "6692:6:0"
																		}
																	],
																	"id": 540,
																	"name": "IndexAccess",
																	"src": "6684:15:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 533,
																		"type": "address",
																		"value": "_spender"
																	},
																	"id": 541,
																	"name": "Identifier",
																	"src": "6700:8:0"
																}
															],
															"id": 542,
															"name": "IndexAccess",
															"src": "6684:25:0"
														}
													],
													"id": 543,
													"name": "Return",
													"src": "6677:32:0"
												}
											],
											"id": 544,
											"name": "Block",
											"src": "6667:49:0"
										}
									],
									"id": 545,
									"name": "FunctionDefinition",
									"src": "6573:143:0"
								}
							],
							"id": 546,
							"name": "ContractDefinition",
							"src": "4122:2597:0"
						},
						{
							"attributes": {
								"contractDependencies": [
									139
								],
								"contractKind": "contract",
								"documentation": "@title Pausable\n@dev Base contract which allows children to implement an emergency stop mechanism.",
								"fullyImplemented": true,
								"linearizedBaseContracts": [
									603,
									139
								],
								"name": "Pausable",
								"scope": 1175
							},
							"children": [
								{
									"attributes": {
										"arguments": [
											null
										]
									},
									"children": [
										{
											"attributes": {
												"contractScope": null,
												"name": "Ownable",
												"referencedDeclaration": 139,
												"type": "contract Ownable"
											},
											"id": 547,
											"name": "UserDefinedTypeName",
											"src": "6856:7:0"
										}
									],
									"id": 548,
									"name": "InheritanceSpecifier",
									"src": "6856:7:0"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "Pause"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 549,
											"name": "ParameterList",
											"src": "6879:2:0"
										}
									],
									"id": 550,
									"name": "EventDefinition",
									"src": "6868:14:0"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "Unpause"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 551,
											"name": "ParameterList",
											"src": "6898:2:0"
										}
									],
									"id": 552,
									"name": "EventDefinition",
									"src": "6885:16:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "paused",
										"scope": 603,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "bool",
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"name": "bool",
												"type": "bool"
											},
											"id": 553,
											"name": "ElementaryTypeName",
											"src": "6905:4:0"
										},
										{
											"attributes": {
												"argumentTypes": null,
												"hexvalue": "66616c7365",
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"subdenomination": null,
												"token": "bool",
												"type": "bool",
												"value": "false"
											},
											"id": 554,
											"name": "Literal",
											"src": "6926:5:0"
										}
									],
									"id": 555,
									"name": "VariableDeclaration",
									"src": "6905:26:0"
								},
								{
									"attributes": {
										"name": "whenNotPaused",
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 556,
											"name": "ParameterList",
											"src": "7056:2:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1195,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 557,
																	"name": "Identifier",
																	"src": "7065:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "!",
																		"prefix": true,
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 555,
																				"type": "bool",
																				"value": "paused"
																			},
																			"id": 558,
																			"name": "Identifier",
																			"src": "7074:6:0"
																		}
																	],
																	"id": 559,
																	"name": "UnaryOperation",
																	"src": "7073:7:0"
																}
															],
															"id": 560,
															"name": "FunctionCall",
															"src": "7065:16:0"
														}
													],
													"id": 561,
													"name": "ExpressionStatement",
													"src": "7065:16:0"
												},
												{
													"id": 562,
													"name": "PlaceholderStatement",
													"src": "7087:1:0"
												}
											],
											"id": 563,
											"name": "Block",
											"src": "7059:34:0"
										}
									],
									"id": 564,
									"name": "ModifierDefinition",
									"src": "7034:59:0"
								},
								{
									"attributes": {
										"name": "whenPaused",
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 565,
											"name": "ParameterList",
											"src": "7209:2:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1195,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 566,
																	"name": "Identifier",
																	"src": "7218:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 555,
																		"type": "bool",
																		"value": "paused"
																	},
																	"id": 567,
																	"name": "Identifier",
																	"src": "7226:6:0"
																}
															],
															"id": 568,
															"name": "FunctionCall",
															"src": "7218:15:0"
														}
													],
													"id": 569,
													"name": "ExpressionStatement",
													"src": "7218:15:0"
												},
												{
													"id": 570,
													"name": "PlaceholderStatement",
													"src": "7239:1:0"
												}
											],
											"id": 571,
											"name": "Block",
											"src": "7212:33:0"
										}
									],
									"id": 572,
									"name": "ModifierDefinition",
									"src": "7190:55:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "pause",
										"payable": false,
										"scope": 603,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 573,
											"name": "ParameterList",
											"src": "7338:2:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 578,
											"name": "ParameterList",
											"src": "7372:0:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 119,
														"type": "modifier ()",
														"value": "onlyOwner"
													},
													"id": 574,
													"name": "Identifier",
													"src": "7341:9:0"
												}
											],
											"id": 575,
											"name": "ModifierInvocation",
											"src": "7341:9:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 564,
														"type": "modifier ()",
														"value": "whenNotPaused"
													},
													"id": 576,
													"name": "Identifier",
													"src": "7351:13:0"
												}
											],
											"id": 577,
											"name": "ModifierInvocation",
											"src": "7351:13:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 555,
																		"type": "bool",
																		"value": "paused"
																	},
																	"id": 579,
																	"name": "Identifier",
																	"src": "7378:6:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "74727565",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "bool",
																		"type": "bool",
																		"value": "true"
																	},
																	"id": 580,
																	"name": "Literal",
																	"src": "7387:4:0"
																}
															],
															"id": 581,
															"name": "Assignment",
															"src": "7378:13:0"
														}
													],
													"id": 582,
													"name": "ExpressionStatement",
													"src": "7378:13:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"arguments": [
																	null
																],
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			null
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 550,
																		"type": "function ()",
																		"value": "Pause"
																	},
																	"id": 583,
																	"name": "Identifier",
																	"src": "7397:5:0"
																}
															],
															"id": 584,
															"name": "FunctionCall",
															"src": "7397:7:0"
														}
													],
													"id": 585,
													"name": "ExpressionStatement",
													"src": "7397:7:0"
												}
											],
											"id": 586,
											"name": "Block",
											"src": "7372:37:0"
										}
									],
									"id": 587,
									"name": "FunctionDefinition",
									"src": "7324:85:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "unpause",
										"payable": false,
										"scope": 603,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 588,
											"name": "ParameterList",
											"src": "7507:2:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 593,
											"name": "ParameterList",
											"src": "7538:0:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 119,
														"type": "modifier ()",
														"value": "onlyOwner"
													},
													"id": 589,
													"name": "Identifier",
													"src": "7510:9:0"
												}
											],
											"id": 590,
											"name": "ModifierInvocation",
											"src": "7510:9:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 572,
														"type": "modifier ()",
														"value": "whenPaused"
													},
													"id": 591,
													"name": "Identifier",
													"src": "7520:10:0"
												}
											],
											"id": 592,
											"name": "ModifierInvocation",
											"src": "7520:10:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 555,
																		"type": "bool",
																		"value": "paused"
																	},
																	"id": 594,
																	"name": "Identifier",
																	"src": "7544:6:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "66616c7365",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "bool",
																		"type": "bool",
																		"value": "false"
																	},
																	"id": 595,
																	"name": "Literal",
																	"src": "7553:5:0"
																}
															],
															"id": 596,
															"name": "Assignment",
															"src": "7544:14:0"
														}
													],
													"id": 597,
													"name": "ExpressionStatement",
													"src": "7544:14:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"arguments": [
																	null
																],
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			null
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 552,
																		"type": "function ()",
																		"value": "Unpause"
																	},
																	"id": 598,
																	"name": "Identifier",
																	"src": "7564:7:0"
																}
															],
															"id": 599,
															"name": "FunctionCall",
															"src": "7564:9:0"
														}
													],
													"id": 600,
													"name": "ExpressionStatement",
													"src": "7564:9:0"
												}
											],
											"id": 601,
											"name": "Block",
											"src": "7538:40:0"
										}
									],
									"id": 602,
									"name": "FunctionDefinition",
									"src": "7491:87:0"
								}
							],
							"id": 603,
							"name": "ContractDefinition",
							"src": "6835:745:0"
						},
						{
							"attributes": {
								"contractDependencies": [
									139,
									169,
									347
								],
								"contractKind": "contract",
								"documentation": null,
								"fullyImplemented": false,
								"linearizedBaseContracts": [
									725,
									347,
									169,
									139
								],
								"name": "BlackList",
								"scope": 1175
							},
							"children": [
								{
									"attributes": {
										"arguments": [
											null
										]
									},
									"children": [
										{
											"attributes": {
												"contractScope": null,
												"name": "Ownable",
												"referencedDeclaration": 139,
												"type": "contract Ownable"
											},
											"id": 604,
											"name": "UserDefinedTypeName",
											"src": "7604:7:0"
										}
									],
									"id": 605,
									"name": "InheritanceSpecifier",
									"src": "7604:7:0"
								},
								{
									"attributes": {
										"arguments": [
											null
										]
									},
									"children": [
										{
											"attributes": {
												"contractScope": null,
												"name": "BasicToken",
												"referencedDeclaration": 347,
												"type": "contract BasicToken"
											},
											"id": 606,
											"name": "UserDefinedTypeName",
											"src": "7613:10:0"
										}
									],
									"id": 607,
									"name": "InheritanceSpecifier",
									"src": "7613:10:0"
								},
								{
									"attributes": {
										"constant": true,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "getBlackListStatus",
										"payable": false,
										"scope": 725,
										"stateMutability": "view",
										"superFunction": null,
										"visibility": "external"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_maker",
														"scope": 619,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 608,
															"name": "ElementaryTypeName",
															"src": "7778:7:0"
														}
													],
													"id": 609,
													"name": "VariableDeclaration",
													"src": "7778:14:0"
												}
											],
											"id": 610,
											"name": "ParameterList",
											"src": "7777:16:0"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 619,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "bool",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "bool",
																"type": "bool"
															},
															"id": 611,
															"name": "ElementaryTypeName",
															"src": "7821:4:0"
														}
													],
													"id": 612,
													"name": "VariableDeclaration",
													"src": "7821:4:0"
												}
											],
											"id": 613,
											"name": "ParameterList",
											"src": "7820:6:0"
										},
										{
											"children": [
												{
													"attributes": {
														"functionReturnParameters": 613
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 631,
																		"type": "mapping(address => bool)",
																		"value": "isBlackListed"
																	},
																	"id": 614,
																	"name": "Identifier",
																	"src": "7844:13:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 609,
																		"type": "address",
																		"value": "_maker"
																	},
																	"id": 615,
																	"name": "Identifier",
																	"src": "7858:6:0"
																}
															],
															"id": 616,
															"name": "IndexAccess",
															"src": "7844:21:0"
														}
													],
													"id": 617,
													"name": "Return",
													"src": "7837:28:0"
												}
											],
											"id": 618,
											"name": "Block",
											"src": "7827:45:0"
										}
									],
									"id": 619,
									"name": "FunctionDefinition",
									"src": "7750:122:0"
								},
								{
									"attributes": {
										"constant": true,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "getOwner",
										"payable": false,
										"scope": 725,
										"stateMutability": "view",
										"superFunction": null,
										"visibility": "external"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 620,
											"name": "ParameterList",
											"src": "7895:2:0"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 627,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 621,
															"name": "ElementaryTypeName",
															"src": "7925:7:0"
														}
													],
													"id": 622,
													"name": "VariableDeclaration",
													"src": "7925:7:0"
												}
											],
											"id": 623,
											"name": "ParameterList",
											"src": "7924:9:0"
										},
										{
											"children": [
												{
													"attributes": {
														"functionReturnParameters": 623
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"overloadedDeclarations": [
																	null
																],
																"referencedDeclaration": 99,
																"type": "address",
																"value": "owner"
															},
															"id": 624,
															"name": "Identifier",
															"src": "7951:5:0"
														}
													],
													"id": 625,
													"name": "Return",
													"src": "7944:12:0"
												}
											],
											"id": 626,
											"name": "Block",
											"src": "7934:29:0"
										}
									],
									"id": 627,
									"name": "FunctionDefinition",
									"src": "7878:85:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "isBlackListed",
										"scope": 725,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "mapping(address => bool)",
										"value": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"type": "mapping(address => bool)"
											},
											"children": [
												{
													"attributes": {
														"name": "address",
														"type": "address"
													},
													"id": 628,
													"name": "ElementaryTypeName",
													"src": "7978:7:0"
												},
												{
													"attributes": {
														"name": "bool",
														"type": "bool"
													},
													"id": 629,
													"name": "ElementaryTypeName",
													"src": "7989:4:0"
												}
											],
											"id": 630,
											"name": "Mapping",
											"src": "7969:25:0"
										}
									],
									"id": 631,
									"name": "VariableDeclaration",
									"src": "7969:46:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "addBlackList",
										"payable": false,
										"scope": 725,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_evilUser",
														"scope": 649,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 632,
															"name": "ElementaryTypeName",
															"src": "8049:7:0"
														}
													],
													"id": 633,
													"name": "VariableDeclaration",
													"src": "8049:17:0"
												}
											],
											"id": 634,
											"name": "ParameterList",
											"src": "8048:19:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 637,
											"name": "ParameterList",
											"src": "8085:0:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 119,
														"type": "modifier ()",
														"value": "onlyOwner"
													},
													"id": 635,
													"name": "Identifier",
													"src": "8075:9:0"
												}
											],
											"id": 636,
											"name": "ModifierInvocation",
											"src": "8075:9:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 631,
																				"type": "mapping(address => bool)",
																				"value": "isBlackListed"
																			},
																			"id": 638,
																			"name": "Identifier",
																			"src": "8095:13:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 633,
																				"type": "address",
																				"value": "_evilUser"
																			},
																			"id": 639,
																			"name": "Identifier",
																			"src": "8109:9:0"
																		}
																	],
																	"id": 640,
																	"name": "IndexAccess",
																	"src": "8095:24:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "74727565",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "bool",
																		"type": "bool",
																		"value": "true"
																	},
																	"id": 641,
																	"name": "Literal",
																	"src": "8122:4:0"
																}
															],
															"id": 642,
															"name": "Assignment",
															"src": "8095:31:0"
														}
													],
													"id": 643,
													"name": "ExpressionStatement",
													"src": "8095:31:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 720,
																		"type": "function (address)",
																		"value": "AddedBlackList"
																	},
																	"id": 644,
																	"name": "Identifier",
																	"src": "8136:14:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 633,
																		"type": "address",
																		"value": "_evilUser"
																	},
																	"id": 645,
																	"name": "Identifier",
																	"src": "8151:9:0"
																}
															],
															"id": 646,
															"name": "FunctionCall",
															"src": "8136:25:0"
														}
													],
													"id": 647,
													"name": "ExpressionStatement",
													"src": "8136:25:0"
												}
											],
											"id": 648,
											"name": "Block",
											"src": "8085:83:0"
										}
									],
									"id": 649,
									"name": "FunctionDefinition",
									"src": "8026:142:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "removeBlackList",
										"payable": false,
										"scope": 725,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_clearedUser",
														"scope": 667,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 650,
															"name": "ElementaryTypeName",
															"src": "8200:7:0"
														}
													],
													"id": 651,
													"name": "VariableDeclaration",
													"src": "8200:20:0"
												}
											],
											"id": 652,
											"name": "ParameterList",
											"src": "8199:22:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 655,
											"name": "ParameterList",
											"src": "8239:0:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 119,
														"type": "modifier ()",
														"value": "onlyOwner"
													},
													"id": 653,
													"name": "Identifier",
													"src": "8229:9:0"
												}
											],
											"id": 654,
											"name": "ModifierInvocation",
											"src": "8229:9:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 631,
																				"type": "mapping(address => bool)",
																				"value": "isBlackListed"
																			},
																			"id": 656,
																			"name": "Identifier",
																			"src": "8249:13:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 651,
																				"type": "address",
																				"value": "_clearedUser"
																			},
																			"id": 657,
																			"name": "Identifier",
																			"src": "8263:12:0"
																		}
																	],
																	"id": 658,
																	"name": "IndexAccess",
																	"src": "8249:27:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "66616c7365",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "bool",
																		"type": "bool",
																		"value": "false"
																	},
																	"id": 659,
																	"name": "Literal",
																	"src": "8279:5:0"
																}
															],
															"id": 660,
															"name": "Assignment",
															"src": "8249:35:0"
														}
													],
													"id": 661,
													"name": "ExpressionStatement",
													"src": "8249:35:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 724,
																		"type": "function (address)",
																		"value": "RemovedBlackList"
																	},
																	"id": 662,
																	"name": "Identifier",
																	"src": "8294:16:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 651,
																		"type": "address",
																		"value": "_clearedUser"
																	},
																	"id": 663,
																	"name": "Identifier",
																	"src": "8311:12:0"
																}
															],
															"id": 664,
															"name": "FunctionCall",
															"src": "8294:30:0"
														}
													],
													"id": 665,
													"name": "ExpressionStatement",
													"src": "8294:30:0"
												}
											],
											"id": 666,
											"name": "Block",
											"src": "8239:92:0"
										}
									],
									"id": 667,
									"name": "FunctionDefinition",
									"src": "8174:157:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "destroyBlackFunds",
										"payable": false,
										"scope": 725,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_blackListedUser",
														"scope": 710,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 668,
															"name": "ElementaryTypeName",
															"src": "8365:7:0"
														}
													],
													"id": 669,
													"name": "VariableDeclaration",
													"src": "8365:24:0"
												}
											],
											"id": 670,
											"name": "ParameterList",
											"src": "8364:26:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 673,
											"name": "ParameterList",
											"src": "8408:0:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 119,
														"type": "modifier ()",
														"value": "onlyOwner"
													},
													"id": 671,
													"name": "Identifier",
													"src": "8398:9:0"
												}
											],
											"id": 672,
											"name": "ModifierInvocation",
											"src": "8398:9:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1195,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 674,
																	"name": "Identifier",
																	"src": "8418:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 631,
																				"type": "mapping(address => bool)",
																				"value": "isBlackListed"
																			},
																			"id": 675,
																			"name": "Identifier",
																			"src": "8426:13:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 669,
																				"type": "address",
																				"value": "_blackListedUser"
																			},
																			"id": 676,
																			"name": "Identifier",
																			"src": "8440:16:0"
																		}
																	],
																	"id": 677,
																	"name": "IndexAccess",
																	"src": "8426:31:0"
																}
															],
															"id": 678,
															"name": "FunctionCall",
															"src": "8418:40:0"
														}
													],
													"id": 679,
													"name": "ExpressionStatement",
													"src": "8418:40:0"
												},
												{
													"attributes": {
														"assignments": [
															681
														]
													},
													"children": [
														{
															"attributes": {
																"constant": false,
																"name": "dirtyFunds",
																"scope": 710,
																"stateVariable": false,
																"storageLocation": "default",
																"type": "uint256",
																"value": null,
																"visibility": "internal"
															},
															"children": [
																{
																	"attributes": {
																		"name": "uint",
																		"type": "uint256"
																	},
																	"id": 680,
																	"name": "ElementaryTypeName",
																	"src": "8468:4:0"
																}
															],
															"id": 681,
															"name": "VariableDeclaration",
															"src": "8468:15:0"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "uint256",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"overloadedDeclarations": [
																			346
																		],
																		"referencedDeclaration": 346,
																		"type": "function (address) view returns (uint256)",
																		"value": "balanceOf"
																	},
																	"id": 682,
																	"name": "Identifier",
																	"src": "8486:9:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 669,
																		"type": "address",
																		"value": "_blackListedUser"
																	},
																	"id": 683,
																	"name": "Identifier",
																	"src": "8496:16:0"
																}
															],
															"id": 684,
															"name": "FunctionCall",
															"src": "8486:27:0"
														}
													],
													"id": 685,
													"name": "VariableDeclarationStatement",
													"src": "8468:45:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 216,
																				"type": "mapping(address => uint256)",
																				"value": "balances"
																			},
																			"id": 686,
																			"name": "Identifier",
																			"src": "8523:8:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 669,
																				"type": "address",
																				"value": "_blackListedUser"
																			},
																			"id": 687,
																			"name": "Identifier",
																			"src": "8532:16:0"
																		}
																	],
																	"id": 688,
																	"name": "IndexAccess",
																	"src": "8523:26:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "30",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "number",
																		"type": "int_const 0",
																		"value": "0"
																	},
																	"id": 689,
																	"name": "Literal",
																	"src": "8552:1:0"
																}
															],
															"id": 690,
															"name": "Assignment",
															"src": "8523:30:0"
														}
													],
													"id": 691,
													"name": "ExpressionStatement",
													"src": "8523:30:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "-=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 141,
																		"type": "uint256",
																		"value": "_totalSupply"
																	},
																	"id": 692,
																	"name": "Identifier",
																	"src": "8563:12:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 681,
																		"type": "uint256",
																		"value": "dirtyFunds"
																	},
																	"id": 693,
																	"name": "Identifier",
																	"src": "8579:10:0"
																}
															],
															"id": 694,
															"name": "Assignment",
															"src": "8563:26:0"
														}
													],
													"id": 695,
													"name": "ExpressionStatement",
													"src": "8563:26:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 168,
																		"type": "function (address,address,uint256)",
																		"value": "Transfer"
																	},
																	"id": 696,
																	"name": "Identifier",
																	"src": "8600:8:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 669,
																		"type": "address",
																		"value": "_blackListedUser"
																	},
																	"id": 697,
																	"name": "Identifier",
																	"src": "8609:16:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"isStructConstructorCall": false,
																		"lValueRequested": false,
																		"names": [
																			null
																		],
																		"type": "address",
																		"type_conversion": true
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"type": "type(address)",
																				"value": "address"
																			},
																			"id": 698,
																			"name": "ElementaryTypeNameExpression",
																			"src": "8627:7:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"hexvalue": "30",
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"subdenomination": null,
																				"token": "number",
																				"type": "int_const 0",
																				"value": "0"
																			},
																			"id": 699,
																			"name": "Literal",
																			"src": "8635:1:0"
																		}
																	],
																	"id": 700,
																	"name": "FunctionCall",
																	"src": "8627:10:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 681,
																		"type": "uint256",
																		"value": "dirtyFunds"
																	},
																	"id": 701,
																	"name": "Identifier",
																	"src": "8639:10:0"
																}
															],
															"id": 702,
															"name": "FunctionCall",
															"src": "8600:50:0"
														}
													],
													"id": 703,
													"name": "ExpressionStatement",
													"src": "8600:50:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 716,
																		"type": "function (address,uint256)",
																		"value": "DestroyedBlackFunds"
																	},
																	"id": 704,
																	"name": "Identifier",
																	"src": "8660:19:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 669,
																		"type": "address",
																		"value": "_blackListedUser"
																	},
																	"id": 705,
																	"name": "Identifier",
																	"src": "8680:16:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 681,
																		"type": "uint256",
																		"value": "dirtyFunds"
																	},
																	"id": 706,
																	"name": "Identifier",
																	"src": "8698:10:0"
																}
															],
															"id": 707,
															"name": "FunctionCall",
															"src": "8660:49:0"
														}
													],
													"id": 708,
													"name": "ExpressionStatement",
													"src": "8660:49:0"
												}
											],
											"id": 709,
											"name": "Block",
											"src": "8408:308:0"
										}
									],
									"id": 710,
									"name": "FunctionDefinition",
									"src": "8337:379:0"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "DestroyedBlackFunds"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"indexed": false,
														"name": "_blackListedUser",
														"scope": 716,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 711,
															"name": "ElementaryTypeName",
															"src": "8748:7:0"
														}
													],
													"id": 712,
													"name": "VariableDeclaration",
													"src": "8748:24:0"
												},
												{
													"attributes": {
														"constant": false,
														"indexed": false,
														"name": "_balance",
														"scope": 716,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 713,
															"name": "ElementaryTypeName",
															"src": "8774:4:0"
														}
													],
													"id": 714,
													"name": "VariableDeclaration",
													"src": "8774:13:0"
												}
											],
											"id": 715,
											"name": "ParameterList",
											"src": "8747:41:0"
										}
									],
									"id": 716,
									"name": "EventDefinition",
									"src": "8722:67:0"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "AddedBlackList"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"indexed": false,
														"name": "_user",
														"scope": 720,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 717,
															"name": "ElementaryTypeName",
															"src": "8816:7:0"
														}
													],
													"id": 718,
													"name": "VariableDeclaration",
													"src": "8816:13:0"
												}
											],
											"id": 719,
											"name": "ParameterList",
											"src": "8815:15:0"
										}
									],
									"id": 720,
									"name": "EventDefinition",
									"src": "8795:36:0"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "RemovedBlackList"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"indexed": false,
														"name": "_user",
														"scope": 724,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 721,
															"name": "ElementaryTypeName",
															"src": "8860:7:0"
														}
													],
													"id": 722,
													"name": "VariableDeclaration",
													"src": "8860:13:0"
												}
											],
											"id": 723,
											"name": "ParameterList",
											"src": "8859:15:0"
										}
									],
									"id": 724,
									"name": "EventDefinition",
									"src": "8837:38:0"
								}
							],
							"id": 725,
							"name": "ContractDefinition",
							"src": "7582:1296:0"
						},
						{
							"attributes": {
								"contractDependencies": [
									546,
									139,
									169,
									205,
									347
								],
								"contractKind": "contract",
								"documentation": null,
								"fullyImplemented": false,
								"linearizedBaseContracts": [
									757,
									546,
									205,
									347,
									169,
									139
								],
								"name": "UpgradedStandardToken",
								"scope": 1175
							},
							"children": [
								{
									"attributes": {
										"arguments": [
											null
										]
									},
									"children": [
										{
											"attributes": {
												"contractScope": null,
												"name": "StandardToken",
												"referencedDeclaration": 546,
												"type": "contract StandardToken"
											},
											"id": 726,
											"name": "UserDefinedTypeName",
											"src": "8914:13:0"
										}
									],
									"id": 727,
									"name": "InheritanceSpecifier",
									"src": "8914:13:0"
								},
								{
									"attributes": {
										"body": null,
										"constant": false,
										"implemented": false,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "transferByLegacy",
										"payable": false,
										"scope": 757,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "from",
														"scope": 736,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 728,
															"name": "ElementaryTypeName",
															"src": "9080:7:0"
														}
													],
													"id": 729,
													"name": "VariableDeclaration",
													"src": "9080:12:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "to",
														"scope": 736,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 730,
															"name": "ElementaryTypeName",
															"src": "9094:7:0"
														}
													],
													"id": 731,
													"name": "VariableDeclaration",
													"src": "9094:10:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "value",
														"scope": 736,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 732,
															"name": "ElementaryTypeName",
															"src": "9106:4:0"
														}
													],
													"id": 733,
													"name": "VariableDeclaration",
													"src": "9106:10:0"
												}
											],
											"id": 734,
											"name": "ParameterList",
											"src": "9079:38:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 735,
											"name": "ParameterList",
											"src": "9124:0:0"
										}
									],
									"id": 736,
									"name": "FunctionDefinition",
									"src": "9054:71:0"
								},
								{
									"attributes": {
										"body": null,
										"constant": false,
										"implemented": false,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "transferFromByLegacy",
										"payable": false,
										"scope": 757,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "sender",
														"scope": 747,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 737,
															"name": "ElementaryTypeName",
															"src": "9160:7:0"
														}
													],
													"id": 738,
													"name": "VariableDeclaration",
													"src": "9160:14:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "from",
														"scope": 747,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 739,
															"name": "ElementaryTypeName",
															"src": "9176:7:0"
														}
													],
													"id": 740,
													"name": "VariableDeclaration",
													"src": "9176:12:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "spender",
														"scope": 747,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 741,
															"name": "ElementaryTypeName",
															"src": "9190:7:0"
														}
													],
													"id": 742,
													"name": "VariableDeclaration",
													"src": "9190:15:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "value",
														"scope": 747,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 743,
															"name": "ElementaryTypeName",
															"src": "9207:4:0"
														}
													],
													"id": 744,
													"name": "VariableDeclaration",
													"src": "9207:10:0"
												}
											],
											"id": 745,
											"name": "ParameterList",
											"src": "9159:59:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 746,
											"name": "ParameterList",
											"src": "9225:0:0"
										}
									],
									"id": 747,
									"name": "FunctionDefinition",
									"src": "9130:96:0"
								},
								{
									"attributes": {
										"body": null,
										"constant": false,
										"implemented": false,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "approveByLegacy",
										"payable": false,
										"scope": 757,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "from",
														"scope": 756,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 748,
															"name": "ElementaryTypeName",
															"src": "9256:7:0"
														}
													],
													"id": 749,
													"name": "VariableDeclaration",
													"src": "9256:12:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "spender",
														"scope": 756,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 750,
															"name": "ElementaryTypeName",
															"src": "9270:7:0"
														}
													],
													"id": 751,
													"name": "VariableDeclaration",
													"src": "9270:15:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "value",
														"scope": 756,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 752,
															"name": "ElementaryTypeName",
															"src": "9287:4:0"
														}
													],
													"id": 753,
													"name": "VariableDeclaration",
													"src": "9287:10:0"
												}
											],
											"id": 754,
											"name": "ParameterList",
											"src": "9255:43:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 755,
											"name": "ParameterList",
											"src": "9305:0:0"
										}
									],
									"id": 756,
									"name": "FunctionDefinition",
									"src": "9231:75:0"
								}
							],
							"id": 757,
							"name": "ContractDefinition",
							"src": "8880:428:0"
						},
						{
							"attributes": {
								"contractDependencies": [
									546,
									139,
									169,
									205,
									347,
									603,
									725
								],
								"contractKind": "contract",
								"documentation": null,
								"fullyImplemented": true,
								"linearizedBaseContracts": [
									1174,
									725,
									546,
									205,
									347,
									169,
									603,
									139
								],
								"name": "TetherToken",
								"scope": 1175
							},
							"children": [
								{
									"attributes": {
										"arguments": [
											null
										]
									},
									"children": [
										{
											"attributes": {
												"contractScope": null,
												"name": "Pausable",
												"referencedDeclaration": 603,
												"type": "contract Pausable"
											},
											"id": 758,
											"name": "UserDefinedTypeName",
											"src": "9334:8:0"
										}
									],
									"id": 759,
									"name": "InheritanceSpecifier",
									"src": "9334:8:0"
								},
								{
									"attributes": {
										"arguments": [
											null
										]
									},
									"children": [
										{
											"attributes": {
												"contractScope": null,
												"name": "StandardToken",
												"referencedDeclaration": 546,
												"type": "contract StandardToken"
											},
											"id": 760,
											"name": "UserDefinedTypeName",
											"src": "9344:13:0"
										}
									],
									"id": 761,
									"name": "InheritanceSpecifier",
									"src": "9344:13:0"
								},
								{
									"attributes": {
										"arguments": [
											null
										]
									},
									"children": [
										{
											"attributes": {
												"contractScope": null,
												"name": "BlackList",
												"referencedDeclaration": 725,
												"type": "contract BlackList"
											},
											"id": 762,
											"name": "UserDefinedTypeName",
											"src": "9359:9:0"
										}
									],
									"id": 763,
									"name": "InheritanceSpecifier",
									"src": "9359:9:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "name",
										"scope": 1174,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "string storage ref",
										"value": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"name": "string",
												"type": "string storage pointer"
											},
											"id": 764,
											"name": "ElementaryTypeName",
											"src": "9376:6:0"
										}
									],
									"id": 765,
									"name": "VariableDeclaration",
									"src": "9376:18:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "symbol",
										"scope": 1174,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "string storage ref",
										"value": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"name": "string",
												"type": "string storage pointer"
											},
											"id": 766,
											"name": "ElementaryTypeName",
											"src": "9400:6:0"
										}
									],
									"id": 767,
									"name": "VariableDeclaration",
									"src": "9400:20:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "decimals",
										"scope": 1174,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "uint256",
										"value": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"name": "uint",
												"type": "uint256"
											},
											"id": 768,
											"name": "ElementaryTypeName",
											"src": "9426:4:0"
										}
									],
									"id": 769,
									"name": "VariableDeclaration",
									"src": "9426:20:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "upgradedAddress",
										"scope": 1174,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "address",
										"value": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"name": "address",
												"type": "address"
											},
											"id": 770,
											"name": "ElementaryTypeName",
											"src": "9452:7:0"
										}
									],
									"id": 771,
									"name": "VariableDeclaration",
									"src": "9452:30:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "deprecated",
										"scope": 1174,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "bool",
										"value": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"name": "bool",
												"type": "bool"
											},
											"id": 772,
											"name": "ElementaryTypeName",
											"src": "9488:4:0"
										}
									],
									"id": 773,
									"name": "VariableDeclaration",
									"src": "9488:22:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": true,
										"modifiers": [
											null
										],
										"name": "TetherToken",
										"payable": false,
										"scope": 1174,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_initialSupply",
														"scope": 819,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 774,
															"name": "ElementaryTypeName",
															"src": "9826:4:0"
														}
													],
													"id": 775,
													"name": "VariableDeclaration",
													"src": "9826:19:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "_name",
														"scope": 819,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "string memory",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "string",
																"type": "string storage pointer"
															},
															"id": 776,
															"name": "ElementaryTypeName",
															"src": "9847:6:0"
														}
													],
													"id": 777,
													"name": "VariableDeclaration",
													"src": "9847:12:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "_symbol",
														"scope": 819,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "string memory",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "string",
																"type": "string storage pointer"
															},
															"id": 778,
															"name": "ElementaryTypeName",
															"src": "9861:6:0"
														}
													],
													"id": 779,
													"name": "VariableDeclaration",
													"src": "9861:14:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "_decimals",
														"scope": 819,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 780,
															"name": "ElementaryTypeName",
															"src": "9877:4:0"
														}
													],
													"id": 781,
													"name": "VariableDeclaration",
													"src": "9877:14:0"
												}
											],
											"id": 782,
											"name": "ParameterList",
											"src": "9825:67:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 783,
											"name": "ParameterList",
											"src": "9900:0:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 141,
																		"type": "uint256",
																		"value": "_totalSupply"
																	},
																	"id": 784,
																	"name": "Identifier",
																	"src": "9910:12:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 775,
																		"type": "uint256",
																		"value": "_initialSupply"
																	},
																	"id": 785,
																	"name": "Identifier",
																	"src": "9925:14:0"
																}
															],
															"id": 786,
															"name": "Assignment",
															"src": "9910:29:0"
														}
													],
													"id": 787,
													"name": "ExpressionStatement",
													"src": "9910:29:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "string storage ref"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 765,
																		"type": "string storage ref",
																		"value": "name"
																	},
																	"id": 788,
																	"name": "Identifier",
																	"src": "9949:4:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 777,
																		"type": "string memory",
																		"value": "_name"
																	},
																	"id": 789,
																	"name": "Identifier",
																	"src": "9956:5:0"
																}
															],
															"id": 790,
															"name": "Assignment",
															"src": "9949:12:0"
														}
													],
													"id": 791,
													"name": "ExpressionStatement",
													"src": "9949:12:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "string storage ref"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 767,
																		"type": "string storage ref",
																		"value": "symbol"
																	},
																	"id": 792,
																	"name": "Identifier",
																	"src": "9971:6:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 779,
																		"type": "string memory",
																		"value": "_symbol"
																	},
																	"id": 793,
																	"name": "Identifier",
																	"src": "9980:7:0"
																}
															],
															"id": 794,
															"name": "Assignment",
															"src": "9971:16:0"
														}
													],
													"id": 795,
													"name": "ExpressionStatement",
													"src": "9971:16:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 769,
																		"type": "uint256",
																		"value": "decimals"
																	},
																	"id": 796,
																	"name": "Identifier",
																	"src": "9997:8:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 781,
																		"type": "uint256",
																		"value": "_decimals"
																	},
																	"id": 797,
																	"name": "Identifier",
																	"src": "10008:9:0"
																}
															],
															"id": 798,
															"name": "Assignment",
															"src": "9997:20:0"
														}
													],
													"id": 799,
													"name": "ExpressionStatement",
													"src": "9997:20:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 216,
																				"type": "mapping(address => uint256)",
																				"value": "balances"
																			},
																			"id": 800,
																			"name": "Identifier",
																			"src": "10027:8:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 99,
																				"type": "address",
																				"value": "owner"
																			},
																			"id": 801,
																			"name": "Identifier",
																			"src": "10036:5:0"
																		}
																	],
																	"id": 802,
																	"name": "IndexAccess",
																	"src": "10027:15:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 775,
																		"type": "uint256",
																		"value": "_initialSupply"
																	},
																	"id": 803,
																	"name": "Identifier",
																	"src": "10045:14:0"
																}
															],
															"id": 804,
															"name": "Assignment",
															"src": "10027:32:0"
														}
													],
													"id": 805,
													"name": "ExpressionStatement",
													"src": "10027:32:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 773,
																		"type": "bool",
																		"value": "deprecated"
																	},
																	"id": 806,
																	"name": "Identifier",
																	"src": "10069:10:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "66616c7365",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "bool",
																		"type": "bool",
																		"value": "false"
																	},
																	"id": 807,
																	"name": "Literal",
																	"src": "10082:5:0"
																}
															],
															"id": 808,
															"name": "Assignment",
															"src": "10069:18:0"
														}
													],
													"id": 809,
													"name": "ExpressionStatement",
													"src": "10069:18:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 168,
																		"type": "function (address,address,uint256)",
																		"value": "Transfer"
																	},
																	"id": 810,
																	"name": "Identifier",
																	"src": "10097:8:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"isStructConstructorCall": false,
																		"lValueRequested": false,
																		"names": [
																			null
																		],
																		"type": "address",
																		"type_conversion": true
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"type": "type(address)",
																				"value": "address"
																			},
																			"id": 811,
																			"name": "ElementaryTypeNameExpression",
																			"src": "10106:7:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"hexvalue": "30",
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"subdenomination": null,
																				"token": "number",
																				"type": "int_const 0",
																				"value": "0"
																			},
																			"id": 812,
																			"name": "Literal",
																			"src": "10114:1:0"
																		}
																	],
																	"id": 813,
																	"name": "FunctionCall",
																	"src": "10106:10:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 99,
																		"type": "address",
																		"value": "owner"
																	},
																	"id": 814,
																	"name": "Identifier",
																	"src": "10118:5:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 775,
																		"type": "uint256",
																		"value": "_initialSupply"
																	},
																	"id": 815,
																	"name": "Identifier",
																	"src": "10125:14:0"
																}
															],
															"id": 816,
															"name": "FunctionCall",
															"src": "10097:43:0"
														}
													],
													"id": 817,
													"name": "ExpressionStatement",
													"src": "10097:43:0"
												}
											],
											"id": 818,
											"name": "Block",
											"src": "9900:248:0"
										}
									],
									"id": 819,
									"name": "FunctionDefinition",
									"src": "9805:343:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "transfer",
										"payable": false,
										"scope": 1174,
										"stateMutability": "nonpayable",
										"superFunction": 334,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_to",
														"scope": 857,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 820,
															"name": "ElementaryTypeName",
															"src": "10248:7:0"
														}
													],
													"id": 821,
													"name": "VariableDeclaration",
													"src": "10248:11:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "_value",
														"scope": 857,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 822,
															"name": "ElementaryTypeName",
															"src": "10261:4:0"
														}
													],
													"id": 823,
													"name": "VariableDeclaration",
													"src": "10261:11:0"
												}
											],
											"id": 824,
											"name": "ParameterList",
											"src": "10247:26:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 827,
											"name": "ParameterList",
											"src": "10295:0:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 564,
														"type": "modifier ()",
														"value": "whenNotPaused"
													},
													"id": 825,
													"name": "Identifier",
													"src": "10281:13:0"
												}
											],
											"id": 826,
											"name": "ModifierInvocation",
											"src": "10281:13:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1195,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 828,
																	"name": "Identifier",
																	"src": "10305:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "!",
																		"prefix": true,
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"type": "bool"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 631,
																						"type": "mapping(address => bool)",
																						"value": "isBlackListed"
																					},
																					"id": 829,
																					"name": "Identifier",
																					"src": "10314:13:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "sender",
																						"referencedDeclaration": null,
																						"type": "address"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1177,
																								"type": "msg",
																								"value": "msg"
																							},
																							"id": 830,
																							"name": "Identifier",
																							"src": "10328:3:0"
																						}
																					],
																					"id": 831,
																					"name": "MemberAccess",
																					"src": "10328:10:0"
																				}
																			],
																			"id": 832,
																			"name": "IndexAccess",
																			"src": "10314:25:0"
																		}
																	],
																	"id": 833,
																	"name": "UnaryOperation",
																	"src": "10313:26:0"
																}
															],
															"id": 834,
															"name": "FunctionCall",
															"src": "10305:35:0"
														}
													],
													"id": 835,
													"name": "ExpressionStatement",
													"src": "10305:35:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"overloadedDeclarations": [
																	null
																],
																"referencedDeclaration": 773,
																"type": "bool",
																"value": "deprecated"
															},
															"id": 836,
															"name": "Identifier",
															"src": "10354:10:0"
														},
														{
															"children": [
																{
																	"attributes": {
																		"functionReturnParameters": 827
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "tuple()",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "transferByLegacy",
																						"referencedDeclaration": 736,
																						"type": "function (address,address,uint256) external"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"isStructConstructorCall": false,
																								"lValueRequested": false,
																								"names": [
																									null
																								],
																								"type": "contract UpgradedStandardToken",
																								"type_conversion": true
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_address",
																												"typeString": "address"
																											}
																										],
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 757,
																										"type": "type(contract UpgradedStandardToken)",
																										"value": "UpgradedStandardToken"
																									},
																									"id": 837,
																									"name": "Identifier",
																									"src": "10387:21:0"
																								},
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 771,
																										"type": "address",
																										"value": "upgradedAddress"
																									},
																									"id": 838,
																									"name": "Identifier",
																									"src": "10409:15:0"
																								}
																							],
																							"id": 839,
																							"name": "FunctionCall",
																							"src": "10387:38:0"
																						}
																					],
																					"id": 840,
																					"name": "MemberAccess",
																					"src": "10387:55:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "sender",
																						"referencedDeclaration": null,
																						"type": "address"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1177,
																								"type": "msg",
																								"value": "msg"
																							},
																							"id": 841,
																							"name": "Identifier",
																							"src": "10443:3:0"
																						}
																					],
																					"id": 842,
																					"name": "MemberAccess",
																					"src": "10443:10:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 821,
																						"type": "address",
																						"value": "_to"
																					},
																					"id": 843,
																					"name": "Identifier",
																					"src": "10455:3:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 823,
																						"type": "uint256",
																						"value": "_value"
																					},
																					"id": 844,
																					"name": "Identifier",
																					"src": "10460:6:0"
																				}
																			],
																			"id": 845,
																			"name": "FunctionCall",
																			"src": "10387:80:0"
																		}
																	],
																	"id": 846,
																	"name": "Return",
																	"src": "10380:87:0"
																}
															],
															"id": 847,
															"name": "Block",
															"src": "10366:112:0"
														},
														{
															"children": [
																{
																	"attributes": {
																		"functionReturnParameters": 827
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "tuple()",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "transfer",
																						"referencedDeclaration": 334,
																						"type": "function (address,uint256)"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1216,
																								"type": "contract super TetherToken",
																								"value": "super"
																							},
																							"id": 848,
																							"name": "Identifier",
																							"src": "10505:5:0"
																						}
																					],
																					"id": 849,
																					"name": "MemberAccess",
																					"src": "10505:14:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 821,
																						"type": "address",
																						"value": "_to"
																					},
																					"id": 850,
																					"name": "Identifier",
																					"src": "10520:3:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 823,
																						"type": "uint256",
																						"value": "_value"
																					},
																					"id": 851,
																					"name": "Identifier",
																					"src": "10525:6:0"
																				}
																			],
																			"id": 852,
																			"name": "FunctionCall",
																			"src": "10505:27:0"
																		}
																	],
																	"id": 853,
																	"name": "Return",
																	"src": "10498:34:0"
																}
															],
															"id": 854,
															"name": "Block",
															"src": "10484:59:0"
														}
													],
													"id": 855,
													"name": "IfStatement",
													"src": "10350:193:0"
												}
											],
											"id": 856,
											"name": "Block",
											"src": "10295:254:0"
										}
									],
									"id": 857,
									"name": "FunctionDefinition",
									"src": "10230:319:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "transferFrom",
										"payable": false,
										"scope": 1174,
										"stateMutability": "nonpayable",
										"superFunction": 481,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_from",
														"scope": 898,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 858,
															"name": "ElementaryTypeName",
															"src": "10653:7:0"
														}
													],
													"id": 859,
													"name": "VariableDeclaration",
													"src": "10653:13:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "_to",
														"scope": 898,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 860,
															"name": "ElementaryTypeName",
															"src": "10668:7:0"
														}
													],
													"id": 861,
													"name": "VariableDeclaration",
													"src": "10668:11:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "_value",
														"scope": 898,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 862,
															"name": "ElementaryTypeName",
															"src": "10681:4:0"
														}
													],
													"id": 863,
													"name": "VariableDeclaration",
													"src": "10681:11:0"
												}
											],
											"id": 864,
											"name": "ParameterList",
											"src": "10652:41:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 867,
											"name": "ParameterList",
											"src": "10715:0:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 564,
														"type": "modifier ()",
														"value": "whenNotPaused"
													},
													"id": 865,
													"name": "Identifier",
													"src": "10701:13:0"
												}
											],
											"id": 866,
											"name": "ModifierInvocation",
											"src": "10701:13:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1195,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 868,
																	"name": "Identifier",
																	"src": "10725:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "!",
																		"prefix": true,
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"type": "bool"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 631,
																						"type": "mapping(address => bool)",
																						"value": "isBlackListed"
																					},
																					"id": 869,
																					"name": "Identifier",
																					"src": "10734:13:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 859,
																						"type": "address",
																						"value": "_from"
																					},
																					"id": 870,
																					"name": "Identifier",
																					"src": "10748:5:0"
																				}
																			],
																			"id": 871,
																			"name": "IndexAccess",
																			"src": "10734:20:0"
																		}
																	],
																	"id": 872,
																	"name": "UnaryOperation",
																	"src": "10733:21:0"
																}
															],
															"id": 873,
															"name": "FunctionCall",
															"src": "10725:30:0"
														}
													],
													"id": 874,
													"name": "ExpressionStatement",
													"src": "10725:30:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"overloadedDeclarations": [
																	null
																],
																"referencedDeclaration": 773,
																"type": "bool",
																"value": "deprecated"
															},
															"id": 875,
															"name": "Identifier",
															"src": "10769:10:0"
														},
														{
															"children": [
																{
																	"attributes": {
																		"functionReturnParameters": 867
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "tuple()",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "transferFromByLegacy",
																						"referencedDeclaration": 747,
																						"type": "function (address,address,address,uint256) external"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"isStructConstructorCall": false,
																								"lValueRequested": false,
																								"names": [
																									null
																								],
																								"type": "contract UpgradedStandardToken",
																								"type_conversion": true
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_address",
																												"typeString": "address"
																											}
																										],
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 757,
																										"type": "type(contract UpgradedStandardToken)",
																										"value": "UpgradedStandardToken"
																									},
																									"id": 876,
																									"name": "Identifier",
																									"src": "10802:21:0"
																								},
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 771,
																										"type": "address",
																										"value": "upgradedAddress"
																									},
																									"id": 877,
																									"name": "Identifier",
																									"src": "10824:15:0"
																								}
																							],
																							"id": 878,
																							"name": "FunctionCall",
																							"src": "10802:38:0"
																						}
																					],
																					"id": 879,
																					"name": "MemberAccess",
																					"src": "10802:59:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "sender",
																						"referencedDeclaration": null,
																						"type": "address"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1177,
																								"type": "msg",
																								"value": "msg"
																							},
																							"id": 880,
																							"name": "Identifier",
																							"src": "10862:3:0"
																						}
																					],
																					"id": 881,
																					"name": "MemberAccess",
																					"src": "10862:10:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 859,
																						"type": "address",
																						"value": "_from"
																					},
																					"id": 882,
																					"name": "Identifier",
																					"src": "10874:5:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 861,
																						"type": "address",
																						"value": "_to"
																					},
																					"id": 883,
																					"name": "Identifier",
																					"src": "10881:3:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 863,
																						"type": "uint256",
																						"value": "_value"
																					},
																					"id": 884,
																					"name": "Identifier",
																					"src": "10886:6:0"
																				}
																			],
																			"id": 885,
																			"name": "FunctionCall",
																			"src": "10802:91:0"
																		}
																	],
																	"id": 886,
																	"name": "Return",
																	"src": "10795:98:0"
																}
															],
															"id": 887,
															"name": "Block",
															"src": "10781:123:0"
														},
														{
															"children": [
																{
																	"attributes": {
																		"functionReturnParameters": 867
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "tuple()",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "transferFrom",
																						"referencedDeclaration": 481,
																						"type": "function (address,address,uint256)"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1216,
																								"type": "contract super TetherToken",
																								"value": "super"
																							},
																							"id": 888,
																							"name": "Identifier",
																							"src": "10931:5:0"
																						}
																					],
																					"id": 889,
																					"name": "MemberAccess",
																					"src": "10931:18:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 859,
																						"type": "address",
																						"value": "_from"
																					},
																					"id": 890,
																					"name": "Identifier",
																					"src": "10950:5:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 861,
																						"type": "address",
																						"value": "_to"
																					},
																					"id": 891,
																					"name": "Identifier",
																					"src": "10957:3:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 863,
																						"type": "uint256",
																						"value": "_value"
																					},
																					"id": 892,
																					"name": "Identifier",
																					"src": "10962:6:0"
																				}
																			],
																			"id": 893,
																			"name": "FunctionCall",
																			"src": "10931:38:0"
																		}
																	],
																	"id": 894,
																	"name": "Return",
																	"src": "10924:45:0"
																}
															],
															"id": 895,
															"name": "Block",
															"src": "10910:70:0"
														}
													],
													"id": 896,
													"name": "IfStatement",
													"src": "10765:215:0"
												}
											],
											"id": 897,
											"name": "Block",
											"src": "10715:271:0"
										}
									],
									"id": 898,
									"name": "FunctionDefinition",
									"src": "10631:355:0"
								},
								{
									"attributes": {
										"constant": true,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "balanceOf",
										"payable": false,
										"scope": 1174,
										"stateMutability": "view",
										"superFunction": 346,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "who",
														"scope": 922,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 899,
															"name": "ElementaryTypeName",
															"src": "11087:7:0"
														}
													],
													"id": 900,
													"name": "VariableDeclaration",
													"src": "11087:11:0"
												}
											],
											"id": 901,
											"name": "ParameterList",
											"src": "11086:13:0"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 922,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 902,
															"name": "ElementaryTypeName",
															"src": "11125:4:0"
														}
													],
													"id": 903,
													"name": "VariableDeclaration",
													"src": "11125:4:0"
												}
											],
											"id": 904,
											"name": "ParameterList",
											"src": "11124:6:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"overloadedDeclarations": [
																	null
																],
																"referencedDeclaration": 773,
																"type": "bool",
																"value": "deprecated"
															},
															"id": 905,
															"name": "Identifier",
															"src": "11145:10:0"
														},
														{
															"children": [
																{
																	"attributes": {
																		"functionReturnParameters": 904
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "uint256",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "balanceOf",
																						"referencedDeclaration": 346,
																						"type": "function (address) view external returns (uint256)"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"isStructConstructorCall": false,
																								"lValueRequested": false,
																								"names": [
																									null
																								],
																								"type": "contract UpgradedStandardToken",
																								"type_conversion": true
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_address",
																												"typeString": "address"
																											}
																										],
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 757,
																										"type": "type(contract UpgradedStandardToken)",
																										"value": "UpgradedStandardToken"
																									},
																									"id": 906,
																									"name": "Identifier",
																									"src": "11178:21:0"
																								},
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 771,
																										"type": "address",
																										"value": "upgradedAddress"
																									},
																									"id": 907,
																									"name": "Identifier",
																									"src": "11200:15:0"
																								}
																							],
																							"id": 908,
																							"name": "FunctionCall",
																							"src": "11178:38:0"
																						}
																					],
																					"id": 909,
																					"name": "MemberAccess",
																					"src": "11178:48:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 900,
																						"type": "address",
																						"value": "who"
																					},
																					"id": 910,
																					"name": "Identifier",
																					"src": "11227:3:0"
																				}
																			],
																			"id": 911,
																			"name": "FunctionCall",
																			"src": "11178:53:0"
																		}
																	],
																	"id": 912,
																	"name": "Return",
																	"src": "11171:60:0"
																}
															],
															"id": 913,
															"name": "Block",
															"src": "11157:85:0"
														},
														{
															"children": [
																{
																	"attributes": {
																		"functionReturnParameters": 904
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "uint256",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "balanceOf",
																						"referencedDeclaration": 346,
																						"type": "function (address) view returns (uint256)"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1216,
																								"type": "contract super TetherToken",
																								"value": "super"
																							},
																							"id": 914,
																							"name": "Identifier",
																							"src": "11269:5:0"
																						}
																					],
																					"id": 915,
																					"name": "MemberAccess",
																					"src": "11269:15:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 900,
																						"type": "address",
																						"value": "who"
																					},
																					"id": 916,
																					"name": "Identifier",
																					"src": "11285:3:0"
																				}
																			],
																			"id": 917,
																			"name": "FunctionCall",
																			"src": "11269:20:0"
																		}
																	],
																	"id": 918,
																	"name": "Return",
																	"src": "11262:27:0"
																}
															],
															"id": 919,
															"name": "Block",
															"src": "11248:52:0"
														}
													],
													"id": 920,
													"name": "IfStatement",
													"src": "11141:159:0"
												}
											],
											"id": 921,
											"name": "Block",
											"src": "11131:175:0"
										}
									],
									"id": 922,
									"name": "FunctionDefinition",
									"src": "11068:238:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "approve",
										"payable": false,
										"scope": 1174,
										"stateMutability": "nonpayable",
										"superFunction": 529,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_spender",
														"scope": 955,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 923,
															"name": "ElementaryTypeName",
															"src": "11405:7:0"
														}
													],
													"id": 924,
													"name": "VariableDeclaration",
													"src": "11405:16:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "_value",
														"scope": 955,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 925,
															"name": "ElementaryTypeName",
															"src": "11423:4:0"
														}
													],
													"id": 926,
													"name": "VariableDeclaration",
													"src": "11423:11:0"
												}
											],
											"id": 927,
											"name": "ParameterList",
											"src": "11404:31:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 933,
											"name": "ParameterList",
											"src": "11467:0:0"
										},
										{
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 240,
														"type": "modifier (uint256)",
														"value": "onlyPayloadSize"
													},
													"id": 928,
													"name": "Identifier",
													"src": "11443:15:0"
												},
												{
													"attributes": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_rational_64_by_1",
															"typeString": "int_const 64"
														},
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"operator": "*",
														"type": "int_const 64"
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"hexvalue": "32",
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"subdenomination": null,
																"token": "number",
																"type": "int_const 2",
																"value": "2"
															},
															"id": 929,
															"name": "Literal",
															"src": "11459:1:0"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"hexvalue": "3332",
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"subdenomination": null,
																"token": "number",
																"type": "int_const 32",
																"value": "32"
															},
															"id": 930,
															"name": "Literal",
															"src": "11463:2:0"
														}
													],
													"id": 931,
													"name": "BinaryOperation",
													"src": "11459:6:0"
												}
											],
											"id": 932,
											"name": "ModifierInvocation",
											"src": "11443:23:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"overloadedDeclarations": [
																	null
																],
																"referencedDeclaration": 773,
																"type": "bool",
																"value": "deprecated"
															},
															"id": 934,
															"name": "Identifier",
															"src": "11481:10:0"
														},
														{
															"children": [
																{
																	"attributes": {
																		"functionReturnParameters": 933
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "tuple()",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "approveByLegacy",
																						"referencedDeclaration": 756,
																						"type": "function (address,address,uint256) external"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"isStructConstructorCall": false,
																								"lValueRequested": false,
																								"names": [
																									null
																								],
																								"type": "contract UpgradedStandardToken",
																								"type_conversion": true
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_address",
																												"typeString": "address"
																											}
																										],
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 757,
																										"type": "type(contract UpgradedStandardToken)",
																										"value": "UpgradedStandardToken"
																									},
																									"id": 935,
																									"name": "Identifier",
																									"src": "11514:21:0"
																								},
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 771,
																										"type": "address",
																										"value": "upgradedAddress"
																									},
																									"id": 936,
																									"name": "Identifier",
																									"src": "11536:15:0"
																								}
																							],
																							"id": 937,
																							"name": "FunctionCall",
																							"src": "11514:38:0"
																						}
																					],
																					"id": 938,
																					"name": "MemberAccess",
																					"src": "11514:54:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "sender",
																						"referencedDeclaration": null,
																						"type": "address"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1177,
																								"type": "msg",
																								"value": "msg"
																							},
																							"id": 939,
																							"name": "Identifier",
																							"src": "11569:3:0"
																						}
																					],
																					"id": 940,
																					"name": "MemberAccess",
																					"src": "11569:10:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 924,
																						"type": "address",
																						"value": "_spender"
																					},
																					"id": 941,
																					"name": "Identifier",
																					"src": "11581:8:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 926,
																						"type": "uint256",
																						"value": "_value"
																					},
																					"id": 942,
																					"name": "Identifier",
																					"src": "11591:6:0"
																				}
																			],
																			"id": 943,
																			"name": "FunctionCall",
																			"src": "11514:84:0"
																		}
																	],
																	"id": 944,
																	"name": "Return",
																	"src": "11507:91:0"
																}
															],
															"id": 945,
															"name": "Block",
															"src": "11493:116:0"
														},
														{
															"children": [
																{
																	"attributes": {
																		"functionReturnParameters": 933
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "tuple()",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "approve",
																						"referencedDeclaration": 529,
																						"type": "function (address,uint256)"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1216,
																								"type": "contract super TetherToken",
																								"value": "super"
																							},
																							"id": 946,
																							"name": "Identifier",
																							"src": "11636:5:0"
																						}
																					],
																					"id": 947,
																					"name": "MemberAccess",
																					"src": "11636:13:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 924,
																						"type": "address",
																						"value": "_spender"
																					},
																					"id": 948,
																					"name": "Identifier",
																					"src": "11650:8:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 926,
																						"type": "uint256",
																						"value": "_value"
																					},
																					"id": 949,
																					"name": "Identifier",
																					"src": "11660:6:0"
																				}
																			],
																			"id": 950,
																			"name": "FunctionCall",
																			"src": "11636:31:0"
																		}
																	],
																	"id": 951,
																	"name": "Return",
																	"src": "11629:38:0"
																}
															],
															"id": 952,
															"name": "Block",
															"src": "11615:63:0"
														}
													],
													"id": 953,
													"name": "IfStatement",
													"src": "11477:201:0"
												}
											],
											"id": 954,
											"name": "Block",
											"src": "11467:217:0"
										}
									],
									"id": 955,
									"name": "FunctionDefinition",
									"src": "11388:296:0"
								},
								{
									"attributes": {
										"constant": true,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "allowance",
										"payable": false,
										"scope": 1174,
										"stateMutability": "view",
										"superFunction": 545,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_owner",
														"scope": 983,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 956,
															"name": "ElementaryTypeName",
															"src": "11785:7:0"
														}
													],
													"id": 957,
													"name": "VariableDeclaration",
													"src": "11785:14:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "_spender",
														"scope": 983,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 958,
															"name": "ElementaryTypeName",
															"src": "11801:7:0"
														}
													],
													"id": 959,
													"name": "VariableDeclaration",
													"src": "11801:16:0"
												}
											],
											"id": 960,
											"name": "ParameterList",
											"src": "11784:34:0"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "remaining",
														"scope": 983,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 961,
															"name": "ElementaryTypeName",
															"src": "11844:4:0"
														}
													],
													"id": 962,
													"name": "VariableDeclaration",
													"src": "11844:14:0"
												}
											],
											"id": 963,
											"name": "ParameterList",
											"src": "11843:16:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"overloadedDeclarations": [
																	null
																],
																"referencedDeclaration": 773,
																"type": "bool",
																"value": "deprecated"
															},
															"id": 964,
															"name": "Identifier",
															"src": "11874:10:0"
														},
														{
															"children": [
																{
																	"attributes": {
																		"functionReturnParameters": 963
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "uint256",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "allowance",
																						"referencedDeclaration": 545,
																						"type": "function (address,address) view external returns (uint256)"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"isStructConstructorCall": false,
																								"lValueRequested": false,
																								"names": [
																									null
																								],
																								"type": "contract StandardToken",
																								"type_conversion": true
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_address",
																												"typeString": "address"
																											}
																										],
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 546,
																										"type": "type(contract StandardToken)",
																										"value": "StandardToken"
																									},
																									"id": 965,
																									"name": "Identifier",
																									"src": "11907:13:0"
																								},
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 771,
																										"type": "address",
																										"value": "upgradedAddress"
																									},
																									"id": 966,
																									"name": "Identifier",
																									"src": "11921:15:0"
																								}
																							],
																							"id": 967,
																							"name": "FunctionCall",
																							"src": "11907:30:0"
																						}
																					],
																					"id": 968,
																					"name": "MemberAccess",
																					"src": "11907:40:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 957,
																						"type": "address",
																						"value": "_owner"
																					},
																					"id": 969,
																					"name": "Identifier",
																					"src": "11948:6:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 959,
																						"type": "address",
																						"value": "_spender"
																					},
																					"id": 970,
																					"name": "Identifier",
																					"src": "11956:8:0"
																				}
																			],
																			"id": 971,
																			"name": "FunctionCall",
																			"src": "11907:58:0"
																		}
																	],
																	"id": 972,
																	"name": "Return",
																	"src": "11900:65:0"
																}
															],
															"id": 973,
															"name": "Block",
															"src": "11886:90:0"
														},
														{
															"children": [
																{
																	"attributes": {
																		"functionReturnParameters": 963
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "uint256",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "allowance",
																						"referencedDeclaration": 545,
																						"type": "function (address,address) view returns (uint256)"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1216,
																								"type": "contract super TetherToken",
																								"value": "super"
																							},
																							"id": 974,
																							"name": "Identifier",
																							"src": "12003:5:0"
																						}
																					],
																					"id": 975,
																					"name": "MemberAccess",
																					"src": "12003:15:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 957,
																						"type": "address",
																						"value": "_owner"
																					},
																					"id": 976,
																					"name": "Identifier",
																					"src": "12019:6:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 959,
																						"type": "address",
																						"value": "_spender"
																					},
																					"id": 977,
																					"name": "Identifier",
																					"src": "12027:8:0"
																				}
																			],
																			"id": 978,
																			"name": "FunctionCall",
																			"src": "12003:33:0"
																		}
																	],
																	"id": 979,
																	"name": "Return",
																	"src": "11996:40:0"
																}
															],
															"id": 980,
															"name": "Block",
															"src": "11982:65:0"
														}
													],
													"id": 981,
													"name": "IfStatement",
													"src": "11870:177:0"
												}
											],
											"id": 982,
											"name": "Block",
											"src": "11860:193:0"
										}
									],
									"id": 983,
									"name": "FunctionDefinition",
									"src": "11766:287:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "deprecate",
										"payable": false,
										"scope": 1174,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_upgradedAddress",
														"scope": 1003,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 984,
															"name": "ElementaryTypeName",
															"src": "12135:7:0"
														}
													],
													"id": 985,
													"name": "VariableDeclaration",
													"src": "12135:24:0"
												}
											],
											"id": 986,
											"name": "ParameterList",
											"src": "12134:26:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 989,
											"name": "ParameterList",
											"src": "12178:0:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 119,
														"type": "modifier ()",
														"value": "onlyOwner"
													},
													"id": 987,
													"name": "Identifier",
													"src": "12168:9:0"
												}
											],
											"id": 988,
											"name": "ModifierInvocation",
											"src": "12168:9:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 773,
																		"type": "bool",
																		"value": "deprecated"
																	},
																	"id": 990,
																	"name": "Identifier",
																	"src": "12188:10:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "74727565",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "bool",
																		"type": "bool",
																		"value": "true"
																	},
																	"id": 991,
																	"name": "Literal",
																	"src": "12201:4:0"
																}
															],
															"id": 992,
															"name": "Assignment",
															"src": "12188:17:0"
														}
													],
													"id": 993,
													"name": "ExpressionStatement",
													"src": "12188:17:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "address"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 771,
																		"type": "address",
																		"value": "upgradedAddress"
																	},
																	"id": 994,
																	"name": "Identifier",
																	"src": "12215:15:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 985,
																		"type": "address",
																		"value": "_upgradedAddress"
																	},
																	"id": 995,
																	"name": "Identifier",
																	"src": "12233:16:0"
																}
															],
															"id": 996,
															"name": "Assignment",
															"src": "12215:34:0"
														}
													],
													"id": 997,
													"name": "ExpressionStatement",
													"src": "12215:34:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1167,
																		"type": "function (address)",
																		"value": "Deprecate"
																	},
																	"id": 998,
																	"name": "Identifier",
																	"src": "12259:9:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 985,
																		"type": "address",
																		"value": "_upgradedAddress"
																	},
																	"id": 999,
																	"name": "Identifier",
																	"src": "12269:16:0"
																}
															],
															"id": 1000,
															"name": "FunctionCall",
															"src": "12259:27:0"
														}
													],
													"id": 1001,
													"name": "ExpressionStatement",
													"src": "12259:27:0"
												}
											],
											"id": 1002,
											"name": "Block",
											"src": "12178:115:0"
										}
									],
									"id": 1003,
									"name": "FunctionDefinition",
									"src": "12116:177:0"
								},
								{
									"attributes": {
										"constant": true,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "totalSupply",
										"payable": false,
										"scope": 1174,
										"stateMutability": "view",
										"superFunction": 146,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 1004,
											"name": "ParameterList",
											"src": "12376:2:0"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 1021,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 1005,
															"name": "ElementaryTypeName",
															"src": "12404:4:0"
														}
													],
													"id": 1006,
													"name": "VariableDeclaration",
													"src": "12404:4:0"
												}
											],
											"id": 1007,
											"name": "ParameterList",
											"src": "12403:6:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"overloadedDeclarations": [
																	null
																],
																"referencedDeclaration": 773,
																"type": "bool",
																"value": "deprecated"
															},
															"id": 1008,
															"name": "Identifier",
															"src": "12424:10:0"
														},
														{
															"children": [
																{
																	"attributes": {
																		"functionReturnParameters": 1007
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"arguments": [
																					null
																				],
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "uint256",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							null
																						],
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "totalSupply",
																						"referencedDeclaration": 146,
																						"type": "function () view external returns (uint256)"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"isStructConstructorCall": false,
																								"lValueRequested": false,
																								"names": [
																									null
																								],
																								"type": "contract StandardToken",
																								"type_conversion": true
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_address",
																												"typeString": "address"
																											}
																										],
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 546,
																										"type": "type(contract StandardToken)",
																										"value": "StandardToken"
																									},
																									"id": 1009,
																									"name": "Identifier",
																									"src": "12457:13:0"
																								},
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 771,
																										"type": "address",
																										"value": "upgradedAddress"
																									},
																									"id": 1010,
																									"name": "Identifier",
																									"src": "12471:15:0"
																								}
																							],
																							"id": 1011,
																							"name": "FunctionCall",
																							"src": "12457:30:0"
																						}
																					],
																					"id": 1012,
																					"name": "MemberAccess",
																					"src": "12457:42:0"
																				}
																			],
																			"id": 1013,
																			"name": "FunctionCall",
																			"src": "12457:44:0"
																		}
																	],
																	"id": 1014,
																	"name": "Return",
																	"src": "12450:51:0"
																}
															],
															"id": 1015,
															"name": "Block",
															"src": "12436:76:0"
														},
														{
															"children": [
																{
																	"attributes": {
																		"functionReturnParameters": 1007
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 141,
																				"type": "uint256",
																				"value": "_totalSupply"
																			},
																			"id": 1016,
																			"name": "Identifier",
																			"src": "12539:12:0"
																		}
																	],
																	"id": 1017,
																	"name": "Return",
																	"src": "12532:19:0"
																}
															],
															"id": 1018,
															"name": "Block",
															"src": "12518:44:0"
														}
													],
													"id": 1019,
													"name": "IfStatement",
													"src": "12420:142:0"
												}
											],
											"id": 1020,
											"name": "Block",
											"src": "12410:158:0"
										}
									],
									"id": 1021,
									"name": "FunctionDefinition",
									"src": "12356:212:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "issue",
										"payable": false,
										"scope": 1174,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "amount",
														"scope": 1071,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 1022,
															"name": "ElementaryTypeName",
															"src": "12741:4:0"
														}
													],
													"id": 1023,
													"name": "VariableDeclaration",
													"src": "12741:11:0"
												}
											],
											"id": 1024,
											"name": "ParameterList",
											"src": "12740:13:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 1027,
											"name": "ParameterList",
											"src": "12771:0:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 119,
														"type": "modifier ()",
														"value": "onlyOwner"
													},
													"id": 1025,
													"name": "Identifier",
													"src": "12761:9:0"
												}
											],
											"id": 1026,
											"name": "ModifierInvocation",
											"src": "12761:9:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1195,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 1028,
																	"name": "Identifier",
																	"src": "12781:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": ">",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"operator": "+",
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 141,
																						"type": "uint256",
																						"value": "_totalSupply"
																					},
																					"id": 1029,
																					"name": "Identifier",
																					"src": "12789:12:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 1023,
																						"type": "uint256",
																						"value": "amount"
																					},
																					"id": 1030,
																					"name": "Identifier",
																					"src": "12804:6:0"
																				}
																			],
																			"id": 1031,
																			"name": "BinaryOperation",
																			"src": "12789:21:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 141,
																				"type": "uint256",
																				"value": "_totalSupply"
																			},
																			"id": 1032,
																			"name": "Identifier",
																			"src": "12813:12:0"
																		}
																	],
																	"id": 1033,
																	"name": "BinaryOperation",
																	"src": "12789:36:0"
																}
															],
															"id": 1034,
															"name": "FunctionCall",
															"src": "12781:45:0"
														}
													],
													"id": 1035,
													"name": "ExpressionStatement",
													"src": "12781:45:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1195,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 1036,
																	"name": "Identifier",
																	"src": "12836:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": ">",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"operator": "+",
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"type": "uint256"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 216,
																								"type": "mapping(address => uint256)",
																								"value": "balances"
																							},
																							"id": 1037,
																							"name": "Identifier",
																							"src": "12844:8:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 99,
																								"type": "address",
																								"value": "owner"
																							},
																							"id": 1038,
																							"name": "Identifier",
																							"src": "12853:5:0"
																						}
																					],
																					"id": 1039,
																					"name": "IndexAccess",
																					"src": "12844:15:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 1023,
																						"type": "uint256",
																						"value": "amount"
																					},
																					"id": 1040,
																					"name": "Identifier",
																					"src": "12862:6:0"
																				}
																			],
																			"id": 1041,
																			"name": "BinaryOperation",
																			"src": "12844:24:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 216,
																						"type": "mapping(address => uint256)",
																						"value": "balances"
																					},
																					"id": 1042,
																					"name": "Identifier",
																					"src": "12871:8:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 99,
																						"type": "address",
																						"value": "owner"
																					},
																					"id": 1043,
																					"name": "Identifier",
																					"src": "12880:5:0"
																				}
																			],
																			"id": 1044,
																			"name": "IndexAccess",
																			"src": "12871:15:0"
																		}
																	],
																	"id": 1045,
																	"name": "BinaryOperation",
																	"src": "12844:42:0"
																}
															],
															"id": 1046,
															"name": "FunctionCall",
															"src": "12836:51:0"
														}
													],
													"id": 1047,
													"name": "ExpressionStatement",
													"src": "12836:51:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "+=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 216,
																				"type": "mapping(address => uint256)",
																				"value": "balances"
																			},
																			"id": 1048,
																			"name": "Identifier",
																			"src": "12898:8:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 99,
																				"type": "address",
																				"value": "owner"
																			},
																			"id": 1049,
																			"name": "Identifier",
																			"src": "12907:5:0"
																		}
																	],
																	"id": 1050,
																	"name": "IndexAccess",
																	"src": "12898:15:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1023,
																		"type": "uint256",
																		"value": "amount"
																	},
																	"id": 1051,
																	"name": "Identifier",
																	"src": "12917:6:0"
																}
															],
															"id": 1052,
															"name": "Assignment",
															"src": "12898:25:0"
														}
													],
													"id": 1053,
													"name": "ExpressionStatement",
													"src": "12898:25:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "+=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 141,
																		"type": "uint256",
																		"value": "_totalSupply"
																	},
																	"id": 1054,
																	"name": "Identifier",
																	"src": "12933:12:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1023,
																		"type": "uint256",
																		"value": "amount"
																	},
																	"id": 1055,
																	"name": "Identifier",
																	"src": "12949:6:0"
																}
															],
															"id": 1056,
															"name": "Assignment",
															"src": "12933:22:0"
														}
													],
													"id": 1057,
													"name": "ExpressionStatement",
													"src": "12933:22:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 168,
																		"type": "function (address,address,uint256)",
																		"value": "Transfer"
																	},
																	"id": 1058,
																	"name": "Identifier",
																	"src": "12966:8:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"isStructConstructorCall": false,
																		"lValueRequested": false,
																		"names": [
																			null
																		],
																		"type": "address",
																		"type_conversion": true
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"type": "type(address)",
																				"value": "address"
																			},
																			"id": 1059,
																			"name": "ElementaryTypeNameExpression",
																			"src": "12975:7:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"hexvalue": "30",
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"subdenomination": null,
																				"token": "number",
																				"type": "int_const 0",
																				"value": "0"
																			},
																			"id": 1060,
																			"name": "Literal",
																			"src": "12983:1:0"
																		}
																	],
																	"id": 1061,
																	"name": "FunctionCall",
																	"src": "12975:10:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 99,
																		"type": "address",
																		"value": "owner"
																	},
																	"id": 1062,
																	"name": "Identifier",
																	"src": "12987:5:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1023,
																		"type": "uint256",
																		"value": "amount"
																	},
																	"id": 1063,
																	"name": "Identifier",
																	"src": "12994:6:0"
																}
															],
															"id": 1064,
															"name": "FunctionCall",
															"src": "12966:35:0"
														}
													],
													"id": 1065,
													"name": "ExpressionStatement",
													"src": "12966:35:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1159,
																		"type": "function (uint256)",
																		"value": "Issue"
																	},
																	"id": 1066,
																	"name": "Identifier",
																	"src": "13011:5:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1023,
																		"type": "uint256",
																		"value": "amount"
																	},
																	"id": 1067,
																	"name": "Identifier",
																	"src": "13017:6:0"
																}
															],
															"id": 1068,
															"name": "FunctionCall",
															"src": "13011:13:0"
														}
													],
													"id": 1069,
													"name": "ExpressionStatement",
													"src": "13011:13:0"
												}
											],
											"id": 1070,
											"name": "Block",
											"src": "12771:260:0"
										}
									],
									"id": 1071,
									"name": "FunctionDefinition",
									"src": "12726:305:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "redeem",
										"payable": false,
										"scope": 1174,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "amount",
														"scope": 1115,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 1072,
															"name": "ElementaryTypeName",
															"src": "13455:4:0"
														}
													],
													"id": 1073,
													"name": "VariableDeclaration",
													"src": "13455:11:0"
												}
											],
											"id": 1074,
											"name": "ParameterList",
											"src": "13454:13:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 1077,
											"name": "ParameterList",
											"src": "13485:0:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 119,
														"type": "modifier ()",
														"value": "onlyOwner"
													},
													"id": 1075,
													"name": "Identifier",
													"src": "13475:9:0"
												}
											],
											"id": 1076,
											"name": "ModifierInvocation",
											"src": "13475:9:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1195,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 1078,
																	"name": "Identifier",
																	"src": "13495:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": ">=",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 141,
																				"type": "uint256",
																				"value": "_totalSupply"
																			},
																			"id": 1079,
																			"name": "Identifier",
																			"src": "13503:12:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1073,
																				"type": "uint256",
																				"value": "amount"
																			},
																			"id": 1080,
																			"name": "Identifier",
																			"src": "13519:6:0"
																		}
																	],
																	"id": 1081,
																	"name": "BinaryOperation",
																	"src": "13503:22:0"
																}
															],
															"id": 1082,
															"name": "FunctionCall",
															"src": "13495:31:0"
														}
													],
													"id": 1083,
													"name": "ExpressionStatement",
													"src": "13495:31:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1195,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 1084,
																	"name": "Identifier",
																	"src": "13536:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": ">=",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 216,
																						"type": "mapping(address => uint256)",
																						"value": "balances"
																					},
																					"id": 1085,
																					"name": "Identifier",
																					"src": "13544:8:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 99,
																						"type": "address",
																						"value": "owner"
																					},
																					"id": 1086,
																					"name": "Identifier",
																					"src": "13553:5:0"
																				}
																			],
																			"id": 1087,
																			"name": "IndexAccess",
																			"src": "13544:15:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1073,
																				"type": "uint256",
																				"value": "amount"
																			},
																			"id": 1088,
																			"name": "Identifier",
																			"src": "13563:6:0"
																		}
																	],
																	"id": 1089,
																	"name": "BinaryOperation",
																	"src": "13544:25:0"
																}
															],
															"id": 1090,
															"name": "FunctionCall",
															"src": "13536:34:0"
														}
													],
													"id": 1091,
													"name": "ExpressionStatement",
													"src": "13536:34:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "-=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 141,
																		"type": "uint256",
																		"value": "_totalSupply"
																	},
																	"id": 1092,
																	"name": "Identifier",
																	"src": "13581:12:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1073,
																		"type": "uint256",
																		"value": "amount"
																	},
																	"id": 1093,
																	"name": "Identifier",
																	"src": "13597:6:0"
																}
															],
															"id": 1094,
															"name": "Assignment",
															"src": "13581:22:0"
														}
													],
													"id": 1095,
													"name": "ExpressionStatement",
													"src": "13581:22:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "-=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 216,
																				"type": "mapping(address => uint256)",
																				"value": "balances"
																			},
																			"id": 1096,
																			"name": "Identifier",
																			"src": "13613:8:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 99,
																				"type": "address",
																				"value": "owner"
																			},
																			"id": 1097,
																			"name": "Identifier",
																			"src": "13622:5:0"
																		}
																	],
																	"id": 1098,
																	"name": "IndexAccess",
																	"src": "13613:15:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1073,
																		"type": "uint256",
																		"value": "amount"
																	},
																	"id": 1099,
																	"name": "Identifier",
																	"src": "13632:6:0"
																}
															],
															"id": 1100,
															"name": "Assignment",
															"src": "13613:25:0"
														}
													],
													"id": 1101,
													"name": "ExpressionStatement",
													"src": "13613:25:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 168,
																		"type": "function (address,address,uint256)",
																		"value": "Transfer"
																	},
																	"id": 1102,
																	"name": "Identifier",
																	"src": "13649:8:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 99,
																		"type": "address",
																		"value": "owner"
																	},
																	"id": 1103,
																	"name": "Identifier",
																	"src": "13658:5:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"isStructConstructorCall": false,
																		"lValueRequested": false,
																		"names": [
																			null
																		],
																		"type": "address",
																		"type_conversion": true
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"type": "type(address)",
																				"value": "address"
																			},
																			"id": 1104,
																			"name": "ElementaryTypeNameExpression",
																			"src": "13664:7:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"hexvalue": "30",
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"subdenomination": null,
																				"token": "number",
																				"type": "int_const 0",
																				"value": "0"
																			},
																			"id": 1105,
																			"name": "Literal",
																			"src": "13672:1:0"
																		}
																	],
																	"id": 1106,
																	"name": "FunctionCall",
																	"src": "13664:10:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1073,
																		"type": "uint256",
																		"value": "amount"
																	},
																	"id": 1107,
																	"name": "Identifier",
																	"src": "13676:6:0"
																}
															],
															"id": 1108,
															"name": "FunctionCall",
															"src": "13649:34:0"
														}
													],
													"id": 1109,
													"name": "ExpressionStatement",
													"src": "13649:34:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1163,
																		"type": "function (uint256)",
																		"value": "Redeem"
																	},
																	"id": 1110,
																	"name": "Identifier",
																	"src": "13693:6:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1073,
																		"type": "uint256",
																		"value": "amount"
																	},
																	"id": 1111,
																	"name": "Identifier",
																	"src": "13700:6:0"
																}
															],
															"id": 1112,
															"name": "FunctionCall",
															"src": "13693:14:0"
														}
													],
													"id": 1113,
													"name": "ExpressionStatement",
													"src": "13693:14:0"
												}
											],
											"id": 1114,
											"name": "Block",
											"src": "13485:229:0"
										}
									],
									"id": 1115,
									"name": "FunctionDefinition",
									"src": "13439:275:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "setParams",
										"payable": false,
										"scope": 1174,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "newBasisPoints",
														"scope": 1155,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 1116,
															"name": "ElementaryTypeName",
															"src": "13739:4:0"
														}
													],
													"id": 1117,
													"name": "VariableDeclaration",
													"src": "13739:19:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "newMaxFee",
														"scope": 1155,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 1118,
															"name": "ElementaryTypeName",
															"src": "13760:4:0"
														}
													],
													"id": 1119,
													"name": "VariableDeclaration",
													"src": "13760:14:0"
												}
											],
											"id": 1120,
											"name": "ParameterList",
											"src": "13738:37:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 1123,
											"name": "ParameterList",
											"src": "13793:0:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 119,
														"type": "modifier ()",
														"value": "onlyOwner"
													},
													"id": 1121,
													"name": "Identifier",
													"src": "13783:9:0"
												}
											],
											"id": 1122,
											"name": "ModifierInvocation",
											"src": "13783:9:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1195,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 1124,
																	"name": "Identifier",
																	"src": "13891:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "<=",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1117,
																				"type": "uint256",
																				"value": "newBasisPoints"
																			},
																			"id": 1125,
																			"name": "Identifier",
																			"src": "13899:14:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"hexvalue": "353030",
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"subdenomination": null,
																				"token": "number",
																				"type": "int_const 500",
																				"value": "500"
																			},
																			"id": 1126,
																			"name": "Literal",
																			"src": "13916:3:0"
																		}
																	],
																	"id": 1127,
																	"name": "BinaryOperation",
																	"src": "13899:20:0"
																}
															],
															"id": 1128,
															"name": "FunctionCall",
															"src": "13891:29:0"
														}
													],
													"id": 1129,
													"name": "ExpressionStatement",
													"src": "13891:29:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1195,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 1130,
																	"name": "Identifier",
																	"src": "13930:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "<=",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1119,
																				"type": "uint256",
																				"value": "newMaxFee"
																			},
																			"id": 1131,
																			"name": "Identifier",
																			"src": "13938:9:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"hexvalue": "3530",
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"subdenomination": null,
																				"token": "number",
																				"type": "int_const 50",
																				"value": "50"
																			},
																			"id": 1132,
																			"name": "Literal",
																			"src": "13949:2:0"
																		}
																	],
																	"id": 1133,
																	"name": "BinaryOperation",
																	"src": "13938:13:0"
																}
															],
															"id": 1134,
															"name": "FunctionCall",
															"src": "13930:22:0"
														}
													],
													"id": 1135,
													"name": "ExpressionStatement",
													"src": "13930:22:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 219,
																		"type": "uint256",
																		"value": "basisPointsRate"
																	},
																	"id": 1136,
																	"name": "Identifier",
																	"src": "13963:15:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1117,
																		"type": "uint256",
																		"value": "newBasisPoints"
																	},
																	"id": 1137,
																	"name": "Identifier",
																	"src": "13981:14:0"
																}
															],
															"id": 1138,
															"name": "Assignment",
															"src": "13963:32:0"
														}
													],
													"id": 1139,
													"name": "ExpressionStatement",
													"src": "13963:32:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 222,
																		"type": "uint256",
																		"value": "maximumFee"
																	},
																	"id": 1140,
																	"name": "Identifier",
																	"src": "14005:10:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"isStructConstructorCall": false,
																		"lValueRequested": false,
																		"names": [
																			null
																		],
																		"type": "uint256",
																		"type_conversion": false
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "mul",
																				"referencedDeclaration": 34,
																				"type": "function (uint256,uint256) pure returns (uint256)"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 1119,
																						"type": "uint256",
																						"value": "newMaxFee"
																					},
																					"id": 1141,
																					"name": "Identifier",
																					"src": "14018:9:0"
																				}
																			],
																			"id": 1142,
																			"name": "MemberAccess",
																			"src": "14018:13:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"operator": "**",
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"hexvalue": "3130",
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"subdenomination": null,
																						"token": "number",
																						"type": "int_const 10",
																						"value": "10"
																					},
																					"id": 1143,
																					"name": "Literal",
																					"src": "14032:2:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 769,
																						"type": "uint256",
																						"value": "decimals"
																					},
																					"id": 1144,
																					"name": "Identifier",
																					"src": "14036:8:0"
																				}
																			],
																			"id": 1145,
																			"name": "BinaryOperation",
																			"src": "14032:12:0"
																		}
																	],
																	"id": 1146,
																	"name": "FunctionCall",
																	"src": "14018:27:0"
																}
															],
															"id": 1147,
															"name": "Assignment",
															"src": "14005:40:0"
														}
													],
													"id": 1148,
													"name": "ExpressionStatement",
													"src": "14005:40:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1173,
																		"type": "function (uint256,uint256)",
																		"value": "Params"
																	},
																	"id": 1149,
																	"name": "Identifier",
																	"src": "14056:6:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 219,
																		"type": "uint256",
																		"value": "basisPointsRate"
																	},
																	"id": 1150,
																	"name": "Identifier",
																	"src": "14063:15:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 222,
																		"type": "uint256",
																		"value": "maximumFee"
																	},
																	"id": 1151,
																	"name": "Identifier",
																	"src": "14080:10:0"
																}
															],
															"id": 1152,
															"name": "FunctionCall",
															"src": "14056:35:0"
														}
													],
													"id": 1153,
													"name": "ExpressionStatement",
													"src": "14056:35:0"
												}
											],
											"id": 1154,
											"name": "Block",
											"src": "13793:305:0"
										}
									],
									"id": 1155,
									"name": "FunctionDefinition",
									"src": "13720:378:0"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "Issue"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"indexed": false,
														"name": "amount",
														"scope": 1159,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 1156,
															"name": "ElementaryTypeName",
															"src": "14156:4:0"
														}
													],
													"id": 1157,
													"name": "VariableDeclaration",
													"src": "14156:11:0"
												}
											],
											"id": 1158,
											"name": "ParameterList",
											"src": "14155:13:0"
										}
									],
									"id": 1159,
									"name": "EventDefinition",
									"src": "14144:25:0"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "Redeem"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"indexed": false,
														"name": "amount",
														"scope": 1163,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 1160,
															"name": "ElementaryTypeName",
															"src": "14227:4:0"
														}
													],
													"id": 1161,
													"name": "VariableDeclaration",
													"src": "14227:11:0"
												}
											],
											"id": 1162,
											"name": "ParameterList",
											"src": "14226:13:0"
										}
									],
									"id": 1163,
									"name": "EventDefinition",
									"src": "14214:26:0"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "Deprecate"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"indexed": false,
														"name": "newAddress",
														"scope": 1167,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 1164,
															"name": "ElementaryTypeName",
															"src": "14304:7:0"
														}
													],
													"id": 1165,
													"name": "VariableDeclaration",
													"src": "14304:18:0"
												}
											],
											"id": 1166,
											"name": "ParameterList",
											"src": "14303:20:0"
										}
									],
									"id": 1167,
									"name": "EventDefinition",
									"src": "14288:36:0"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "Params"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"indexed": false,
														"name": "feeBasisPoints",
														"scope": 1173,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 1168,
															"name": "ElementaryTypeName",
															"src": "14384:4:0"
														}
													],
													"id": 1169,
													"name": "VariableDeclaration",
													"src": "14384:19:0"
												},
												{
													"attributes": {
														"constant": false,
														"indexed": false,
														"name": "maxFee",
														"scope": 1173,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 1170,
															"name": "ElementaryTypeName",
															"src": "14405:4:0"
														}
													],
													"id": 1171,
													"name": "VariableDeclaration",
													"src": "14405:11:0"
												}
											],
											"id": 1172,
											"name": "ParameterList",
											"src": "14383:34:0"
										}
									],
									"id": 1173,
									"name": "EventDefinition",
									"src": "14371:47:0"
								}
							],
							"id": 1174,
							"name": "ContractDefinition",
							"src": "9310:5110:0"
						}
					],
					"id": 1175,
					"name": "SourceUnit",
					"src": "67:14353:0"
				}
			}
		}
	}
}