{
	"id": "dbd549707c472dd2cde025860badf0fb",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.4.24",
	"solcLongVersion": "0.4.24+commit.e67f0147",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Hish/WBUSD/contractWithSafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.4.24;\n\nlibrary SafeMath {\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n\n        return c;\n    }\n\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a, \"SafeMath: subtraction overflow\");\n        uint256 c = a - b;\n\n        return c;\n    }\n}\n\ncontract WUSD {\n    using SafeMath for uint256;\n\n    string public name = \"WethioUSD\";\n    string public symbol = \"WUSD\";\n    uint256 public decimals = 2;\n    uint256 public totalSupply;\n\n    mapping(address => uint256) public balanceOf;\n    address public owner;\n\n    event Transfer(address indexed from, address indexed to, uint256 value);\n    event Mint(address indexed to, uint256 value);\n    event Burn(address indexed from, uint256 value);\n\n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Only the owner can call this function\");\n        _;\n    }\n\n    constructor() public {\n        owner = msg.sender;\n        totalSupply = 10 * 10**decimals; // 10 WUSD with 2 decimals\n        balanceOf[owner] = totalSupply;\n        emit Transfer(address(0), owner, totalSupply);\n    }\n\n    function transfer(address _to, uint256 _value) public returns (bool success) {\n        require(balanceOf[msg.sender] >= _value, \"Insufficient balance\");\n        require(_to != address(0), \"Invalid address\");\n\n        balanceOf[msg.sender] = balanceOf[msg.sender].sub(_value);\n        balanceOf[_to] = balanceOf[_to].add(_value);\n        emit Transfer(msg.sender, _to, _value);\n        return true;\n    }\n\n    function mint(uint256 _amount) public onlyOwner returns (bool success) {\n        require(_amount > 0, \"Mint amount should be greater than zero\");\n        uint256 amount = _amount * 10**decimals;\n        totalSupply = totalSupply.add(amount);\n        balanceOf[owner] = balanceOf[owner].add(amount);\n        emit Mint(owner, amount);\n        emit Transfer(address(0), owner, amount);\n        return true;\n    }\n\n    function burn(uint256 _amount) public onlyOwner returns (bool success) {\n        require(_amount > 0, \"Burn amount should be greater than zero\");\n        uint256 amount = _amount * 10**decimals;\n        require(balanceOf[msg.sender] >= amount, \"Insufficient balance to burn\");\n\n        balanceOf[msg.sender] = balanceOf[msg.sender].sub(amount);\n        totalSupply = totalSupply.sub(amount);\n        emit Burn(msg.sender, amount);\n        emit Transfer(msg.sender, address(0), amount);\n        return true;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/Hish/WBUSD/contractWithSafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":57:443  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0xb\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":252:259   */\n  dup1\n    /* \"--CODEGEN--\":246:260   */\n  mload\n    /* \"--CODEGEN--\":243:244   */\n  0x0\n    /* \"--CODEGEN--\":238:261   */\n  byte\n    /* \"--CODEGEN--\":232:236   */\n  0x73\n    /* \"--CODEGEN--\":229:262   */\n  eq\n    /* \"--CODEGEN--\":270:271   */\n  0x0\n    /* \"--CODEGEN--\":265:285   */\n  dup2\n  eq\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":222:285   */\n  jump(tag_1)\n    /* \"--CODEGEN--\":265:285   */\ntag_2:\n    /* \"--CODEGEN--\":274:283   */\n  invalid\n    /* \"--CODEGEN--\":222:285   */\ntag_1:\n  pop\n    /* \"--CODEGEN--\":298:307   */\n  address\n    /* \"--CODEGEN--\":295:296   */\n  0x0\n    /* \"--CODEGEN--\":288:308   */\n  mstore\n    /* \"--CODEGEN--\":328:332   */\n  0x73\n    /* \"--CODEGEN--\":319:326   */\n  dup2\n    /* \"--CODEGEN--\":311:333   */\n  mstore8\n    /* \"--CODEGEN--\":352:359   */\n  dup3\n    /* \"--CODEGEN--\":343:350   */\n  dup2\n    /* \"--CODEGEN--\":336:360   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":57:443  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x0\n      dup1\n      revert\n\n    auxdata: 0xa165627a7a72305820c613f8735488129428287ffa64abb477bde90dd3e41bca38cb569acb581829480029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "604c602c600b82828239805160001a60731460008114601c57601e565bfe5b5030600052607381538281f30073000000000000000000000000000000000000000030146080604052600080fd00a165627a7a72305820c613f8735488129428287ffa64abb477bde90dd3e41bca38cb569acb581829480029",
							"opcodes": "PUSH1 0x4C PUSH1 0x2C PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x0 DUP2 EQ PUSH1 0x1C JUMPI PUSH1 0x1E JUMP JUMPDEST INVALID JUMPDEST POP ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN STOP PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xc6 SGT 0xf8 PUSH20 0x5488129428287FFA64ABB477BDE90DD3E41BCA38 0xcb JUMP SWAP11 0xcb PC XOR 0x29 0x48 STOP 0x29 ",
							"sourceMap": "57:386:0:-;;132:2:-1;166:7;155:9;146:7;137:37;252:7;246:14;243:1;238:23;232:4;229:33;270:1;265:20;;;;222:63;;265:20;274:9;222:63;;298:9;295:1;288:20;328:4;319:7;311:22;352:7;343;336:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fd00a165627a7a72305820c613f8735488129428287ffa64abb477bde90dd3e41bca38cb569acb581829480029",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xc6 SGT 0xf8 PUSH20 0x5488129428287FFA64ABB477BDE90DD3E41BCA38 0xcb JUMP SWAP11 0xcb PC XOR 0x29 0x48 STOP 0x29 ",
							"sourceMap": "57:386:0:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "15200",
								"executionCost": "116",
								"totalCost": "15316"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 57,
									"end": 443,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 443,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 252,
									"end": 259,
									"name": "DUP1"
								},
								{
									"begin": 246,
									"end": 260,
									"name": "MLOAD"
								},
								{
									"begin": 243,
									"end": 244,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 238,
									"end": 261,
									"name": "BYTE"
								},
								{
									"begin": 232,
									"end": 236,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 229,
									"end": 262,
									"name": "EQ"
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "DUP2"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "EQ"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "JUMPI"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "JUMP"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "JUMPDEST"
								},
								{
									"begin": 274,
									"end": 283,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "JUMPDEST"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "POP"
								},
								{
									"begin": 298,
									"end": 307,
									"name": "ADDRESS"
								},
								{
									"begin": 295,
									"end": 296,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 288,
									"end": 308,
									"name": "MSTORE"
								},
								{
									"begin": 328,
									"end": 332,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 319,
									"end": 326,
									"name": "DUP2"
								},
								{
									"begin": 311,
									"end": 333,
									"name": "MSTORE8"
								},
								{
									"begin": 352,
									"end": 359,
									"name": "DUP3"
								},
								{
									"begin": 343,
									"end": 350,
									"name": "DUP2"
								},
								{
									"begin": 336,
									"end": 360,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820c613f8735488129428287ffa64abb477bde90dd3e41bca38cb569acb581829480029",
									".code": [
										{
											"begin": 57,
											"end": 443,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 57,
											"end": 443,
											"name": "ADDRESS"
										},
										{
											"begin": 57,
											"end": 443,
											"name": "EQ"
										},
										{
											"begin": 57,
											"end": 443,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 57,
											"end": 443,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 57,
											"end": 443,
											"name": "MSTORE"
										},
										{
											"begin": 57,
											"end": 443,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 57,
											"end": 443,
											"name": "DUP1"
										},
										{
											"begin": 57,
											"end": 443,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/Hish/WBUSD/contractWithSafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Hish/WBUSD/contractWithSafeMath.sol\":{\"keccak256\":\"0xb1b5941537b2c01bed87dda185e9bb31c544be370b2e34c218d02dd80006b935\",\"urls\":[\"bzzr://430d6d20f7af22f683948746f2364f90e2982f76ee4910115d0037bb066be8eb\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				},
				"WUSD": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"name": "success",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"name": "success",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_to",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"name": "success",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":498:530  string public name = \"WethioUSD\" */\n  0xc0\n    /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":445:2583  contract WUSD {... */\n  0x40\n    /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":498:530  string public name = \"WethioUSD\" */\n  mstore\n  0x9\n    /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":445:2583  contract WUSD {... */\n  0x80\n    /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":498:530  string public name = \"WethioUSD\" */\n  dup2\n  swap1\n  mstore\n  0x57657468696f5553440000000000000000000000000000000000000000000000\n  0xa0\n  swap1\n  dup2\n  mstore\n  tag_1\n  swap2\n  0x0\n  swap2\n  swap1\n  jump\t// in(tag_2)\ntag_1:\n  pop\n    /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":536:565  string public symbol = \"WUSD\" */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  swap1\n  swap2\n  mstore\n  0x4\n  dup1\n  dup3\n  mstore\n  0x5755534400000000000000000000000000000000000000000000000000000000\n  0x20\n  swap1\n  swap3\n  add\n  swap2\n  dup3\n  mstore\n  tag_3\n  swap2\n  0x1\n  swap2\n  jump\t// in(tag_2)\ntag_3:\n  pop\n    /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":597:598  2 */\n  0x2\n    /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":571:598  uint256 public decimals = 2 */\n  dup1\n  sstore\n    /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1020:1239  constructor() public {... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_4\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_4:\n  pop\n    /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1051:1056  owner */\n  0x5\n    /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1051:1069  owner = msg.sender */\n  dup1\n  sload\n  not(sub(exp(0x2, 0xa0), 0x1))\n  and\n    /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1059:1069  msg.sender */\n  caller\n    /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1051:1069  owner = msg.sender */\n  or\n  dup1\n  dup3\n  sstore\n    /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1102:1110  decimals */\n  sload(0x2)\n    /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1098:1100  10 */\n  0xa\n    /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1098:1110  10**decimals */\n  swap1\n  dup2\n  exp\n    /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1093:1110  10 * 10**decimals */\n  mul\n    /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1079:1090  totalSupply */\n  0x3\n    /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1079:1110  totalSupply = 10 * 10**decimals */\n  dup2\n  swap1\n  sstore\n  sub(exp(0x2, 0xa0), 0x1)\n    /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1157:1162  owner */\n  swap2\n  dup3\n  and\n    /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1051:1056  owner */\n  0x0\n    /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1147:1163  balanceOf[owner] */\n  swap1\n  dup2\n  mstore\n    /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1147:1156  balanceOf */\n  0x4\n    /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1147:1163  balanceOf[owner] */\n  0x20\n  swap1\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n    /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1147:1177  balanceOf[owner] = totalSupply */\n  dup5\n  swap1\n  sstore\n    /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1213:1218  owner */\n  swap5\n  sload\n    /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1192:1232  Transfer(address(0), owner, totalSupply) */\n  dup6\n  mload\n  swap4\n  dup5\n  mstore\n  swap5\n  mload\n    /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1213:1218  owner */\n  swap5\n  swap1\n  swap4\n  and\n  swap4\n    /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1051:1056  owner */\n  swap1\n  swap3\n    /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1192:1232  Transfer(address(0), owner, totalSupply) */\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n  swap3\n  dup3\n  swap1\n  sub\n  add\n  swap1\n  log3\n    /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":445:2583  contract WUSD {... */\n  jump(tag_7)\ntag_2:\n  dup3\n  dup1\n  sload\n  0x1\n  dup2\n  0x1\n  and\n  iszero\n  0x100\n  mul\n  sub\n  and\n  0x2\n  swap1\n  div\n  swap1\n  0x0\n  mstore\n  keccak256(0x0, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_9\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_11)\ntag_9:\n  dup3\n  dup1\n  add\n  0x1\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_11\n  jumpi\n  swap2\n  dup3\n  add\ntag_10:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_11\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x1\n  add\n  swap1\n  jump(tag_10)\ntag_11:\n  pop\n  tag_12\n  swap3\n  swap2\n  pop\n  jump\t// in(tag_13)\ntag_12:\n  pop\n  swap1\n  jump\t// out\ntag_13:\n  tag_14\n  swap2\n  swap1\ntag_15:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_12\n  jumpi\n  0x0\n  dup2\n  sstore\n  0x1\n  add\n  jump(tag_15)\ntag_14:\n  swap1\n  jump\t// out\ntag_7:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":445:2583  contract WUSD {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      and(div(calldataload(0x0), 0x100000000000000000000000000000000000000000000000000000000), 0xffffffff)\n      0x6fdde03\n      dup2\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xa0712d68\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_10\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":498:530  string public name = \"WethioUSD\" */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_11\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_11:\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":498:530  string public name = \"WethioUSD\" */\n      pop\n      tag_12\n      jump(tag_13)\n    tag_12:\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      mstore\n      dup4\n      mload\n      dup2\n      dup4\n      add\n      mstore\n      dup4\n      mload\n      swap2\n      swap3\n      dup4\n      swap3\n      swap1\n      dup4\n      add\n      swap2\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x0\n        /* \"--CODEGEN--\":8:108   */\n    tag_14:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_15\n      jumpi\n        /* \"--CODEGEN--\":90:101   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":71:82   */\n      dup4\n      dup3\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_14)\n    tag_15:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":498:530  string public name = \"WethioUSD\" */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_17\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x1\n      dup4\n      0x20\n      sub\n      0x100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_17:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":604:630  uint256 public totalSupply */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_18\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_18:\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":604:630  uint256 public totalSupply */\n      pop\n      tag_19\n      jump(tag_20)\n    tag_19:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":571:598  uint256 public decimals = 2 */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_21\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_21:\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":571:598  uint256 public decimals = 2 */\n      pop\n      tag_19\n      jump(tag_23)\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":2069:2581  function burn(uint256 _amount) public onlyOwner returns (bool success) {... */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_24\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_24:\n      pop\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":2069:2581  function burn(uint256 _amount) public onlyOwner returns (bool success) {... */\n      tag_25\n      calldataload(0x4)\n      jump(tag_26)\n    tag_25:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":637:681  mapping(address => uint256) public balanceOf */\n    tag_6:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_27\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_27:\n      pop\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":637:681  mapping(address => uint256) public balanceOf */\n      tag_19\n      and(calldataload(0x4), sub(exp(0x2, 0xa0), 0x1))\n      jump(tag_29)\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":687:707  address public owner */\n    tag_7:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_30\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_30:\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":687:707  address public owner */\n      pop\n      tag_31\n      jump(tag_32)\n    tag_31:\n      0x40\n      dup1\n      mload\n      sub(exp(0x2, 0xa0), 0x1)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":536:565  string public symbol = \"WUSD\" */\n    tag_8:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_33\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_33:\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":536:565  string public symbol = \"WUSD\" */\n      pop\n      tag_12\n      jump(tag_35)\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1654:2063  function mint(uint256 _amount) public onlyOwner returns (bool success) {... */\n    tag_9:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_40\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_40:\n      pop\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1654:2063  function mint(uint256 _amount) public onlyOwner returns (bool success) {... */\n      tag_25\n      calldataload(0x4)\n      jump(tag_42)\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1245:1648  function transfer(address _to, uint256 _value) public returns (bool success) {... */\n    tag_10:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_43\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_43:\n      pop\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1245:1648  function transfer(address _to, uint256 _value) public returns (bool success) {... */\n      tag_25\n      and(calldataload(0x4), sub(exp(0x2, 0xa0), 0x1))\n      calldataload(0x24)\n      jump(tag_45)\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":498:530  string public name = \"WethioUSD\" */\n    tag_13:\n      0x0\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x2\n      0x1\n      dup6\n      and\n      iszero\n      0x100\n      mul\n      not(0x0)\n      add\n      swap1\n      swap5\n      and\n      swap4\n      swap1\n      swap4\n      div\n      0x1f\n      dup2\n      add\n      dup5\n      swap1\n      div\n      dup5\n      mul\n      dup3\n      add\n      dup5\n      add\n      swap1\n      swap3\n      mstore\n      dup2\n      dup2\n      mstore\n      swap3\n      swap2\n      dup4\n      add\n      dup3\n      dup3\n      dup1\n      iszero\n      tag_46\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_47\n      jumpi\n      0x100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_46)\n    tag_47:\n      dup3\n      add\n      swap2\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      swap1\n    tag_48:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x1\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_48\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_46:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":604:630  uint256 public totalSupply */\n    tag_20:\n      sload(0x3)\n      dup2\n      jump\t// out\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":571:598  uint256 public decimals = 2 */\n    tag_23:\n      sload(0x2)\n      dup2\n      jump\t// out\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":2069:2581  function burn(uint256 _amount) public onlyOwner returns (bool success) {... */\n    tag_26:\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":949:954  owner */\n      sload(0x5)\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":2126:2138  bool success */\n      0x0\n      swap1\n      dup2\n      swap1\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":949:954  owner */\n      and\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":935:945  msg.sender */\n      caller\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":935:954  msg.sender == owner */\n      eq\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":927:996  require(msg.sender == owner, \"Only the owner can call this function\") */\n      tag_50\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0x25\n      0x24\n      dup3\n      add\n      mstore\n      0x4f6e6c7920746865206f776e65722063616e2063616c6c20746869732066756e\n      0x44\n      dup3\n      add\n      mstore\n      0x6374696f6e000000000000000000000000000000000000000000000000000000\n      0x64\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x84\n      add\n      swap1\n      revert\n    tag_50:\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":2168:2169  0 */\n      0x0\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":2158:2169  _amount > 0 */\n      dup4\n      gt\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":2150:2213  require(_amount > 0, \"Burn amount should be greater than zero\") */\n      tag_52\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0x27\n      0x24\n      dup3\n      add\n      mstore\n      0x4275726e20616d6f756e742073686f756c642062652067726561746572207468\n      0x44\n      dup3\n      add\n      mstore\n      0x616e207a65726f00000000000000000000000000000000000000000000000000\n      0x64\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x84\n      add\n      swap1\n      revert\n    tag_52:\n      pop\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":2254:2262  decimals */\n      sload(0x2)\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":2290:2300  msg.sender */\n      caller\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":2280:2301  balanceOf[msg.sender] */\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":2280:2289  balanceOf */\n      0x4\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":2280:2301  balanceOf[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":2250:2252  10 */\n      0xa\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":2250:2262  10**decimals */\n      swap2\n      swap1\n      swap2\n      exp\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":2240:2262  _amount * 10**decimals */\n      dup4\n      mul\n      swap1\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":2280:2311  balanceOf[msg.sender] >= amount */\n      dup2\n      gt\n      iszero\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":2272:2344  require(balanceOf[msg.sender] >= amount, \"Insufficient balance to burn\") */\n      tag_53\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0x1c\n      0x24\n      dup3\n      add\n      mstore\n      0x496e73756666696369656e742062616c616e636520746f206275726e00000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_53:\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":2389:2399  msg.sender */\n      caller\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":2379:2400  balanceOf[msg.sender] */\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":2379:2388  balanceOf */\n      0x4\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":2379:2400  balanceOf[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":2379:2412  balanceOf[msg.sender].sub(amount) */\n      tag_54\n      swap1\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":2405:2411  amount */\n      dup3\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":2379:2412  balanceOf[msg.sender].sub(amount) */\n      0xffffffff\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":2379:2404  balanceOf[msg.sender].sub */\n      tag_55\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":2379:2412  balanceOf[msg.sender].sub(amount) */\n      and\n      jump\t// in\n    tag_54:\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":2365:2375  msg.sender */\n      caller\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":2355:2376  balanceOf[msg.sender] */\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":2355:2364  balanceOf */\n      0x4\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":2355:2376  balanceOf[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":2355:2412  balanceOf[msg.sender] = balanceOf[msg.sender].sub(amount) */\n      sstore\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":2436:2447  totalSupply */\n      sload(0x3)\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":2436:2459  totalSupply.sub(amount) */\n      tag_56\n      swap1\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":2452:2458  amount */\n      dup3\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":2436:2459  totalSupply.sub(amount) */\n      0xffffffff\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":2436:2451  totalSupply.sub */\n      tag_55\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":2436:2459  totalSupply.sub(amount) */\n      and\n      jump\t// in\n    tag_56:\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":2422:2433  totalSupply */\n      0x3\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":2422:2459  totalSupply = totalSupply.sub(amount) */\n      sstore\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":2474:2498  Burn(msg.sender, amount) */\n      0x40\n      dup1\n      mload\n      dup3\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":2479:2489  msg.sender */\n      caller\n      swap2\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":2474:2498  Burn(msg.sender, amount) */\n      0xcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5\n      swap2\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      log2\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":2513:2553  Transfer(msg.sender, address(0), amount) */\n      0x40\n      dup1\n      mload\n      dup3\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":2542:2543  0 */\n      0x0\n      swap2\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":2522:2532  msg.sender */\n      caller\n      swap2\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":2513:2553  Transfer(msg.sender, address(0), amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      log3\n      pop\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":2570:2574  true */\n      0x1\n      swap3\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":2069:2581  function burn(uint256 _amount) public onlyOwner returns (bool success) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":637:681  mapping(address => uint256) public balanceOf */\n    tag_29:\n      mstore(0x20, 0x4)\n      0x0\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":687:707  address public owner */\n    tag_32:\n      and(sub(exp(0x2, 0xa0), 0x1), sload(0x5))\n      dup2\n      jump\t// out\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":536:565  string public symbol = \"WUSD\" */\n    tag_35:\n      0x1\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x2\n      dup5\n      dup7\n      and\n      iszero\n      0x100\n      mul\n      not(0x0)\n      add\n      swap1\n      swap5\n      and\n      swap4\n      swap1\n      swap4\n      div\n      0x1f\n      dup2\n      add\n      dup5\n      swap1\n      div\n      dup5\n      mul\n      dup3\n      add\n      dup5\n      add\n      swap1\n      swap3\n      mstore\n      dup2\n      dup2\n      mstore\n      swap3\n      swap2\n      dup4\n      add\n      dup3\n      dup3\n      dup1\n      iszero\n      tag_46\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_47\n      jumpi\n      0x100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_46)\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1654:2063  function mint(uint256 _amount) public onlyOwner returns (bool success) {... */\n    tag_42:\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":949:954  owner */\n      sload(0x5)\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1711:1723  bool success */\n      0x0\n      swap1\n      dup2\n      swap1\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":949:954  owner */\n      and\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":935:945  msg.sender */\n      caller\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":935:954  msg.sender == owner */\n      eq\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":927:996  require(msg.sender == owner, \"Only the owner can call this function\") */\n      tag_61\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0x25\n      0x24\n      dup3\n      add\n      mstore\n      0x4f6e6c7920746865206f776e65722063616e2063616c6c20746869732066756e\n      0x44\n      dup3\n      add\n      mstore\n      0x6374696f6e000000000000000000000000000000000000000000000000000000\n      0x64\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x84\n      add\n      swap1\n      revert\n    tag_61:\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1753:1754  0 */\n      0x0\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1743:1754  _amount > 0 */\n      dup4\n      gt\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1735:1798  require(_amount > 0, \"Mint amount should be greater than zero\") */\n      tag_63\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0x27\n      0x24\n      dup3\n      add\n      mstore\n      0x4d696e7420616d6f756e742073686f756c642062652067726561746572207468\n      0x44\n      dup3\n      add\n      mstore\n      0x616e207a65726f00000000000000000000000000000000000000000000000000\n      0x64\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x84\n      add\n      swap1\n      revert\n    tag_63:\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1839:1847  decimals */\n      sload(0x2)\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1835:1837  10 */\n      0xa\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1835:1847  10**decimals */\n      exp\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1825:1832  _amount */\n      dup4\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1825:1847  _amount * 10**decimals */\n      mul\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1808:1847  uint256 amount = _amount * 10**decimals */\n      swap1\n      pop\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1871:1894  totalSupply.add(amount) */\n      tag_64\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1887:1893  amount */\n      dup2\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1871:1882  totalSupply */\n      sload(0x3)\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1871:1886  totalSupply.add */\n      tag_65\n      swap1\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1871:1894  totalSupply.add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_64:\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1857:1868  totalSupply */\n      0x3\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1857:1894  totalSupply = totalSupply.add(amount) */\n      sstore\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1933:1938  owner */\n      and(sub(exp(0x2, 0xa0), 0x1), sload(0x5))\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1923:1939  balanceOf[owner] */\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1923:1932  balanceOf */\n      0x4\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1923:1939  balanceOf[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1923:1951  balanceOf[owner].add(amount) */\n      tag_66\n      swap1\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1944:1950  amount */\n      dup3\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1923:1951  balanceOf[owner].add(amount) */\n      0xffffffff\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1923:1943  balanceOf[owner].add */\n      tag_65\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1923:1951  balanceOf[owner].add(amount) */\n      and\n      jump\t// in\n    tag_66:\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1914:1919  owner */\n      0x5\n      dup1\n      sload\n      sub(exp(0x2, 0xa0), 0x1)\n      swap1\n      dup2\n      and\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1904:1920  balanceOf[owner] */\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1904:1913  balanceOf */\n      0x4\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1904:1920  balanceOf[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1904:1951  balanceOf[owner] = balanceOf[owner].add(amount) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1971:1976  owner */\n      swap2\n      sload\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1966:1985  Mint(owner, amount) */\n      dup3\n      mload\n      dup6\n      dup2\n      mstore\n      swap3\n      mload\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1971:1976  owner */\n      swap2\n      and\n      swap3\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1966:1985  Mint(owner, amount) */\n      0xf6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885\n      swap3\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log2\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":2021:2026  owner */\n      sload(0x5)\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":2000:2035  Transfer(address(0), owner, amount) */\n      0x40\n      dup1\n      mload\n      dup4\n      dup2\n      mstore\n      swap1\n      mload\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":2021:2026  owner */\n      swap1\n      swap3\n      and\n      swap2\n      0x0\n      swap2\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":2000:2035  Transfer(address(0), owner, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      log3\n      pop\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":2052:2056  true */\n      0x1\n      swap3\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1654:2063  function mint(uint256 _amount) public onlyOwner returns (bool success) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1245:1648  function transfer(address _to, uint256 _value) public returns (bool success) {... */\n    tag_45:\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1350:1360  msg.sender */\n      caller\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1308:1320  bool success */\n      0x0\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1340:1361  balanceOf[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1340:1349  balanceOf */\n      0x4\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1340:1361  balanceOf[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1340:1371  balanceOf[msg.sender] >= _value */\n      dup3\n      gt\n      iszero\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1332:1396  require(balanceOf[msg.sender] >= _value, \"Insufficient balance\") */\n      tag_68\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0x14\n      0x24\n      dup3\n      add\n      mstore\n      0x496e73756666696369656e742062616c616e6365000000000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_68:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1414:1431  _to != address(0) */\n      dup4\n      and\n      iszero\n      iszero\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1406:1451  require(_to != address(0), \"Invalid address\") */\n      tag_69\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0xf\n      0x24\n      dup3\n      add\n      mstore\n      0x496e76616c696420616464726573730000000000000000000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_69:\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1496:1506  msg.sender */\n      caller\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1486:1507  balanceOf[msg.sender] */\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1486:1495  balanceOf */\n      0x4\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1486:1507  balanceOf[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1486:1519  balanceOf[msg.sender].sub(_value) */\n      tag_70\n      swap1\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1512:1518  _value */\n      dup4\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1486:1519  balanceOf[msg.sender].sub(_value) */\n      0xffffffff\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1486:1511  balanceOf[msg.sender].sub */\n      tag_55\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1486:1519  balanceOf[msg.sender].sub(_value) */\n      and\n      jump\t// in\n    tag_70:\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1472:1482  msg.sender */\n      caller\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1462:1483  balanceOf[msg.sender] */\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1462:1471  balanceOf */\n      0x4\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1462:1483  balanceOf[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1462:1519  balanceOf[msg.sender] = balanceOf[msg.sender].sub(_value) */\n      swap3\n      swap1\n      swap3\n      sstore\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1546:1560  balanceOf[_to] */\n      dup6\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1546:1572  balanceOf[_to].add(_value) */\n      tag_71\n      swap1\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1565:1571  _value */\n      dup4\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1546:1572  balanceOf[_to].add(_value) */\n      0xffffffff\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1546:1564  balanceOf[_to].add */\n      tag_65\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1546:1572  balanceOf[_to].add(_value) */\n      and\n      jump\t// in\n    tag_71:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1529:1543  balanceOf[_to] */\n      dup5\n      and\n      0x0\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1529:1538  balanceOf */\n      0x4\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1529:1543  balanceOf[_to] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1529:1572  balanceOf[_to] = balanceOf[_to].add(_value) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1587:1620  Transfer(msg.sender, _to, _value) */\n      dup1\n      mload\n      dup6\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1529:1543  balanceOf[_to] */\n      swap2\n      swap3\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1596:1606  msg.sender */\n      caller\n      swap3\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1587:1620  Transfer(msg.sender, _to, _value) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n      pop\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1637:1641  true */\n      0x1\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":1245:1648  function transfer(address _to, uint256 _value) public returns (bool success) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":262:441  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_55:\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":320:327  uint256 */\n      0x0\n      dup1\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":347:353  b <= a */\n      dup4\n      dup4\n      gt\n      iszero\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":339:388  require(b <= a, \"SafeMath: subtraction overflow\") */\n      tag_73\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0x1e\n      0x24\n      dup3\n      add\n      mstore\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_73:\n      pop\n      pop\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":410:415  a - b */\n      swap1\n      sub\n      swap1\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":262:441  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":80:256  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_65:\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":138:145  uint256 */\n      0x0\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":169:174  a + b */\n      dup3\n      dup3\n      add\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":192:198  c >= a */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":184:230  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_75\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_75:\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":248:249  c */\n      swap4\n        /* \"contracts/Hish/WBUSD/contractWithSafeMath.sol\":80:256  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a7230582024460d0efb05afeec28cfa7aa8e73200b5e4acbfc61d99b685ab6131a2623bdc0029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60c0604052600960808190527f57657468696f555344000000000000000000000000000000000000000000000060a090815261003e9160009190610112565b506040805180820190915260048082527f5755534400000000000000000000000000000000000000000000000000000000602090920191825261008391600191610112565b506002805534801561009457600080fd5b5060058054600160a060020a0319163317808255600254600a90810a026003819055600160a060020a039182166000908152600460209081526040808320849055945485519384529451949093169390927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef928290030190a36101ad565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061015357805160ff1916838001178555610180565b82800160010185558215610180579182015b82811115610180578251825591602001919060010190610165565b5061018c929150610190565b5090565b6101aa91905b8082111561018c5760008155600101610196565b90565b6109ec806101bc6000396000f3006080604052600436106100985763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde03811461009d57806318160ddd14610127578063313ce5671461014e57806342966c681461016357806370a082311461018f5780638da5cb5b146101b057806395d89b41146101e1578063a0712d68146101f6578063a9059cbb1461020e575b600080fd5b3480156100a957600080fd5b506100b2610232565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100ec5781810151838201526020016100d4565b50505050905090810190601f1680156101195780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561013357600080fd5b5061013c6102c0565b60408051918252519081900360200190f35b34801561015a57600080fd5b5061013c6102c6565b34801561016f57600080fd5b5061017b6004356102cc565b604080519115158252519081900360200190f35b34801561019b57600080fd5b5061013c600160a060020a0360043516610508565b3480156101bc57600080fd5b506101c561051a565b60408051600160a060020a039092168252519081900360200190f35b3480156101ed57600080fd5b506100b2610529565b34801561020257600080fd5b5061017b600435610583565b34801561021a57600080fd5b5061017b600160a060020a0360043516602435610783565b6000805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156102b85780601f1061028d576101008083540402835291602001916102b8565b820191906000526020600020905b81548152906001019060200180831161029b57829003601f168201915b505050505081565b60035481565b60025481565b6005546000908190600160a060020a03163314610359576040805160e560020a62461bcd02815260206004820152602560248201527f4f6e6c7920746865206f776e65722063616e2063616c6c20746869732066756e60448201527f6374696f6e000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b600083116103d7576040805160e560020a62461bcd02815260206004820152602760248201527f4275726e20616d6f756e742073686f756c64206265206772656174657220746860448201527f616e207a65726f00000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b5060025433600090815260046020526040902054600a9190910a83029081111561044b576040805160e560020a62461bcd02815260206004820152601c60248201527f496e73756666696369656e742062616c616e636520746f206275726e00000000604482015290519081900360640190fd5b3360009081526004602052604090205461046b908263ffffffff6108fa16565b3360009081526004602052604090205560035461048e908263ffffffff6108fa16565b60035560408051828152905133917fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5919081900360200190a260408051828152905160009133917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a350600192915050565b60046020526000908152604090205481565b600554600160a060020a031681565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156102b85780601f1061028d576101008083540402835291602001916102b8565b6005546000908190600160a060020a03163314610610576040805160e560020a62461bcd02815260206004820152602560248201527f4f6e6c7920746865206f776e65722063616e2063616c6c20746869732066756e60448201527f6374696f6e000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b6000831161068e576040805160e560020a62461bcd02815260206004820152602760248201527f4d696e7420616d6f756e742073686f756c64206265206772656174657220746860448201527f616e207a65726f00000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b600254600a0a830290506106ad8160035461095c90919063ffffffff16565b600355600554600160a060020a03166000908152600460205260409020546106db908263ffffffff61095c16565b60058054600160a060020a03908116600090815260046020908152604091829020949094559154825185815292519116927f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885928290030190a2600554604080518381529051600160a060020a03909216916000917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef919081900360200190a350600192915050565b336000908152600460205260408120548211156107ea576040805160e560020a62461bcd02815260206004820152601460248201527f496e73756666696369656e742062616c616e6365000000000000000000000000604482015290519081900360640190fd5b600160a060020a038316151561084a576040805160e560020a62461bcd02815260206004820152600f60248201527f496e76616c696420616464726573730000000000000000000000000000000000604482015290519081900360640190fd5b3360009081526004602052604090205461086a908363ffffffff6108fa16565b3360009081526004602052604080822092909255600160a060020a0385168152205461089c908363ffffffff61095c16565b600160a060020a0384166000818152600460209081526040918290209390935580518581529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a350600192915050565b60008083831115610955576040805160e560020a62461bcd02815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b5050900390565b6000828201838110156109b9576040805160e560020a62461bcd02815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b93925050505600a165627a7a7230582024460d0efb05afeec28cfa7aa8e73200b5e4acbfc61d99b685ab6131a2623bdc0029",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE PUSH1 0x9 PUSH1 0x80 DUP2 SWAP1 MSTORE PUSH32 0x57657468696F5553440000000000000000000000000000000000000000000000 PUSH1 0xA0 SWAP1 DUP2 MSTORE PUSH2 0x3E SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH2 0x112 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x4 DUP1 DUP3 MSTORE PUSH32 0x5755534400000000000000000000000000000000000000000000000000000000 PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 DUP3 MSTORE PUSH2 0x83 SWAP2 PUSH1 0x1 SWAP2 PUSH2 0x112 JUMP JUMPDEST POP PUSH1 0x2 DUP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND CALLER OR DUP1 DUP3 SSTORE PUSH1 0x2 SLOAD PUSH1 0xA SWAP1 DUP2 EXP MUL PUSH1 0x3 DUP2 SWAP1 SSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 SWAP1 SSTORE SWAP5 SLOAD DUP6 MLOAD SWAP4 DUP5 MSTORE SWAP5 MLOAD SWAP5 SWAP1 SWAP4 AND SWAP4 SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP3 SWAP1 SUB ADD SWAP1 LOG3 PUSH2 0x1AD JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x153 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x180 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x180 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x180 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x165 JUMP JUMPDEST POP PUSH2 0x18C SWAP3 SWAP2 POP PUSH2 0x190 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x1AA SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x18C JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x196 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x9EC DUP1 PUSH2 0x1BC PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x98 JUMPI PUSH4 0xFFFFFFFF PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD DIV AND PUSH4 0x6FDDE03 DUP2 EQ PUSH2 0x9D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x127 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x18F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x1F6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x20E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB2 PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xEC JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xD4 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x119 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x133 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13C PUSH2 0x2C0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13C PUSH2 0x2C6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17B PUSH1 0x4 CALLDATALOAD PUSH2 0x2CC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13C PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x508 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C5 PUSH2 0x51A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB2 PUSH2 0x529 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x202 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17B PUSH1 0x4 CALLDATALOAD PUSH2 0x583 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17B PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0x783 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x2B8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x28D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2B8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x29B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x359 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920746865206F776E65722063616E2063616C6C20746869732066756E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6374696F6E000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x84 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x3D7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4275726E20616D6F756E742073686F756C642062652067726561746572207468 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616E207A65726F00000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x84 ADD SWAP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xA SWAP2 SWAP1 SWAP2 EXP DUP4 MUL SWAP1 DUP2 GT ISZERO PUSH2 0x44B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742062616C616E636520746F206275726E00000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x46B SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x8FA AND JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x3 SLOAD PUSH2 0x48E SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x8FA AND JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD CALLER SWAP2 PUSH32 0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 CALLER SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 DUP5 DUP7 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x2B8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x28D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2B8 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x610 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920746865206F776E65722063616E2063616C6C20746869732066756E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6374696F6E000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x84 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x68E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696E7420616D6F756E742073686F756C642062652067726561746572207468 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616E207A65726F00000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x84 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xA EXP DUP4 MUL SWAP1 POP PUSH2 0x6AD DUP2 PUSH1 0x3 SLOAD PUSH2 0x95C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x6DB SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x95C AND JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP2 SLOAD DUP3 MLOAD DUP6 DUP2 MSTORE SWAP3 MLOAD SWAP2 AND SWAP3 PUSH32 0xF6798A560793A54C3BCFE86A93CDE1E73087D944C0EA20544137D4121396885 SWAP3 DUP3 SWAP1 SUB ADD SWAP1 LOG2 PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND SWAP2 PUSH1 0x0 SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x7EA JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND ISZERO ISZERO PUSH2 0x84A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420616464726573730000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x86A SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x8FA AND JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP6 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x89C SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x95C AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP3 CALLER SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP4 GT ISZERO PUSH2 0x955 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x9B9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0x24 0x46 0xd 0xe CREATE2 SDIV 0xaf 0xee 0xc2 DUP13 STATICCALL PUSH27 0xA8E73200B5E4ACBFC61D99B685AB6131A2623BDC00290000000000 ",
							"sourceMap": "498:32:0:-;445:2138;498:32;;445:2138;498:32;;;;;;;;;;-1:-1:-1;;498:32:0;;:::i;:::-;-1:-1:-1;536:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;597:1;571:27;;1020:219;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1051:5:0;:18;;-1:-1:-1;;;;;;1051:18:0;1059:10;1051:18;;;;1102:8;;1098:2;:12;;;1093:17;1079:11;:31;;;-1:-1:-1;;;;;1157:5:0;;;1051;1147:16;;;:9;:16;;;;;;;;:30;;;1213:5;;1192:40;;;;;;;1213:5;;;;;1051;;1192:40;;;;;;;;445:2138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;445:2138:0;;;-1:-1:-1;445:2138:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6080604052600436106100985763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde03811461009d57806318160ddd14610127578063313ce5671461014e57806342966c681461016357806370a082311461018f5780638da5cb5b146101b057806395d89b41146101e1578063a0712d68146101f6578063a9059cbb1461020e575b600080fd5b3480156100a957600080fd5b506100b2610232565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100ec5781810151838201526020016100d4565b50505050905090810190601f1680156101195780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561013357600080fd5b5061013c6102c0565b60408051918252519081900360200190f35b34801561015a57600080fd5b5061013c6102c6565b34801561016f57600080fd5b5061017b6004356102cc565b604080519115158252519081900360200190f35b34801561019b57600080fd5b5061013c600160a060020a0360043516610508565b3480156101bc57600080fd5b506101c561051a565b60408051600160a060020a039092168252519081900360200190f35b3480156101ed57600080fd5b506100b2610529565b34801561020257600080fd5b5061017b600435610583565b34801561021a57600080fd5b5061017b600160a060020a0360043516602435610783565b6000805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156102b85780601f1061028d576101008083540402835291602001916102b8565b820191906000526020600020905b81548152906001019060200180831161029b57829003601f168201915b505050505081565b60035481565b60025481565b6005546000908190600160a060020a03163314610359576040805160e560020a62461bcd02815260206004820152602560248201527f4f6e6c7920746865206f776e65722063616e2063616c6c20746869732066756e60448201527f6374696f6e000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b600083116103d7576040805160e560020a62461bcd02815260206004820152602760248201527f4275726e20616d6f756e742073686f756c64206265206772656174657220746860448201527f616e207a65726f00000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b5060025433600090815260046020526040902054600a9190910a83029081111561044b576040805160e560020a62461bcd02815260206004820152601c60248201527f496e73756666696369656e742062616c616e636520746f206275726e00000000604482015290519081900360640190fd5b3360009081526004602052604090205461046b908263ffffffff6108fa16565b3360009081526004602052604090205560035461048e908263ffffffff6108fa16565b60035560408051828152905133917fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5919081900360200190a260408051828152905160009133917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a350600192915050565b60046020526000908152604090205481565b600554600160a060020a031681565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156102b85780601f1061028d576101008083540402835291602001916102b8565b6005546000908190600160a060020a03163314610610576040805160e560020a62461bcd02815260206004820152602560248201527f4f6e6c7920746865206f776e65722063616e2063616c6c20746869732066756e60448201527f6374696f6e000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b6000831161068e576040805160e560020a62461bcd02815260206004820152602760248201527f4d696e7420616d6f756e742073686f756c64206265206772656174657220746860448201527f616e207a65726f00000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b600254600a0a830290506106ad8160035461095c90919063ffffffff16565b600355600554600160a060020a03166000908152600460205260409020546106db908263ffffffff61095c16565b60058054600160a060020a03908116600090815260046020908152604091829020949094559154825185815292519116927f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885928290030190a2600554604080518381529051600160a060020a03909216916000917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef919081900360200190a350600192915050565b336000908152600460205260408120548211156107ea576040805160e560020a62461bcd02815260206004820152601460248201527f496e73756666696369656e742062616c616e6365000000000000000000000000604482015290519081900360640190fd5b600160a060020a038316151561084a576040805160e560020a62461bcd02815260206004820152600f60248201527f496e76616c696420616464726573730000000000000000000000000000000000604482015290519081900360640190fd5b3360009081526004602052604090205461086a908363ffffffff6108fa16565b3360009081526004602052604080822092909255600160a060020a0385168152205461089c908363ffffffff61095c16565b600160a060020a0384166000818152600460209081526040918290209390935580518581529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a350600192915050565b60008083831115610955576040805160e560020a62461bcd02815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b5050900390565b6000828201838110156109b9576040805160e560020a62461bcd02815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b93925050505600a165627a7a7230582024460d0efb05afeec28cfa7aa8e73200b5e4acbfc61d99b685ab6131a2623bdc0029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x98 JUMPI PUSH4 0xFFFFFFFF PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD DIV AND PUSH4 0x6FDDE03 DUP2 EQ PUSH2 0x9D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x127 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x18F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x1F6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x20E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB2 PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xEC JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xD4 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x119 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x133 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13C PUSH2 0x2C0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13C PUSH2 0x2C6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17B PUSH1 0x4 CALLDATALOAD PUSH2 0x2CC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13C PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x508 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C5 PUSH2 0x51A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB2 PUSH2 0x529 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x202 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17B PUSH1 0x4 CALLDATALOAD PUSH2 0x583 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17B PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0x783 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x2B8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x28D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2B8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x29B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x359 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920746865206F776E65722063616E2063616C6C20746869732066756E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6374696F6E000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x84 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x3D7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4275726E20616D6F756E742073686F756C642062652067726561746572207468 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616E207A65726F00000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x84 ADD SWAP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xA SWAP2 SWAP1 SWAP2 EXP DUP4 MUL SWAP1 DUP2 GT ISZERO PUSH2 0x44B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742062616C616E636520746F206275726E00000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x46B SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x8FA AND JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x3 SLOAD PUSH2 0x48E SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x8FA AND JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD CALLER SWAP2 PUSH32 0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 CALLER SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 DUP5 DUP7 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x2B8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x28D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2B8 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x610 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920746865206F776E65722063616E2063616C6C20746869732066756E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6374696F6E000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x84 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x68E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696E7420616D6F756E742073686F756C642062652067726561746572207468 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616E207A65726F00000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x84 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xA EXP DUP4 MUL SWAP1 POP PUSH2 0x6AD DUP2 PUSH1 0x3 SLOAD PUSH2 0x95C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x6DB SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x95C AND JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP2 SLOAD DUP3 MLOAD DUP6 DUP2 MSTORE SWAP3 MLOAD SWAP2 AND SWAP3 PUSH32 0xF6798A560793A54C3BCFE86A93CDE1E73087D944C0EA20544137D4121396885 SWAP3 DUP3 SWAP1 SUB ADD SWAP1 LOG2 PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND SWAP2 PUSH1 0x0 SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x7EA JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND ISZERO ISZERO PUSH2 0x84A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420616464726573730000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x86A SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x8FA AND JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP6 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x89C SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x95C AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP3 CALLER SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP4 GT ISZERO PUSH2 0x955 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x9B9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0x24 0x46 0xd 0xe CREATE2 SDIV 0xaf 0xee 0xc2 DUP13 STATICCALL PUSH27 0xA8E73200B5E4ACBFC61D99B685AB6131A2623BDC00290000000000 ",
							"sourceMap": "445:2138:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;498:32;;8:9:-1;5:2;;;30:1;27;20:12;5:2;498:32:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;498:32:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;604:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;604:26:0;;;;;;;;;;;;;;;;;;;;571:27;;8:9:-1;5:2;;;30:1;27;20:12;5:2;571:27:0;;;;2069:512;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2069:512:0;;;;;;;;;;;;;;;;;;;;;;;637:44;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;637:44:0;-1:-1:-1;;;;;637:44:0;;;;;687:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;687:20:0;;;;;;;;-1:-1:-1;;;;;687:20:0;;;;;;;;;;;;;;536:29;;8:9:-1;5:2;;;30:1;27;20:12;5:2;536:29:0;;;;1654:409;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1654:409:0;;;;;1245:403;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1245:403:0;-1:-1:-1;;;;;1245:403:0;;;;;;;498:32;;;;;;;;;;;;;;;-1:-1:-1;;498:32:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;604:26::-;;;;:::o;571:27::-;;;;:::o;2069:512::-;949:5;;2126:12;;;;-1:-1:-1;;;;;949:5:0;935:10;:19;927:69;;;;;-1:-1:-1;;;;;927:69:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2168:1;2158:11;;2150:63;;;;;-1:-1:-1;;;;;2150:63:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2254:8:0;;2290:10;2280:21;;;;:9;:21;;;;;;2250:2;:12;;;;2240:22;;;2280:31;-1:-1:-1;2280:31:0;2272:72;;;;;-1:-1:-1;;;;;2272:72:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;2389:10;2379:21;;;;:9;:21;;;;;;:33;;2405:6;2379:33;:25;:33;:::i;:::-;2365:10;2355:21;;;;:9;:21;;;;;:57;2436:11;;:23;;2452:6;2436:23;:15;:23;:::i;:::-;2422:11;:37;2474:24;;;;;;;;2479:10;;2474:24;;;;;;;;;;2513:40;;;;;;;;2542:1;;2522:10;;2513:40;;;;;;;;;-1:-1:-1;2570:4:0;;2069:512;-1:-1:-1;;2069:512:0:o;637:44::-;;;;;;;;;;;;;:::o;687:20::-;;;-1:-1:-1;;;;;687:20:0;;:::o;536:29::-;;;;;;;;;;;;;;;-1:-1:-1;;536:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1654:409;949:5;;1711:12;;;;-1:-1:-1;;;;;949:5:0;935:10;:19;927:69;;;;;-1:-1:-1;;;;;927:69:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1753:1;1743:11;;1735:63;;;;;-1:-1:-1;;;;;1735:63:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1839:8;;1835:2;:12;1825:7;:22;1808:39;;1871:23;1887:6;1871:11;;:15;;:23;;;;:::i;:::-;1857:11;:37;1933:5;;-1:-1:-1;;;;;1933:5:0;1923:16;;;;:9;:16;;;;;;:28;;1944:6;1923:28;:20;:28;:::i;:::-;1914:5;;;-1:-1:-1;;;;;1914:5:0;;;1904:16;;;;:9;:16;;;;;;;;;:47;;;;1971:5;;1966:19;;;;;;;1971:5;;;1966:19;;;;;;;;2021:5;;2000:35;;;;;;;;-1:-1:-1;;;;;2021:5:0;;;;;;2000:35;;;;;;;;;;-1:-1:-1;2052:4:0;;1654:409;-1:-1:-1;;1654:409:0:o;1245:403::-;1350:10;1308:12;1340:21;;;:9;:21;;;;;;:31;-1:-1:-1;1340:31:0;1332:64;;;;;-1:-1:-1;;;;;1332:64:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1414:17:0;;;;1406:45;;;;;-1:-1:-1;;;;;1406:45:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;1496:10;1486:21;;;;:9;:21;;;;;;:33;;1512:6;1486:33;:25;:33;:::i;:::-;1472:10;1462:21;;;;:9;:21;;;;;;:57;;;;-1:-1:-1;;;;;1546:14:0;;;;;;:26;;1565:6;1546:26;:18;:26;:::i;:::-;-1:-1:-1;;;;;1529:14:0;;;;;;:9;:14;;;;;;;;;:43;;;;1587:33;;;;;;;1529:14;;1596:10;;1587:33;;;;;;;;;;-1:-1:-1;1637:4:0;1245:403;;;;:::o;262:179::-;320:7;;347:6;;;;339:49;;;;;-1:-1:-1;;;;;339:49:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;410:5:0;;;262:179::o;80:176::-;138:7;169:5;;;192:6;;;;184:46;;;;;-1:-1:-1;;;;;184:46:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;248:1;80:176;-1:-1:-1;;;80:176:0:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "508000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balanceOf(address)": "619",
								"burn(uint256)": "infinite",
								"decimals()": "428",
								"mint(uint256)": "infinite",
								"name()": "infinite",
								"owner()": "647",
								"symbol()": "infinite",
								"totalSupply()": "406",
								"transfer(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 498,
									"end": 530,
									"name": "PUSH",
									"value": "C0"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 498,
									"end": 530,
									"name": "MSTORE"
								},
								{
									"begin": 498,
									"end": 530,
									"name": "PUSH",
									"value": "9"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 498,
									"end": 530,
									"name": "DUP2"
								},
								{
									"begin": 498,
									"end": 530,
									"name": "SWAP1"
								},
								{
									"begin": 498,
									"end": 530,
									"name": "MSTORE"
								},
								{
									"begin": 498,
									"end": 530,
									"name": "PUSH",
									"value": "57657468696F5553440000000000000000000000000000000000000000000000"
								},
								{
									"begin": 498,
									"end": 530,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": 498,
									"end": 530,
									"name": "SWAP1"
								},
								{
									"begin": 498,
									"end": 530,
									"name": "DUP2"
								},
								{
									"begin": 498,
									"end": 530,
									"name": "MSTORE"
								},
								{
									"begin": 498,
									"end": 530,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 498,
									"end": 530,
									"name": "SWAP2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2"
								},
								{
									"begin": 498,
									"end": 530,
									"name": "SWAP1"
								},
								{
									"begin": 498,
									"end": 530,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 498,
									"end": 530,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 498,
									"end": 530,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 498,
									"end": 530,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 536,
									"end": 565,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 536,
									"end": 565,
									"name": "DUP1"
								},
								{
									"begin": 536,
									"end": 565,
									"name": "MLOAD"
								},
								{
									"begin": 536,
									"end": 565,
									"name": "DUP1"
								},
								{
									"begin": 536,
									"end": 565,
									"name": "DUP3"
								},
								{
									"begin": 536,
									"end": 565,
									"name": "ADD"
								},
								{
									"begin": 536,
									"end": 565,
									"name": "SWAP1"
								},
								{
									"begin": 536,
									"end": 565,
									"name": "SWAP2"
								},
								{
									"begin": 536,
									"end": 565,
									"name": "MSTORE"
								},
								{
									"begin": 536,
									"end": 565,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 536,
									"end": 565,
									"name": "DUP1"
								},
								{
									"begin": 536,
									"end": 565,
									"name": "DUP3"
								},
								{
									"begin": 536,
									"end": 565,
									"name": "MSTORE"
								},
								{
									"begin": 536,
									"end": 565,
									"name": "PUSH",
									"value": "5755534400000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 536,
									"end": 565,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 536,
									"end": 565,
									"name": "SWAP1"
								},
								{
									"begin": 536,
									"end": 565,
									"name": "SWAP3"
								},
								{
									"begin": 536,
									"end": 565,
									"name": "ADD"
								},
								{
									"begin": 536,
									"end": 565,
									"name": "SWAP2"
								},
								{
									"begin": 536,
									"end": 565,
									"name": "DUP3"
								},
								{
									"begin": 536,
									"end": 565,
									"name": "MSTORE"
								},
								{
									"begin": 536,
									"end": 565,
									"name": "PUSH [tag]",
									"value": "3"
								},
								{
									"begin": 536,
									"end": 565,
									"name": "SWAP2"
								},
								{
									"begin": 536,
									"end": 565,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 536,
									"end": 565,
									"name": "SWAP2"
								},
								{
									"begin": 536,
									"end": 565,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 536,
									"end": 565,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 536,
									"end": 565,
									"name": "tag",
									"value": "3"
								},
								{
									"begin": 536,
									"end": 565,
									"name": "JUMPDEST"
								},
								{
									"begin": 536,
									"end": 565,
									"name": "POP"
								},
								{
									"begin": 597,
									"end": 598,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 571,
									"end": 598,
									"name": "DUP1"
								},
								{
									"begin": 571,
									"end": 598,
									"name": "SSTORE"
								},
								{
									"begin": 1020,
									"end": 1239,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "4"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "4"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 1051,
									"end": 1056,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "DUP1"
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "SLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "EXP"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT"
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "AND"
								},
								{
									"begin": 1059,
									"end": 1069,
									"name": "CALLER"
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "OR"
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "DUP1"
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "DUP3"
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "SSTORE"
								},
								{
									"begin": 1102,
									"end": 1110,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 1102,
									"end": 1110,
									"name": "SLOAD"
								},
								{
									"begin": 1098,
									"end": 1100,
									"name": "PUSH",
									"value": "A"
								},
								{
									"begin": 1098,
									"end": 1110,
									"name": "SWAP1"
								},
								{
									"begin": 1098,
									"end": 1110,
									"name": "DUP2"
								},
								{
									"begin": 1098,
									"end": 1110,
									"name": "EXP"
								},
								{
									"begin": 1093,
									"end": 1110,
									"name": "MUL"
								},
								{
									"begin": 1079,
									"end": 1090,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 1079,
									"end": 1110,
									"name": "DUP2"
								},
								{
									"begin": 1079,
									"end": 1110,
									"name": "SWAP1"
								},
								{
									"begin": 1079,
									"end": 1110,
									"name": "SSTORE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "EXP"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": 1157,
									"end": 1162,
									"name": "SWAP2"
								},
								{
									"begin": 1157,
									"end": 1162,
									"name": "DUP3"
								},
								{
									"begin": 1157,
									"end": 1162,
									"name": "AND"
								},
								{
									"begin": 1051,
									"end": 1056,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1147,
									"end": 1163,
									"name": "SWAP1"
								},
								{
									"begin": 1147,
									"end": 1163,
									"name": "DUP2"
								},
								{
									"begin": 1147,
									"end": 1163,
									"name": "MSTORE"
								},
								{
									"begin": 1147,
									"end": 1156,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 1147,
									"end": 1163,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1147,
									"end": 1163,
									"name": "SWAP1"
								},
								{
									"begin": 1147,
									"end": 1163,
									"name": "DUP2"
								},
								{
									"begin": 1147,
									"end": 1163,
									"name": "MSTORE"
								},
								{
									"begin": 1147,
									"end": 1163,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1147,
									"end": 1163,
									"name": "DUP1"
								},
								{
									"begin": 1147,
									"end": 1163,
									"name": "DUP4"
								},
								{
									"begin": 1147,
									"end": 1163,
									"name": "KECCAK256"
								},
								{
									"begin": 1147,
									"end": 1177,
									"name": "DUP5"
								},
								{
									"begin": 1147,
									"end": 1177,
									"name": "SWAP1"
								},
								{
									"begin": 1147,
									"end": 1177,
									"name": "SSTORE"
								},
								{
									"begin": 1213,
									"end": 1218,
									"name": "SWAP5"
								},
								{
									"begin": 1213,
									"end": 1218,
									"name": "SLOAD"
								},
								{
									"begin": 1192,
									"end": 1232,
									"name": "DUP6"
								},
								{
									"begin": 1192,
									"end": 1232,
									"name": "MLOAD"
								},
								{
									"begin": 1192,
									"end": 1232,
									"name": "SWAP4"
								},
								{
									"begin": 1192,
									"end": 1232,
									"name": "DUP5"
								},
								{
									"begin": 1192,
									"end": 1232,
									"name": "MSTORE"
								},
								{
									"begin": 1192,
									"end": 1232,
									"name": "SWAP5"
								},
								{
									"begin": 1192,
									"end": 1232,
									"name": "MLOAD"
								},
								{
									"begin": 1213,
									"end": 1218,
									"name": "SWAP5"
								},
								{
									"begin": 1213,
									"end": 1218,
									"name": "SWAP1"
								},
								{
									"begin": 1213,
									"end": 1218,
									"name": "SWAP4"
								},
								{
									"begin": 1213,
									"end": 1218,
									"name": "AND"
								},
								{
									"begin": 1213,
									"end": 1218,
									"name": "SWAP4"
								},
								{
									"begin": 1051,
									"end": 1056,
									"name": "SWAP1"
								},
								{
									"begin": 1051,
									"end": 1056,
									"name": "SWAP3"
								},
								{
									"begin": 1192,
									"end": 1232,
									"name": "PUSH",
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 1192,
									"end": 1232,
									"name": "SWAP3"
								},
								{
									"begin": 1192,
									"end": 1232,
									"name": "DUP3"
								},
								{
									"begin": 1192,
									"end": 1232,
									"name": "SWAP1"
								},
								{
									"begin": 1192,
									"end": 1232,
									"name": "SUB"
								},
								{
									"begin": 1192,
									"end": 1232,
									"name": "ADD"
								},
								{
									"begin": 1192,
									"end": 1232,
									"name": "SWAP1"
								},
								{
									"begin": 1192,
									"end": 1232,
									"name": "LOG3"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "JUMP"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "JUMPDEST"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "DUP3"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "DUP1"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "SLOAD"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "DUP2"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "AND"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "ISZERO"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "MUL"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "SUB"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "AND"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "SWAP1"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "DIV"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "SWAP1"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "MSTORE"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "KECCAK256"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "SWAP1"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "ADD"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "SWAP1"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "DIV"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "DUP2"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "ADD"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "SWAP3"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "DUP3"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "LT"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "PUSH [tag]",
									"value": "9"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "JUMPI"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "DUP1"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "MLOAD"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "NOT"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "AND"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "DUP4"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "DUP1"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "ADD"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "OR"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "DUP6"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "SSTORE"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "JUMP"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "tag",
									"value": "9"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "JUMPDEST"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "DUP3"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "DUP1"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "ADD"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "ADD"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "DUP6"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "SSTORE"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "DUP3"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "ISZERO"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "JUMPI"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "SWAP2"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "DUP3"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "ADD"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "tag",
									"value": "10"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "JUMPDEST"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "DUP3"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "DUP2"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "GT"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "ISZERO"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "JUMPI"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "DUP3"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "MLOAD"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "DUP3"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "SSTORE"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "SWAP2"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "ADD"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "SWAP2"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "SWAP1"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "ADD"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "SWAP1"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "PUSH [tag]",
									"value": "10"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "JUMP"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "tag",
									"value": "11"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "SWAP3"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "SWAP2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "PUSH [tag]",
									"value": "13"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "tag",
									"value": "12"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "JUMPDEST"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "POP"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "SWAP1"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "tag",
									"value": "13"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "JUMPDEST"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "PUSH [tag]",
									"value": "14"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "SWAP2"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "SWAP1"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "tag",
									"value": "15"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "JUMPDEST"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "DUP1"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "DUP3"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "GT"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "ISZERO"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "JUMPI"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "DUP2"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "SSTORE"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "ADD"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "PUSH [tag]",
									"value": "15"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "JUMP"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "tag",
									"value": "14"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "JUMPDEST"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "SWAP1"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "tag",
									"value": "7"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "JUMPDEST"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "DUP1"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "CODECOPY"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 445,
									"end": 2583,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a7230582024460d0efb05afeec28cfa7aa8e73200b5e4acbfc61d99b685ab6131a2623bdc0029",
									".code": [
										{
											"begin": 445,
											"end": 2583,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 445,
											"end": 2583,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 445,
											"end": 2583,
											"name": "MSTORE"
										},
										{
											"begin": 445,
											"end": 2583,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 445,
											"end": 2583,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 445,
											"end": 2583,
											"name": "LT"
										},
										{
											"begin": 445,
											"end": 2583,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 445,
											"end": 2583,
											"name": "JUMPI"
										},
										{
											"begin": 445,
											"end": 2583,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 445,
											"end": 2583,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 445,
											"end": 2583,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 445,
											"end": 2583,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 445,
											"end": 2583,
											"name": "DIV"
										},
										{
											"begin": 445,
											"end": 2583,
											"name": "AND"
										},
										{
											"begin": 445,
											"end": 2583,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 445,
											"end": 2583,
											"name": "DUP2"
										},
										{
											"begin": 445,
											"end": 2583,
											"name": "EQ"
										},
										{
											"begin": 445,
											"end": 2583,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 445,
											"end": 2583,
											"name": "JUMPI"
										},
										{
											"begin": 445,
											"end": 2583,
											"name": "DUP1"
										},
										{
											"begin": 445,
											"end": 2583,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 445,
											"end": 2583,
											"name": "EQ"
										},
										{
											"begin": 445,
											"end": 2583,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 445,
											"end": 2583,
											"name": "JUMPI"
										},
										{
											"begin": 445,
											"end": 2583,
											"name": "DUP1"
										},
										{
											"begin": 445,
											"end": 2583,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 445,
											"end": 2583,
											"name": "EQ"
										},
										{
											"begin": 445,
											"end": 2583,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 445,
											"end": 2583,
											"name": "JUMPI"
										},
										{
											"begin": 445,
											"end": 2583,
											"name": "DUP1"
										},
										{
											"begin": 445,
											"end": 2583,
											"name": "PUSH",
											"value": "42966C68"
										},
										{
											"begin": 445,
											"end": 2583,
											"name": "EQ"
										},
										{
											"begin": 445,
											"end": 2583,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 445,
											"end": 2583,
											"name": "JUMPI"
										},
										{
											"begin": 445,
											"end": 2583,
											"name": "DUP1"
										},
										{
											"begin": 445,
											"end": 2583,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 445,
											"end": 2583,
											"name": "EQ"
										},
										{
											"begin": 445,
											"end": 2583,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 445,
											"end": 2583,
											"name": "JUMPI"
										},
										{
											"begin": 445,
											"end": 2583,
											"name": "DUP1"
										},
										{
											"begin": 445,
											"end": 2583,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 445,
											"end": 2583,
											"name": "EQ"
										},
										{
											"begin": 445,
											"end": 2583,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 445,
											"end": 2583,
											"name": "JUMPI"
										},
										{
											"begin": 445,
											"end": 2583,
											"name": "DUP1"
										},
										{
											"begin": 445,
											"end": 2583,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 445,
											"end": 2583,
											"name": "EQ"
										},
										{
											"begin": 445,
											"end": 2583,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 445,
											"end": 2583,
											"name": "JUMPI"
										},
										{
											"begin": 445,
											"end": 2583,
											"name": "DUP1"
										},
										{
											"begin": 445,
											"end": 2583,
											"name": "PUSH",
											"value": "A0712D68"
										},
										{
											"begin": 445,
											"end": 2583,
											"name": "EQ"
										},
										{
											"begin": 445,
											"end": 2583,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 445,
											"end": 2583,
											"name": "JUMPI"
										},
										{
											"begin": 445,
											"end": 2583,
											"name": "DUP1"
										},
										{
											"begin": 445,
											"end": 2583,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 445,
											"end": 2583,
											"name": "EQ"
										},
										{
											"begin": 445,
											"end": 2583,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 445,
											"end": 2583,
											"name": "JUMPI"
										},
										{
											"begin": 445,
											"end": 2583,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 445,
											"end": 2583,
											"name": "JUMPDEST"
										},
										{
											"begin": 445,
											"end": 2583,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 445,
											"end": 2583,
											"name": "DUP1"
										},
										{
											"begin": 445,
											"end": 2583,
											"name": "REVERT"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "JUMPDEST"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "POP"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "JUMP"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "JUMPDEST"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "DUP1"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "MLOAD"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "DUP1"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "DUP3"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "MSTORE"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "DUP4"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "MLOAD"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "DUP2"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "DUP4"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "ADD"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "MSTORE"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "DUP4"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "MLOAD"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "SWAP2"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "SWAP3"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "DUP4"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "SWAP3"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "SWAP1"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "DUP4"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "ADD"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "SWAP2"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "DUP6"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "ADD"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "SWAP1"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "DUP1"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "DUP4"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "DUP4"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP4"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP3"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "POP"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "POP"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "POP"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "SWAP1"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "POP"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "SWAP1"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "DUP2"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "ADD"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "SWAP1"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "AND"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "DUP1"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "ISZERO"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "JUMPI"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "DUP1"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "DUP3"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "SUB"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "DUP1"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "MLOAD"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "DUP4"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "SUB"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "EXP"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "SUB"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "NOT"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "AND"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "DUP2"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "MSTORE"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "ADD"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "SWAP2"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "POP"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "JUMPDEST"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "POP"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "SWAP3"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "POP"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "POP"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "POP"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "MLOAD"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "DUP1"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "SWAP2"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "SUB"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "SWAP1"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "RETURN"
										},
										{
											"begin": 604,
											"end": 630,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 604,
											"end": 630,
											"name": "JUMPDEST"
										},
										{
											"begin": 604,
											"end": 630,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 604,
											"end": 630,
											"name": "POP"
										},
										{
											"begin": 604,
											"end": 630,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 604,
											"end": 630,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 604,
											"end": 630,
											"name": "JUMP"
										},
										{
											"begin": 604,
											"end": 630,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 604,
											"end": 630,
											"name": "JUMPDEST"
										},
										{
											"begin": 604,
											"end": 630,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 604,
											"end": 630,
											"name": "DUP1"
										},
										{
											"begin": 604,
											"end": 630,
											"name": "MLOAD"
										},
										{
											"begin": 604,
											"end": 630,
											"name": "SWAP2"
										},
										{
											"begin": 604,
											"end": 630,
											"name": "DUP3"
										},
										{
											"begin": 604,
											"end": 630,
											"name": "MSTORE"
										},
										{
											"begin": 604,
											"end": 630,
											"name": "MLOAD"
										},
										{
											"begin": 604,
											"end": 630,
											"name": "SWAP1"
										},
										{
											"begin": 604,
											"end": 630,
											"name": "DUP2"
										},
										{
											"begin": 604,
											"end": 630,
											"name": "SWAP1"
										},
										{
											"begin": 604,
											"end": 630,
											"name": "SUB"
										},
										{
											"begin": 604,
											"end": 630,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 604,
											"end": 630,
											"name": "ADD"
										},
										{
											"begin": 604,
											"end": 630,
											"name": "SWAP1"
										},
										{
											"begin": 604,
											"end": 630,
											"name": "RETURN"
										},
										{
											"begin": 571,
											"end": 598,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 571,
											"end": 598,
											"name": "JUMPDEST"
										},
										{
											"begin": 571,
											"end": 598,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 571,
											"end": 598,
											"name": "POP"
										},
										{
											"begin": 571,
											"end": 598,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 571,
											"end": 598,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 571,
											"end": 598,
											"name": "JUMP"
										},
										{
											"begin": 2069,
											"end": 2581,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 2069,
											"end": 2581,
											"name": "JUMPDEST"
										},
										{
											"begin": 2069,
											"end": 2581,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 2069,
											"end": 2581,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 2069,
											"end": 2581,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2069,
											"end": 2581,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2069,
											"end": 2581,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 2069,
											"end": 2581,
											"name": "JUMP"
										},
										{
											"begin": 2069,
											"end": 2581,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 2069,
											"end": 2581,
											"name": "JUMPDEST"
										},
										{
											"begin": 2069,
											"end": 2581,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2069,
											"end": 2581,
											"name": "DUP1"
										},
										{
											"begin": 2069,
											"end": 2581,
											"name": "MLOAD"
										},
										{
											"begin": 2069,
											"end": 2581,
											"name": "SWAP2"
										},
										{
											"begin": 2069,
											"end": 2581,
											"name": "ISZERO"
										},
										{
											"begin": 2069,
											"end": 2581,
											"name": "ISZERO"
										},
										{
											"begin": 2069,
											"end": 2581,
											"name": "DUP3"
										},
										{
											"begin": 2069,
											"end": 2581,
											"name": "MSTORE"
										},
										{
											"begin": 2069,
											"end": 2581,
											"name": "MLOAD"
										},
										{
											"begin": 2069,
											"end": 2581,
											"name": "SWAP1"
										},
										{
											"begin": 2069,
											"end": 2581,
											"name": "DUP2"
										},
										{
											"begin": 2069,
											"end": 2581,
											"name": "SWAP1"
										},
										{
											"begin": 2069,
											"end": 2581,
											"name": "SUB"
										},
										{
											"begin": 2069,
											"end": 2581,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2069,
											"end": 2581,
											"name": "ADD"
										},
										{
											"begin": 2069,
											"end": 2581,
											"name": "SWAP1"
										},
										{
											"begin": 2069,
											"end": 2581,
											"name": "RETURN"
										},
										{
											"begin": 637,
											"end": 681,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 637,
											"end": 681,
											"name": "JUMPDEST"
										},
										{
											"begin": 637,
											"end": 681,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 637,
											"end": 681,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 637,
											"end": 681,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 637,
											"end": 681,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 637,
											"end": 681,
											"name": "AND"
										},
										{
											"begin": 637,
											"end": 681,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 637,
											"end": 681,
											"name": "JUMP"
										},
										{
											"begin": 687,
											"end": 707,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 687,
											"end": 707,
											"name": "JUMPDEST"
										},
										{
											"begin": 687,
											"end": 707,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 687,
											"end": 707,
											"name": "POP"
										},
										{
											"begin": 687,
											"end": 707,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 687,
											"end": 707,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 687,
											"end": 707,
											"name": "JUMP"
										},
										{
											"begin": 687,
											"end": 707,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 687,
											"end": 707,
											"name": "JUMPDEST"
										},
										{
											"begin": 687,
											"end": 707,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 687,
											"end": 707,
											"name": "DUP1"
										},
										{
											"begin": 687,
											"end": 707,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 687,
											"end": 707,
											"name": "SWAP1"
										},
										{
											"begin": 687,
											"end": 707,
											"name": "SWAP3"
										},
										{
											"begin": 687,
											"end": 707,
											"name": "AND"
										},
										{
											"begin": 687,
											"end": 707,
											"name": "DUP3"
										},
										{
											"begin": 687,
											"end": 707,
											"name": "MSTORE"
										},
										{
											"begin": 687,
											"end": 707,
											"name": "MLOAD"
										},
										{
											"begin": 687,
											"end": 707,
											"name": "SWAP1"
										},
										{
											"begin": 687,
											"end": 707,
											"name": "DUP2"
										},
										{
											"begin": 687,
											"end": 707,
											"name": "SWAP1"
										},
										{
											"begin": 687,
											"end": 707,
											"name": "SUB"
										},
										{
											"begin": 687,
											"end": 707,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 687,
											"end": 707,
											"name": "ADD"
										},
										{
											"begin": 687,
											"end": 707,
											"name": "SWAP1"
										},
										{
											"begin": 687,
											"end": 707,
											"name": "RETURN"
										},
										{
											"begin": 536,
											"end": 565,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 536,
											"end": 565,
											"name": "JUMPDEST"
										},
										{
											"begin": 536,
											"end": 565,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 536,
											"end": 565,
											"name": "POP"
										},
										{
											"begin": 536,
											"end": 565,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 536,
											"end": 565,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 536,
											"end": 565,
											"name": "JUMP"
										},
										{
											"begin": 1654,
											"end": 2063,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 1654,
											"end": 2063,
											"name": "JUMPDEST"
										},
										{
											"begin": 1654,
											"end": 2063,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 1654,
											"end": 2063,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 1654,
											"end": 2063,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1654,
											"end": 2063,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1654,
											"end": 2063,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 1654,
											"end": 2063,
											"name": "JUMP"
										},
										{
											"begin": 1245,
											"end": 1648,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 1245,
											"end": 1648,
											"name": "JUMPDEST"
										},
										{
											"begin": 1245,
											"end": 1648,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 1245,
											"end": 1648,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1245,
											"end": 1648,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1245,
											"end": 1648,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1245,
											"end": 1648,
											"name": "AND"
										},
										{
											"begin": 1245,
											"end": 1648,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 1245,
											"end": 1648,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1245,
											"end": 1648,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 1245,
											"end": 1648,
											"name": "JUMP"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "JUMPDEST"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "DUP1"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "SLOAD"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "DUP1"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "MLOAD"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "DUP6"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "AND"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "ISZERO"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "MUL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "ADD"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "SWAP1"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "SWAP5"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "AND"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "SWAP4"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "SWAP1"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "SWAP4"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "DIV"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "DUP2"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "ADD"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "DUP5"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "SWAP1"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "DIV"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "DUP5"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "MUL"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "DUP3"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "ADD"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "DUP5"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "ADD"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "SWAP1"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "SWAP3"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "MSTORE"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "DUP2"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "DUP2"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "MSTORE"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "SWAP3"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "SWAP2"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "DUP4"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "ADD"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "DUP3"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "DUP3"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "DUP1"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "ISZERO"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "JUMPI"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "DUP1"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "LT"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "JUMPI"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "DUP1"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "DUP4"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "SLOAD"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "DIV"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "MUL"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "DUP4"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "MSTORE"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "SWAP2"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "ADD"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "SWAP2"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "JUMP"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "JUMPDEST"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "DUP3"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "ADD"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "SWAP2"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "SWAP1"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "MSTORE"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "KECCAK256"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "SWAP1"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "JUMPDEST"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "DUP2"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "SLOAD"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "DUP2"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "MSTORE"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "SWAP1"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "ADD"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "SWAP1"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "ADD"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "DUP1"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "DUP4"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "GT"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "JUMPI"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "DUP3"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "SWAP1"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "SUB"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "AND"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "DUP3"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "ADD"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "SWAP2"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "JUMPDEST"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "POP"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "POP"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "POP"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "POP"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "POP"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "DUP2"
										},
										{
											"begin": 498,
											"end": 530,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 604,
											"end": 630,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 604,
											"end": 630,
											"name": "JUMPDEST"
										},
										{
											"begin": 604,
											"end": 630,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 604,
											"end": 630,
											"name": "SLOAD"
										},
										{
											"begin": 604,
											"end": 630,
											"name": "DUP2"
										},
										{
											"begin": 604,
											"end": 630,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 571,
											"end": 598,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 571,
											"end": 598,
											"name": "JUMPDEST"
										},
										{
											"begin": 571,
											"end": 598,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 571,
											"end": 598,
											"name": "SLOAD"
										},
										{
											"begin": 571,
											"end": 598,
											"name": "DUP2"
										},
										{
											"begin": 571,
											"end": 598,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2069,
											"end": 2581,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 2069,
											"end": 2581,
											"name": "JUMPDEST"
										},
										{
											"begin": 949,
											"end": 954,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 949,
											"end": 954,
											"name": "SLOAD"
										},
										{
											"begin": 2126,
											"end": 2138,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2126,
											"end": 2138,
											"name": "SWAP1"
										},
										{
											"begin": 2126,
											"end": 2138,
											"name": "DUP2"
										},
										{
											"begin": 2126,
											"end": 2138,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 949,
											"end": 954,
											"name": "AND"
										},
										{
											"begin": 935,
											"end": 945,
											"name": "CALLER"
										},
										{
											"begin": 935,
											"end": 954,
											"name": "EQ"
										},
										{
											"begin": 927,
											"end": 996,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 927,
											"end": 996,
											"name": "JUMPI"
										},
										{
											"begin": 927,
											"end": 996,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 927,
											"end": 996,
											"name": "DUP1"
										},
										{
											"begin": 927,
											"end": 996,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 927,
											"end": 996,
											"name": "DUP2"
										},
										{
											"begin": 927,
											"end": 996,
											"name": "MSTORE"
										},
										{
											"begin": 927,
											"end": 996,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 927,
											"end": 996,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 927,
											"end": 996,
											"name": "DUP3"
										},
										{
											"begin": 927,
											"end": 996,
											"name": "ADD"
										},
										{
											"begin": 927,
											"end": 996,
											"name": "MSTORE"
										},
										{
											"begin": 927,
											"end": 996,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 927,
											"end": 996,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 927,
											"end": 996,
											"name": "DUP3"
										},
										{
											"begin": 927,
											"end": 996,
											"name": "ADD"
										},
										{
											"begin": 927,
											"end": 996,
											"name": "MSTORE"
										},
										{
											"begin": 927,
											"end": 996,
											"name": "PUSH",
											"value": "4F6E6C7920746865206F776E65722063616E2063616C6C20746869732066756E"
										},
										{
											"begin": 927,
											"end": 996,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 927,
											"end": 996,
											"name": "DUP3"
										},
										{
											"begin": 927,
											"end": 996,
											"name": "ADD"
										},
										{
											"begin": 927,
											"end": 996,
											"name": "MSTORE"
										},
										{
											"begin": 927,
											"end": 996,
											"name": "PUSH",
											"value": "6374696F6E000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 927,
											"end": 996,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 927,
											"end": 996,
											"name": "DUP3"
										},
										{
											"begin": 927,
											"end": 996,
											"name": "ADD"
										},
										{
											"begin": 927,
											"end": 996,
											"name": "MSTORE"
										},
										{
											"begin": 927,
											"end": 996,
											"name": "SWAP1"
										},
										{
											"begin": 927,
											"end": 996,
											"name": "MLOAD"
										},
										{
											"begin": 927,
											"end": 996,
											"name": "SWAP1"
										},
										{
											"begin": 927,
											"end": 996,
											"name": "DUP2"
										},
										{
											"begin": 927,
											"end": 996,
											"name": "SWAP1"
										},
										{
											"begin": 927,
											"end": 996,
											"name": "SUB"
										},
										{
											"begin": 927,
											"end": 996,
											"name": "PUSH",
											"value": "84"
										},
										{
											"begin": 927,
											"end": 996,
											"name": "ADD"
										},
										{
											"begin": 927,
											"end": 996,
											"name": "SWAP1"
										},
										{
											"begin": 927,
											"end": 996,
											"name": "REVERT"
										},
										{
											"begin": 927,
											"end": 996,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 927,
											"end": 996,
											"name": "JUMPDEST"
										},
										{
											"begin": 2168,
											"end": 2169,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2158,
											"end": 2169,
											"name": "DUP4"
										},
										{
											"begin": 2158,
											"end": 2169,
											"name": "GT"
										},
										{
											"begin": 2150,
											"end": 2213,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 2150,
											"end": 2213,
											"name": "JUMPI"
										},
										{
											"begin": 2150,
											"end": 2213,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2150,
											"end": 2213,
											"name": "DUP1"
										},
										{
											"begin": 2150,
											"end": 2213,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 2150,
											"end": 2213,
											"name": "DUP2"
										},
										{
											"begin": 2150,
											"end": 2213,
											"name": "MSTORE"
										},
										{
											"begin": 2150,
											"end": 2213,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2150,
											"end": 2213,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2150,
											"end": 2213,
											"name": "DUP3"
										},
										{
											"begin": 2150,
											"end": 2213,
											"name": "ADD"
										},
										{
											"begin": 2150,
											"end": 2213,
											"name": "MSTORE"
										},
										{
											"begin": 2150,
											"end": 2213,
											"name": "PUSH",
											"value": "27"
										},
										{
											"begin": 2150,
											"end": 2213,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 2150,
											"end": 2213,
											"name": "DUP3"
										},
										{
											"begin": 2150,
											"end": 2213,
											"name": "ADD"
										},
										{
											"begin": 2150,
											"end": 2213,
											"name": "MSTORE"
										},
										{
											"begin": 2150,
											"end": 2213,
											"name": "PUSH",
											"value": "4275726E20616D6F756E742073686F756C642062652067726561746572207468"
										},
										{
											"begin": 2150,
											"end": 2213,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 2150,
											"end": 2213,
											"name": "DUP3"
										},
										{
											"begin": 2150,
											"end": 2213,
											"name": "ADD"
										},
										{
											"begin": 2150,
											"end": 2213,
											"name": "MSTORE"
										},
										{
											"begin": 2150,
											"end": 2213,
											"name": "PUSH",
											"value": "616E207A65726F00000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2150,
											"end": 2213,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 2150,
											"end": 2213,
											"name": "DUP3"
										},
										{
											"begin": 2150,
											"end": 2213,
											"name": "ADD"
										},
										{
											"begin": 2150,
											"end": 2213,
											"name": "MSTORE"
										},
										{
											"begin": 2150,
											"end": 2213,
											"name": "SWAP1"
										},
										{
											"begin": 2150,
											"end": 2213,
											"name": "MLOAD"
										},
										{
											"begin": 2150,
											"end": 2213,
											"name": "SWAP1"
										},
										{
											"begin": 2150,
											"end": 2213,
											"name": "DUP2"
										},
										{
											"begin": 2150,
											"end": 2213,
											"name": "SWAP1"
										},
										{
											"begin": 2150,
											"end": 2213,
											"name": "SUB"
										},
										{
											"begin": 2150,
											"end": 2213,
											"name": "PUSH",
											"value": "84"
										},
										{
											"begin": 2150,
											"end": 2213,
											"name": "ADD"
										},
										{
											"begin": 2150,
											"end": 2213,
											"name": "SWAP1"
										},
										{
											"begin": 2150,
											"end": 2213,
											"name": "REVERT"
										},
										{
											"begin": 2150,
											"end": 2213,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 2150,
											"end": 2213,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 2254,
											"end": 2262,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2254,
											"end": 2262,
											"name": "SLOAD"
										},
										{
											"begin": 2290,
											"end": 2300,
											"name": "CALLER"
										},
										{
											"begin": 2280,
											"end": 2301,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2280,
											"end": 2301,
											"name": "SWAP1"
										},
										{
											"begin": 2280,
											"end": 2301,
											"name": "DUP2"
										},
										{
											"begin": 2280,
											"end": 2301,
											"name": "MSTORE"
										},
										{
											"begin": 2280,
											"end": 2289,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2280,
											"end": 2301,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2280,
											"end": 2301,
											"name": "MSTORE"
										},
										{
											"begin": 2280,
											"end": 2301,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2280,
											"end": 2301,
											"name": "SWAP1"
										},
										{
											"begin": 2280,
											"end": 2301,
											"name": "KECCAK256"
										},
										{
											"begin": 2280,
											"end": 2301,
											"name": "SLOAD"
										},
										{
											"begin": 2250,
											"end": 2252,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "SWAP2"
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "SWAP1"
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "SWAP2"
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "EXP"
										},
										{
											"begin": 2240,
											"end": 2262,
											"name": "DUP4"
										},
										{
											"begin": 2240,
											"end": 2262,
											"name": "MUL"
										},
										{
											"begin": 2240,
											"end": 2262,
											"name": "SWAP1"
										},
										{
											"begin": 2280,
											"end": 2311,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT"
										},
										{
											"begin": 2280,
											"end": 2311,
											"name": "ISZERO"
										},
										{
											"begin": 2272,
											"end": 2344,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 2272,
											"end": 2344,
											"name": "JUMPI"
										},
										{
											"begin": 2272,
											"end": 2344,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2272,
											"end": 2344,
											"name": "DUP1"
										},
										{
											"begin": 2272,
											"end": 2344,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 2272,
											"end": 2344,
											"name": "DUP2"
										},
										{
											"begin": 2272,
											"end": 2344,
											"name": "MSTORE"
										},
										{
											"begin": 2272,
											"end": 2344,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2272,
											"end": 2344,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2272,
											"end": 2344,
											"name": "DUP3"
										},
										{
											"begin": 2272,
											"end": 2344,
											"name": "ADD"
										},
										{
											"begin": 2272,
											"end": 2344,
											"name": "MSTORE"
										},
										{
											"begin": 2272,
											"end": 2344,
											"name": "PUSH",
											"value": "1C"
										},
										{
											"begin": 2272,
											"end": 2344,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 2272,
											"end": 2344,
											"name": "DUP3"
										},
										{
											"begin": 2272,
											"end": 2344,
											"name": "ADD"
										},
										{
											"begin": 2272,
											"end": 2344,
											"name": "MSTORE"
										},
										{
											"begin": 2272,
											"end": 2344,
											"name": "PUSH",
											"value": "496E73756666696369656E742062616C616E636520746F206275726E00000000"
										},
										{
											"begin": 2272,
											"end": 2344,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 2272,
											"end": 2344,
											"name": "DUP3"
										},
										{
											"begin": 2272,
											"end": 2344,
											"name": "ADD"
										},
										{
											"begin": 2272,
											"end": 2344,
											"name": "MSTORE"
										},
										{
											"begin": 2272,
											"end": 2344,
											"name": "SWAP1"
										},
										{
											"begin": 2272,
											"end": 2344,
											"name": "MLOAD"
										},
										{
											"begin": 2272,
											"end": 2344,
											"name": "SWAP1"
										},
										{
											"begin": 2272,
											"end": 2344,
											"name": "DUP2"
										},
										{
											"begin": 2272,
											"end": 2344,
											"name": "SWAP1"
										},
										{
											"begin": 2272,
											"end": 2344,
											"name": "SUB"
										},
										{
											"begin": 2272,
											"end": 2344,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 2272,
											"end": 2344,
											"name": "ADD"
										},
										{
											"begin": 2272,
											"end": 2344,
											"name": "SWAP1"
										},
										{
											"begin": 2272,
											"end": 2344,
											"name": "REVERT"
										},
										{
											"begin": 2272,
											"end": 2344,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 2272,
											"end": 2344,
											"name": "JUMPDEST"
										},
										{
											"begin": 2389,
											"end": 2399,
											"name": "CALLER"
										},
										{
											"begin": 2379,
											"end": 2400,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2379,
											"end": 2400,
											"name": "SWAP1"
										},
										{
											"begin": 2379,
											"end": 2400,
											"name": "DUP2"
										},
										{
											"begin": 2379,
											"end": 2400,
											"name": "MSTORE"
										},
										{
											"begin": 2379,
											"end": 2388,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2379,
											"end": 2400,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2379,
											"end": 2400,
											"name": "MSTORE"
										},
										{
											"begin": 2379,
											"end": 2400,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2379,
											"end": 2400,
											"name": "SWAP1"
										},
										{
											"begin": 2379,
											"end": 2400,
											"name": "KECCAK256"
										},
										{
											"begin": 2379,
											"end": 2400,
											"name": "SLOAD"
										},
										{
											"begin": 2379,
											"end": 2412,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 2379,
											"end": 2412,
											"name": "SWAP1"
										},
										{
											"begin": 2405,
											"end": 2411,
											"name": "DUP3"
										},
										{
											"begin": 2379,
											"end": 2412,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2379,
											"end": 2404,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 2379,
											"end": 2412,
											"name": "AND"
										},
										{
											"begin": 2379,
											"end": 2412,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2379,
											"end": 2412,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 2379,
											"end": 2412,
											"name": "JUMPDEST"
										},
										{
											"begin": 2365,
											"end": 2375,
											"name": "CALLER"
										},
										{
											"begin": 2355,
											"end": 2376,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2355,
											"end": 2376,
											"name": "SWAP1"
										},
										{
											"begin": 2355,
											"end": 2376,
											"name": "DUP2"
										},
										{
											"begin": 2355,
											"end": 2376,
											"name": "MSTORE"
										},
										{
											"begin": 2355,
											"end": 2364,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2355,
											"end": 2376,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2355,
											"end": 2376,
											"name": "MSTORE"
										},
										{
											"begin": 2355,
											"end": 2376,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2355,
											"end": 2376,
											"name": "SWAP1"
										},
										{
											"begin": 2355,
											"end": 2376,
											"name": "KECCAK256"
										},
										{
											"begin": 2355,
											"end": 2412,
											"name": "SSTORE"
										},
										{
											"begin": 2436,
											"end": 2447,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 2436,
											"end": 2447,
											"name": "SLOAD"
										},
										{
											"begin": 2436,
											"end": 2459,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 2436,
											"end": 2459,
											"name": "SWAP1"
										},
										{
											"begin": 2452,
											"end": 2458,
											"name": "DUP3"
										},
										{
											"begin": 2436,
											"end": 2459,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2436,
											"end": 2451,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 2436,
											"end": 2459,
											"name": "AND"
										},
										{
											"begin": 2436,
											"end": 2459,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2436,
											"end": 2459,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 2436,
											"end": 2459,
											"name": "JUMPDEST"
										},
										{
											"begin": 2422,
											"end": 2433,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 2422,
											"end": 2459,
											"name": "SSTORE"
										},
										{
											"begin": 2474,
											"end": 2498,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2474,
											"end": 2498,
											"name": "DUP1"
										},
										{
											"begin": 2474,
											"end": 2498,
											"name": "MLOAD"
										},
										{
											"begin": 2474,
											"end": 2498,
											"name": "DUP3"
										},
										{
											"begin": 2474,
											"end": 2498,
											"name": "DUP2"
										},
										{
											"begin": 2474,
											"end": 2498,
											"name": "MSTORE"
										},
										{
											"begin": 2474,
											"end": 2498,
											"name": "SWAP1"
										},
										{
											"begin": 2474,
											"end": 2498,
											"name": "MLOAD"
										},
										{
											"begin": 2479,
											"end": 2489,
											"name": "CALLER"
										},
										{
											"begin": 2479,
											"end": 2489,
											"name": "SWAP2"
										},
										{
											"begin": 2474,
											"end": 2498,
											"name": "PUSH",
											"value": "CC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5"
										},
										{
											"begin": 2474,
											"end": 2498,
											"name": "SWAP2"
										},
										{
											"begin": 2474,
											"end": 2498,
											"name": "SWAP1"
										},
										{
											"begin": 2474,
											"end": 2498,
											"name": "DUP2"
										},
										{
											"begin": 2474,
											"end": 2498,
											"name": "SWAP1"
										},
										{
											"begin": 2474,
											"end": 2498,
											"name": "SUB"
										},
										{
											"begin": 2474,
											"end": 2498,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2474,
											"end": 2498,
											"name": "ADD"
										},
										{
											"begin": 2474,
											"end": 2498,
											"name": "SWAP1"
										},
										{
											"begin": 2474,
											"end": 2498,
											"name": "LOG2"
										},
										{
											"begin": 2513,
											"end": 2553,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2513,
											"end": 2553,
											"name": "DUP1"
										},
										{
											"begin": 2513,
											"end": 2553,
											"name": "MLOAD"
										},
										{
											"begin": 2513,
											"end": 2553,
											"name": "DUP3"
										},
										{
											"begin": 2513,
											"end": 2553,
											"name": "DUP2"
										},
										{
											"begin": 2513,
											"end": 2553,
											"name": "MSTORE"
										},
										{
											"begin": 2513,
											"end": 2553,
											"name": "SWAP1"
										},
										{
											"begin": 2513,
											"end": 2553,
											"name": "MLOAD"
										},
										{
											"begin": 2542,
											"end": 2543,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2542,
											"end": 2543,
											"name": "SWAP2"
										},
										{
											"begin": 2522,
											"end": 2532,
											"name": "CALLER"
										},
										{
											"begin": 2522,
											"end": 2532,
											"name": "SWAP2"
										},
										{
											"begin": 2513,
											"end": 2553,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 2513,
											"end": 2553,
											"name": "SWAP2"
										},
										{
											"begin": 2513,
											"end": 2553,
											"name": "DUP2"
										},
										{
											"begin": 2513,
											"end": 2553,
											"name": "SWAP1"
										},
										{
											"begin": 2513,
											"end": 2553,
											"name": "SUB"
										},
										{
											"begin": 2513,
											"end": 2553,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2513,
											"end": 2553,
											"name": "ADD"
										},
										{
											"begin": 2513,
											"end": 2553,
											"name": "SWAP1"
										},
										{
											"begin": 2513,
											"end": 2553,
											"name": "LOG3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 2570,
											"end": 2574,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2570,
											"end": 2574,
											"name": "SWAP3"
										},
										{
											"begin": 2069,
											"end": 2581,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 2069,
											"end": 2581,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 637,
											"end": 681,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 637,
											"end": 681,
											"name": "JUMPDEST"
										},
										{
											"begin": 637,
											"end": 681,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 637,
											"end": 681,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 637,
											"end": 681,
											"name": "MSTORE"
										},
										{
											"begin": 637,
											"end": 681,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 637,
											"end": 681,
											"name": "SWAP1"
										},
										{
											"begin": 637,
											"end": 681,
											"name": "DUP2"
										},
										{
											"begin": 637,
											"end": 681,
											"name": "MSTORE"
										},
										{
											"begin": 637,
											"end": 681,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 637,
											"end": 681,
											"name": "SWAP1"
										},
										{
											"begin": 637,
											"end": 681,
											"name": "KECCAK256"
										},
										{
											"begin": 637,
											"end": 681,
											"name": "SLOAD"
										},
										{
											"begin": 637,
											"end": 681,
											"name": "DUP2"
										},
										{
											"begin": 637,
											"end": 681,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 687,
											"end": 707,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 687,
											"end": 707,
											"name": "JUMPDEST"
										},
										{
											"begin": 687,
											"end": 707,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 687,
											"end": 707,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 687,
											"end": 707,
											"name": "AND"
										},
										{
											"begin": 687,
											"end": 707,
											"name": "DUP2"
										},
										{
											"begin": 687,
											"end": 707,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 536,
											"end": 565,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 536,
											"end": 565,
											"name": "JUMPDEST"
										},
										{
											"begin": 536,
											"end": 565,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 536,
											"end": 565,
											"name": "DUP1"
										},
										{
											"begin": 536,
											"end": 565,
											"name": "SLOAD"
										},
										{
											"begin": 536,
											"end": 565,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 536,
											"end": 565,
											"name": "DUP1"
										},
										{
											"begin": 536,
											"end": 565,
											"name": "MLOAD"
										},
										{
											"begin": 536,
											"end": 565,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 536,
											"end": 565,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 536,
											"end": 565,
											"name": "DUP5"
										},
										{
											"begin": 536,
											"end": 565,
											"name": "DUP7"
										},
										{
											"begin": 536,
											"end": 565,
											"name": "AND"
										},
										{
											"begin": 536,
											"end": 565,
											"name": "ISZERO"
										},
										{
											"begin": 536,
											"end": 565,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 536,
											"end": 565,
											"name": "MUL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 536,
											"end": 565,
											"name": "ADD"
										},
										{
											"begin": 536,
											"end": 565,
											"name": "SWAP1"
										},
										{
											"begin": 536,
											"end": 565,
											"name": "SWAP5"
										},
										{
											"begin": 536,
											"end": 565,
											"name": "AND"
										},
										{
											"begin": 536,
											"end": 565,
											"name": "SWAP4"
										},
										{
											"begin": 536,
											"end": 565,
											"name": "SWAP1"
										},
										{
											"begin": 536,
											"end": 565,
											"name": "SWAP4"
										},
										{
											"begin": 536,
											"end": 565,
											"name": "DIV"
										},
										{
											"begin": 536,
											"end": 565,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 536,
											"end": 565,
											"name": "DUP2"
										},
										{
											"begin": 536,
											"end": 565,
											"name": "ADD"
										},
										{
											"begin": 536,
											"end": 565,
											"name": "DUP5"
										},
										{
											"begin": 536,
											"end": 565,
											"name": "SWAP1"
										},
										{
											"begin": 536,
											"end": 565,
											"name": "DIV"
										},
										{
											"begin": 536,
											"end": 565,
											"name": "DUP5"
										},
										{
											"begin": 536,
											"end": 565,
											"name": "MUL"
										},
										{
											"begin": 536,
											"end": 565,
											"name": "DUP3"
										},
										{
											"begin": 536,
											"end": 565,
											"name": "ADD"
										},
										{
											"begin": 536,
											"end": 565,
											"name": "DUP5"
										},
										{
											"begin": 536,
											"end": 565,
											"name": "ADD"
										},
										{
											"begin": 536,
											"end": 565,
											"name": "SWAP1"
										},
										{
											"begin": 536,
											"end": 565,
											"name": "SWAP3"
										},
										{
											"begin": 536,
											"end": 565,
											"name": "MSTORE"
										},
										{
											"begin": 536,
											"end": 565,
											"name": "DUP2"
										},
										{
											"begin": 536,
											"end": 565,
											"name": "DUP2"
										},
										{
											"begin": 536,
											"end": 565,
											"name": "MSTORE"
										},
										{
											"begin": 536,
											"end": 565,
											"name": "SWAP3"
										},
										{
											"begin": 536,
											"end": 565,
											"name": "SWAP2"
										},
										{
											"begin": 536,
											"end": 565,
											"name": "DUP4"
										},
										{
											"begin": 536,
											"end": 565,
											"name": "ADD"
										},
										{
											"begin": 536,
											"end": 565,
											"name": "DUP3"
										},
										{
											"begin": 536,
											"end": 565,
											"name": "DUP3"
										},
										{
											"begin": 536,
											"end": 565,
											"name": "DUP1"
										},
										{
											"begin": 536,
											"end": 565,
											"name": "ISZERO"
										},
										{
											"begin": 536,
											"end": 565,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 536,
											"end": 565,
											"name": "JUMPI"
										},
										{
											"begin": 536,
											"end": 565,
											"name": "DUP1"
										},
										{
											"begin": 536,
											"end": 565,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 536,
											"end": 565,
											"name": "LT"
										},
										{
											"begin": 536,
											"end": 565,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 536,
											"end": 565,
											"name": "JUMPI"
										},
										{
											"begin": 536,
											"end": 565,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 536,
											"end": 565,
											"name": "DUP1"
										},
										{
											"begin": 536,
											"end": 565,
											"name": "DUP4"
										},
										{
											"begin": 536,
											"end": 565,
											"name": "SLOAD"
										},
										{
											"begin": 536,
											"end": 565,
											"name": "DIV"
										},
										{
											"begin": 536,
											"end": 565,
											"name": "MUL"
										},
										{
											"begin": 536,
											"end": 565,
											"name": "DUP4"
										},
										{
											"begin": 536,
											"end": 565,
											"name": "MSTORE"
										},
										{
											"begin": 536,
											"end": 565,
											"name": "SWAP2"
										},
										{
											"begin": 536,
											"end": 565,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 536,
											"end": 565,
											"name": "ADD"
										},
										{
											"begin": 536,
											"end": 565,
											"name": "SWAP2"
										},
										{
											"begin": 536,
											"end": 565,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 536,
											"end": 565,
											"name": "JUMP"
										},
										{
											"begin": 1654,
											"end": 2063,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 1654,
											"end": 2063,
											"name": "JUMPDEST"
										},
										{
											"begin": 949,
											"end": 954,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 949,
											"end": 954,
											"name": "SLOAD"
										},
										{
											"begin": 1711,
											"end": 1723,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1711,
											"end": 1723,
											"name": "SWAP1"
										},
										{
											"begin": 1711,
											"end": 1723,
											"name": "DUP2"
										},
										{
											"begin": 1711,
											"end": 1723,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 949,
											"end": 954,
											"name": "AND"
										},
										{
											"begin": 935,
											"end": 945,
											"name": "CALLER"
										},
										{
											"begin": 935,
											"end": 954,
											"name": "EQ"
										},
										{
											"begin": 927,
											"end": 996,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 927,
											"end": 996,
											"name": "JUMPI"
										},
										{
											"begin": 927,
											"end": 996,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 927,
											"end": 996,
											"name": "DUP1"
										},
										{
											"begin": 927,
											"end": 996,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 927,
											"end": 996,
											"name": "DUP2"
										},
										{
											"begin": 927,
											"end": 996,
											"name": "MSTORE"
										},
										{
											"begin": 927,
											"end": 996,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 927,
											"end": 996,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 927,
											"end": 996,
											"name": "DUP3"
										},
										{
											"begin": 927,
											"end": 996,
											"name": "ADD"
										},
										{
											"begin": 927,
											"end": 996,
											"name": "MSTORE"
										},
										{
											"begin": 927,
											"end": 996,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 927,
											"end": 996,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 927,
											"end": 996,
											"name": "DUP3"
										},
										{
											"begin": 927,
											"end": 996,
											"name": "ADD"
										},
										{
											"begin": 927,
											"end": 996,
											"name": "MSTORE"
										},
										{
											"begin": 927,
											"end": 996,
											"name": "PUSH",
											"value": "4F6E6C7920746865206F776E65722063616E2063616C6C20746869732066756E"
										},
										{
											"begin": 927,
											"end": 996,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 927,
											"end": 996,
											"name": "DUP3"
										},
										{
											"begin": 927,
											"end": 996,
											"name": "ADD"
										},
										{
											"begin": 927,
											"end": 996,
											"name": "MSTORE"
										},
										{
											"begin": 927,
											"end": 996,
											"name": "PUSH",
											"value": "6374696F6E000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 927,
											"end": 996,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 927,
											"end": 996,
											"name": "DUP3"
										},
										{
											"begin": 927,
											"end": 996,
											"name": "ADD"
										},
										{
											"begin": 927,
											"end": 996,
											"name": "MSTORE"
										},
										{
											"begin": 927,
											"end": 996,
											"name": "SWAP1"
										},
										{
											"begin": 927,
											"end": 996,
											"name": "MLOAD"
										},
										{
											"begin": 927,
											"end": 996,
											"name": "SWAP1"
										},
										{
											"begin": 927,
											"end": 996,
											"name": "DUP2"
										},
										{
											"begin": 927,
											"end": 996,
											"name": "SWAP1"
										},
										{
											"begin": 927,
											"end": 996,
											"name": "SUB"
										},
										{
											"begin": 927,
											"end": 996,
											"name": "PUSH",
											"value": "84"
										},
										{
											"begin": 927,
											"end": 996,
											"name": "ADD"
										},
										{
											"begin": 927,
											"end": 996,
											"name": "SWAP1"
										},
										{
											"begin": 927,
											"end": 996,
											"name": "REVERT"
										},
										{
											"begin": 927,
											"end": 996,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 927,
											"end": 996,
											"name": "JUMPDEST"
										},
										{
											"begin": 1753,
											"end": 1754,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1743,
											"end": 1754,
											"name": "DUP4"
										},
										{
											"begin": 1743,
											"end": 1754,
											"name": "GT"
										},
										{
											"begin": 1735,
											"end": 1798,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 1735,
											"end": 1798,
											"name": "JUMPI"
										},
										{
											"begin": 1735,
											"end": 1798,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1735,
											"end": 1798,
											"name": "DUP1"
										},
										{
											"begin": 1735,
											"end": 1798,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 1735,
											"end": 1798,
											"name": "DUP2"
										},
										{
											"begin": 1735,
											"end": 1798,
											"name": "MSTORE"
										},
										{
											"begin": 1735,
											"end": 1798,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1735,
											"end": 1798,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1735,
											"end": 1798,
											"name": "DUP3"
										},
										{
											"begin": 1735,
											"end": 1798,
											"name": "ADD"
										},
										{
											"begin": 1735,
											"end": 1798,
											"name": "MSTORE"
										},
										{
											"begin": 1735,
											"end": 1798,
											"name": "PUSH",
											"value": "27"
										},
										{
											"begin": 1735,
											"end": 1798,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 1735,
											"end": 1798,
											"name": "DUP3"
										},
										{
											"begin": 1735,
											"end": 1798,
											"name": "ADD"
										},
										{
											"begin": 1735,
											"end": 1798,
											"name": "MSTORE"
										},
										{
											"begin": 1735,
											"end": 1798,
											"name": "PUSH",
											"value": "4D696E7420616D6F756E742073686F756C642062652067726561746572207468"
										},
										{
											"begin": 1735,
											"end": 1798,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 1735,
											"end": 1798,
											"name": "DUP3"
										},
										{
											"begin": 1735,
											"end": 1798,
											"name": "ADD"
										},
										{
											"begin": 1735,
											"end": 1798,
											"name": "MSTORE"
										},
										{
											"begin": 1735,
											"end": 1798,
											"name": "PUSH",
											"value": "616E207A65726F00000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1735,
											"end": 1798,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 1735,
											"end": 1798,
											"name": "DUP3"
										},
										{
											"begin": 1735,
											"end": 1798,
											"name": "ADD"
										},
										{
											"begin": 1735,
											"end": 1798,
											"name": "MSTORE"
										},
										{
											"begin": 1735,
											"end": 1798,
											"name": "SWAP1"
										},
										{
											"begin": 1735,
											"end": 1798,
											"name": "MLOAD"
										},
										{
											"begin": 1735,
											"end": 1798,
											"name": "SWAP1"
										},
										{
											"begin": 1735,
											"end": 1798,
											"name": "DUP2"
										},
										{
											"begin": 1735,
											"end": 1798,
											"name": "SWAP1"
										},
										{
											"begin": 1735,
											"end": 1798,
											"name": "SUB"
										},
										{
											"begin": 1735,
											"end": 1798,
											"name": "PUSH",
											"value": "84"
										},
										{
											"begin": 1735,
											"end": 1798,
											"name": "ADD"
										},
										{
											"begin": 1735,
											"end": 1798,
											"name": "SWAP1"
										},
										{
											"begin": 1735,
											"end": 1798,
											"name": "REVERT"
										},
										{
											"begin": 1735,
											"end": 1798,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 1735,
											"end": 1798,
											"name": "JUMPDEST"
										},
										{
											"begin": 1839,
											"end": 1847,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1839,
											"end": 1847,
											"name": "SLOAD"
										},
										{
											"begin": 1835,
											"end": 1837,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 1835,
											"end": 1847,
											"name": "EXP"
										},
										{
											"begin": 1825,
											"end": 1832,
											"name": "DUP4"
										},
										{
											"begin": 1825,
											"end": 1847,
											"name": "MUL"
										},
										{
											"begin": 1808,
											"end": 1847,
											"name": "SWAP1"
										},
										{
											"begin": 1808,
											"end": 1847,
											"name": "POP"
										},
										{
											"begin": 1871,
											"end": 1894,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 1887,
											"end": 1893,
											"name": "DUP2"
										},
										{
											"begin": 1871,
											"end": 1882,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1871,
											"end": 1882,
											"name": "SLOAD"
										},
										{
											"begin": 1871,
											"end": 1886,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 1871,
											"end": 1886,
											"name": "SWAP1"
										},
										{
											"begin": 1871,
											"end": 1894,
											"name": "SWAP2"
										},
										{
											"begin": 1871,
											"end": 1894,
											"name": "SWAP1"
										},
										{
											"begin": 1871,
											"end": 1894,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1871,
											"end": 1894,
											"name": "AND"
										},
										{
											"begin": 1871,
											"end": 1894,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1871,
											"end": 1894,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 1871,
											"end": 1894,
											"name": "JUMPDEST"
										},
										{
											"begin": 1857,
											"end": 1868,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1857,
											"end": 1894,
											"name": "SSTORE"
										},
										{
											"begin": 1933,
											"end": 1938,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 1933,
											"end": 1938,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1933,
											"end": 1938,
											"name": "AND"
										},
										{
											"begin": 1923,
											"end": 1939,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1923,
											"end": 1939,
											"name": "SWAP1"
										},
										{
											"begin": 1923,
											"end": 1939,
											"name": "DUP2"
										},
										{
											"begin": 1923,
											"end": 1939,
											"name": "MSTORE"
										},
										{
											"begin": 1923,
											"end": 1932,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1923,
											"end": 1939,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1923,
											"end": 1939,
											"name": "MSTORE"
										},
										{
											"begin": 1923,
											"end": 1939,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1923,
											"end": 1939,
											"name": "SWAP1"
										},
										{
											"begin": 1923,
											"end": 1939,
											"name": "KECCAK256"
										},
										{
											"begin": 1923,
											"end": 1939,
											"name": "SLOAD"
										},
										{
											"begin": 1923,
											"end": 1951,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 1923,
											"end": 1951,
											"name": "SWAP1"
										},
										{
											"begin": 1944,
											"end": 1950,
											"name": "DUP3"
										},
										{
											"begin": 1923,
											"end": 1951,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1923,
											"end": 1943,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 1923,
											"end": 1951,
											"name": "AND"
										},
										{
											"begin": 1923,
											"end": 1951,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1923,
											"end": 1951,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 1923,
											"end": 1951,
											"name": "JUMPDEST"
										},
										{
											"begin": 1914,
											"end": 1919,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 1914,
											"end": 1919,
											"name": "DUP1"
										},
										{
											"begin": 1914,
											"end": 1919,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1914,
											"end": 1919,
											"name": "SWAP1"
										},
										{
											"begin": 1914,
											"end": 1919,
											"name": "DUP2"
										},
										{
											"begin": 1914,
											"end": 1919,
											"name": "AND"
										},
										{
											"begin": 1904,
											"end": 1920,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1904,
											"end": 1920,
											"name": "SWAP1"
										},
										{
											"begin": 1904,
											"end": 1920,
											"name": "DUP2"
										},
										{
											"begin": 1904,
											"end": 1920,
											"name": "MSTORE"
										},
										{
											"begin": 1904,
											"end": 1913,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1904,
											"end": 1920,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1904,
											"end": 1920,
											"name": "SWAP1"
										},
										{
											"begin": 1904,
											"end": 1920,
											"name": "DUP2"
										},
										{
											"begin": 1904,
											"end": 1920,
											"name": "MSTORE"
										},
										{
											"begin": 1904,
											"end": 1920,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1904,
											"end": 1920,
											"name": "SWAP2"
										},
										{
											"begin": 1904,
											"end": 1920,
											"name": "DUP3"
										},
										{
											"begin": 1904,
											"end": 1920,
											"name": "SWAP1"
										},
										{
											"begin": 1904,
											"end": 1920,
											"name": "KECCAK256"
										},
										{
											"begin": 1904,
											"end": 1951,
											"name": "SWAP5"
										},
										{
											"begin": 1904,
											"end": 1951,
											"name": "SWAP1"
										},
										{
											"begin": 1904,
											"end": 1951,
											"name": "SWAP5"
										},
										{
											"begin": 1904,
											"end": 1951,
											"name": "SSTORE"
										},
										{
											"begin": 1971,
											"end": 1976,
											"name": "SWAP2"
										},
										{
											"begin": 1971,
											"end": 1976,
											"name": "SLOAD"
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "DUP3"
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "MLOAD"
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "DUP6"
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "DUP2"
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "MSTORE"
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "SWAP3"
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "MLOAD"
										},
										{
											"begin": 1971,
											"end": 1976,
											"name": "SWAP2"
										},
										{
											"begin": 1971,
											"end": 1976,
											"name": "AND"
										},
										{
											"begin": 1971,
											"end": 1976,
											"name": "SWAP3"
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "PUSH",
											"value": "F6798A560793A54C3BCFE86A93CDE1E73087D944C0EA20544137D4121396885"
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "SWAP3"
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "DUP3"
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "SWAP1"
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "SUB"
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "ADD"
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "SWAP1"
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "LOG2"
										},
										{
											"begin": 2021,
											"end": 2026,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 2021,
											"end": 2026,
											"name": "SLOAD"
										},
										{
											"begin": 2000,
											"end": 2035,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2000,
											"end": 2035,
											"name": "DUP1"
										},
										{
											"begin": 2000,
											"end": 2035,
											"name": "MLOAD"
										},
										{
											"begin": 2000,
											"end": 2035,
											"name": "DUP4"
										},
										{
											"begin": 2000,
											"end": 2035,
											"name": "DUP2"
										},
										{
											"begin": 2000,
											"end": 2035,
											"name": "MSTORE"
										},
										{
											"begin": 2000,
											"end": 2035,
											"name": "SWAP1"
										},
										{
											"begin": 2000,
											"end": 2035,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2021,
											"end": 2026,
											"name": "SWAP1"
										},
										{
											"begin": 2021,
											"end": 2026,
											"name": "SWAP3"
										},
										{
											"begin": 2021,
											"end": 2026,
											"name": "AND"
										},
										{
											"begin": 2021,
											"end": 2026,
											"name": "SWAP2"
										},
										{
											"begin": 2021,
											"end": 2026,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2026,
											"name": "SWAP2"
										},
										{
											"begin": 2000,
											"end": 2035,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 2000,
											"end": 2035,
											"name": "SWAP2"
										},
										{
											"begin": 2000,
											"end": 2035,
											"name": "SWAP1"
										},
										{
											"begin": 2000,
											"end": 2035,
											"name": "DUP2"
										},
										{
											"begin": 2000,
											"end": 2035,
											"name": "SWAP1"
										},
										{
											"begin": 2000,
											"end": 2035,
											"name": "SUB"
										},
										{
											"begin": 2000,
											"end": 2035,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2000,
											"end": 2035,
											"name": "ADD"
										},
										{
											"begin": 2000,
											"end": 2035,
											"name": "SWAP1"
										},
										{
											"begin": 2000,
											"end": 2035,
											"name": "LOG3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 2052,
											"end": 2056,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2052,
											"end": 2056,
											"name": "SWAP3"
										},
										{
											"begin": 1654,
											"end": 2063,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 1654,
											"end": 2063,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1245,
											"end": 1648,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 1245,
											"end": 1648,
											"name": "JUMPDEST"
										},
										{
											"begin": 1350,
											"end": 1360,
											"name": "CALLER"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1340,
											"end": 1361,
											"name": "SWAP1"
										},
										{
											"begin": 1340,
											"end": 1361,
											"name": "DUP2"
										},
										{
											"begin": 1340,
											"end": 1361,
											"name": "MSTORE"
										},
										{
											"begin": 1340,
											"end": 1349,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1340,
											"end": 1361,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1340,
											"end": 1361,
											"name": "MSTORE"
										},
										{
											"begin": 1340,
											"end": 1361,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1340,
											"end": 1361,
											"name": "DUP2"
										},
										{
											"begin": 1340,
											"end": 1361,
											"name": "KECCAK256"
										},
										{
											"begin": 1340,
											"end": 1361,
											"name": "SLOAD"
										},
										{
											"begin": 1340,
											"end": 1371,
											"name": "DUP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT"
										},
										{
											"begin": 1340,
											"end": 1371,
											"name": "ISZERO"
										},
										{
											"begin": 1332,
											"end": 1396,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 1332,
											"end": 1396,
											"name": "JUMPI"
										},
										{
											"begin": 1332,
											"end": 1396,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1332,
											"end": 1396,
											"name": "DUP1"
										},
										{
											"begin": 1332,
											"end": 1396,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 1332,
											"end": 1396,
											"name": "DUP2"
										},
										{
											"begin": 1332,
											"end": 1396,
											"name": "MSTORE"
										},
										{
											"begin": 1332,
											"end": 1396,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1332,
											"end": 1396,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1332,
											"end": 1396,
											"name": "DUP3"
										},
										{
											"begin": 1332,
											"end": 1396,
											"name": "ADD"
										},
										{
											"begin": 1332,
											"end": 1396,
											"name": "MSTORE"
										},
										{
											"begin": 1332,
											"end": 1396,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 1332,
											"end": 1396,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 1332,
											"end": 1396,
											"name": "DUP3"
										},
										{
											"begin": 1332,
											"end": 1396,
											"name": "ADD"
										},
										{
											"begin": 1332,
											"end": 1396,
											"name": "MSTORE"
										},
										{
											"begin": 1332,
											"end": 1396,
											"name": "PUSH",
											"value": "496E73756666696369656E742062616C616E6365000000000000000000000000"
										},
										{
											"begin": 1332,
											"end": 1396,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 1332,
											"end": 1396,
											"name": "DUP3"
										},
										{
											"begin": 1332,
											"end": 1396,
											"name": "ADD"
										},
										{
											"begin": 1332,
											"end": 1396,
											"name": "MSTORE"
										},
										{
											"begin": 1332,
											"end": 1396,
											"name": "SWAP1"
										},
										{
											"begin": 1332,
											"end": 1396,
											"name": "MLOAD"
										},
										{
											"begin": 1332,
											"end": 1396,
											"name": "SWAP1"
										},
										{
											"begin": 1332,
											"end": 1396,
											"name": "DUP2"
										},
										{
											"begin": 1332,
											"end": 1396,
											"name": "SWAP1"
										},
										{
											"begin": 1332,
											"end": 1396,
											"name": "SUB"
										},
										{
											"begin": 1332,
											"end": 1396,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 1332,
											"end": 1396,
											"name": "ADD"
										},
										{
											"begin": 1332,
											"end": 1396,
											"name": "SWAP1"
										},
										{
											"begin": 1332,
											"end": 1396,
											"name": "REVERT"
										},
										{
											"begin": 1332,
											"end": 1396,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 1332,
											"end": 1396,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1414,
											"end": 1431,
											"name": "DUP4"
										},
										{
											"begin": 1414,
											"end": 1431,
											"name": "AND"
										},
										{
											"begin": 1414,
											"end": 1431,
											"name": "ISZERO"
										},
										{
											"begin": 1414,
											"end": 1431,
											"name": "ISZERO"
										},
										{
											"begin": 1406,
											"end": 1451,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 1406,
											"end": 1451,
											"name": "JUMPI"
										},
										{
											"begin": 1406,
											"end": 1451,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1406,
											"end": 1451,
											"name": "DUP1"
										},
										{
											"begin": 1406,
											"end": 1451,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 1406,
											"end": 1451,
											"name": "DUP2"
										},
										{
											"begin": 1406,
											"end": 1451,
											"name": "MSTORE"
										},
										{
											"begin": 1406,
											"end": 1451,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1406,
											"end": 1451,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1406,
											"end": 1451,
											"name": "DUP3"
										},
										{
											"begin": 1406,
											"end": 1451,
											"name": "ADD"
										},
										{
											"begin": 1406,
											"end": 1451,
											"name": "MSTORE"
										},
										{
											"begin": 1406,
											"end": 1451,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 1406,
											"end": 1451,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 1406,
											"end": 1451,
											"name": "DUP3"
										},
										{
											"begin": 1406,
											"end": 1451,
											"name": "ADD"
										},
										{
											"begin": 1406,
											"end": 1451,
											"name": "MSTORE"
										},
										{
											"begin": 1406,
											"end": 1451,
											"name": "PUSH",
											"value": "496E76616C696420616464726573730000000000000000000000000000000000"
										},
										{
											"begin": 1406,
											"end": 1451,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 1406,
											"end": 1451,
											"name": "DUP3"
										},
										{
											"begin": 1406,
											"end": 1451,
											"name": "ADD"
										},
										{
											"begin": 1406,
											"end": 1451,
											"name": "MSTORE"
										},
										{
											"begin": 1406,
											"end": 1451,
											"name": "SWAP1"
										},
										{
											"begin": 1406,
											"end": 1451,
											"name": "MLOAD"
										},
										{
											"begin": 1406,
											"end": 1451,
											"name": "SWAP1"
										},
										{
											"begin": 1406,
											"end": 1451,
											"name": "DUP2"
										},
										{
											"begin": 1406,
											"end": 1451,
											"name": "SWAP1"
										},
										{
											"begin": 1406,
											"end": 1451,
											"name": "SUB"
										},
										{
											"begin": 1406,
											"end": 1451,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 1406,
											"end": 1451,
											"name": "ADD"
										},
										{
											"begin": 1406,
											"end": 1451,
											"name": "SWAP1"
										},
										{
											"begin": 1406,
											"end": 1451,
											"name": "REVERT"
										},
										{
											"begin": 1406,
											"end": 1451,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 1406,
											"end": 1451,
											"name": "JUMPDEST"
										},
										{
											"begin": 1496,
											"end": 1506,
											"name": "CALLER"
										},
										{
											"begin": 1486,
											"end": 1507,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1486,
											"end": 1507,
											"name": "SWAP1"
										},
										{
											"begin": 1486,
											"end": 1507,
											"name": "DUP2"
										},
										{
											"begin": 1486,
											"end": 1507,
											"name": "MSTORE"
										},
										{
											"begin": 1486,
											"end": 1495,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1486,
											"end": 1507,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1486,
											"end": 1507,
											"name": "MSTORE"
										},
										{
											"begin": 1486,
											"end": 1507,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1486,
											"end": 1507,
											"name": "SWAP1"
										},
										{
											"begin": 1486,
											"end": 1507,
											"name": "KECCAK256"
										},
										{
											"begin": 1486,
											"end": 1507,
											"name": "SLOAD"
										},
										{
											"begin": 1486,
											"end": 1519,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 1486,
											"end": 1519,
											"name": "SWAP1"
										},
										{
											"begin": 1512,
											"end": 1518,
											"name": "DUP4"
										},
										{
											"begin": 1486,
											"end": 1519,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1486,
											"end": 1511,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 1486,
											"end": 1519,
											"name": "AND"
										},
										{
											"begin": 1486,
											"end": 1519,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1486,
											"end": 1519,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 1486,
											"end": 1519,
											"name": "JUMPDEST"
										},
										{
											"begin": 1472,
											"end": 1482,
											"name": "CALLER"
										},
										{
											"begin": 1462,
											"end": 1483,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1462,
											"end": 1483,
											"name": "SWAP1"
										},
										{
											"begin": 1462,
											"end": 1483,
											"name": "DUP2"
										},
										{
											"begin": 1462,
											"end": 1483,
											"name": "MSTORE"
										},
										{
											"begin": 1462,
											"end": 1471,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1462,
											"end": 1483,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1462,
											"end": 1483,
											"name": "MSTORE"
										},
										{
											"begin": 1462,
											"end": 1483,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1462,
											"end": 1483,
											"name": "DUP1"
										},
										{
											"begin": 1462,
											"end": 1483,
											"name": "DUP3"
										},
										{
											"begin": 1462,
											"end": 1483,
											"name": "KECCAK256"
										},
										{
											"begin": 1462,
											"end": 1519,
											"name": "SWAP3"
										},
										{
											"begin": 1462,
											"end": 1519,
											"name": "SWAP1"
										},
										{
											"begin": 1462,
											"end": 1519,
											"name": "SWAP3"
										},
										{
											"begin": 1462,
											"end": 1519,
											"name": "SSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1546,
											"end": 1560,
											"name": "DUP6"
										},
										{
											"begin": 1546,
											"end": 1560,
											"name": "AND"
										},
										{
											"begin": 1546,
											"end": 1560,
											"name": "DUP2"
										},
										{
											"begin": 1546,
											"end": 1560,
											"name": "MSTORE"
										},
										{
											"begin": 1546,
											"end": 1560,
											"name": "KECCAK256"
										},
										{
											"begin": 1546,
											"end": 1560,
											"name": "SLOAD"
										},
										{
											"begin": 1546,
											"end": 1572,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 1546,
											"end": 1572,
											"name": "SWAP1"
										},
										{
											"begin": 1565,
											"end": 1571,
											"name": "DUP4"
										},
										{
											"begin": 1546,
											"end": 1572,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1546,
											"end": 1564,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 1546,
											"end": 1572,
											"name": "AND"
										},
										{
											"begin": 1546,
											"end": 1572,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1546,
											"end": 1572,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 1546,
											"end": 1572,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1529,
											"end": 1543,
											"name": "DUP5"
										},
										{
											"begin": 1529,
											"end": 1543,
											"name": "AND"
										},
										{
											"begin": 1529,
											"end": 1543,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1529,
											"end": 1543,
											"name": "DUP2"
										},
										{
											"begin": 1529,
											"end": 1543,
											"name": "DUP2"
										},
										{
											"begin": 1529,
											"end": 1543,
											"name": "MSTORE"
										},
										{
											"begin": 1529,
											"end": 1538,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1529,
											"end": 1543,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1529,
											"end": 1543,
											"name": "SWAP1"
										},
										{
											"begin": 1529,
											"end": 1543,
											"name": "DUP2"
										},
										{
											"begin": 1529,
											"end": 1543,
											"name": "MSTORE"
										},
										{
											"begin": 1529,
											"end": 1543,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1529,
											"end": 1543,
											"name": "SWAP2"
										},
										{
											"begin": 1529,
											"end": 1543,
											"name": "DUP3"
										},
										{
											"begin": 1529,
											"end": 1543,
											"name": "SWAP1"
										},
										{
											"begin": 1529,
											"end": 1543,
											"name": "KECCAK256"
										},
										{
											"begin": 1529,
											"end": 1572,
											"name": "SWAP4"
										},
										{
											"begin": 1529,
											"end": 1572,
											"name": "SWAP1"
										},
										{
											"begin": 1529,
											"end": 1572,
											"name": "SWAP4"
										},
										{
											"begin": 1529,
											"end": 1572,
											"name": "SSTORE"
										},
										{
											"begin": 1587,
											"end": 1620,
											"name": "DUP1"
										},
										{
											"begin": 1587,
											"end": 1620,
											"name": "MLOAD"
										},
										{
											"begin": 1587,
											"end": 1620,
											"name": "DUP6"
										},
										{
											"begin": 1587,
											"end": 1620,
											"name": "DUP2"
										},
										{
											"begin": 1587,
											"end": 1620,
											"name": "MSTORE"
										},
										{
											"begin": 1587,
											"end": 1620,
											"name": "SWAP1"
										},
										{
											"begin": 1587,
											"end": 1620,
											"name": "MLOAD"
										},
										{
											"begin": 1529,
											"end": 1543,
											"name": "SWAP2"
										},
										{
											"begin": 1529,
											"end": 1543,
											"name": "SWAP3"
										},
										{
											"begin": 1596,
											"end": 1606,
											"name": "CALLER"
										},
										{
											"begin": 1596,
											"end": 1606,
											"name": "SWAP3"
										},
										{
											"begin": 1587,
											"end": 1620,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 1587,
											"end": 1620,
											"name": "SWAP3"
										},
										{
											"begin": 1587,
											"end": 1620,
											"name": "DUP2"
										},
										{
											"begin": 1587,
											"end": 1620,
											"name": "SWAP1"
										},
										{
											"begin": 1587,
											"end": 1620,
											"name": "SUB"
										},
										{
											"begin": 1587,
											"end": 1620,
											"name": "SWAP1"
										},
										{
											"begin": 1587,
											"end": 1620,
											"name": "SWAP2"
										},
										{
											"begin": 1587,
											"end": 1620,
											"name": "ADD"
										},
										{
											"begin": 1587,
											"end": 1620,
											"name": "SWAP1"
										},
										{
											"begin": 1587,
											"end": 1620,
											"name": "LOG3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 1637,
											"end": 1641,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1245,
											"end": 1648,
											"name": "SWAP3"
										},
										{
											"begin": 1245,
											"end": 1648,
											"name": "SWAP2"
										},
										{
											"begin": 1245,
											"end": 1648,
											"name": "POP"
										},
										{
											"begin": 1245,
											"end": 1648,
											"name": "POP"
										},
										{
											"begin": 1245,
											"end": 1648,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 262,
											"end": 441,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 262,
											"end": 441,
											"name": "JUMPDEST"
										},
										{
											"begin": 320,
											"end": 327,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 320,
											"end": 327,
											"name": "DUP1"
										},
										{
											"begin": 347,
											"end": 353,
											"name": "DUP4"
										},
										{
											"begin": 347,
											"end": 353,
											"name": "DUP4"
										},
										{
											"begin": 347,
											"end": 353,
											"name": "GT"
										},
										{
											"begin": 347,
											"end": 353,
											"name": "ISZERO"
										},
										{
											"begin": 339,
											"end": 388,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 339,
											"end": 388,
											"name": "JUMPI"
										},
										{
											"begin": 339,
											"end": 388,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 339,
											"end": 388,
											"name": "DUP1"
										},
										{
											"begin": 339,
											"end": 388,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 339,
											"end": 388,
											"name": "DUP2"
										},
										{
											"begin": 339,
											"end": 388,
											"name": "MSTORE"
										},
										{
											"begin": 339,
											"end": 388,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 339,
											"end": 388,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 339,
											"end": 388,
											"name": "DUP3"
										},
										{
											"begin": 339,
											"end": 388,
											"name": "ADD"
										},
										{
											"begin": 339,
											"end": 388,
											"name": "MSTORE"
										},
										{
											"begin": 339,
											"end": 388,
											"name": "PUSH",
											"value": "1E"
										},
										{
											"begin": 339,
											"end": 388,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 339,
											"end": 388,
											"name": "DUP3"
										},
										{
											"begin": 339,
											"end": 388,
											"name": "ADD"
										},
										{
											"begin": 339,
											"end": 388,
											"name": "MSTORE"
										},
										{
											"begin": 339,
											"end": 388,
											"name": "PUSH",
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 339,
											"end": 388,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 339,
											"end": 388,
											"name": "DUP3"
										},
										{
											"begin": 339,
											"end": 388,
											"name": "ADD"
										},
										{
											"begin": 339,
											"end": 388,
											"name": "MSTORE"
										},
										{
											"begin": 339,
											"end": 388,
											"name": "SWAP1"
										},
										{
											"begin": 339,
											"end": 388,
											"name": "MLOAD"
										},
										{
											"begin": 339,
											"end": 388,
											"name": "SWAP1"
										},
										{
											"begin": 339,
											"end": 388,
											"name": "DUP2"
										},
										{
											"begin": 339,
											"end": 388,
											"name": "SWAP1"
										},
										{
											"begin": 339,
											"end": 388,
											"name": "SUB"
										},
										{
											"begin": 339,
											"end": 388,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 339,
											"end": 388,
											"name": "ADD"
										},
										{
											"begin": 339,
											"end": 388,
											"name": "SWAP1"
										},
										{
											"begin": 339,
											"end": 388,
											"name": "REVERT"
										},
										{
											"begin": 339,
											"end": 388,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 339,
											"end": 388,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 410,
											"end": 415,
											"name": "SWAP1"
										},
										{
											"begin": 410,
											"end": 415,
											"name": "SUB"
										},
										{
											"begin": 410,
											"end": 415,
											"name": "SWAP1"
										},
										{
											"begin": 262,
											"end": 441,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 80,
											"end": 256,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 80,
											"end": 256,
											"name": "JUMPDEST"
										},
										{
											"begin": 138,
											"end": 145,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 169,
											"end": 174,
											"name": "DUP3"
										},
										{
											"begin": 169,
											"end": 174,
											"name": "DUP3"
										},
										{
											"begin": 169,
											"end": 174,
											"name": "ADD"
										},
										{
											"begin": 192,
											"end": 198,
											"name": "DUP4"
										},
										{
											"begin": 192,
											"end": 198,
											"name": "DUP2"
										},
										{
											"begin": 192,
											"end": 198,
											"name": "LT"
										},
										{
											"begin": 192,
											"end": 198,
											"name": "ISZERO"
										},
										{
											"begin": 184,
											"end": 230,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 184,
											"end": 230,
											"name": "JUMPI"
										},
										{
											"begin": 184,
											"end": 230,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 184,
											"end": 230,
											"name": "DUP1"
										},
										{
											"begin": 184,
											"end": 230,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 184,
											"end": 230,
											"name": "DUP2"
										},
										{
											"begin": 184,
											"end": 230,
											"name": "MSTORE"
										},
										{
											"begin": 184,
											"end": 230,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 184,
											"end": 230,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 184,
											"end": 230,
											"name": "DUP3"
										},
										{
											"begin": 184,
											"end": 230,
											"name": "ADD"
										},
										{
											"begin": 184,
											"end": 230,
											"name": "MSTORE"
										},
										{
											"begin": 184,
											"end": 230,
											"name": "PUSH",
											"value": "1B"
										},
										{
											"begin": 184,
											"end": 230,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 184,
											"end": 230,
											"name": "DUP3"
										},
										{
											"begin": 184,
											"end": 230,
											"name": "ADD"
										},
										{
											"begin": 184,
											"end": 230,
											"name": "MSTORE"
										},
										{
											"begin": 184,
											"end": 230,
											"name": "PUSH",
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 184,
											"end": 230,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 184,
											"end": 230,
											"name": "DUP3"
										},
										{
											"begin": 184,
											"end": 230,
											"name": "ADD"
										},
										{
											"begin": 184,
											"end": 230,
											"name": "MSTORE"
										},
										{
											"begin": 184,
											"end": 230,
											"name": "SWAP1"
										},
										{
											"begin": 184,
											"end": 230,
											"name": "MLOAD"
										},
										{
											"begin": 184,
											"end": 230,
											"name": "SWAP1"
										},
										{
											"begin": 184,
											"end": 230,
											"name": "DUP2"
										},
										{
											"begin": 184,
											"end": 230,
											"name": "SWAP1"
										},
										{
											"begin": 184,
											"end": 230,
											"name": "SUB"
										},
										{
											"begin": 184,
											"end": 230,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 184,
											"end": 230,
											"name": "ADD"
										},
										{
											"begin": 184,
											"end": 230,
											"name": "SWAP1"
										},
										{
											"begin": 184,
											"end": 230,
											"name": "REVERT"
										},
										{
											"begin": 184,
											"end": 230,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 184,
											"end": 230,
											"name": "JUMPDEST"
										},
										{
											"begin": 248,
											"end": 249,
											"name": "SWAP4"
										},
										{
											"begin": 80,
											"end": 256,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 80,
											"end": 256,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"decimals()": "313ce567",
							"mint(uint256)": "a0712d68",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/Hish/WBUSD/contractWithSafeMath.sol\":\"WUSD\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Hish/WBUSD/contractWithSafeMath.sol\":{\"keccak256\":\"0xb1b5941537b2c01bed87dda185e9bb31c544be370b2e34c218d02dd80006b935\",\"urls\":[\"bzzr://430d6d20f7af22f683948746f2364f90e2982f76ee4910115d0037bb066be8eb\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/Hish/WBUSD/contractWithSafeMath.sol": {
				"ast": {
					"absolutePath": "contracts/Hish/WBUSD/contractWithSafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							52
						],
						"WUSD": [
							328
						]
					},
					"id": 329,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.4",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 52,
							"linearizedBaseContracts": [
								52
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 25,
										"nodeType": "Block",
										"src": "147:109:0",
										"statements": [
											{
												"assignments": [
													11
												],
												"declarations": [
													{
														"constant": false,
														"id": 11,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 26,
														"src": "157:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 10,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "157:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 15,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 14,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 12,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "169:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 13,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "173:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "169:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "157:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 17,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "192:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 18,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "197:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "192:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 20,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "200:29:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 16,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															346,
															347
														],
														"referencedDeclaration": 347,
														"src": "184:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 21,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "184:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 22,
												"nodeType": "ExpressionStatement",
												"src": "184:46:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 23,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 11,
													"src": "248:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 9,
												"id": 24,
												"nodeType": "Return",
												"src": "241:8:0"
											}
										]
									},
									"documentation": null,
									"id": 26,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "93:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "93:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "104:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "104:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "92:22:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "138:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 7,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "138:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "137:9:0"
									},
									"scope": 52,
									"src": "80:176:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 50,
										"nodeType": "Block",
										"src": "329:112:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 38,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 36,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 30,
																"src": "347:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 37,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 28,
																"src": "352:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "347:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 39,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "355:32:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 35,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															346,
															347
														],
														"referencedDeclaration": 347,
														"src": "339:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 40,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "339:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 41,
												"nodeType": "ExpressionStatement",
												"src": "339:49:0"
											},
											{
												"assignments": [
													43
												],
												"declarations": [
													{
														"constant": false,
														"id": 43,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 51,
														"src": "398:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 42,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "398:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 47,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 46,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 44,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "410:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 45,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "414:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "410:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "398:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 48,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 43,
													"src": "433:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 34,
												"id": 49,
												"nodeType": "Return",
												"src": "426:8:0"
											}
										]
									},
									"documentation": null,
									"id": 51,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "275:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "275:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 30,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "286:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 29,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "286:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "274:22:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "320:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 32,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "320:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "319:9:0"
									},
									"scope": 52,
									"src": "262:179:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 329,
							"src": "57:386:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 328,
							"linearizedBaseContracts": [
								328
							],
							"name": "WUSD",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 55,
									"libraryName": {
										"contractScope": null,
										"id": 53,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 52,
										"src": "471:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$52",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "465:27:0",
									"typeName": {
										"id": 54,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "484:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 58,
									"name": "name",
									"nodeType": "VariableDeclaration",
									"scope": 328,
									"src": "498:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 56,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "498:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "57657468696f555344",
										"id": 57,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "519:11:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_6b2057ba61acea100e685ae1516c4c911c1dc9dcb0353d431635c6219c19a89b",
											"typeString": "literal_string \"WethioUSD\""
										},
										"value": "WethioUSD"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 61,
									"name": "symbol",
									"nodeType": "VariableDeclaration",
									"scope": 328,
									"src": "536:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 59,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "536:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "57555344",
										"id": 60,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "559:6:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_1e26889cedad8783085a3b3d52069e824925b1185b8d057807e574f4afbb507c",
											"typeString": "literal_string \"WUSD\""
										},
										"value": "WUSD"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 64,
									"name": "decimals",
									"nodeType": "VariableDeclaration",
									"scope": 328,
									"src": "571:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 62,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "571:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "32",
										"id": 63,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "597:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 66,
									"name": "totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 328,
									"src": "604:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 65,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "604:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 70,
									"name": "balanceOf",
									"nodeType": "VariableDeclaration",
									"scope": 328,
									"src": "637:44:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 69,
										"keyType": {
											"id": 67,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "645:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "637:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 68,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "656:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 72,
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"scope": 328,
									"src": "687:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 71,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "687:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 80,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "729:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "729:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "751:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 75,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "751:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 78,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "771:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 77,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "771:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "728:57:0"
									},
									"src": "714:72:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 86,
									"name": "Mint",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "802:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 81,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "802:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 84,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "822:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 83,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "801:35:0"
									},
									"src": "791:46:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 92,
									"name": "Burn",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "853:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 87,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "853:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 90,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "875:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 89,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "875:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "852:37:0"
									},
									"src": "842:48:0"
								},
								{
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "917:97:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 98,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 95,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 343,
																	"src": "935:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 96,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "935:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 97,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 72,
																"src": "949:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "935:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f6e6c7920746865206f776e65722063616e2063616c6c20746869732066756e6374696f6e",
															"id": 99,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "956:39:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_02c4ea565ba5dd10ca7507fa4aece08fe60d2b6b945dff193cdbce1647b7face",
																"typeString": "literal_string \"Only the owner can call this function\""
															},
															"value": "Only the owner can call this function"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_02c4ea565ba5dd10ca7507fa4aece08fe60d2b6b945dff193cdbce1647b7face",
																"typeString": "literal_string \"Only the owner can call this function\""
															}
														],
														"id": 94,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															346,
															347
														],
														"referencedDeclaration": 347,
														"src": "927:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "927:69:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "ExpressionStatement",
												"src": "927:69:0"
											},
											{
												"id": 102,
												"nodeType": "PlaceholderStatement",
												"src": "1006:1:0"
											}
										]
									},
									"documentation": null,
									"id": 104,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "914:2:0"
									},
									"src": "896:118:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 134,
										"nodeType": "Block",
										"src": "1041:198:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 107,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 72,
														"src": "1051:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 108,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 343,
															"src": "1059:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 109,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1059:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1051:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 111,
												"nodeType": "ExpressionStatement",
												"src": "1051:18:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 112,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 66,
														"src": "1079:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 117,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"hexValue": "3130",
															"id": 113,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1093:2:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 116,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"hexValue": "3130",
																"id": 114,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1098:2:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"argumentTypes": null,
																"id": 115,
																"name": "decimals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 64,
																"src": "1102:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1098:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1093:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1079:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 119,
												"nodeType": "ExpressionStatement",
												"src": "1079:31:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 120,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 70,
															"src": "1147:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 122,
														"indexExpression": {
															"argumentTypes": null,
															"id": 121,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 72,
															"src": "1157:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1147:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 123,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 66,
														"src": "1166:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1147:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 125,
												"nodeType": "ExpressionStatement",
												"src": "1147:30:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 128,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1209:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 127,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1201:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 129,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1201:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 130,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 72,
															"src": "1213:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 131,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 66,
															"src": "1220:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 126,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "1192:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1192:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 133,
												"nodeType": "EmitStatement",
												"src": "1187:45:0"
											}
										]
									},
									"documentation": null,
									"id": 135,
									"implemented": true,
									"isConstructor": true,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1031:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1041:0:0"
									},
									"scope": 328,
									"src": "1020:219:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "1322:326:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 150,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 145,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 70,
																	"src": "1340:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 148,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 146,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 343,
																		"src": "1350:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 147,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1350:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1340:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 149,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 139,
																"src": "1365:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1340:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "496e73756666696369656e742062616c616e6365",
															"id": 151,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1373:22:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															},
															"value": "Insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															}
														],
														"id": 144,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															346,
															347
														],
														"referencedDeclaration": 347,
														"src": "1332:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1332:64:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 153,
												"nodeType": "ExpressionStatement",
												"src": "1332:64:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 155,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 137,
																"src": "1414:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 157,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1429:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 156,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1421:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 158,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1421:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1414:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "496e76616c69642061646472657373",
															"id": 160,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1433:17:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																"typeString": "literal_string \"Invalid address\""
															},
															"value": "Invalid address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																"typeString": "literal_string \"Invalid address\""
															}
														],
														"id": 154,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															346,
															347
														],
														"referencedDeclaration": 347,
														"src": "1406:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1406:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "1406:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 163,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 70,
															"src": "1462:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 166,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 164,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 343,
																"src": "1472:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 165,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1472:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1462:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 172,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 139,
																"src": "1512:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 167,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 70,
																	"src": "1486:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 170,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 168,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 343,
																		"src": "1496:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 169,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1496:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1486:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 171,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 51,
															"src": "1486:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 173,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1486:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1462:57:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 175,
												"nodeType": "ExpressionStatement",
												"src": "1462:57:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 176,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 70,
															"src": "1529:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 178,
														"indexExpression": {
															"argumentTypes": null,
															"id": 177,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 137,
															"src": "1539:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1529:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 183,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 139,
																"src": "1565:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 179,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 70,
																	"src": "1546:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 181,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 180,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 137,
																	"src": "1556:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1546:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 182,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 26,
															"src": "1546:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 184,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1546:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1529:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "1529:43:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 188,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 343,
																"src": "1596:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 189,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1596:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 190,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 137,
															"src": "1608:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 191,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "1613:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 187,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "1587:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1587:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 193,
												"nodeType": "EmitStatement",
												"src": "1582:38:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1637:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 143,
												"id": 195,
												"nodeType": "Return",
												"src": "1630:11:0"
											}
										]
									},
									"documentation": null,
									"id": 197,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1263:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1263:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 139,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1276:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1276:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1262:29:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1308:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 141,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1308:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1307:14:0"
									},
									"scope": 328,
									"src": "1245:403:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 254,
										"nodeType": "Block",
										"src": "1725:338:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 209,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 207,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 199,
																"src": "1743:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 208,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1753:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1743:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4d696e7420616d6f756e742073686f756c642062652067726561746572207468616e207a65726f",
															"id": 210,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1756:41:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2dacfa522107cc777e5f5ef103bb5d6a2134598ee226c65432bb72213db74159",
																"typeString": "literal_string \"Mint amount should be greater than zero\""
															},
															"value": "Mint amount should be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2dacfa522107cc777e5f5ef103bb5d6a2134598ee226c65432bb72213db74159",
																"typeString": "literal_string \"Mint amount should be greater than zero\""
															}
														],
														"id": 206,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															346,
															347
														],
														"referencedDeclaration": 347,
														"src": "1735:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1735:63:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 212,
												"nodeType": "ExpressionStatement",
												"src": "1735:63:0"
											},
											{
												"assignments": [
													214
												],
												"declarations": [
													{
														"constant": false,
														"id": 214,
														"name": "amount",
														"nodeType": "VariableDeclaration",
														"scope": 255,
														"src": "1808:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 213,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1808:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 220,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 215,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 199,
														"src": "1825:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 218,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"hexValue": "3130",
															"id": 216,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1835:2:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"argumentTypes": null,
															"id": 217,
															"name": "decimals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 64,
															"src": "1839:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1835:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1825:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1808:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 221,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 66,
														"src": "1857:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 224,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 214,
																"src": "1887:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 222,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 66,
																"src": "1871:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 26,
															"src": "1871:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 225,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1871:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1857:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 227,
												"nodeType": "ExpressionStatement",
												"src": "1857:37:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 228,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 70,
															"src": "1904:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 230,
														"indexExpression": {
															"argumentTypes": null,
															"id": 229,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 72,
															"src": "1914:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1904:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 235,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 214,
																"src": "1944:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 231,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 70,
																	"src": "1923:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 233,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 232,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 72,
																	"src": "1933:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1923:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 234,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 26,
															"src": "1923:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 236,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1923:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1904:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 238,
												"nodeType": "ExpressionStatement",
												"src": "1904:47:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 240,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 72,
															"src": "1971:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 241,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "1978:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 239,
														"name": "Mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "1966:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1966:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 243,
												"nodeType": "EmitStatement",
												"src": "1961:24:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 246,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2017:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 245,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2009:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 247,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2009:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 248,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 72,
															"src": "2021:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 249,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "2028:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 244,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "2000:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2000:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 251,
												"nodeType": "EmitStatement",
												"src": "1995:40:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 252,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2052:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 205,
												"id": 253,
												"nodeType": "Return",
												"src": "2045:11:0"
											}
										]
									},
									"documentation": null,
									"id": 255,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 202,
											"modifierName": {
												"argumentTypes": null,
												"id": 201,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 104,
												"src": "1692:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1692:9:0"
										}
									],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "1668:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1667:17:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "1711:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1711:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1710:14:0"
									},
									"scope": 328,
									"src": "1654:409:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 326,
										"nodeType": "Block",
										"src": "2140:441:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 267,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 265,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 257,
																"src": "2158:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 266,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2168:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2158:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4275726e20616d6f756e742073686f756c642062652067726561746572207468616e207a65726f",
															"id": 268,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2171:41:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bcfba497958aa580cb3b1af5dec1031383df7c6d2e69fe552a4136e1914c7451",
																"typeString": "literal_string \"Burn amount should be greater than zero\""
															},
															"value": "Burn amount should be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bcfba497958aa580cb3b1af5dec1031383df7c6d2e69fe552a4136e1914c7451",
																"typeString": "literal_string \"Burn amount should be greater than zero\""
															}
														],
														"id": 264,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															346,
															347
														],
														"referencedDeclaration": 347,
														"src": "2150:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2150:63:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 270,
												"nodeType": "ExpressionStatement",
												"src": "2150:63:0"
											},
											{
												"assignments": [
													272
												],
												"declarations": [
													{
														"constant": false,
														"id": 272,
														"name": "amount",
														"nodeType": "VariableDeclaration",
														"scope": 327,
														"src": "2223:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 271,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2223:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 278,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 273,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "2240:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 276,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"hexValue": "3130",
															"id": 274,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2250:2:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"argumentTypes": null,
															"id": 275,
															"name": "decimals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 64,
															"src": "2254:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2250:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2240:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2223:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 280,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 70,
																	"src": "2280:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 283,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 281,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 343,
																		"src": "2290:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "2290:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2280:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 284,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "2305:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2280:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "496e73756666696369656e742062616c616e636520746f206275726e",
															"id": 286,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2313:30:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_eac0e9db12cd14c1c0291906654a3fa6bfacc1c08081fda717334bc66586bac5",
																"typeString": "literal_string \"Insufficient balance to burn\""
															},
															"value": "Insufficient balance to burn"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_eac0e9db12cd14c1c0291906654a3fa6bfacc1c08081fda717334bc66586bac5",
																"typeString": "literal_string \"Insufficient balance to burn\""
															}
														],
														"id": 279,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															346,
															347
														],
														"referencedDeclaration": 347,
														"src": "2272:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2272:72:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 288,
												"nodeType": "ExpressionStatement",
												"src": "2272:72:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 289,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 70,
															"src": "2355:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 292,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 290,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 343,
																"src": "2365:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 291,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2365:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2355:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 298,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "2405:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 293,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 70,
																	"src": "2379:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 296,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 294,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 343,
																		"src": "2389:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 295,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "2389:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2379:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 297,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 51,
															"src": "2379:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 299,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2379:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2355:57:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 301,
												"nodeType": "ExpressionStatement",
												"src": "2355:57:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 302,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 66,
														"src": "2422:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 305,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "2452:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 303,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 66,
																"src": "2436:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 51,
															"src": "2436:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 306,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2436:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2422:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 308,
												"nodeType": "ExpressionStatement",
												"src": "2422:37:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 310,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 343,
																"src": "2479:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 311,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2479:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 312,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "2491:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 309,
														"name": "Burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 92,
														"src": "2474:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2474:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 314,
												"nodeType": "EmitStatement",
												"src": "2469:29:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 316,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 343,
																"src": "2522:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 317,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2522:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 319,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2542:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 318,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2534:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 320,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2534:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 321,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "2546:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 315,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "2513:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2513:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 323,
												"nodeType": "EmitStatement",
												"src": "2508:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 324,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2570:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 263,
												"id": 325,
												"nodeType": "Return",
												"src": "2563:11:0"
											}
										]
									},
									"documentation": null,
									"id": 327,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 260,
											"modifierName": {
												"argumentTypes": null,
												"id": 259,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 104,
												"src": "2107:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2107:9:0"
										}
									],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "2083:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 256,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2083:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2082:17:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "2126:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 261,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2126:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2125:14:0"
									},
									"scope": 328,
									"src": "2069:512:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 329,
							"src": "445:2138:0"
						}
					],
					"src": "32:2552:0"
				},
				"id": 0
			}
		}
	}
}