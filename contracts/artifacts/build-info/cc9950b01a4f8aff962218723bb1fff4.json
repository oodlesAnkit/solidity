{
	"id": "cc9950b01a4f8aff962218723bb1fff4",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.4.24",
	"solcLongVersion": "0.4.24+commit.e67f0147",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Glouki.sol": {
				"content": "pragma solidity ^0.4.24;\n\ninterface IZRC20 {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address account) external view returns (uint256);\n\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a, \"SafeMath: subtraction overflow\");\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Solidity only automatically asserts when dividing by 0\n        require(b > 0, \"SafeMath: division by zero\");\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b != 0, \"SafeMath: modulo by zero\");\n        return a % b;\n    }\n}\n\n/**\n * @dev Implementation of the `IZRC20` interface.\n *\n * We have followed general OpenZeppelin guidelines: functions revert instead\n * of returning `false` on failure. This behavior is nonetheless conventional\n * and does not conflict with the expectations of ZRC20 applications.\n *\n * Additionally, an `Approval` event is emitted on calls to `transferFrom`.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events.\n *\n * Finally, the non-standard `decreaseAllowance` and `increaseAllowance`\n * functions have been added to mitigate the well-known issues around setting\n * allowances..\n */\ncontract Glouki is IZRC20 {\n    using SafeMath for uint256;\n\n    mapping (address => uint256) private _balances;\n\n    mapping (address => mapping (address => uint256)) private _allowances;\n\n    string private _name;\n    string private _symbol;\n    uint8 private _decimals;\n    address public owner;\n\n    event TransferOwnership(address indexed from, address indexed to);\n\n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Sender is not the owner\");\n        _;\n    }\n\n    constructor (string memory name, string memory symbol, uint8 decimals) public {\n        _name = name;\n        _symbol = symbol;\n        _decimals = decimals;\n        owner = msg.sender;\n        _mint(owner, 1700000000 * 10 ** uint256(decimals));\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei.\n     *\n     * > Note that this information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * `IZRC20.balanceOf` and `IZRC20.transfer`.\n     */\n    function decimals() public view returns (uint8) {\n        return _decimals;\n    }\n\n    uint256 private _totalSupply;\n\n    /**\n     * @dev See `IZRC20.totalSupply`.\n     */\n    function totalSupply() public view returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See `IZRC20.balanceOf`.\n     */\n    function balanceOf(address account) public view returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See `IZRC20.transfer`.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public returns (bool) {\n        _transfer(msg.sender, recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See `IZRC20.allowance`.\n     */\n    function allowance(address owner, address spender) public view returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See `IZRC20.approve`.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public returns (bool) {\n        _approve(msg.sender, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See `IZRC20.transferFrom`.\n     *\n     * Emits an `Approval` event indicating the updated allowance.\n     *\n     * Requirements:\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `value`.\n     * - the caller must have allowance for `sender`'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {\n        _transfer(sender, recipient, amount);\n        _approve(sender, msg.sender, _allowances[sender][msg.sender].sub(amount));\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to `approve` that can be used as a mitigation for\n     * problems described in `IZRC20.approve`.\n     *\n     * Emits an `Approval` event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\n        _approve(msg.sender, spender, _allowances[msg.sender][spender].add(addedValue));\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to `approve` that can be used as a mitigation for\n     * problems described in `IZRC20.approve`.\n     *\n     * Emits an `Approval` event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\n        _approve(msg.sender, spender, _allowances[msg.sender][spender].sub(subtractedValue));\n        return true;\n    }\n\n    /**\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\n     *\n     * This is internal function is equivalent to `transfer`, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a `Transfer` event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(address sender, address recipient, uint256 amount) internal {\n        require(sender != address(0), \"ZRC20: transfer from the zero address\");\n        require(recipient != address(0), \"ZRC20: transfer to the zero address\");\n\n        _balances[sender] = _balances[sender].sub(amount);\n        _balances[recipient] = _balances[recipient].add(amount);\n        emit Transfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a `Transfer` event with `from` set to the zero address.\n     *\n     * Requirements\n     *\n     * - `to` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal {\n        require(account != address(0), \"ZRC20: mint to the zero address\");\n        _totalSupply = _totalSupply.add(amount);\n        _balances[account] = _balances[account].add(amount);\n        emit Transfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n     *\n     * This is internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an `Approval` event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        require(owner != address(0), \"ZRC20: approve from the zero address\");\n        require(spender != address(0), \"ZRC20: approve to the zero address\");\n\n        _allowances[owner][spender] = value;\n        emit Approval(owner, spender, value);\n    }\n\n    /**\n     * @dev Destoys `amount` tokens from the caller.\n     *\n     * See `ZRC20._burn`.\n     */\n    function burn(uint256 amount) public {\n        _burn(msg.sender, amount);\n    }\n\n    /**\n     * @dev See `ZRC20._burnFrom`.\n     */\n    function burnFrom(address account, uint256 amount) public {\n        _burnFrom(account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a `Transfer` event with `to` set to the zero address.\n     *\n     * Requirements\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 value) internal {\n        require(account != address(0), \"ZRC20: burn from the zero address\");\n\n        _totalSupply = _totalSupply.sub(value);\n        _balances[account] = _balances[account].sub(value);\n        emit Transfer(account, address(0), value);\n    }\n\n    /**\n     * @dev Destoys `amount` tokens from `account`.`amount` is then deducted\n     * from the caller's allowance.\n     *\n     * See `_burn` and `_approve`.\n     */\n    function _burnFrom(address account, uint256 amount) internal {\n        _burn(account, amount);\n        _approve(account, msg.sender, _allowances[account][msg.sender].sub(amount));\n    }\n\n    function mint(uint256 value) public onlyOwner {\n\t\t_mint(msg.sender, value);\n\t}\n\n    /**\n    * @dev Allows the current owner to transfer control of the contract to a newOwner.\n    * @param newOwner The address to transfer ownership to.\n    */\n    function transferOwnership(address newOwner) public onlyOwner {\n      require(newOwner != address(0));\n      owner = newOwner;\n      emit TransferOwnership(owner, newOwner);\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/Glouki.sol": {
				"Glouki": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "spender",
									"type": "address"
								},
								{
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "sender",
									"type": "address"
								},
								{
									"name": "recipient",
									"type": "address"
								},
								{
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "spender",
									"type": "address"
								},
								{
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "account",
									"type": "address"
								},
								{
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "spender",
									"type": "address"
								},
								{
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "recipient",
									"type": "address"
								},
								{
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "owner",
									"type": "address"
								},
								{
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"name": "name",
									"type": "string"
								},
								{
									"name": "symbol",
									"type": "string"
								},
								{
									"name": "decimals",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								}
							],
							"name": "TransferOwnership",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {
							"allowance(address,address)": {
								"details": "See `IZRC20.allowance`."
							},
							"approve(address,uint256)": {
								"details": "See `IZRC20.approve`.     * Requirements:     * - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See `IZRC20.balanceOf`."
							},
							"burn(uint256)": {
								"details": "Destoys `amount` tokens from the caller.     * See `ZRC20._burn`."
							},
							"burnFrom(address,uint256)": {
								"details": "See `ZRC20._burnFrom`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * > Note that this information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including `IZRC20.balanceOf` and `IZRC20.transfer`."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IZRC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IZRC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See `IZRC20.totalSupply`."
							},
							"transfer(address,uint256)": {
								"details": "See `IZRC20.transfer`.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See `IZRC20.transferFrom`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `value`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Allows the current owner to transfer control of the contract to a newOwner.",
								"params": {
									"newOwner": "The address to transfer ownership to."
								}
							}
						}
					},
					"evm": {
						"assembly": "    /* \"contracts/Glouki.sol\":4286:13087  contract Glouki is IZRC20 {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Glouki.sol\":4772:5023  constructor (string memory name, string memory symbol, uint8 decimals) public {... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/Glouki.sol\":4772:5023  constructor (string memory name, string memory symbol, uint8 decimals) public {... */\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  swap1\n  dup2\n  mstore\n  dup2\n  mload\n  0x20\n  dup1\n  dup5\n  add\n  mload\n  swap3\n  dup5\n  add\n  mload\n  swap2\n  dup5\n  add\n    /* \"contracts/Glouki.sol\":4860:4872  _name = name */\n  dup1\n  mload\n    /* \"contracts/Glouki.sol\":4772:5023  constructor (string memory name, string memory symbol, uint8 decimals) public {... */\n  swap1\n  swap5\n  swap4\n  swap1\n  swap4\n  add\n  swap3\n    /* \"contracts/Glouki.sol\":4860:4872  _name = name */\n  tag_4\n  swap2\n    /* \"contracts/Glouki.sol\":4860:4865  _name */\n  0x2\n  swap2\n    /* \"contracts/Glouki.sol\":4860:4872  _name = name */\n  swap1\n  dup7\n  add\n  swap1\n  jump\t// in(tag_5)\ntag_4:\n  pop\n    /* \"contracts/Glouki.sol\":4882:4898  _symbol = symbol */\n  dup2\n  mload\n  tag_6\n  swap1\n    /* \"contracts/Glouki.sol\":4882:4889  _symbol */\n  0x3\n  swap1\n    /* \"contracts/Glouki.sol\":4882:4898  _symbol = symbol */\n  0x20\n  dup6\n  add\n  swap1\n  jump\t// in(tag_5)\ntag_6:\n  pop\n    /* \"contracts/Glouki.sol\":4908:4917  _decimals */\n  0x4\n    /* \"contracts/Glouki.sol\":4908:4928  _decimals = decimals */\n  dup1\n  sload\n    /* \"contracts/Glouki.sol\":4946:4956  msg.sender */\n  caller\n    /* \"contracts/Glouki.sol\":4908:4928  _decimals = decimals */\n  0x100\n    /* \"contracts/Glouki.sol\":4938:4956  owner = msg.sender */\n  swap1\n  dup2\n  mul\n  not(sub(exp(0x2, 0xa8), 0x100))\n    /* \"contracts/Glouki.sol\":4908:4928  _decimals = decimals */\n  0xff\n  dup7\n  and\n  not(0xff)\n  swap1\n  swap5\n  and\n  dup5\n  or\n    /* \"contracts/Glouki.sol\":4938:4956  owner = msg.sender */\n  and\n  or\n  swap3\n  dup4\n  swap1\n  sstore\n    /* \"contracts/Glouki.sol\":4966:5016  _mint(owner, 1700000000 * 10 ** uint256(decimals)) */\n  tag_7\n  swap3\n    /* \"contracts/Glouki.sol\":4972:4977  owner */\n  div\n  sub(exp(0x2, 0xa0), 0x1)\n  and\n  swap1\n    /* \"contracts/Glouki.sol\":4979:4989  1700000000 */\n  0x6553f100\n    /* \"contracts/Glouki.sol\":4992:4994  10 */\n  0xa\n    /* \"contracts/Glouki.sol\":4992:5015  10 ** uint256(decimals) */\n  swap2\n  swap1\n  swap2\n  exp\n    /* \"contracts/Glouki.sol\":4979:5015  1700000000 * 10 ** uint256(decimals) */\n  mul\n    /* \"contracts/Glouki.sol\":4966:4971  _mint */\n  0x100000000\n  tag_8\n  dup2\n  mul\n    /* \"contracts/Glouki.sol\":4966:5016  _mint(owner, 1700000000 * 10 ** uint256(decimals)) */\n  div\n  jump\t// in\ntag_7:\n    /* \"contracts/Glouki.sol\":4772:5023  constructor (string memory name, string memory symbol, uint8 decimals) public {... */\n  pop\n  pop\n  pop\n    /* \"contracts/Glouki.sol\":4286:13087  contract Glouki is IZRC20 {... */\n  jump(tag_9)\n    /* \"contracts/Glouki.sol\":10273:10574  function _mint(address account, uint256 amount) internal {... */\ntag_8:\n  sub(exp(0x2, 0xa0), 0x1)\n    /* \"contracts/Glouki.sol\":10348:10369  account != address(0) */\n  dup3\n  and\n  iszero\n  iszero\n    /* \"contracts/Glouki.sol\":10340:10405  require(account != address(0), \"ZRC20: mint to the zero address\") */\n  tag_11\n  jumpi\n  0x40\n  dup1\n  mload\n  0x8c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x20\n  0x4\n  dup3\n  add\n  mstore\n  0x1f\n  0x24\n  dup3\n  add\n  mstore\n  0x5a524332303a206d696e7420746f20746865207a65726f206164647265737300\n  0x44\n  dup3\n  add\n  mstore\n  swap1\n  mload\n  swap1\n  dup2\n  swap1\n  sub\n  0x64\n  add\n  swap1\n  revert\ntag_11:\n    /* \"contracts/Glouki.sol\":10430:10442  _totalSupply */\n  sload(0x5)\n    /* \"contracts/Glouki.sol\":10430:10454  _totalSupply.add(amount) */\n  tag_12\n  swap1\n    /* \"contracts/Glouki.sol\":10447:10453  amount */\n  dup3\n    /* \"contracts/Glouki.sol\":10430:10446  _totalSupply.add */\n  0x100000000\n  tag_0_92\n  tag_13\n  dup3\n  mul\n  or\n    /* \"contracts/Glouki.sol\":10430:10454  _totalSupply.add(amount) */\n  div\n  jump\t// in\ntag_12:\n    /* \"contracts/Glouki.sol\":10415:10427  _totalSupply */\n  0x5\n    /* \"contracts/Glouki.sol\":10415:10454  _totalSupply = _totalSupply.add(amount) */\n  sstore\n  sub(exp(0x2, 0xa0), 0x1)\n    /* \"contracts/Glouki.sol\":10485:10503  _balances[account] */\n  dup3\n  and\n    /* \"contracts/Glouki.sol\":10485:10494  _balances */\n  0x0\n    /* \"contracts/Glouki.sol\":10485:10503  _balances[account] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n    /* \"contracts/Glouki.sol\":10485:10515  _balances[account].add(amount) */\n  tag_14\n  swap1\n    /* \"contracts/Glouki.sol\":10508:10514  amount */\n  dup3\n    /* \"contracts/Glouki.sol\":10485:10507  _balances[account].add */\n  0x100000000\n  tag_0_92\n  tag_13\n  dup3\n  mul\n  or\n    /* \"contracts/Glouki.sol\":10485:10515  _balances[account].add(amount) */\n  div\n  jump\t// in\ntag_14:\n  sub(exp(0x2, 0xa0), 0x1)\n    /* \"contracts/Glouki.sol\":10464:10482  _balances[account] */\n  dup4\n  and\n    /* \"contracts/Glouki.sol\":10464:10473  _balances */\n  0x0\n    /* \"contracts/Glouki.sol\":10464:10482  _balances[account] */\n  dup2\n  dup2\n  mstore\n  0x20\n  dup2\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n    /* \"contracts/Glouki.sol\":10464:10515  _balances[account] = _balances[account].add(amount) */\n  swap5\n  swap1\n  swap5\n  sstore\n    /* \"contracts/Glouki.sol\":10530:10567  Transfer(address(0), account, amount) */\n  dup4\n  mload\n  dup6\n  dup2\n  mstore\n  swap4\n  mload\n    /* \"contracts/Glouki.sol\":10464:10482  _balances[account] */\n  swap3\n  swap4\n    /* \"contracts/Glouki.sol\":10464:10473  _balances */\n  swap2\n  swap3\n    /* \"contracts/Glouki.sol\":10530:10567  Transfer(address(0), account, amount) */\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n  swap3\n  dup2\n  swap1\n  sub\n  swap1\n  swap2\n  add\n  swap1\n  log3\n    /* \"contracts/Glouki.sol\":10273:10574  function _mint(address account, uint256 amount) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/Glouki.sol\":944:1120  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\ntag_13:\n    /* \"contracts/Glouki.sol\":1002:1009  uint256 */\n  0x0\n    /* \"contracts/Glouki.sol\":1033:1038  a + b */\n  dup3\n  dup3\n  add\n    /* \"contracts/Glouki.sol\":1056:1062  c >= a */\n  dup4\n  dup2\n  lt\n  iszero\n    /* \"contracts/Glouki.sol\":1048:1094  require(c >= a, \"SafeMath: addition overflow\") */\n  tag_16\n  jumpi\n  0x40\n  dup1\n  mload\n  0x8c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x20\n  0x4\n  dup3\n  add\n  mstore\n  0x1b\n  0x24\n  dup3\n  add\n  mstore\n  0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n  0x44\n  dup3\n  add\n  mstore\n  swap1\n  mload\n  swap1\n  dup2\n  swap1\n  sub\n  0x64\n  add\n  swap1\n  revert\ntag_16:\n    /* \"contracts/Glouki.sol\":1112:1113  c */\n  swap4\n    /* \"contracts/Glouki.sol\":944:1120  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/Glouki.sol\":4286:13087  contract Glouki is IZRC20 {... */\ntag_5:\n  dup3\n  dup1\n  sload\n  0x1\n  dup2\n  0x1\n  and\n  iszero\n  0x100\n  mul\n  sub\n  and\n  0x2\n  swap1\n  div\n  swap1\n  0x0\n  mstore\n  keccak256(0x0, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_18\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_20)\ntag_18:\n  dup3\n  dup1\n  add\n  0x1\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_20\n  jumpi\n  swap2\n  dup3\n  add\ntag_19:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_20\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x1\n  add\n  swap1\n  jump(tag_19)\ntag_20:\n  pop\n  tag_21\n  swap3\n  swap2\n  pop\n  jump\t// in(tag_22)\ntag_21:\n  pop\n  swap1\n  jump\t// out\ntag_22:\n  tag_23\n  swap2\n  swap1\ntag_24:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_21\n  jumpi\n  0x0\n  dup2\n  sstore\n  0x1\n  add\n  jump(tag_24)\ntag_23:\n  swap1\n  jump\t// out\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Glouki.sol\":4286:13087  contract Glouki is IZRC20 {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      and(div(calldataload(0x0), 0x100000000000000000000000000000000000000000000000000000000), 0xffffffff)\n      0x6fdde03\n      dup2\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x95ea7b3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x79cc6790\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa0712d68\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_17\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"contracts/Glouki.sol\":5088:5169  function name() public view returns (string memory) {... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_18\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_18:\n        /* \"contracts/Glouki.sol\":5088:5169  function name() public view returns (string memory) {... */\n      pop\n      tag_19\n      jump(tag_20)\n    tag_19:\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      mstore\n      dup4\n      mload\n      dup2\n      dup4\n      add\n      mstore\n      dup4\n      mload\n      swap2\n      swap3\n      dup4\n      swap3\n      swap1\n      dup4\n      add\n      swap2\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x0\n        /* \"--CODEGEN--\":8:108   */\n    tag_21:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_22\n      jumpi\n        /* \"--CODEGEN--\":90:101   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":71:82   */\n      dup4\n      dup3\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_21)\n    tag_22:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/Glouki.sol\":5088:5169  function name() public view returns (string memory) {... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_24\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x1\n      dup4\n      0x20\n      sub\n      0x100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_24:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Glouki.sol\":7037:7182  function approve(address spender, uint256 value) public returns (bool) {... */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_25\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_25:\n      pop\n        /* \"contracts/Glouki.sol\":7037:7182  function approve(address spender, uint256 value) public returns (bool) {... */\n      tag_26\n      and(calldataload(0x4), sub(exp(0x2, 0xa0), 0x1))\n      calldataload(0x24)\n      jump(tag_27)\n    tag_26:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/Glouki.sol\":6098:6187  function totalSupply() public view returns (uint256) {... */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_28\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_28:\n        /* \"contracts/Glouki.sol\":6098:6187  function totalSupply() public view returns (uint256) {... */\n      pop\n      tag_29\n      jump(tag_30)\n    tag_29:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/Glouki.sol\":7557:7809  function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {... */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_31\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_31:\n      pop\n        /* \"contracts/Glouki.sol\":7557:7809  function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {... */\n      tag_26\n      sub(exp(0x2, 0xa0), 0x1)\n      calldataload(0x4)\n      dup2\n      and\n      swap1\n      calldataload(0x24)\n      and\n      calldataload(0x44)\n      jump(tag_33)\n        /* \"contracts/Glouki.sol\":5922:6003  function decimals() public view returns (uint8) {... */\n    tag_6:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_34\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_34:\n        /* \"contracts/Glouki.sol\":5922:6003  function decimals() public view returns (uint8) {... */\n      pop\n      tag_35\n      jump(tag_36)\n    tag_35:\n      0x40\n      dup1\n      mload\n      0xff\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/Glouki.sol\":8204:8407  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_7:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_37\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_37:\n      pop\n        /* \"contracts/Glouki.sol\":8204:8407  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n      tag_26\n      and(calldataload(0x4), sub(exp(0x2, 0xa0), 0x1))\n      calldataload(0x24)\n      jump(tag_39)\n        /* \"contracts/Glouki.sol\":11436:11515  function burn(uint256 amount) public {... */\n    tag_8:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_40\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_40:\n      pop\n        /* \"contracts/Glouki.sol\":11436:11515  function burn(uint256 amount) public {... */\n      tag_41\n      calldataload(0x4)\n      jump(tag_42)\n    tag_41:\n      stop\n        /* \"contracts/Glouki.sol\":6245:6353  function balanceOf(address account) public view returns (uint256) {... */\n    tag_9:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_43\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_43:\n      pop\n        /* \"contracts/Glouki.sol\":6245:6353  function balanceOf(address account) public view returns (uint256) {... */\n      tag_29\n      and(calldataload(0x4), sub(exp(0x2, 0xa0), 0x1))\n      jump(tag_45)\n        /* \"contracts/Glouki.sol\":11572:11673  function burnFrom(address account, uint256 amount) public {... */\n    tag_10:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_46\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_46:\n      pop\n        /* \"contracts/Glouki.sol\":11572:11673  function burnFrom(address account, uint256 amount) public {... */\n      tag_41\n      and(calldataload(0x4), sub(exp(0x2, 0xa0), 0x1))\n      calldataload(0x24)\n      jump(tag_48)\n        /* \"contracts/Glouki.sol\":4563:4583  address public owner */\n    tag_11:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_49\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_49:\n        /* \"contracts/Glouki.sol\":4563:4583  address public owner */\n      pop\n      tag_50\n      jump(tag_51)\n    tag_50:\n      0x40\n      dup1\n      mload\n      sub(exp(0x2, 0xa0), 0x1)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/Glouki.sol\":5282:5367  function symbol() public view returns (string memory) {... */\n    tag_12:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_52\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_52:\n        /* \"contracts/Glouki.sol\":5282:5367  function symbol() public view returns (string memory) {... */\n      pop\n      tag_19\n      jump(tag_54)\n        /* \"contracts/Glouki.sol\":12660:12738  function mint(uint256 value) public onlyOwner {... */\n    tag_13:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_59\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_59:\n      pop\n        /* \"contracts/Glouki.sol\":12660:12738  function mint(uint256 value) public onlyOwner {... */\n      tag_41\n      calldataload(0x4)\n      jump(tag_61)\n        /* \"contracts/Glouki.sol\":8894:9107  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n    tag_14:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_62\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_62:\n      pop\n        /* \"contracts/Glouki.sol\":8894:9107  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n      tag_26\n      and(calldataload(0x4), sub(exp(0x2, 0xa0), 0x1))\n      calldataload(0x24)\n      jump(tag_64)\n        /* \"contracts/Glouki.sol\":6556:6709  function transfer(address recipient, uint256 amount) public returns (bool) {... */\n    tag_15:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_65\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_65:\n      pop\n        /* \"contracts/Glouki.sol\":6556:6709  function transfer(address recipient, uint256 amount) public returns (bool) {... */\n      tag_26\n      and(calldataload(0x4), sub(exp(0x2, 0xa0), 0x1))\n      calldataload(0x24)\n      jump(tag_67)\n        /* \"contracts/Glouki.sol\":6767:6899  function allowance(address owner, address spender) public view returns (uint256) {... */\n    tag_16:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_68\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_68:\n      pop\n        /* \"contracts/Glouki.sol\":6767:6899  function allowance(address owner, address spender) public view returns (uint256) {... */\n      tag_29\n      sub(exp(0x2, 0xa0), 0x1)\n      calldataload(0x4)\n      dup2\n      and\n      swap1\n      calldataload(0x24)\n      and\n      jump(tag_70)\n        /* \"contracts/Glouki.sol\":12906:13085  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_17:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_71\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_71:\n      pop\n        /* \"contracts/Glouki.sol\":12906:13085  function transferOwnership(address newOwner) public onlyOwner {... */\n      tag_41\n      and(calldataload(0x4), sub(exp(0x2, 0xa0), 0x1))\n      jump(tag_73)\n        /* \"contracts/Glouki.sol\":5088:5169  function name() public view returns (string memory) {... */\n    tag_20:\n        /* \"contracts/Glouki.sol\":5157:5162  _name */\n      0x2\n        /* \"contracts/Glouki.sol\":5150:5162  return _name */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      not(0x0)\n      0x100\n      0x1\n      dup8\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap5\n      and\n      dup6\n      swap1\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"contracts/Glouki.sol\":5125:5131  string */\n      0x60\n      swap4\n        /* \"contracts/Glouki.sol\":5150:5162  return _name */\n      swap1\n      swap3\n        /* \"contracts/Glouki.sol\":5157:5162  _name */\n      swap1\n      swap2\n        /* \"contracts/Glouki.sol\":5150:5162  return _name */\n      dup4\n      add\n        /* \"contracts/Glouki.sol\":5157:5162  _name */\n      dup3\n        /* \"contracts/Glouki.sol\":5150:5162  return _name */\n      dup3\n      dup1\n      iszero\n      tag_75\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_76\n      jumpi\n      0x100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_75)\n    tag_76:\n      dup3\n      add\n      swap2\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      swap1\n    tag_77:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x1\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_77\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_75:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/Glouki.sol\":5088:5169  function name() public view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Glouki.sol\":7037:7182  function approve(address spender, uint256 value) public returns (bool) {... */\n    tag_27:\n        /* \"contracts/Glouki.sol\":7102:7106  bool */\n      0x0\n        /* \"contracts/Glouki.sol\":7118:7154  _approve(msg.sender, spender, value) */\n      tag_79\n        /* \"contracts/Glouki.sol\":7127:7137  msg.sender */\n      caller\n        /* \"contracts/Glouki.sol\":7139:7146  spender */\n      dup5\n        /* \"contracts/Glouki.sol\":7148:7153  value */\n      dup5\n        /* \"contracts/Glouki.sol\":7118:7126  _approve */\n      tag_80\n        /* \"contracts/Glouki.sol\":7118:7154  _approve(msg.sender, spender, value) */\n      jump\t// in\n    tag_79:\n      pop\n        /* \"contracts/Glouki.sol\":7171:7175  true */\n      0x1\n        /* \"contracts/Glouki.sol\":7037:7182  function approve(address spender, uint256 value) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Glouki.sol\":6098:6187  function totalSupply() public view returns (uint256) {... */\n    tag_30:\n        /* \"contracts/Glouki.sol\":6168:6180  _totalSupply */\n      sload(0x5)\n        /* \"contracts/Glouki.sol\":6098:6187  function totalSupply() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Glouki.sol\":7557:7809  function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {... */\n    tag_33:\n        /* \"contracts/Glouki.sol\":7646:7650  bool */\n      0x0\n        /* \"contracts/Glouki.sol\":7662:7698  _transfer(sender, recipient, amount) */\n      tag_83\n        /* \"contracts/Glouki.sol\":7672:7678  sender */\n      dup5\n        /* \"contracts/Glouki.sol\":7680:7689  recipient */\n      dup5\n        /* \"contracts/Glouki.sol\":7691:7697  amount */\n      dup5\n        /* \"contracts/Glouki.sol\":7662:7671  _transfer */\n      tag_84\n        /* \"contracts/Glouki.sol\":7662:7698  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_83:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/Glouki.sol\":7737:7756  _allowances[sender] */\n      dup5\n      and\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Glouki.sol\":7737:7748  _allowances */\n      0x1\n        /* \"contracts/Glouki.sol\":7737:7756  _allowances[sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Glouki.sol\":7725:7735  msg.sender */\n      caller\n        /* \"contracts/Glouki.sol\":7737:7768  _allowances[sender][msg.sender] */\n      dup1\n      dup6\n      mstore\n      swap3\n      mstore\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"contracts/Glouki.sol\":7708:7781  _approve(sender, msg.sender, _allowances[sender][msg.sender].sub(amount)) */\n      tag_85\n      swap2\n        /* \"contracts/Glouki.sol\":7717:7723  sender */\n      dup7\n      swap2\n        /* \"contracts/Glouki.sol\":7737:7780  _allowances[sender][msg.sender].sub(amount) */\n      tag_86\n      swap1\n        /* \"contracts/Glouki.sol\":7773:7779  amount */\n      dup7\n        /* \"contracts/Glouki.sol\":7737:7780  _allowances[sender][msg.sender].sub(amount) */\n      0xffffffff\n        /* \"contracts/Glouki.sol\":7737:7772  _allowances[sender][msg.sender].sub */\n      tag_87\n        /* \"contracts/Glouki.sol\":7737:7780  _allowances[sender][msg.sender].sub(amount) */\n      and\n      jump\t// in\n    tag_86:\n        /* \"contracts/Glouki.sol\":7708:7716  _approve */\n      tag_80\n        /* \"contracts/Glouki.sol\":7708:7781  _approve(sender, msg.sender, _allowances[sender][msg.sender].sub(amount)) */\n      jump\t// in\n    tag_85:\n      pop\n        /* \"contracts/Glouki.sol\":7798:7802  true */\n      0x1\n        /* \"contracts/Glouki.sol\":7557:7809  function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Glouki.sol\":5922:6003  function decimals() public view returns (uint8) {... */\n    tag_36:\n        /* \"contracts/Glouki.sol\":5987:5996  _decimals */\n      and(0xff, sload(0x4))\n        /* \"contracts/Glouki.sol\":5922:6003  function decimals() public view returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Glouki.sol\":8204:8407  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_39:\n        /* \"contracts/Glouki.sol\":8309:8319  msg.sender */\n      caller\n        /* \"contracts/Glouki.sol\":8284:8288  bool */\n      0x0\n        /* \"contracts/Glouki.sol\":8330:8353  _allowances[msg.sender] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Glouki.sol\":8330:8341  _allowances */\n      0x1\n        /* \"contracts/Glouki.sol\":8330:8353  _allowances[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/Glouki.sol\":8330:8362  _allowances[msg.sender][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"contracts/Glouki.sol\":8284:8288  bool */\n      swap1\n      swap2\n        /* \"contracts/Glouki.sol\":8300:8379  _approve(msg.sender, spender, _allowances[msg.sender][spender].add(addedValue)) */\n      tag_79\n      swap2\n        /* \"contracts/Glouki.sol\":8321:8328  spender */\n      dup6\n      swap1\n        /* \"contracts/Glouki.sol\":8330:8378  _allowances[msg.sender][spender].add(addedValue) */\n      tag_86\n      swap1\n        /* \"contracts/Glouki.sol\":8367:8377  addedValue */\n      dup7\n        /* \"contracts/Glouki.sol\":8330:8378  _allowances[msg.sender][spender].add(addedValue) */\n      0xffffffff\n        /* \"contracts/Glouki.sol\":8330:8366  _allowances[msg.sender][spender].add */\n      tag_92\n        /* \"contracts/Glouki.sol\":8330:8378  _allowances[msg.sender][spender].add(addedValue) */\n      and\n      jump\t// in\n        /* \"contracts/Glouki.sol\":11436:11515  function burn(uint256 amount) public {... */\n    tag_42:\n        /* \"contracts/Glouki.sol\":11483:11508  _burn(msg.sender, amount) */\n      tag_94\n        /* \"contracts/Glouki.sol\":11489:11499  msg.sender */\n      caller\n        /* \"contracts/Glouki.sol\":11501:11507  amount */\n      dup3\n        /* \"contracts/Glouki.sol\":11483:11488  _burn */\n      tag_95\n        /* \"contracts/Glouki.sol\":11483:11508  _burn(msg.sender, amount) */\n      jump\t// in\n    tag_94:\n        /* \"contracts/Glouki.sol\":11436:11515  function burn(uint256 amount) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/Glouki.sol\":6245:6353  function balanceOf(address account) public view returns (uint256) {... */\n    tag_45:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/Glouki.sol\":6328:6346  _balances[account] */\n      and\n        /* \"contracts/Glouki.sol\":6302:6309  uint256 */\n      0x0\n        /* \"contracts/Glouki.sol\":6328:6346  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/Glouki.sol\":6245:6353  function balanceOf(address account) public view returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/Glouki.sol\":11572:11673  function burnFrom(address account, uint256 amount) public {... */\n    tag_48:\n        /* \"contracts/Glouki.sol\":11640:11666  _burnFrom(account, amount) */\n      tag_98\n        /* \"contracts/Glouki.sol\":11650:11657  account */\n      dup3\n        /* \"contracts/Glouki.sol\":11659:11665  amount */\n      dup3\n        /* \"contracts/Glouki.sol\":11640:11649  _burnFrom */\n      tag_99\n        /* \"contracts/Glouki.sol\":11640:11666  _burnFrom(account, amount) */\n      jump\t// in\n    tag_98:\n        /* \"contracts/Glouki.sol\":11572:11673  function burnFrom(address account, uint256 amount) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Glouki.sol\":4563:4583  address public owner */\n    tag_51:\n      sload(0x4)\n      0x100\n      swap1\n      div\n      sub(exp(0x2, 0xa0), 0x1)\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Glouki.sol\":5282:5367  function symbol() public view returns (string memory) {... */\n    tag_54:\n        /* \"contracts/Glouki.sol\":5353:5360  _symbol */\n      0x3\n        /* \"contracts/Glouki.sol\":5346:5360  return _symbol */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x2\n      not(0x0)\n      0x100\n      0x1\n      dup9\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"contracts/Glouki.sol\":5321:5327  string */\n      0x60\n      swap4\n        /* \"contracts/Glouki.sol\":5346:5360  return _symbol */\n      swap1\n      swap3\n        /* \"contracts/Glouki.sol\":5353:5360  _symbol */\n      swap1\n      swap2\n        /* \"contracts/Glouki.sol\":5346:5360  return _symbol */\n      dup4\n      add\n        /* \"contracts/Glouki.sol\":5353:5360  _symbol */\n      dup3\n        /* \"contracts/Glouki.sol\":5346:5360  return _symbol */\n      dup3\n      dup1\n      iszero\n      tag_75\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_76\n      jumpi\n      0x100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_75)\n        /* \"contracts/Glouki.sol\":12660:12738  function mint(uint256 value) public onlyOwner {... */\n    tag_61:\n        /* \"contracts/Glouki.sol\":4715:4720  owner */\n      sload(0x4)\n      0x100\n      swap1\n      div\n      sub(exp(0x2, 0xa0), 0x1)\n      and\n        /* \"contracts/Glouki.sol\":4701:4711  msg.sender */\n      caller\n        /* \"contracts/Glouki.sol\":4701:4720  msg.sender == owner */\n      eq\n        /* \"contracts/Glouki.sol\":4693:4748  require(msg.sender == owner, \"Sender is not the owner\") */\n      tag_105\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0x17\n      0x24\n      dup3\n      add\n      mstore\n      0x53656e646572206973206e6f7420746865206f776e6572000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_105:\n        /* \"contracts/Glouki.sol\":12710:12734  _mint(msg.sender, value) */\n      tag_94\n        /* \"contracts/Glouki.sol\":12716:12726  msg.sender */\n      caller\n        /* \"contracts/Glouki.sol\":12728:12733  value */\n      dup3\n        /* \"contracts/Glouki.sol\":12710:12715  _mint */\n      tag_108\n        /* \"contracts/Glouki.sol\":12710:12734  _mint(msg.sender, value) */\n      jump\t// in\n        /* \"contracts/Glouki.sol\":8894:9107  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n    tag_64:\n        /* \"contracts/Glouki.sol\":9004:9014  msg.sender */\n      caller\n        /* \"contracts/Glouki.sol\":8979:8983  bool */\n      0x0\n        /* \"contracts/Glouki.sol\":9025:9048  _allowances[msg.sender] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Glouki.sol\":9025:9036  _allowances */\n      0x1\n        /* \"contracts/Glouki.sol\":9025:9048  _allowances[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/Glouki.sol\":9025:9057  _allowances[msg.sender][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"contracts/Glouki.sol\":8979:8983  bool */\n      swap1\n      swap2\n        /* \"contracts/Glouki.sol\":8995:9079  _approve(msg.sender, spender, _allowances[msg.sender][spender].sub(subtractedValue)) */\n      tag_79\n      swap2\n        /* \"contracts/Glouki.sol\":9016:9023  spender */\n      dup6\n      swap1\n        /* \"contracts/Glouki.sol\":9025:9078  _allowances[msg.sender][spender].sub(subtractedValue) */\n      tag_86\n      swap1\n        /* \"contracts/Glouki.sol\":9062:9077  subtractedValue */\n      dup7\n        /* \"contracts/Glouki.sol\":9025:9078  _allowances[msg.sender][spender].sub(subtractedValue) */\n      0xffffffff\n        /* \"contracts/Glouki.sol\":9025:9061  _allowances[msg.sender][spender].sub */\n      tag_87\n        /* \"contracts/Glouki.sol\":9025:9078  _allowances[msg.sender][spender].sub(subtractedValue) */\n      and\n      jump\t// in\n        /* \"contracts/Glouki.sol\":6556:6709  function transfer(address recipient, uint256 amount) public returns (bool) {... */\n    tag_67:\n        /* \"contracts/Glouki.sol\":6625:6629  bool */\n      0x0\n        /* \"contracts/Glouki.sol\":6641:6681  _transfer(msg.sender, recipient, amount) */\n      tag_79\n        /* \"contracts/Glouki.sol\":6651:6661  msg.sender */\n      caller\n        /* \"contracts/Glouki.sol\":6663:6672  recipient */\n      dup5\n        /* \"contracts/Glouki.sol\":6674:6680  amount */\n      dup5\n        /* \"contracts/Glouki.sol\":6641:6650  _transfer */\n      tag_84\n        /* \"contracts/Glouki.sol\":6641:6681  _transfer(msg.sender, recipient, amount) */\n      jump\t// in\n        /* \"contracts/Glouki.sol\":6767:6899  function allowance(address owner, address spender) public view returns (uint256) {... */\n    tag_70:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/Glouki.sol\":6865:6883  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"contracts/Glouki.sol\":6839:6846  uint256 */\n      0x0\n        /* \"contracts/Glouki.sol\":6865:6883  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Glouki.sol\":6865:6876  _allowances */\n      0x1\n        /* \"contracts/Glouki.sol\":6865:6883  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Glouki.sol\":6865:6892  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"contracts/Glouki.sol\":6767:6899  function allowance(address owner, address spender) public view returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/Glouki.sol\":12906:13085  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_73:\n        /* \"contracts/Glouki.sol\":4715:4720  owner */\n      sload(0x4)\n      0x100\n      swap1\n      div\n      sub(exp(0x2, 0xa0), 0x1)\n      and\n        /* \"contracts/Glouki.sol\":4701:4711  msg.sender */\n      caller\n        /* \"contracts/Glouki.sol\":4701:4720  msg.sender == owner */\n      eq\n        /* \"contracts/Glouki.sol\":4693:4748  require(msg.sender == owner, \"Sender is not the owner\") */\n      tag_116\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0x17\n      0x24\n      dup3\n      add\n      mstore\n      0x53656e646572206973206e6f7420746865206f776e6572000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_116:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/Glouki.sol\":12984:13006  newOwner != address(0) */\n      dup2\n      and\n      iszero\n      iszero\n        /* \"contracts/Glouki.sol\":12976:13007  require(newOwner != address(0)) */\n      tag_118\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_118:\n        /* \"contracts/Glouki.sol\":13015:13020  owner */\n      0x4\n        /* \"contracts/Glouki.sol\":13015:13031  owner = newOwner */\n      dup1\n      sload\n      not(0xffffffffffffffffffffffffffffffffffffffff00)\n      and\n      0x100\n      sub(exp(0x2, 0xa0), 0x1)\n      dup5\n      dup2\n      and\n      dup3\n      dup2\n      mul\n      swap4\n      swap1\n      swap4\n      or\n      swap4\n      dup5\n      swap1\n      sstore\n        /* \"contracts/Glouki.sol\":13044:13078  TransferOwnership(owner, newOwner) */\n      mload(0x40)\n        /* \"contracts/Glouki.sol\":13015:13031  owner = newOwner */\n      swap3\n      swap4\n        /* \"contracts/Glouki.sol\":13062:13067  owner */\n      swap2\n      swap1\n      swap2\n      div\n      and\n      swap1\n        /* \"contracts/Glouki.sol\":13044:13078  TransferOwnership(owner, newOwner) */\n      0x5c486528ec3e3f0ea91181cff8116f02bfa350e03b8b6f12e00765adbb5af85c\n      swap1\n      0x0\n      swap1\n      log3\n        /* \"contracts/Glouki.sol\":12906:13085  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Glouki.sol\":10999:11328  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_80:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/Glouki.sol\":11091:11110  owner != address(0) */\n      dup4\n      and\n      iszero\n      iszero\n        /* \"contracts/Glouki.sol\":11083:11151  require(owner != address(0), \"ZRC20: approve from the zero address\") */\n      tag_120\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0x24\n      dup1\n      dup3\n      add\n      mstore\n      0x5a524332303a20617070726f76652066726f6d20746865207a65726f20616464\n      0x44\n      dup3\n      add\n      mstore\n      0x7265737300000000000000000000000000000000000000000000000000000000\n      0x64\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x84\n      add\n      swap1\n      revert\n    tag_120:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/Glouki.sol\":11169:11190  spender != address(0) */\n      dup3\n      and\n      iszero\n      iszero\n        /* \"contracts/Glouki.sol\":11161:11229  require(spender != address(0), \"ZRC20: approve to the zero address\") */\n      tag_121\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0x22\n      0x24\n      dup3\n      add\n      mstore\n      0x5a524332303a20617070726f766520746f20746865207a65726f206164647265\n      0x44\n      dup3\n      add\n      mstore\n      0x7373000000000000000000000000000000000000000000000000000000000000\n      0x64\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x84\n      add\n      swap1\n      revert\n    tag_121:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/Glouki.sol\":11240:11258  _allowances[owner] */\n      dup1\n      dup5\n      and\n      0x0\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Glouki.sol\":11240:11251  _allowances */\n      0x1\n        /* \"contracts/Glouki.sol\":11240:11258  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Glouki.sol\":11240:11267  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/Glouki.sol\":11240:11275  _allowances[owner][spender] = value */\n      dup6\n      swap1\n      sstore\n        /* \"contracts/Glouki.sol\":11290:11321  Approval(owner, spender, value) */\n      dup2\n      mload\n      dup6\n      dup2\n      mstore\n      swap2\n      mload\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"contracts/Glouki.sol\":10999:11328  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Glouki.sol\":9581:10003  function _transfer(address sender, address recipient, uint256 amount) internal {... */\n    tag_84:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/Glouki.sol\":9678:9698  sender != address(0) */\n      dup4\n      and\n      iszero\n      iszero\n        /* \"contracts/Glouki.sol\":9670:9740  require(sender != address(0), \"ZRC20: transfer from the zero address\") */\n      tag_123\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0x25\n      0x24\n      dup3\n      add\n      mstore\n      0x5a524332303a207472616e736665722066726f6d20746865207a65726f206164\n      0x44\n      dup3\n      add\n      mstore\n      0x6472657373000000000000000000000000000000000000000000000000000000\n      0x64\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x84\n      add\n      swap1\n      revert\n    tag_123:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/Glouki.sol\":9758:9781  recipient != address(0) */\n      dup3\n      and\n      iszero\n      iszero\n        /* \"contracts/Glouki.sol\":9750:9821  require(recipient != address(0), \"ZRC20: transfer to the zero address\") */\n      tag_124\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0x23\n      0x24\n      dup3\n      add\n      mstore\n      0x5a524332303a207472616e7366657220746f20746865207a65726f2061646472\n      0x44\n      dup3\n      add\n      mstore\n      0x6573730000000000000000000000000000000000000000000000000000000000\n      0x64\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x84\n      add\n      swap1\n      revert\n    tag_124:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/Glouki.sol\":9852:9869  _balances[sender] */\n      dup4\n      and\n        /* \"contracts/Glouki.sol\":9852:9861  _balances */\n      0x0\n        /* \"contracts/Glouki.sol\":9852:9869  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Glouki.sol\":9852:9881  _balances[sender].sub(amount) */\n      tag_125\n      swap1\n        /* \"contracts/Glouki.sol\":9874:9880  amount */\n      dup3\n        /* \"contracts/Glouki.sol\":9852:9881  _balances[sender].sub(amount) */\n      0xffffffff\n        /* \"contracts/Glouki.sol\":9852:9873  _balances[sender].sub */\n      tag_87\n        /* \"contracts/Glouki.sol\":9852:9881  _balances[sender].sub(amount) */\n      and\n      jump\t// in\n    tag_125:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/Glouki.sol\":9832:9849  _balances[sender] */\n      dup1\n      dup6\n      and\n        /* \"contracts/Glouki.sol\":9832:9841  _balances */\n      0x0\n        /* \"contracts/Glouki.sol\":9832:9849  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/Glouki.sol\":9832:9881  _balances[sender] = _balances[sender].sub(amount) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/Glouki.sol\":9914:9934  _balances[recipient] */\n      swap1\n      dup5\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"contracts/Glouki.sol\":9914:9946  _balances[recipient].add(amount) */\n      tag_126\n      swap1\n        /* \"contracts/Glouki.sol\":9939:9945  amount */\n      dup3\n        /* \"contracts/Glouki.sol\":9914:9946  _balances[recipient].add(amount) */\n      0xffffffff\n        /* \"contracts/Glouki.sol\":9914:9938  _balances[recipient].add */\n      tag_92\n        /* \"contracts/Glouki.sol\":9914:9946  _balances[recipient].add(amount) */\n      and\n      jump\t// in\n    tag_126:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/Glouki.sol\":9891:9911  _balances[recipient] */\n      dup1\n      dup5\n      and\n        /* \"contracts/Glouki.sol\":9891:9900  _balances */\n      0x0\n        /* \"contracts/Glouki.sol\":9891:9911  _balances[recipient] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/Glouki.sol\":9891:9946  _balances[recipient] = _balances[recipient].add(amount) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"contracts/Glouki.sol\":9961:9996  Transfer(sender, recipient, amount) */\n      dup1\n      mload\n      dup6\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"contracts/Glouki.sol\":9891:9911  _balances[recipient] */\n      swap2\n      swap4\n        /* \"contracts/Glouki.sol\":9961:9996  Transfer(sender, recipient, amount) */\n      swap3\n      dup8\n      and\n      swap3\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap3\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log3\n        /* \"contracts/Glouki.sol\":9581:10003  function _transfer(address sender, address recipient, uint256 amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Glouki.sol\":1384:1563  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_87:\n        /* \"contracts/Glouki.sol\":1442:1449  uint256 */\n      0x0\n      dup1\n        /* \"contracts/Glouki.sol\":1469:1475  b <= a */\n      dup4\n      dup4\n      gt\n      iszero\n        /* \"contracts/Glouki.sol\":1461:1510  require(b <= a, \"SafeMath: subtraction overflow\") */\n      tag_128\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0x1e\n      0x24\n      dup3\n      add\n      mstore\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_128:\n      pop\n      pop\n        /* \"contracts/Glouki.sol\":1532:1537  a - b */\n      swap1\n      sub\n      swap1\n        /* \"contracts/Glouki.sol\":1384:1563  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/Glouki.sol\":944:1120  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_92:\n        /* \"contracts/Glouki.sol\":1002:1009  uint256 */\n      0x0\n        /* \"contracts/Glouki.sol\":1033:1038  a + b */\n      dup3\n      dup3\n      add\n        /* \"contracts/Glouki.sol\":1056:1062  c >= a */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"contracts/Glouki.sol\":1048:1094  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_130\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_130:\n        /* \"contracts/Glouki.sol\":1112:1113  c */\n      swap4\n        /* \"contracts/Glouki.sol\":944:1120  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Glouki.sol\":11992:12292  function _burn(address account, uint256 value) internal {... */\n    tag_95:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/Glouki.sol\":12066:12087  account != address(0) */\n      dup3\n      and\n      iszero\n      iszero\n        /* \"contracts/Glouki.sol\":12058:12125  require(account != address(0), \"ZRC20: burn from the zero address\") */\n      tag_132\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0x21\n      0x24\n      dup3\n      add\n      mstore\n      0x5a524332303a206275726e2066726f6d20746865207a65726f20616464726573\n      0x44\n      dup3\n      add\n      mstore\n      0x7300000000000000000000000000000000000000000000000000000000000000\n      0x64\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x84\n      add\n      swap1\n      revert\n    tag_132:\n        /* \"contracts/Glouki.sol\":12151:12163  _totalSupply */\n      sload(0x5)\n        /* \"contracts/Glouki.sol\":12151:12174  _totalSupply.sub(value) */\n      tag_133\n      swap1\n        /* \"contracts/Glouki.sol\":12168:12173  value */\n      dup3\n        /* \"contracts/Glouki.sol\":12151:12174  _totalSupply.sub(value) */\n      0xffffffff\n        /* \"contracts/Glouki.sol\":12151:12167  _totalSupply.sub */\n      tag_87\n        /* \"contracts/Glouki.sol\":12151:12174  _totalSupply.sub(value) */\n      and\n      jump\t// in\n    tag_133:\n        /* \"contracts/Glouki.sol\":12136:12148  _totalSupply */\n      0x5\n        /* \"contracts/Glouki.sol\":12136:12174  _totalSupply = _totalSupply.sub(value) */\n      sstore\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/Glouki.sol\":12205:12223  _balances[account] */\n      dup3\n      and\n        /* \"contracts/Glouki.sol\":12205:12214  _balances */\n      0x0\n        /* \"contracts/Glouki.sol\":12205:12223  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Glouki.sol\":12205:12234  _balances[account].sub(value) */\n      tag_134\n      swap1\n        /* \"contracts/Glouki.sol\":12228:12233  value */\n      dup3\n        /* \"contracts/Glouki.sol\":12205:12234  _balances[account].sub(value) */\n      0xffffffff\n        /* \"contracts/Glouki.sol\":12205:12227  _balances[account].sub */\n      tag_87\n        /* \"contracts/Glouki.sol\":12205:12234  _balances[account].sub(value) */\n      and\n      jump\t// in\n    tag_134:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/Glouki.sol\":12184:12202  _balances[account] */\n      dup4\n      and\n        /* \"contracts/Glouki.sol\":12184:12193  _balances */\n      0x0\n        /* \"contracts/Glouki.sol\":12184:12202  _balances[account] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Glouki.sol\":12184:12234  _balances[account] = _balances[account].sub(value) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"contracts/Glouki.sol\":12249:12285  Transfer(account, address(0), value) */\n      dup4\n      mload\n      dup6\n      dup2\n      mstore\n      swap4\n      mload\n        /* \"contracts/Glouki.sol\":12184:12193  _balances */\n      swap2\n      swap4\n        /* \"contracts/Glouki.sol\":12249:12285  Transfer(account, address(0), value) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap3\n      swap1\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"contracts/Glouki.sol\":11992:12292  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Glouki.sol\":12469:12654  function _burnFrom(address account, uint256 amount) internal {... */\n    tag_99:\n        /* \"contracts/Glouki.sol\":12540:12562  _burn(account, amount) */\n      tag_136\n        /* \"contracts/Glouki.sol\":12546:12553  account */\n      dup3\n        /* \"contracts/Glouki.sol\":12555:12561  amount */\n      dup3\n        /* \"contracts/Glouki.sol\":12540:12545  _burn */\n      tag_95\n        /* \"contracts/Glouki.sol\":12540:12562  _burn(account, amount) */\n      jump\t// in\n    tag_136:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/Glouki.sol\":12602:12622  _allowances[account] */\n      dup3\n      and\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Glouki.sol\":12602:12613  _allowances */\n      0x1\n        /* \"contracts/Glouki.sol\":12602:12622  _allowances[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Glouki.sol\":12590:12600  msg.sender */\n      caller\n        /* \"contracts/Glouki.sol\":12602:12634  _allowances[account][msg.sender] */\n      dup1\n      dup6\n      mstore\n      swap3\n      mstore\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"contracts/Glouki.sol\":12572:12647  _approve(account, msg.sender, _allowances[account][msg.sender].sub(amount)) */\n      tag_98\n      swap2\n        /* \"contracts/Glouki.sol\":12581:12588  account */\n      dup5\n      swap2\n        /* \"contracts/Glouki.sol\":12602:12646  _allowances[account][msg.sender].sub(amount) */\n      tag_86\n      swap1\n        /* \"contracts/Glouki.sol\":12639:12645  amount */\n      dup6\n        /* \"contracts/Glouki.sol\":12602:12646  _allowances[account][msg.sender].sub(amount) */\n      0xffffffff\n        /* \"contracts/Glouki.sol\":12602:12638  _allowances[account][msg.sender].sub */\n      tag_87\n        /* \"contracts/Glouki.sol\":12602:12646  _allowances[account][msg.sender].sub(amount) */\n      and\n      jump\t// in\n        /* \"contracts/Glouki.sol\":10273:10574  function _mint(address account, uint256 amount) internal {... */\n    tag_108:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/Glouki.sol\":10348:10369  account != address(0) */\n      dup3\n      and\n      iszero\n      iszero\n        /* \"contracts/Glouki.sol\":10340:10405  require(account != address(0), \"ZRC20: mint to the zero address\") */\n      tag_140\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0x1f\n      0x24\n      dup3\n      add\n      mstore\n      0x5a524332303a206d696e7420746f20746865207a65726f206164647265737300\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_140:\n        /* \"contracts/Glouki.sol\":10430:10442  _totalSupply */\n      sload(0x5)\n        /* \"contracts/Glouki.sol\":10430:10454  _totalSupply.add(amount) */\n      tag_141\n      swap1\n        /* \"contracts/Glouki.sol\":10447:10453  amount */\n      dup3\n        /* \"contracts/Glouki.sol\":10430:10454  _totalSupply.add(amount) */\n      0xffffffff\n        /* \"contracts/Glouki.sol\":10430:10446  _totalSupply.add */\n      tag_92\n        /* \"contracts/Glouki.sol\":10430:10454  _totalSupply.add(amount) */\n      and\n      jump\t// in\n    tag_141:\n        /* \"contracts/Glouki.sol\":10415:10427  _totalSupply */\n      0x5\n        /* \"contracts/Glouki.sol\":10415:10454  _totalSupply = _totalSupply.add(amount) */\n      sstore\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/Glouki.sol\":10485:10503  _balances[account] */\n      dup3\n      and\n        /* \"contracts/Glouki.sol\":10485:10494  _balances */\n      0x0\n        /* \"contracts/Glouki.sol\":10485:10503  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Glouki.sol\":10485:10515  _balances[account].add(amount) */\n      tag_142\n      swap1\n        /* \"contracts/Glouki.sol\":10508:10514  amount */\n      dup3\n        /* \"contracts/Glouki.sol\":10485:10515  _balances[account].add(amount) */\n      0xffffffff\n        /* \"contracts/Glouki.sol\":10485:10507  _balances[account].add */\n      tag_92\n        /* \"contracts/Glouki.sol\":10485:10515  _balances[account].add(amount) */\n      and\n      jump\t// in\n    tag_142:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/Glouki.sol\":10464:10482  _balances[account] */\n      dup4\n      and\n        /* \"contracts/Glouki.sol\":10464:10473  _balances */\n      0x0\n        /* \"contracts/Glouki.sol\":10464:10482  _balances[account] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Glouki.sol\":10464:10515  _balances[account] = _balances[account].add(amount) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"contracts/Glouki.sol\":10530:10567  Transfer(address(0), account, amount) */\n      dup4\n      mload\n      dup6\n      dup2\n      mstore\n      swap4\n      mload\n        /* \"contracts/Glouki.sol\":10464:10482  _balances[account] */\n      swap3\n      swap4\n        /* \"contracts/Glouki.sol\":10464:10473  _balances */\n      swap2\n      swap3\n        /* \"contracts/Glouki.sol\":10530:10567  Transfer(address(0), account, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"contracts/Glouki.sol\":10273:10574  function _mint(address account, uint256 amount) internal {... */\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a72305820e2941f9825cb34a197635989040e46546effeb1bc8338b986e6d99a1a1eed85c0029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604051620010e7380380620010e783398101604090815281516020808401519284015191840180519094939093019262000053916002919086019062000262565b5081516200006990600390602085019062000262565b50600480543361010090810261010060a860020a031960ff861660ff199094168417161792839055620000bc9204600160a060020a031690636553f100600a9190910a02640100000000620000c5810204565b50505062000307565b600160a060020a03821615156200013d57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5a524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b6005546200015a908264010000000062000aec620001e682021704565b600555600160a060020a03821660009081526020819052604090205462000190908264010000000062000aec620001e682021704565b600160a060020a0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6000828201838110156200025b57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620002a557805160ff1916838001178555620002d5565b82800160010185558215620002d5579182015b82811115620002d5578251825591602001919060010190620002b8565b50620002e3929150620002e7565b5090565b6200030491905b80821115620002e35760008155600101620002ee565b90565b610dd080620003176000396000f3006080604052600436106100e55763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100ea578063095ea7b31461017457806318160ddd146101ac57806323b872dd146101d3578063313ce567146101fd578063395093511461022857806342966c681461024c57806370a082311461026657806379cc6790146102875780638da5cb5b146102ab57806395d89b41146102dc578063a0712d68146102f1578063a457c2d714610309578063a9059cbb1461032d578063dd62ed3e14610351578063f2fde38b14610378575b600080fd5b3480156100f657600080fd5b506100ff610399565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610139578181015183820152602001610121565b50505050905090810190601f1680156101665780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561018057600080fd5b50610198600160a060020a036004351660243561042c565b604080519115158252519081900360200190f35b3480156101b857600080fd5b506101c1610442565b60408051918252519081900360200190f35b3480156101df57600080fd5b50610198600160a060020a0360043581169060243516604435610448565b34801561020957600080fd5b5061021261049f565b6040805160ff9092168252519081900360200190f35b34801561023457600080fd5b50610198600160a060020a03600435166024356104a8565b34801561025857600080fd5b506102646004356104e4565b005b34801561027257600080fd5b506101c1600160a060020a03600435166104f1565b34801561029357600080fd5b50610264600160a060020a036004351660243561050c565b3480156102b757600080fd5b506102c061051a565b60408051600160a060020a039092168252519081900360200190f35b3480156102e857600080fd5b506100ff61052e565b3480156102fd57600080fd5b5061026460043561058f565b34801561031557600080fd5b50610198600160a060020a0360043516602435610600565b34801561033957600080fd5b50610198600160a060020a036004351660243561063c565b34801561035d57600080fd5b506101c1600160a060020a0360043581169060243516610649565b34801561038457600080fd5b50610264600160a060020a0360043516610674565b60028054604080516020601f60001961010060018716150201909416859004938401819004810282018101909252828152606093909290918301828280156104225780601f106103f757610100808354040283529160200191610422565b820191906000526020600020905b81548152906001019060200180831161040557829003601f168201915b5050505050905090565b6000610439338484610759565b50600192915050565b60055490565b60006104558484846108c6565b600160a060020a038416600090815260016020908152604080832033808552925290912054610495918691610490908663ffffffff610a8a16565b610759565b5060019392505050565b60045460ff1690565b336000818152600160209081526040808320600160a060020a03871684529091528120549091610439918590610490908663ffffffff610aec16565b6104ee3382610b50565b50565b600160a060020a031660009081526020819052604090205490565b6105168282610c6a565b5050565b6004546101009004600160a060020a031681565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104225780601f106103f757610100808354040283529160200191610422565b6004546101009004600160a060020a031633146105f6576040805160e560020a62461bcd02815260206004820152601760248201527f53656e646572206973206e6f7420746865206f776e6572000000000000000000604482015290519081900360640190fd5b6104ee3382610caf565b336000818152600160209081526040808320600160a060020a03871684529091528120549091610439918590610490908663ffffffff610a8a16565b60006104393384846108c6565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b6004546101009004600160a060020a031633146106db576040805160e560020a62461bcd02815260206004820152601760248201527f53656e646572206973206e6f7420746865206f776e6572000000000000000000604482015290519081900360640190fd5b600160a060020a03811615156106f057600080fd5b6004805474ffffffffffffffffffffffffffffffffffffffff001916610100600160a060020a03848116828102939093179384905560405192939190910416907f5c486528ec3e3f0ea91181cff8116f02bfa350e03b8b6f12e00765adbb5af85c90600090a350565b600160a060020a03831615156107de576040805160e560020a62461bcd028152602060048201526024808201527f5a524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f7265737300000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b600160a060020a0382161515610864576040805160e560020a62461bcd02815260206004820152602260248201527f5a524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f7373000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b600160a060020a03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b600160a060020a038316151561094c576040805160e560020a62461bcd02815260206004820152602560248201527f5a524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f6472657373000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b600160a060020a03821615156109d2576040805160e560020a62461bcd02815260206004820152602360248201527f5a524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f6573730000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b600160a060020a0383166000908152602081905260409020546109fb908263ffffffff610a8a16565b600160a060020a038085166000908152602081905260408082209390935590841681522054610a30908263ffffffff610aec16565b600160a060020a038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008083831115610ae5576040805160e560020a62461bcd02815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b5050900390565b600082820183811015610b49576040805160e560020a62461bcd02815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b600160a060020a0382161515610bd6576040805160e560020a62461bcd02815260206004820152602160248201527f5a524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f7300000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b600554610be9908263ffffffff610a8a16565b600555600160a060020a038216600090815260208190526040902054610c15908263ffffffff610a8a16565b600160a060020a038316600081815260208181526040808320949094558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a35050565b610c748282610b50565b600160a060020a038216600090815260016020908152604080832033808552925290912054610516918491610490908563ffffffff610a8a16565b600160a060020a0382161515610d0f576040805160e560020a62461bcd02815260206004820152601f60248201527f5a524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b600554610d22908263ffffffff610aec16565b600555600160a060020a038216600090815260208190526040902054610d4e908263ffffffff610aec16565b600160a060020a0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a350505600a165627a7a72305820e2941f9825cb34a197635989040e46546effeb1bc8338b986e6d99a1a1eed85c0029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x10E7 CODESIZE SUB DUP1 PUSH3 0x10E7 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 SWAP1 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 DUP1 DUP5 ADD MLOAD SWAP3 DUP5 ADD MLOAD SWAP2 DUP5 ADD DUP1 MLOAD SWAP1 SWAP5 SWAP4 SWAP1 SWAP4 ADD SWAP3 PUSH3 0x53 SWAP2 PUSH1 0x2 SWAP2 SWAP1 DUP7 ADD SWAP1 PUSH3 0x262 JUMP JUMPDEST POP DUP2 MLOAD PUSH3 0x69 SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x262 JUMP JUMPDEST POP PUSH1 0x4 DUP1 SLOAD CALLER PUSH2 0x100 SWAP1 DUP2 MUL PUSH2 0x100 PUSH1 0xA8 PUSH1 0x2 EXP SUB NOT PUSH1 0xFF DUP7 AND PUSH1 0xFF NOT SWAP1 SWAP5 AND DUP5 OR AND OR SWAP3 DUP4 SWAP1 SSTORE PUSH3 0xBC SWAP3 DIV PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 PUSH4 0x6553F100 PUSH1 0xA SWAP2 SWAP1 SWAP2 EXP MUL PUSH5 0x100000000 PUSH3 0xC5 DUP2 MUL DIV JUMP JUMPDEST POP POP POP PUSH3 0x307 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND ISZERO ISZERO PUSH3 0x13D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5A524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH3 0x15A SWAP1 DUP3 PUSH5 0x100000000 PUSH3 0xAEC PUSH3 0x1E6 DUP3 MUL OR DIV JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH3 0x190 SWAP1 DUP3 PUSH5 0x100000000 PUSH3 0xAEC PUSH3 0x1E6 DUP3 MUL OR DIV JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH3 0x25B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x2A5 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x2D5 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x2D5 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x2D5 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x2B8 JUMP JUMPDEST POP PUSH3 0x2E3 SWAP3 SWAP2 POP PUSH3 0x2E7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH3 0x304 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x2E3 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x2EE JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xDD0 DUP1 PUSH3 0x317 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE5 JUMPI PUSH4 0xFFFFFFFF PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD DIV AND PUSH4 0x6FDDE03 DUP2 EQ PUSH2 0xEA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x228 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2DC JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x2F1 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x32D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x378 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFF PUSH2 0x399 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x139 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x121 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x166 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x180 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x198 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0x42C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C1 PUSH2 0x442 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x198 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD DUP2 AND SWAP1 PUSH1 0x24 CALLDATALOAD AND PUSH1 0x44 CALLDATALOAD PUSH2 0x448 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x209 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x212 PUSH2 0x49F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x234 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x198 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0x4A8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x258 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x264 PUSH1 0x4 CALLDATALOAD PUSH2 0x4E4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x272 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x4F1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x293 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x264 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0x50C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C0 PUSH2 0x51A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFF PUSH2 0x52E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x264 PUSH1 0x4 CALLDATALOAD PUSH2 0x58F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x315 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x198 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0x600 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x339 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x198 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0x63C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD DUP2 AND SWAP1 PUSH1 0x24 CALLDATALOAD AND PUSH2 0x649 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x384 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x264 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x674 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP8 AND ISZERO MUL ADD SWAP1 SWAP5 AND DUP6 SWAP1 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x422 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3F7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x422 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x405 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x439 CALLER DUP5 DUP5 PUSH2 0x759 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x455 DUP5 DUP5 DUP5 PUSH2 0x8C6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x495 SWAP2 DUP7 SWAP2 PUSH2 0x490 SWAP1 DUP7 PUSH4 0xFFFFFFFF PUSH2 0xA8A AND JUMP JUMPDEST PUSH2 0x759 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x439 SWAP2 DUP6 SWAP1 PUSH2 0x490 SWAP1 DUP7 PUSH4 0xFFFFFFFF PUSH2 0xAEC AND JUMP JUMPDEST PUSH2 0x4EE CALLER DUP3 PUSH2 0xB50 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x516 DUP3 DUP3 PUSH2 0xC6A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x422 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3F7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x422 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x5F6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656E646572206973206E6F7420746865206F776E6572000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x4EE CALLER DUP3 PUSH2 0xCAF JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x439 SWAP2 DUP6 SWAP1 PUSH2 0x490 SWAP1 DUP7 PUSH4 0xFFFFFFFF PUSH2 0xA8A AND JUMP JUMPDEST PUSH1 0x0 PUSH2 0x439 CALLER DUP5 DUP5 PUSH2 0x8C6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x6DB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656E646572206973206E6F7420746865206F776E6572000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND ISZERO ISZERO PUSH2 0x6F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 NOT AND PUSH2 0x100 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 DUP2 AND DUP3 DUP2 MUL SWAP4 SWAP1 SWAP4 OR SWAP4 DUP5 SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP3 SWAP4 SWAP2 SWAP1 SWAP2 DIV AND SWAP1 PUSH32 0x5C486528EC3E3F0EA91181CFF8116F02BFA350E03B8B6F12E00765ADBB5AF85C SWAP1 PUSH1 0x0 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND ISZERO ISZERO PUSH2 0x7DE JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x5A524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x84 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND ISZERO ISZERO PUSH2 0x864 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5A524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x84 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND ISZERO ISZERO PUSH2 0x94C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5A524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x84 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND ISZERO ISZERO PUSH2 0x9D2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5A524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x84 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x9FB SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xA8A AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0xA30 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xAEC AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP4 GT ISZERO PUSH2 0xAE5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xB49 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND ISZERO ISZERO PUSH2 0xBD6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5A524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x84 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH2 0xBE9 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xA8A AND JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xC15 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xA8A AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP2 SWAP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xC74 DUP3 DUP3 PUSH2 0xB50 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x516 SWAP2 DUP5 SWAP2 PUSH2 0x490 SWAP1 DUP6 PUSH4 0xFFFFFFFF PUSH2 0xA8A AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND ISZERO ISZERO PUSH2 0xD0F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5A524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH2 0xD22 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xAEC AND JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xD4E SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xAEC AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xe2 SWAP5 0x1f SWAP9 0x25 0xcb CALLVALUE LOG1 SWAP8 PUSH4 0x5989040E 0x46 SLOAD PUSH15 0xFFEB1BC8338B986E6D99A1A1EED85C STOP 0x29 ",
							"sourceMap": "4286:8801:0:-;;;4772:251;8:9:-1;5:2;;;30:1;27;20:12;5:2;4772:251:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4860:12;;4772:251;;;;;;;4860:12;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;4882:16:0;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;4908:9:0;:20;;4946:10;4908:20;4938:18;;;-1:-1:-1;;;;;;4908:20:0;;;-1:-1:-1;;4908:20:0;;;;;4938:18;;;;;;4966:50;;4972:5;-1:-1:-1;;;;;4972:5:0;;4979:10;4992:2;:23;;;;4979:36;4966:5;;;;:50;:::i;:::-;4772:251;;;4286:8801;;10273:301;-1:-1:-1;;;;;10348:21:0;;;;10340:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10430:12;;:24;;10447:6;10430:16;;;;;;:24;:::i;:::-;10415:12;:39;-1:-1:-1;;;;;10485:18:0;;:9;:18;;;;;;;;;;;:30;;10508:6;10485:22;;;;;;:30;:::i;:::-;-1:-1:-1;;;;;10464:18:0;;:9;:18;;;;;;;;;;;:51;;;;10530:37;;;;;;;10464:18;;:9;;10530:37;;;;;;;;;;10273:301;;:::o;944:176::-;1002:7;1033:5;;;1056:6;;;;1048:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1112:1;944:176;-1:-1:-1;;;944:176:0:o;4286:8801::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4286:8801:0;;;-1:-1:-1;4286:8801:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6080604052600436106100e55763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100ea578063095ea7b31461017457806318160ddd146101ac57806323b872dd146101d3578063313ce567146101fd578063395093511461022857806342966c681461024c57806370a082311461026657806379cc6790146102875780638da5cb5b146102ab57806395d89b41146102dc578063a0712d68146102f1578063a457c2d714610309578063a9059cbb1461032d578063dd62ed3e14610351578063f2fde38b14610378575b600080fd5b3480156100f657600080fd5b506100ff610399565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610139578181015183820152602001610121565b50505050905090810190601f1680156101665780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561018057600080fd5b50610198600160a060020a036004351660243561042c565b604080519115158252519081900360200190f35b3480156101b857600080fd5b506101c1610442565b60408051918252519081900360200190f35b3480156101df57600080fd5b50610198600160a060020a0360043581169060243516604435610448565b34801561020957600080fd5b5061021261049f565b6040805160ff9092168252519081900360200190f35b34801561023457600080fd5b50610198600160a060020a03600435166024356104a8565b34801561025857600080fd5b506102646004356104e4565b005b34801561027257600080fd5b506101c1600160a060020a03600435166104f1565b34801561029357600080fd5b50610264600160a060020a036004351660243561050c565b3480156102b757600080fd5b506102c061051a565b60408051600160a060020a039092168252519081900360200190f35b3480156102e857600080fd5b506100ff61052e565b3480156102fd57600080fd5b5061026460043561058f565b34801561031557600080fd5b50610198600160a060020a0360043516602435610600565b34801561033957600080fd5b50610198600160a060020a036004351660243561063c565b34801561035d57600080fd5b506101c1600160a060020a0360043581169060243516610649565b34801561038457600080fd5b50610264600160a060020a0360043516610674565b60028054604080516020601f60001961010060018716150201909416859004938401819004810282018101909252828152606093909290918301828280156104225780601f106103f757610100808354040283529160200191610422565b820191906000526020600020905b81548152906001019060200180831161040557829003601f168201915b5050505050905090565b6000610439338484610759565b50600192915050565b60055490565b60006104558484846108c6565b600160a060020a038416600090815260016020908152604080832033808552925290912054610495918691610490908663ffffffff610a8a16565b610759565b5060019392505050565b60045460ff1690565b336000818152600160209081526040808320600160a060020a03871684529091528120549091610439918590610490908663ffffffff610aec16565b6104ee3382610b50565b50565b600160a060020a031660009081526020819052604090205490565b6105168282610c6a565b5050565b6004546101009004600160a060020a031681565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104225780601f106103f757610100808354040283529160200191610422565b6004546101009004600160a060020a031633146105f6576040805160e560020a62461bcd02815260206004820152601760248201527f53656e646572206973206e6f7420746865206f776e6572000000000000000000604482015290519081900360640190fd5b6104ee3382610caf565b336000818152600160209081526040808320600160a060020a03871684529091528120549091610439918590610490908663ffffffff610a8a16565b60006104393384846108c6565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b6004546101009004600160a060020a031633146106db576040805160e560020a62461bcd02815260206004820152601760248201527f53656e646572206973206e6f7420746865206f776e6572000000000000000000604482015290519081900360640190fd5b600160a060020a03811615156106f057600080fd5b6004805474ffffffffffffffffffffffffffffffffffffffff001916610100600160a060020a03848116828102939093179384905560405192939190910416907f5c486528ec3e3f0ea91181cff8116f02bfa350e03b8b6f12e00765adbb5af85c90600090a350565b600160a060020a03831615156107de576040805160e560020a62461bcd028152602060048201526024808201527f5a524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f7265737300000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b600160a060020a0382161515610864576040805160e560020a62461bcd02815260206004820152602260248201527f5a524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f7373000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b600160a060020a03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b600160a060020a038316151561094c576040805160e560020a62461bcd02815260206004820152602560248201527f5a524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f6472657373000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b600160a060020a03821615156109d2576040805160e560020a62461bcd02815260206004820152602360248201527f5a524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f6573730000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b600160a060020a0383166000908152602081905260409020546109fb908263ffffffff610a8a16565b600160a060020a038085166000908152602081905260408082209390935590841681522054610a30908263ffffffff610aec16565b600160a060020a038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008083831115610ae5576040805160e560020a62461bcd02815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b5050900390565b600082820183811015610b49576040805160e560020a62461bcd02815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b600160a060020a0382161515610bd6576040805160e560020a62461bcd02815260206004820152602160248201527f5a524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f7300000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b600554610be9908263ffffffff610a8a16565b600555600160a060020a038216600090815260208190526040902054610c15908263ffffffff610a8a16565b600160a060020a038316600081815260208181526040808320949094558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a35050565b610c748282610b50565b600160a060020a038216600090815260016020908152604080832033808552925290912054610516918491610490908563ffffffff610a8a16565b600160a060020a0382161515610d0f576040805160e560020a62461bcd02815260206004820152601f60248201527f5a524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b600554610d22908263ffffffff610aec16565b600555600160a060020a038216600090815260208190526040902054610d4e908263ffffffff610aec16565b600160a060020a0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a350505600a165627a7a72305820e2941f9825cb34a197635989040e46546effeb1bc8338b986e6d99a1a1eed85c0029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE5 JUMPI PUSH4 0xFFFFFFFF PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD DIV AND PUSH4 0x6FDDE03 DUP2 EQ PUSH2 0xEA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x228 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2DC JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x2F1 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x32D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x378 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFF PUSH2 0x399 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x139 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x121 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x166 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x180 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x198 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0x42C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C1 PUSH2 0x442 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x198 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD DUP2 AND SWAP1 PUSH1 0x24 CALLDATALOAD AND PUSH1 0x44 CALLDATALOAD PUSH2 0x448 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x209 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x212 PUSH2 0x49F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x234 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x198 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0x4A8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x258 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x264 PUSH1 0x4 CALLDATALOAD PUSH2 0x4E4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x272 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x4F1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x293 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x264 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0x50C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C0 PUSH2 0x51A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFF PUSH2 0x52E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x264 PUSH1 0x4 CALLDATALOAD PUSH2 0x58F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x315 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x198 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0x600 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x339 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x198 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0x63C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD DUP2 AND SWAP1 PUSH1 0x24 CALLDATALOAD AND PUSH2 0x649 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x384 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x264 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x674 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP8 AND ISZERO MUL ADD SWAP1 SWAP5 AND DUP6 SWAP1 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x422 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3F7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x422 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x405 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x439 CALLER DUP5 DUP5 PUSH2 0x759 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x455 DUP5 DUP5 DUP5 PUSH2 0x8C6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x495 SWAP2 DUP7 SWAP2 PUSH2 0x490 SWAP1 DUP7 PUSH4 0xFFFFFFFF PUSH2 0xA8A AND JUMP JUMPDEST PUSH2 0x759 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x439 SWAP2 DUP6 SWAP1 PUSH2 0x490 SWAP1 DUP7 PUSH4 0xFFFFFFFF PUSH2 0xAEC AND JUMP JUMPDEST PUSH2 0x4EE CALLER DUP3 PUSH2 0xB50 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x516 DUP3 DUP3 PUSH2 0xC6A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x422 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3F7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x422 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x5F6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656E646572206973206E6F7420746865206F776E6572000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x4EE CALLER DUP3 PUSH2 0xCAF JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x439 SWAP2 DUP6 SWAP1 PUSH2 0x490 SWAP1 DUP7 PUSH4 0xFFFFFFFF PUSH2 0xA8A AND JUMP JUMPDEST PUSH1 0x0 PUSH2 0x439 CALLER DUP5 DUP5 PUSH2 0x8C6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x6DB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656E646572206973206E6F7420746865206F776E6572000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND ISZERO ISZERO PUSH2 0x6F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 NOT AND PUSH2 0x100 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 DUP2 AND DUP3 DUP2 MUL SWAP4 SWAP1 SWAP4 OR SWAP4 DUP5 SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP3 SWAP4 SWAP2 SWAP1 SWAP2 DIV AND SWAP1 PUSH32 0x5C486528EC3E3F0EA91181CFF8116F02BFA350E03B8B6F12E00765ADBB5AF85C SWAP1 PUSH1 0x0 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND ISZERO ISZERO PUSH2 0x7DE JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x5A524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x84 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND ISZERO ISZERO PUSH2 0x864 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5A524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x84 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND ISZERO ISZERO PUSH2 0x94C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5A524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x84 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND ISZERO ISZERO PUSH2 0x9D2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5A524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x84 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x9FB SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xA8A AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0xA30 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xAEC AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP4 GT ISZERO PUSH2 0xAE5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xB49 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND ISZERO ISZERO PUSH2 0xBD6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5A524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x84 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH2 0xBE9 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xA8A AND JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xC15 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xA8A AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP2 SWAP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xC74 DUP3 DUP3 PUSH2 0xB50 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x516 SWAP2 DUP5 SWAP2 PUSH2 0x490 SWAP1 DUP6 PUSH4 0xFFFFFFFF PUSH2 0xA8A AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND ISZERO ISZERO PUSH2 0xD0F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5A524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH2 0xD22 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xAEC AND JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xD4E SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xAEC AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xe2 SWAP5 0x1f SWAP9 0x25 0xcb CALLVALUE LOG1 SWAP8 PUSH4 0x5989040E 0x46 SLOAD PUSH15 0xFFEB1BC8338B986E6D99A1A1EED85C STOP 0x29 ",
							"sourceMap": "4286:8801:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5088:81;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5088:81:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;5088:81:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7037:145;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;7037:145:0;-1:-1:-1;;;;;7037:145:0;;;;;;;;;;;;;;;;;;;;;;;;;6098:89;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6098:89:0;;;;;;;;;;;;;;;;;;;;7557:252;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;7557:252:0;-1:-1:-1;;;;;7557:252:0;;;;;;;;;;;;5922:81;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5922:81:0;;;;;;;;;;;;;;;;;;;;;;;8204:203;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;8204:203:0;-1:-1:-1;;;;;8204:203:0;;;;;;;11436:79;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;11436:79:0;;;;;;;6245:108;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;6245:108:0;-1:-1:-1;;;;;6245:108:0;;;;;11572:101;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;11572:101:0;-1:-1:-1;;;;;11572:101:0;;;;;;;4563:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4563:20:0;;;;;;;;-1:-1:-1;;;;;4563:20:0;;;;;;;;;;;;;;5282:85;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5282:85:0;;;;12660:78;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;12660:78:0;;;;;8894:213;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;8894:213:0;-1:-1:-1;;;;;8894:213:0;;;;;;;6556:153;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;6556:153:0;-1:-1:-1;;;;;6556:153:0;;;;;;;6767:132;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;6767:132:0;-1:-1:-1;;;;;6767:132:0;;;;;;;;;;12906:179;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;12906:179:0;-1:-1:-1;;;;;12906:179:0;;;;;5088:81;5157:5;5150:12;;;;;;;-1:-1:-1;;5150:12:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5125:6;;5150:12;;5157:5;;5150:12;;5157:5;5150:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5088:81;:::o;7037:145::-;7102:4;7118:36;7127:10;7139:7;7148:5;7118:8;:36::i;:::-;-1:-1:-1;7171:4:0;7037:145;;;;:::o;6098:89::-;6168:12;;6098:89;:::o;7557:252::-;7646:4;7662:36;7672:6;7680:9;7691:6;7662:9;:36::i;:::-;-1:-1:-1;;;;;7737:19:0;;;;;;:11;:19;;;;;;;;7725:10;7737:31;;;;;;;;;7708:73;;7717:6;;7737:43;;7773:6;7737:43;:35;:43;:::i;:::-;7708:8;:73::i;:::-;-1:-1:-1;7798:4:0;7557:252;;;;;:::o;5922:81::-;5987:9;;;;5922:81;:::o;8204:203::-;8309:10;8284:4;8330:23;;;:11;:23;;;;;;;;-1:-1:-1;;;;;8330:32:0;;;;;;;;;;8284:4;;8300:79;;8321:7;;8330:48;;8367:10;8330:48;:36;:48;:::i;11436:79::-;11483:25;11489:10;11501:6;11483:5;:25::i;:::-;11436:79;:::o;6245:108::-;-1:-1:-1;;;;;6328:18:0;6302:7;6328:18;;;;;;;;;;;;6245:108::o;11572:101::-;11640:26;11650:7;11659:6;11640:9;:26::i;:::-;11572:101;;:::o;4563:20::-;;;;;;-1:-1:-1;;;;;4563:20:0;;:::o;5282:85::-;5353:7;5346:14;;;;;;;;-1:-1:-1;;5346:14:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5321:6;;5346:14;;5353:7;;5346:14;;5353:7;5346:14;;;;;;;;;;;;;;;;;;;;;;;;12660:78;4715:5;;;;;-1:-1:-1;;;;;4715:5:0;4701:10;:19;4693:55;;;;;-1:-1:-1;;;;;4693:55:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;12710:24;12716:10;12728:5;12710;:24::i;8894:213::-;9004:10;8979:4;9025:23;;;:11;:23;;;;;;;;-1:-1:-1;;;;;9025:32:0;;;;;;;;;;8979:4;;8995:84;;9016:7;;9025:53;;9062:15;9025:53;:36;:53;:::i;6556:153::-;6625:4;6641:40;6651:10;6663:9;6674:6;6641:9;:40::i;6767:132::-;-1:-1:-1;;;;;6865:18:0;;;6839:7;6865:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;6767:132::o;12906:179::-;4715:5;;;;;-1:-1:-1;;;;;4715:5:0;4701:10;:19;4693:55;;;;;-1:-1:-1;;;;;4693:55:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;12984:22:0;;;;12976:31;;;;;;13015:5;:16;;-1:-1:-1;;13015:16:0;;-1:-1:-1;;;;;13015:16:0;;;;;;;;;;;;;;13044:34;;13015:16;;13062:5;;;;;;13044:34;;-1:-1:-1;;13044:34:0;12906:179;:::o;10999:329::-;-1:-1:-1;;;;;11091:19:0;;;;11083:68;;;;;-1:-1:-1;;;;;11083:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11169:21:0;;;;11161:68;;;;;-1:-1:-1;;;;;11161:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11240:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:35;;;11290:31;;;;;;;;;;;;;;;;;10999:329;;;:::o;9581:422::-;-1:-1:-1;;;;;9678:20:0;;;;9670:70;;;;;-1:-1:-1;;;;;9670:70:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9758:23:0;;;;9750:71;;;;;-1:-1:-1;;;;;9750:71:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9852:17:0;;:9;:17;;;;;;;;;;;:29;;9874:6;9852:29;:21;:29;:::i;:::-;-1:-1:-1;;;;;9832:17:0;;;:9;:17;;;;;;;;;;;:49;;;;9914:20;;;;;;;:32;;9939:6;9914:32;:24;:32;:::i;:::-;-1:-1:-1;;;;;9891:20:0;;;:9;:20;;;;;;;;;;;;:55;;;;9961:35;;;;;;;9891:20;;9961:35;;;;;;;;;;;;;9581:422;;;:::o;1384:179::-;1442:7;;1469:6;;;;1461:49;;;;;-1:-1:-1;;;;;1461:49:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1532:5:0;;;1384:179::o;944:176::-;1002:7;1033:5;;;1056:6;;;;1048:46;;;;;-1:-1:-1;;;;;1048:46:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;1112:1;944:176;-1:-1:-1;;;944:176:0:o;11992:300::-;-1:-1:-1;;;;;12066:21:0;;;;12058:67;;;;;-1:-1:-1;;;;;12058:67:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12151:12;;:23;;12168:5;12151:23;:16;:23;:::i;:::-;12136:12;:38;-1:-1:-1;;;;;12205:18:0;;:9;:18;;;;;;;;;;;:29;;12228:5;12205:29;:22;:29;:::i;:::-;-1:-1:-1;;;;;12184:18:0;;:9;:18;;;;;;;;;;;:50;;;;12249:36;;;;;;;12184:9;;12249:36;;;;;;;;;;;11992:300;;:::o;12469:185::-;12540:22;12546:7;12555:6;12540:5;:22::i;:::-;-1:-1:-1;;;;;12602:20:0;;;;;;:11;:20;;;;;;;;12590:10;12602:32;;;;;;;;;12572:75;;12581:7;;12602:44;;12639:6;12602:44;:36;:44;:::i;10273:301::-;-1:-1:-1;;;;;10348:21:0;;;;10340:65;;;;;-1:-1:-1;;;;;10340:65:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;10430:12;;:24;;10447:6;10430:24;:16;:24;:::i;:::-;10415:12;:39;-1:-1:-1;;;;;10485:18:0;;:9;:18;;;;;;;;;;;:30;;10508:6;10485:30;:22;:30;:::i;:::-;-1:-1:-1;;;;;10464:18:0;;:9;:18;;;;;;;;;;;:51;;;;10530:37;;;;;;;10464:18;;:9;;10530:37;;;;;;;;;;10273:301;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "707200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "1016",
								"approve(address,uint256)": "22592",
								"balanceOf(address)": "763",
								"burn(uint256)": "infinite",
								"burnFrom(address,uint256)": "infinite",
								"decimals()": "487",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"mint(uint256)": "infinite",
								"name()": "infinite",
								"owner()": "746",
								"symbol()": "infinite",
								"totalSupply()": "428",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "22824"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_burnFrom(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 4286,
									"end": 13087,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "MSTORE"
								},
								{
									"begin": 4772,
									"end": 5023,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 4772,
									"end": 5023,
									"name": "POP"
								},
								{
									"begin": 4772,
									"end": 5023,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 4772,
									"end": 5023,
									"name": "MLOAD"
								},
								{
									"begin": 4772,
									"end": 5023,
									"name": "PUSHSIZE"
								},
								{
									"begin": 4772,
									"end": 5023,
									"name": "CODESIZE"
								},
								{
									"begin": 4772,
									"end": 5023,
									"name": "SUB"
								},
								{
									"begin": 4772,
									"end": 5023,
									"name": "DUP1"
								},
								{
									"begin": 4772,
									"end": 5023,
									"name": "PUSHSIZE"
								},
								{
									"begin": 4772,
									"end": 5023,
									"name": "DUP4"
								},
								{
									"begin": 4772,
									"end": 5023,
									"name": "CODECOPY"
								},
								{
									"begin": 4772,
									"end": 5023,
									"name": "DUP2"
								},
								{
									"begin": 4772,
									"end": 5023,
									"name": "ADD"
								},
								{
									"begin": 4772,
									"end": 5023,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 4772,
									"end": 5023,
									"name": "SWAP1"
								},
								{
									"begin": 4772,
									"end": 5023,
									"name": "DUP2"
								},
								{
									"begin": 4772,
									"end": 5023,
									"name": "MSTORE"
								},
								{
									"begin": 4772,
									"end": 5023,
									"name": "DUP2"
								},
								{
									"begin": 4772,
									"end": 5023,
									"name": "MLOAD"
								},
								{
									"begin": 4772,
									"end": 5023,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 4772,
									"end": 5023,
									"name": "DUP1"
								},
								{
									"begin": 4772,
									"end": 5023,
									"name": "DUP5"
								},
								{
									"begin": 4772,
									"end": 5023,
									"name": "ADD"
								},
								{
									"begin": 4772,
									"end": 5023,
									"name": "MLOAD"
								},
								{
									"begin": 4772,
									"end": 5023,
									"name": "SWAP3"
								},
								{
									"begin": 4772,
									"end": 5023,
									"name": "DUP5"
								},
								{
									"begin": 4772,
									"end": 5023,
									"name": "ADD"
								},
								{
									"begin": 4772,
									"end": 5023,
									"name": "MLOAD"
								},
								{
									"begin": 4772,
									"end": 5023,
									"name": "SWAP2"
								},
								{
									"begin": 4772,
									"end": 5023,
									"name": "DUP5"
								},
								{
									"begin": 4772,
									"end": 5023,
									"name": "ADD"
								},
								{
									"begin": 4860,
									"end": 4872,
									"name": "DUP1"
								},
								{
									"begin": 4860,
									"end": 4872,
									"name": "MLOAD"
								},
								{
									"begin": 4772,
									"end": 5023,
									"name": "SWAP1"
								},
								{
									"begin": 4772,
									"end": 5023,
									"name": "SWAP5"
								},
								{
									"begin": 4772,
									"end": 5023,
									"name": "SWAP4"
								},
								{
									"begin": 4772,
									"end": 5023,
									"name": "SWAP1"
								},
								{
									"begin": 4772,
									"end": 5023,
									"name": "SWAP4"
								},
								{
									"begin": 4772,
									"end": 5023,
									"name": "ADD"
								},
								{
									"begin": 4772,
									"end": 5023,
									"name": "SWAP3"
								},
								{
									"begin": 4860,
									"end": 4872,
									"name": "PUSH [tag]",
									"value": "4"
								},
								{
									"begin": 4860,
									"end": 4872,
									"name": "SWAP2"
								},
								{
									"begin": 4860,
									"end": 4865,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 4860,
									"end": 4865,
									"name": "SWAP2"
								},
								{
									"begin": 4860,
									"end": 4872,
									"name": "SWAP1"
								},
								{
									"begin": 4860,
									"end": 4872,
									"name": "DUP7"
								},
								{
									"begin": 4860,
									"end": 4872,
									"name": "ADD"
								},
								{
									"begin": 4860,
									"end": 4872,
									"name": "SWAP1"
								},
								{
									"begin": 4860,
									"end": 4872,
									"name": "PUSH [tag]",
									"value": "5"
								},
								{
									"begin": 4860,
									"end": 4872,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 4860,
									"end": 4872,
									"name": "tag",
									"value": "4"
								},
								{
									"begin": 4860,
									"end": 4872,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 4882,
									"end": 4898,
									"name": "DUP2"
								},
								{
									"begin": 4882,
									"end": 4898,
									"name": "MLOAD"
								},
								{
									"begin": 4882,
									"end": 4898,
									"name": "PUSH [tag]",
									"value": "6"
								},
								{
									"begin": 4882,
									"end": 4898,
									"name": "SWAP1"
								},
								{
									"begin": 4882,
									"end": 4889,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 4882,
									"end": 4889,
									"name": "SWAP1"
								},
								{
									"begin": 4882,
									"end": 4898,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 4882,
									"end": 4898,
									"name": "DUP6"
								},
								{
									"begin": 4882,
									"end": 4898,
									"name": "ADD"
								},
								{
									"begin": 4882,
									"end": 4898,
									"name": "SWAP1"
								},
								{
									"begin": 4882,
									"end": 4898,
									"name": "PUSH [tag]",
									"value": "5"
								},
								{
									"begin": 4882,
									"end": 4898,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 4882,
									"end": 4898,
									"name": "tag",
									"value": "6"
								},
								{
									"begin": 4882,
									"end": 4898,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 4908,
									"end": 4917,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 4908,
									"end": 4928,
									"name": "DUP1"
								},
								{
									"begin": 4908,
									"end": 4928,
									"name": "SLOAD"
								},
								{
									"begin": 4946,
									"end": 4956,
									"name": "CALLER"
								},
								{
									"begin": 4908,
									"end": 4928,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 4938,
									"end": 4956,
									"name": "SWAP1"
								},
								{
									"begin": 4938,
									"end": 4956,
									"name": "DUP2"
								},
								{
									"begin": 4938,
									"end": 4956,
									"name": "MUL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "EXP"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT"
								},
								{
									"begin": 4908,
									"end": 4928,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 4908,
									"end": 4928,
									"name": "DUP7"
								},
								{
									"begin": 4908,
									"end": 4928,
									"name": "AND"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT"
								},
								{
									"begin": 4908,
									"end": 4928,
									"name": "SWAP1"
								},
								{
									"begin": 4908,
									"end": 4928,
									"name": "SWAP5"
								},
								{
									"begin": 4908,
									"end": 4928,
									"name": "AND"
								},
								{
									"begin": 4908,
									"end": 4928,
									"name": "DUP5"
								},
								{
									"begin": 4908,
									"end": 4928,
									"name": "OR"
								},
								{
									"begin": 4938,
									"end": 4956,
									"name": "AND"
								},
								{
									"begin": 4938,
									"end": 4956,
									"name": "OR"
								},
								{
									"begin": 4938,
									"end": 4956,
									"name": "SWAP3"
								},
								{
									"begin": 4938,
									"end": 4956,
									"name": "DUP4"
								},
								{
									"begin": 4938,
									"end": 4956,
									"name": "SWAP1"
								},
								{
									"begin": 4938,
									"end": 4956,
									"name": "SSTORE"
								},
								{
									"begin": 4966,
									"end": 5016,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": 4966,
									"end": 5016,
									"name": "SWAP3"
								},
								{
									"begin": 4972,
									"end": 4977,
									"name": "DIV"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "EXP"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": 4972,
									"end": 4977,
									"name": "AND"
								},
								{
									"begin": 4972,
									"end": 4977,
									"name": "SWAP1"
								},
								{
									"begin": 4979,
									"end": 4989,
									"name": "PUSH",
									"value": "6553F100"
								},
								{
									"begin": 4992,
									"end": 4994,
									"name": "PUSH",
									"value": "A"
								},
								{
									"begin": 4992,
									"end": 5015,
									"name": "SWAP2"
								},
								{
									"begin": 4992,
									"end": 5015,
									"name": "SWAP1"
								},
								{
									"begin": 4992,
									"end": 5015,
									"name": "SWAP2"
								},
								{
									"begin": 4992,
									"end": 5015,
									"name": "EXP"
								},
								{
									"begin": 4979,
									"end": 5015,
									"name": "MUL"
								},
								{
									"begin": 4966,
									"end": 4971,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 4966,
									"end": 4971,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 4966,
									"end": 4971,
									"name": "DUP2"
								},
								{
									"begin": 4966,
									"end": 4971,
									"name": "MUL"
								},
								{
									"begin": 4966,
									"end": 5016,
									"name": "DIV"
								},
								{
									"begin": 4966,
									"end": 5016,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 4966,
									"end": 5016,
									"name": "tag",
									"value": "7"
								},
								{
									"begin": 4966,
									"end": 5016,
									"name": "JUMPDEST"
								},
								{
									"begin": 4772,
									"end": 5023,
									"name": "POP"
								},
								{
									"begin": 4772,
									"end": 5023,
									"name": "POP"
								},
								{
									"begin": 4772,
									"end": 5023,
									"name": "POP"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "PUSH [tag]",
									"value": "9"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "JUMP"
								},
								{
									"begin": 10273,
									"end": 10574,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 10273,
									"end": 10574,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "EXP"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": 10348,
									"end": 10369,
									"name": "DUP3"
								},
								{
									"begin": 10348,
									"end": 10369,
									"name": "AND"
								},
								{
									"begin": 10348,
									"end": 10369,
									"name": "ISZERO"
								},
								{
									"begin": 10348,
									"end": 10369,
									"name": "ISZERO"
								},
								{
									"begin": 10340,
									"end": 10405,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 10340,
									"end": 10405,
									"name": "JUMPI"
								},
								{
									"begin": 10340,
									"end": 10405,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 10340,
									"end": 10405,
									"name": "DUP1"
								},
								{
									"begin": 10340,
									"end": 10405,
									"name": "MLOAD"
								},
								{
									"begin": 10340,
									"end": 10405,
									"name": "PUSH",
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 10340,
									"end": 10405,
									"name": "DUP2"
								},
								{
									"begin": 10340,
									"end": 10405,
									"name": "MSTORE"
								},
								{
									"begin": 10340,
									"end": 10405,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 10340,
									"end": 10405,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 10340,
									"end": 10405,
									"name": "DUP3"
								},
								{
									"begin": 10340,
									"end": 10405,
									"name": "ADD"
								},
								{
									"begin": 10340,
									"end": 10405,
									"name": "MSTORE"
								},
								{
									"begin": 10340,
									"end": 10405,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 10340,
									"end": 10405,
									"name": "PUSH",
									"value": "24"
								},
								{
									"begin": 10340,
									"end": 10405,
									"name": "DUP3"
								},
								{
									"begin": 10340,
									"end": 10405,
									"name": "ADD"
								},
								{
									"begin": 10340,
									"end": 10405,
									"name": "MSTORE"
								},
								{
									"begin": 10340,
									"end": 10405,
									"name": "PUSH",
									"value": "5A524332303A206D696E7420746F20746865207A65726F206164647265737300"
								},
								{
									"begin": 10340,
									"end": 10405,
									"name": "PUSH",
									"value": "44"
								},
								{
									"begin": 10340,
									"end": 10405,
									"name": "DUP3"
								},
								{
									"begin": 10340,
									"end": 10405,
									"name": "ADD"
								},
								{
									"begin": 10340,
									"end": 10405,
									"name": "MSTORE"
								},
								{
									"begin": 10340,
									"end": 10405,
									"name": "SWAP1"
								},
								{
									"begin": 10340,
									"end": 10405,
									"name": "MLOAD"
								},
								{
									"begin": 10340,
									"end": 10405,
									"name": "SWAP1"
								},
								{
									"begin": 10340,
									"end": 10405,
									"name": "DUP2"
								},
								{
									"begin": 10340,
									"end": 10405,
									"name": "SWAP1"
								},
								{
									"begin": 10340,
									"end": 10405,
									"name": "SUB"
								},
								{
									"begin": 10340,
									"end": 10405,
									"name": "PUSH",
									"value": "64"
								},
								{
									"begin": 10340,
									"end": 10405,
									"name": "ADD"
								},
								{
									"begin": 10340,
									"end": 10405,
									"name": "SWAP1"
								},
								{
									"begin": 10340,
									"end": 10405,
									"name": "REVERT"
								},
								{
									"begin": 10340,
									"end": 10405,
									"name": "tag",
									"value": "11"
								},
								{
									"begin": 10340,
									"end": 10405,
									"name": "JUMPDEST"
								},
								{
									"begin": 10430,
									"end": 10442,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 10430,
									"end": 10442,
									"name": "SLOAD"
								},
								{
									"begin": 10430,
									"end": 10454,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 10430,
									"end": 10454,
									"name": "SWAP1"
								},
								{
									"begin": 10447,
									"end": 10453,
									"name": "DUP3"
								},
								{
									"begin": 10430,
									"end": 10446,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 10430,
									"end": 10446,
									"name": "PUSH [tag]",
									"value": "18446744073709551708"
								},
								{
									"begin": 10430,
									"end": 10446,
									"name": "PUSH [tag]",
									"value": "13"
								},
								{
									"begin": 10430,
									"end": 10446,
									"name": "DUP3"
								},
								{
									"begin": 10430,
									"end": 10446,
									"name": "MUL"
								},
								{
									"begin": 10430,
									"end": 10446,
									"name": "OR"
								},
								{
									"begin": 10430,
									"end": 10454,
									"name": "DIV"
								},
								{
									"begin": 10430,
									"end": 10454,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 10430,
									"end": 10454,
									"name": "tag",
									"value": "12"
								},
								{
									"begin": 10430,
									"end": 10454,
									"name": "JUMPDEST"
								},
								{
									"begin": 10415,
									"end": 10427,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 10415,
									"end": 10454,
									"name": "SSTORE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "EXP"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": 10485,
									"end": 10503,
									"name": "DUP3"
								},
								{
									"begin": 10485,
									"end": 10503,
									"name": "AND"
								},
								{
									"begin": 10485,
									"end": 10494,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 10485,
									"end": 10503,
									"name": "SWAP1"
								},
								{
									"begin": 10485,
									"end": 10503,
									"name": "DUP2"
								},
								{
									"begin": 10485,
									"end": 10503,
									"name": "MSTORE"
								},
								{
									"begin": 10485,
									"end": 10503,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 10485,
									"end": 10503,
									"name": "DUP2"
								},
								{
									"begin": 10485,
									"end": 10503,
									"name": "SWAP1"
								},
								{
									"begin": 10485,
									"end": 10503,
									"name": "MSTORE"
								},
								{
									"begin": 10485,
									"end": 10503,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 10485,
									"end": 10503,
									"name": "SWAP1"
								},
								{
									"begin": 10485,
									"end": 10503,
									"name": "KECCAK256"
								},
								{
									"begin": 10485,
									"end": 10503,
									"name": "SLOAD"
								},
								{
									"begin": 10485,
									"end": 10515,
									"name": "PUSH [tag]",
									"value": "14"
								},
								{
									"begin": 10485,
									"end": 10515,
									"name": "SWAP1"
								},
								{
									"begin": 10508,
									"end": 10514,
									"name": "DUP3"
								},
								{
									"begin": 10485,
									"end": 10507,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 10485,
									"end": 10507,
									"name": "PUSH [tag]",
									"value": "18446744073709551708"
								},
								{
									"begin": 10485,
									"end": 10507,
									"name": "PUSH [tag]",
									"value": "13"
								},
								{
									"begin": 10485,
									"end": 10507,
									"name": "DUP3"
								},
								{
									"begin": 10485,
									"end": 10507,
									"name": "MUL"
								},
								{
									"begin": 10485,
									"end": 10507,
									"name": "OR"
								},
								{
									"begin": 10485,
									"end": 10515,
									"name": "DIV"
								},
								{
									"begin": 10485,
									"end": 10515,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 10485,
									"end": 10515,
									"name": "tag",
									"value": "14"
								},
								{
									"begin": 10485,
									"end": 10515,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "EXP"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": 10464,
									"end": 10482,
									"name": "DUP4"
								},
								{
									"begin": 10464,
									"end": 10482,
									"name": "AND"
								},
								{
									"begin": 10464,
									"end": 10473,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 10464,
									"end": 10482,
									"name": "DUP2"
								},
								{
									"begin": 10464,
									"end": 10482,
									"name": "DUP2"
								},
								{
									"begin": 10464,
									"end": 10482,
									"name": "MSTORE"
								},
								{
									"begin": 10464,
									"end": 10482,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 10464,
									"end": 10482,
									"name": "DUP2"
								},
								{
									"begin": 10464,
									"end": 10482,
									"name": "DUP2"
								},
								{
									"begin": 10464,
									"end": 10482,
									"name": "MSTORE"
								},
								{
									"begin": 10464,
									"end": 10482,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 10464,
									"end": 10482,
									"name": "DUP1"
								},
								{
									"begin": 10464,
									"end": 10482,
									"name": "DUP4"
								},
								{
									"begin": 10464,
									"end": 10482,
									"name": "KECCAK256"
								},
								{
									"begin": 10464,
									"end": 10515,
									"name": "SWAP5"
								},
								{
									"begin": 10464,
									"end": 10515,
									"name": "SWAP1"
								},
								{
									"begin": 10464,
									"end": 10515,
									"name": "SWAP5"
								},
								{
									"begin": 10464,
									"end": 10515,
									"name": "SSTORE"
								},
								{
									"begin": 10530,
									"end": 10567,
									"name": "DUP4"
								},
								{
									"begin": 10530,
									"end": 10567,
									"name": "MLOAD"
								},
								{
									"begin": 10530,
									"end": 10567,
									"name": "DUP6"
								},
								{
									"begin": 10530,
									"end": 10567,
									"name": "DUP2"
								},
								{
									"begin": 10530,
									"end": 10567,
									"name": "MSTORE"
								},
								{
									"begin": 10530,
									"end": 10567,
									"name": "SWAP4"
								},
								{
									"begin": 10530,
									"end": 10567,
									"name": "MLOAD"
								},
								{
									"begin": 10464,
									"end": 10482,
									"name": "SWAP3"
								},
								{
									"begin": 10464,
									"end": 10482,
									"name": "SWAP4"
								},
								{
									"begin": 10464,
									"end": 10473,
									"name": "SWAP2"
								},
								{
									"begin": 10464,
									"end": 10473,
									"name": "SWAP3"
								},
								{
									"begin": 10530,
									"end": 10567,
									"name": "PUSH",
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 10530,
									"end": 10567,
									"name": "SWAP3"
								},
								{
									"begin": 10530,
									"end": 10567,
									"name": "DUP2"
								},
								{
									"begin": 10530,
									"end": 10567,
									"name": "SWAP1"
								},
								{
									"begin": 10530,
									"end": 10567,
									"name": "SUB"
								},
								{
									"begin": 10530,
									"end": 10567,
									"name": "SWAP1"
								},
								{
									"begin": 10530,
									"end": 10567,
									"name": "SWAP2"
								},
								{
									"begin": 10530,
									"end": 10567,
									"name": "ADD"
								},
								{
									"begin": 10530,
									"end": 10567,
									"name": "SWAP1"
								},
								{
									"begin": 10530,
									"end": 10567,
									"name": "LOG3"
								},
								{
									"begin": 10273,
									"end": 10574,
									"name": "POP"
								},
								{
									"begin": 10273,
									"end": 10574,
									"name": "POP"
								},
								{
									"begin": 10273,
									"end": 10574,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 944,
									"end": 1120,
									"name": "tag",
									"value": "13"
								},
								{
									"begin": 944,
									"end": 1120,
									"name": "JUMPDEST"
								},
								{
									"begin": 1002,
									"end": 1009,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1033,
									"end": 1038,
									"name": "DUP3"
								},
								{
									"begin": 1033,
									"end": 1038,
									"name": "DUP3"
								},
								{
									"begin": 1033,
									"end": 1038,
									"name": "ADD"
								},
								{
									"begin": 1056,
									"end": 1062,
									"name": "DUP4"
								},
								{
									"begin": 1056,
									"end": 1062,
									"name": "DUP2"
								},
								{
									"begin": 1056,
									"end": 1062,
									"name": "LT"
								},
								{
									"begin": 1056,
									"end": 1062,
									"name": "ISZERO"
								},
								{
									"begin": 1048,
									"end": 1094,
									"name": "PUSH [tag]",
									"value": "16"
								},
								{
									"begin": 1048,
									"end": 1094,
									"name": "JUMPI"
								},
								{
									"begin": 1048,
									"end": 1094,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1048,
									"end": 1094,
									"name": "DUP1"
								},
								{
									"begin": 1048,
									"end": 1094,
									"name": "MLOAD"
								},
								{
									"begin": 1048,
									"end": 1094,
									"name": "PUSH",
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1048,
									"end": 1094,
									"name": "DUP2"
								},
								{
									"begin": 1048,
									"end": 1094,
									"name": "MSTORE"
								},
								{
									"begin": 1048,
									"end": 1094,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1048,
									"end": 1094,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 1048,
									"end": 1094,
									"name": "DUP3"
								},
								{
									"begin": 1048,
									"end": 1094,
									"name": "ADD"
								},
								{
									"begin": 1048,
									"end": 1094,
									"name": "MSTORE"
								},
								{
									"begin": 1048,
									"end": 1094,
									"name": "PUSH",
									"value": "1B"
								},
								{
									"begin": 1048,
									"end": 1094,
									"name": "PUSH",
									"value": "24"
								},
								{
									"begin": 1048,
									"end": 1094,
									"name": "DUP3"
								},
								{
									"begin": 1048,
									"end": 1094,
									"name": "ADD"
								},
								{
									"begin": 1048,
									"end": 1094,
									"name": "MSTORE"
								},
								{
									"begin": 1048,
									"end": 1094,
									"name": "PUSH",
									"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
								},
								{
									"begin": 1048,
									"end": 1094,
									"name": "PUSH",
									"value": "44"
								},
								{
									"begin": 1048,
									"end": 1094,
									"name": "DUP3"
								},
								{
									"begin": 1048,
									"end": 1094,
									"name": "ADD"
								},
								{
									"begin": 1048,
									"end": 1094,
									"name": "MSTORE"
								},
								{
									"begin": 1048,
									"end": 1094,
									"name": "SWAP1"
								},
								{
									"begin": 1048,
									"end": 1094,
									"name": "MLOAD"
								},
								{
									"begin": 1048,
									"end": 1094,
									"name": "SWAP1"
								},
								{
									"begin": 1048,
									"end": 1094,
									"name": "DUP2"
								},
								{
									"begin": 1048,
									"end": 1094,
									"name": "SWAP1"
								},
								{
									"begin": 1048,
									"end": 1094,
									"name": "SUB"
								},
								{
									"begin": 1048,
									"end": 1094,
									"name": "PUSH",
									"value": "64"
								},
								{
									"begin": 1048,
									"end": 1094,
									"name": "ADD"
								},
								{
									"begin": 1048,
									"end": 1094,
									"name": "SWAP1"
								},
								{
									"begin": 1048,
									"end": 1094,
									"name": "REVERT"
								},
								{
									"begin": 1048,
									"end": 1094,
									"name": "tag",
									"value": "16"
								},
								{
									"begin": 1048,
									"end": 1094,
									"name": "JUMPDEST"
								},
								{
									"begin": 1112,
									"end": 1113,
									"name": "SWAP4"
								},
								{
									"begin": 944,
									"end": 1120,
									"name": "SWAP3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 944,
									"end": 1120,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "tag",
									"value": "5"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "JUMPDEST"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "DUP3"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "DUP1"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "SLOAD"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "DUP2"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "AND"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "ISZERO"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "MUL"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "SUB"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "AND"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "SWAP1"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "DIV"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "SWAP1"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "MSTORE"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "KECCAK256"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "SWAP1"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "ADD"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "SWAP1"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "DIV"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "DUP2"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "ADD"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "SWAP3"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "DUP3"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "LT"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "PUSH [tag]",
									"value": "18"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "JUMPI"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "DUP1"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "MLOAD"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "NOT"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "AND"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "DUP4"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "DUP1"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "ADD"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "OR"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "DUP6"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "SSTORE"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "PUSH [tag]",
									"value": "20"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "JUMP"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "tag",
									"value": "18"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "JUMPDEST"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "DUP3"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "DUP1"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "ADD"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "ADD"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "DUP6"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "SSTORE"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "DUP3"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "ISZERO"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "PUSH [tag]",
									"value": "20"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "JUMPI"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "SWAP2"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "DUP3"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "ADD"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "tag",
									"value": "19"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "JUMPDEST"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "DUP3"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "DUP2"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "GT"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "ISZERO"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "PUSH [tag]",
									"value": "20"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "JUMPI"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "DUP3"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "MLOAD"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "DUP3"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "SSTORE"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "SWAP2"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "ADD"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "SWAP2"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "SWAP1"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "ADD"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "SWAP1"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "PUSH [tag]",
									"value": "19"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "JUMP"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "tag",
									"value": "20"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "PUSH [tag]",
									"value": "21"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "SWAP3"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "SWAP2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "PUSH [tag]",
									"value": "22"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "tag",
									"value": "21"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "JUMPDEST"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "POP"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "SWAP1"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "tag",
									"value": "22"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "JUMPDEST"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "PUSH [tag]",
									"value": "23"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "SWAP2"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "SWAP1"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "tag",
									"value": "24"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "JUMPDEST"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "DUP1"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "DUP3"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "GT"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "ISZERO"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "PUSH [tag]",
									"value": "21"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "JUMPI"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "DUP2"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "SSTORE"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "ADD"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "PUSH [tag]",
									"value": "24"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "JUMP"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "tag",
									"value": "23"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "JUMPDEST"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "SWAP1"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "tag",
									"value": "9"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "JUMPDEST"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "DUP1"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "CODECOPY"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 4286,
									"end": 13087,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820e2941f9825cb34a197635989040e46546effeb1bc8338b986e6d99a1a1eed85c0029",
									".code": [
										{
											"begin": 4286,
											"end": 13087,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "MSTORE"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "LT"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "JUMPI"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "DIV"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "AND"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "DUP2"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "EQ"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "JUMPI"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "DUP1"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "EQ"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "JUMPI"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "DUP1"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "EQ"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "JUMPI"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "DUP1"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "EQ"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "JUMPI"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "DUP1"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "EQ"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "JUMPI"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "DUP1"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "PUSH",
											"value": "39509351"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "EQ"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "JUMPI"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "DUP1"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "PUSH",
											"value": "42966C68"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "EQ"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "JUMPI"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "DUP1"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "EQ"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "JUMPI"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "DUP1"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "PUSH",
											"value": "79CC6790"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "EQ"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "JUMPI"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "DUP1"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "EQ"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "JUMPI"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "DUP1"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "EQ"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "JUMPI"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "DUP1"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "PUSH",
											"value": "A0712D68"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "EQ"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "JUMPI"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "DUP1"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "PUSH",
											"value": "A457C2D7"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "EQ"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "JUMPI"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "DUP1"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "EQ"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "JUMPI"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "DUP1"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "EQ"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "JUMPI"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "DUP1"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "PUSH",
											"value": "F2FDE38B"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "EQ"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "JUMPI"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "JUMPDEST"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "DUP1"
										},
										{
											"begin": 4286,
											"end": 13087,
											"name": "REVERT"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "JUMPDEST"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "POP"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "JUMP"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "JUMPDEST"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "DUP1"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "MLOAD"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "DUP1"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "DUP3"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "MSTORE"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "DUP4"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "MLOAD"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "DUP2"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "DUP4"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "ADD"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "MSTORE"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "DUP4"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "MLOAD"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "SWAP2"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "SWAP3"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "DUP4"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "SWAP3"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "SWAP1"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "DUP4"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "ADD"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "SWAP2"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "DUP6"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "ADD"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "SWAP1"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "DUP1"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "DUP4"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "DUP4"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP4"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP3"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "POP"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "POP"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "POP"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "SWAP1"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "POP"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "SWAP1"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "DUP2"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "ADD"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "SWAP1"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "AND"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "DUP1"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "ISZERO"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "JUMPI"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "DUP1"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "DUP3"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "SUB"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "DUP1"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "MLOAD"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "DUP4"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "SUB"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "EXP"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "SUB"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "NOT"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "AND"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "DUP2"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "MSTORE"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "ADD"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "SWAP2"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "POP"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "JUMPDEST"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "POP"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "SWAP3"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "POP"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "POP"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "POP"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "MLOAD"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "DUP1"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "SWAP2"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "SUB"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "SWAP1"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "RETURN"
										},
										{
											"begin": 7037,
											"end": 7182,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 7037,
											"end": 7182,
											"name": "JUMPDEST"
										},
										{
											"begin": 7037,
											"end": 7182,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 7037,
											"end": 7182,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7037,
											"end": 7182,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7037,
											"end": 7182,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7037,
											"end": 7182,
											"name": "AND"
										},
										{
											"begin": 7037,
											"end": 7182,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 7037,
											"end": 7182,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7037,
											"end": 7182,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 7037,
											"end": 7182,
											"name": "JUMP"
										},
										{
											"begin": 7037,
											"end": 7182,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 7037,
											"end": 7182,
											"name": "JUMPDEST"
										},
										{
											"begin": 7037,
											"end": 7182,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7037,
											"end": 7182,
											"name": "DUP1"
										},
										{
											"begin": 7037,
											"end": 7182,
											"name": "MLOAD"
										},
										{
											"begin": 7037,
											"end": 7182,
											"name": "SWAP2"
										},
										{
											"begin": 7037,
											"end": 7182,
											"name": "ISZERO"
										},
										{
											"begin": 7037,
											"end": 7182,
											"name": "ISZERO"
										},
										{
											"begin": 7037,
											"end": 7182,
											"name": "DUP3"
										},
										{
											"begin": 7037,
											"end": 7182,
											"name": "MSTORE"
										},
										{
											"begin": 7037,
											"end": 7182,
											"name": "MLOAD"
										},
										{
											"begin": 7037,
											"end": 7182,
											"name": "SWAP1"
										},
										{
											"begin": 7037,
											"end": 7182,
											"name": "DUP2"
										},
										{
											"begin": 7037,
											"end": 7182,
											"name": "SWAP1"
										},
										{
											"begin": 7037,
											"end": 7182,
											"name": "SUB"
										},
										{
											"begin": 7037,
											"end": 7182,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7037,
											"end": 7182,
											"name": "ADD"
										},
										{
											"begin": 7037,
											"end": 7182,
											"name": "SWAP1"
										},
										{
											"begin": 7037,
											"end": 7182,
											"name": "RETURN"
										},
										{
											"begin": 6098,
											"end": 6187,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 6098,
											"end": 6187,
											"name": "JUMPDEST"
										},
										{
											"begin": 6098,
											"end": 6187,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6098,
											"end": 6187,
											"name": "POP"
										},
										{
											"begin": 6098,
											"end": 6187,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 6098,
											"end": 6187,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 6098,
											"end": 6187,
											"name": "JUMP"
										},
										{
											"begin": 6098,
											"end": 6187,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 6098,
											"end": 6187,
											"name": "JUMPDEST"
										},
										{
											"begin": 6098,
											"end": 6187,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6098,
											"end": 6187,
											"name": "DUP1"
										},
										{
											"begin": 6098,
											"end": 6187,
											"name": "MLOAD"
										},
										{
											"begin": 6098,
											"end": 6187,
											"name": "SWAP2"
										},
										{
											"begin": 6098,
											"end": 6187,
											"name": "DUP3"
										},
										{
											"begin": 6098,
											"end": 6187,
											"name": "MSTORE"
										},
										{
											"begin": 6098,
											"end": 6187,
											"name": "MLOAD"
										},
										{
											"begin": 6098,
											"end": 6187,
											"name": "SWAP1"
										},
										{
											"begin": 6098,
											"end": 6187,
											"name": "DUP2"
										},
										{
											"begin": 6098,
											"end": 6187,
											"name": "SWAP1"
										},
										{
											"begin": 6098,
											"end": 6187,
											"name": "SUB"
										},
										{
											"begin": 6098,
											"end": 6187,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6098,
											"end": 6187,
											"name": "ADD"
										},
										{
											"begin": 6098,
											"end": 6187,
											"name": "SWAP1"
										},
										{
											"begin": 6098,
											"end": 6187,
											"name": "RETURN"
										},
										{
											"begin": 7557,
											"end": 7809,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 7557,
											"end": 7809,
											"name": "JUMPDEST"
										},
										{
											"begin": 7557,
											"end": 7809,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 7557,
											"end": 7809,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7557,
											"end": 7809,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7557,
											"end": 7809,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7557,
											"end": 7809,
											"name": "DUP2"
										},
										{
											"begin": 7557,
											"end": 7809,
											"name": "AND"
										},
										{
											"begin": 7557,
											"end": 7809,
											"name": "SWAP1"
										},
										{
											"begin": 7557,
											"end": 7809,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 7557,
											"end": 7809,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7557,
											"end": 7809,
											"name": "AND"
										},
										{
											"begin": 7557,
											"end": 7809,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 7557,
											"end": 7809,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7557,
											"end": 7809,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 7557,
											"end": 7809,
											"name": "JUMP"
										},
										{
											"begin": 5922,
											"end": 6003,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 5922,
											"end": 6003,
											"name": "JUMPDEST"
										},
										{
											"begin": 5922,
											"end": 6003,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 5922,
											"end": 6003,
											"name": "POP"
										},
										{
											"begin": 5922,
											"end": 6003,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 5922,
											"end": 6003,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 5922,
											"end": 6003,
											"name": "JUMP"
										},
										{
											"begin": 5922,
											"end": 6003,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 5922,
											"end": 6003,
											"name": "JUMPDEST"
										},
										{
											"begin": 5922,
											"end": 6003,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5922,
											"end": 6003,
											"name": "DUP1"
										},
										{
											"begin": 5922,
											"end": 6003,
											"name": "MLOAD"
										},
										{
											"begin": 5922,
											"end": 6003,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 5922,
											"end": 6003,
											"name": "SWAP1"
										},
										{
											"begin": 5922,
											"end": 6003,
											"name": "SWAP3"
										},
										{
											"begin": 5922,
											"end": 6003,
											"name": "AND"
										},
										{
											"begin": 5922,
											"end": 6003,
											"name": "DUP3"
										},
										{
											"begin": 5922,
											"end": 6003,
											"name": "MSTORE"
										},
										{
											"begin": 5922,
											"end": 6003,
											"name": "MLOAD"
										},
										{
											"begin": 5922,
											"end": 6003,
											"name": "SWAP1"
										},
										{
											"begin": 5922,
											"end": 6003,
											"name": "DUP2"
										},
										{
											"begin": 5922,
											"end": 6003,
											"name": "SWAP1"
										},
										{
											"begin": 5922,
											"end": 6003,
											"name": "SUB"
										},
										{
											"begin": 5922,
											"end": 6003,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5922,
											"end": 6003,
											"name": "ADD"
										},
										{
											"begin": 5922,
											"end": 6003,
											"name": "SWAP1"
										},
										{
											"begin": 5922,
											"end": 6003,
											"name": "RETURN"
										},
										{
											"begin": 8204,
											"end": 8407,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 8204,
											"end": 8407,
											"name": "JUMPDEST"
										},
										{
											"begin": 8204,
											"end": 8407,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 8204,
											"end": 8407,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8204,
											"end": 8407,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8204,
											"end": 8407,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8204,
											"end": 8407,
											"name": "AND"
										},
										{
											"begin": 8204,
											"end": 8407,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 8204,
											"end": 8407,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8204,
											"end": 8407,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 8204,
											"end": 8407,
											"name": "JUMP"
										},
										{
											"begin": 11436,
											"end": 11515,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 11436,
											"end": 11515,
											"name": "JUMPDEST"
										},
										{
											"begin": 11436,
											"end": 11515,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 11436,
											"end": 11515,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 11436,
											"end": 11515,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11436,
											"end": 11515,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 11436,
											"end": 11515,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 11436,
											"end": 11515,
											"name": "JUMP"
										},
										{
											"begin": 11436,
											"end": 11515,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 11436,
											"end": 11515,
											"name": "JUMPDEST"
										},
										{
											"begin": 11436,
											"end": 11515,
											"name": "STOP"
										},
										{
											"begin": 6245,
											"end": 6353,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 6245,
											"end": 6353,
											"name": "JUMPDEST"
										},
										{
											"begin": 6245,
											"end": 6353,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 6245,
											"end": 6353,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 6245,
											"end": 6353,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6245,
											"end": 6353,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 6245,
											"end": 6353,
											"name": "AND"
										},
										{
											"begin": 6245,
											"end": 6353,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 6245,
											"end": 6353,
											"name": "JUMP"
										},
										{
											"begin": 11572,
											"end": 11673,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 11572,
											"end": 11673,
											"name": "JUMPDEST"
										},
										{
											"begin": 11572,
											"end": 11673,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 11572,
											"end": 11673,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 11572,
											"end": 11673,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11572,
											"end": 11673,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 11572,
											"end": 11673,
											"name": "AND"
										},
										{
											"begin": 11572,
											"end": 11673,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 11572,
											"end": 11673,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 11572,
											"end": 11673,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 11572,
											"end": 11673,
											"name": "JUMP"
										},
										{
											"begin": 4563,
											"end": 4583,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 4563,
											"end": 4583,
											"name": "JUMPDEST"
										},
										{
											"begin": 4563,
											"end": 4583,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4563,
											"end": 4583,
											"name": "POP"
										},
										{
											"begin": 4563,
											"end": 4583,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 4563,
											"end": 4583,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 4563,
											"end": 4583,
											"name": "JUMP"
										},
										{
											"begin": 4563,
											"end": 4583,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 4563,
											"end": 4583,
											"name": "JUMPDEST"
										},
										{
											"begin": 4563,
											"end": 4583,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4563,
											"end": 4583,
											"name": "DUP1"
										},
										{
											"begin": 4563,
											"end": 4583,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4563,
											"end": 4583,
											"name": "SWAP1"
										},
										{
											"begin": 4563,
											"end": 4583,
											"name": "SWAP3"
										},
										{
											"begin": 4563,
											"end": 4583,
											"name": "AND"
										},
										{
											"begin": 4563,
											"end": 4583,
											"name": "DUP3"
										},
										{
											"begin": 4563,
											"end": 4583,
											"name": "MSTORE"
										},
										{
											"begin": 4563,
											"end": 4583,
											"name": "MLOAD"
										},
										{
											"begin": 4563,
											"end": 4583,
											"name": "SWAP1"
										},
										{
											"begin": 4563,
											"end": 4583,
											"name": "DUP2"
										},
										{
											"begin": 4563,
											"end": 4583,
											"name": "SWAP1"
										},
										{
											"begin": 4563,
											"end": 4583,
											"name": "SUB"
										},
										{
											"begin": 4563,
											"end": 4583,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4563,
											"end": 4583,
											"name": "ADD"
										},
										{
											"begin": 4563,
											"end": 4583,
											"name": "SWAP1"
										},
										{
											"begin": 4563,
											"end": 4583,
											"name": "RETURN"
										},
										{
											"begin": 5282,
											"end": 5367,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 5282,
											"end": 5367,
											"name": "JUMPDEST"
										},
										{
											"begin": 5282,
											"end": 5367,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 5282,
											"end": 5367,
											"name": "POP"
										},
										{
											"begin": 5282,
											"end": 5367,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 5282,
											"end": 5367,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 5282,
											"end": 5367,
											"name": "JUMP"
										},
										{
											"begin": 12660,
											"end": 12738,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 12660,
											"end": 12738,
											"name": "JUMPDEST"
										},
										{
											"begin": 12660,
											"end": 12738,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 12660,
											"end": 12738,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 12660,
											"end": 12738,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12660,
											"end": 12738,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12660,
											"end": 12738,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 12660,
											"end": 12738,
											"name": "JUMP"
										},
										{
											"begin": 8894,
											"end": 9107,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 8894,
											"end": 9107,
											"name": "JUMPDEST"
										},
										{
											"begin": 8894,
											"end": 9107,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 8894,
											"end": 9107,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8894,
											"end": 9107,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8894,
											"end": 9107,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8894,
											"end": 9107,
											"name": "AND"
										},
										{
											"begin": 8894,
											"end": 9107,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 8894,
											"end": 9107,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8894,
											"end": 9107,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 8894,
											"end": 9107,
											"name": "JUMP"
										},
										{
											"begin": 6556,
											"end": 6709,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 6556,
											"end": 6709,
											"name": "JUMPDEST"
										},
										{
											"begin": 6556,
											"end": 6709,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 6556,
											"end": 6709,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 6556,
											"end": 6709,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6556,
											"end": 6709,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 6556,
											"end": 6709,
											"name": "AND"
										},
										{
											"begin": 6556,
											"end": 6709,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 6556,
											"end": 6709,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 6556,
											"end": 6709,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 6556,
											"end": 6709,
											"name": "JUMP"
										},
										{
											"begin": 6767,
											"end": 6899,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 6767,
											"end": 6899,
											"name": "JUMPDEST"
										},
										{
											"begin": 6767,
											"end": 6899,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 6767,
											"end": 6899,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 6767,
											"end": 6899,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6767,
											"end": 6899,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 6767,
											"end": 6899,
											"name": "DUP2"
										},
										{
											"begin": 6767,
											"end": 6899,
											"name": "AND"
										},
										{
											"begin": 6767,
											"end": 6899,
											"name": "SWAP1"
										},
										{
											"begin": 6767,
											"end": 6899,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 6767,
											"end": 6899,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 6767,
											"end": 6899,
											"name": "AND"
										},
										{
											"begin": 6767,
											"end": 6899,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 6767,
											"end": 6899,
											"name": "JUMP"
										},
										{
											"begin": 12906,
											"end": 13085,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 12906,
											"end": 13085,
											"name": "JUMPDEST"
										},
										{
											"begin": 12906,
											"end": 13085,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 12906,
											"end": 13085,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 12906,
											"end": 13085,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12906,
											"end": 13085,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12906,
											"end": 13085,
											"name": "AND"
										},
										{
											"begin": 12906,
											"end": 13085,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 12906,
											"end": 13085,
											"name": "JUMP"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "JUMPDEST"
										},
										{
											"begin": 5157,
											"end": 5162,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "DUP1"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "SLOAD"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "DUP1"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "MLOAD"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "DUP8"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "AND"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "ISZERO"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "MUL"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "ADD"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "SWAP1"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "SWAP5"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "AND"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "DUP6"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "SWAP1"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "DIV"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "SWAP4"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "DUP5"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "ADD"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "DUP2"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "SWAP1"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "DIV"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "DUP2"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "MUL"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "DUP3"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "ADD"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "DUP2"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "ADD"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "SWAP1"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "SWAP3"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "MSTORE"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "DUP3"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "DUP2"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "MSTORE"
										},
										{
											"begin": 5125,
											"end": 5131,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 5125,
											"end": 5131,
											"name": "SWAP4"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "SWAP1"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "SWAP3"
										},
										{
											"begin": 5157,
											"end": 5162,
											"name": "SWAP1"
										},
										{
											"begin": 5157,
											"end": 5162,
											"name": "SWAP2"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "DUP4"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "ADD"
										},
										{
											"begin": 5157,
											"end": 5162,
											"name": "DUP3"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "DUP3"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "DUP1"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "ISZERO"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "JUMPI"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "DUP1"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "LT"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "JUMPI"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "DUP1"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "DUP4"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "SLOAD"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "DIV"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "MUL"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "DUP4"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "MSTORE"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "SWAP2"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "ADD"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "SWAP2"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "JUMP"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "JUMPDEST"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "DUP3"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "ADD"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "SWAP2"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "SWAP1"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "MSTORE"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "KECCAK256"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "SWAP1"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "JUMPDEST"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "DUP2"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "SLOAD"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "DUP2"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "MSTORE"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "SWAP1"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "ADD"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "SWAP1"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "ADD"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "DUP1"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "DUP4"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "GT"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "JUMPI"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "DUP3"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "SWAP1"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "SUB"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "AND"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "DUP3"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "ADD"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "SWAP2"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "JUMPDEST"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "POP"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "POP"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "POP"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "POP"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "POP"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "SWAP1"
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "POP"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "SWAP1"
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7037,
											"end": 7182,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 7037,
											"end": 7182,
											"name": "JUMPDEST"
										},
										{
											"begin": 7102,
											"end": 7106,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7118,
											"end": 7154,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 7127,
											"end": 7137,
											"name": "CALLER"
										},
										{
											"begin": 7139,
											"end": 7146,
											"name": "DUP5"
										},
										{
											"begin": 7148,
											"end": 7153,
											"name": "DUP5"
										},
										{
											"begin": 7118,
											"end": 7126,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 7118,
											"end": 7154,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7118,
											"end": 7154,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 7118,
											"end": 7154,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 7171,
											"end": 7175,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 7037,
											"end": 7182,
											"name": "SWAP3"
										},
										{
											"begin": 7037,
											"end": 7182,
											"name": "SWAP2"
										},
										{
											"begin": 7037,
											"end": 7182,
											"name": "POP"
										},
										{
											"begin": 7037,
											"end": 7182,
											"name": "POP"
										},
										{
											"begin": 7037,
											"end": 7182,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 6098,
											"end": 6187,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 6098,
											"end": 6187,
											"name": "JUMPDEST"
										},
										{
											"begin": 6168,
											"end": 6180,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 6168,
											"end": 6180,
											"name": "SLOAD"
										},
										{
											"begin": 6098,
											"end": 6187,
											"name": "SWAP1"
										},
										{
											"begin": 6098,
											"end": 6187,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7557,
											"end": 7809,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 7557,
											"end": 7809,
											"name": "JUMPDEST"
										},
										{
											"begin": 7646,
											"end": 7650,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7662,
											"end": 7698,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 7672,
											"end": 7678,
											"name": "DUP5"
										},
										{
											"begin": 7680,
											"end": 7689,
											"name": "DUP5"
										},
										{
											"begin": 7691,
											"end": 7697,
											"name": "DUP5"
										},
										{
											"begin": 7662,
											"end": 7671,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 7662,
											"end": 7698,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7662,
											"end": 7698,
											"name": "tag",
											"value": "83"
										},
										{
											"begin": 7662,
											"end": 7698,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7737,
											"end": 7756,
											"name": "DUP5"
										},
										{
											"begin": 7737,
											"end": 7756,
											"name": "AND"
										},
										{
											"begin": 7737,
											"end": 7756,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7737,
											"end": 7756,
											"name": "SWAP1"
										},
										{
											"begin": 7737,
											"end": 7756,
											"name": "DUP2"
										},
										{
											"begin": 7737,
											"end": 7756,
											"name": "MSTORE"
										},
										{
											"begin": 7737,
											"end": 7748,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 7737,
											"end": 7756,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7737,
											"end": 7756,
											"name": "SWAP1"
										},
										{
											"begin": 7737,
											"end": 7756,
											"name": "DUP2"
										},
										{
											"begin": 7737,
											"end": 7756,
											"name": "MSTORE"
										},
										{
											"begin": 7737,
											"end": 7756,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7737,
											"end": 7756,
											"name": "DUP1"
										},
										{
											"begin": 7737,
											"end": 7756,
											"name": "DUP4"
										},
										{
											"begin": 7737,
											"end": 7756,
											"name": "KECCAK256"
										},
										{
											"begin": 7725,
											"end": 7735,
											"name": "CALLER"
										},
										{
											"begin": 7737,
											"end": 7768,
											"name": "DUP1"
										},
										{
											"begin": 7737,
											"end": 7768,
											"name": "DUP6"
										},
										{
											"begin": 7737,
											"end": 7768,
											"name": "MSTORE"
										},
										{
											"begin": 7737,
											"end": 7768,
											"name": "SWAP3"
										},
										{
											"begin": 7737,
											"end": 7768,
											"name": "MSTORE"
										},
										{
											"begin": 7737,
											"end": 7768,
											"name": "SWAP1"
										},
										{
											"begin": 7737,
											"end": 7768,
											"name": "SWAP2"
										},
										{
											"begin": 7737,
											"end": 7768,
											"name": "KECCAK256"
										},
										{
											"begin": 7737,
											"end": 7768,
											"name": "SLOAD"
										},
										{
											"begin": 7708,
											"end": 7781,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 7708,
											"end": 7781,
											"name": "SWAP2"
										},
										{
											"begin": 7717,
											"end": 7723,
											"name": "DUP7"
										},
										{
											"begin": 7717,
											"end": 7723,
											"name": "SWAP2"
										},
										{
											"begin": 7737,
											"end": 7780,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 7737,
											"end": 7780,
											"name": "SWAP1"
										},
										{
											"begin": 7773,
											"end": 7779,
											"name": "DUP7"
										},
										{
											"begin": 7737,
											"end": 7780,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 7737,
											"end": 7772,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 7737,
											"end": 7780,
											"name": "AND"
										},
										{
											"begin": 7737,
											"end": 7780,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7737,
											"end": 7780,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 7737,
											"end": 7780,
											"name": "JUMPDEST"
										},
										{
											"begin": 7708,
											"end": 7716,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 7708,
											"end": 7781,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7708,
											"end": 7781,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 7708,
											"end": 7781,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 7798,
											"end": 7802,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 7557,
											"end": 7809,
											"name": "SWAP4"
										},
										{
											"begin": 7557,
											"end": 7809,
											"name": "SWAP3"
										},
										{
											"begin": 7557,
											"end": 7809,
											"name": "POP"
										},
										{
											"begin": 7557,
											"end": 7809,
											"name": "POP"
										},
										{
											"begin": 7557,
											"end": 7809,
											"name": "POP"
										},
										{
											"begin": 7557,
											"end": 7809,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5922,
											"end": 6003,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 5922,
											"end": 6003,
											"name": "JUMPDEST"
										},
										{
											"begin": 5987,
											"end": 5996,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5987,
											"end": 5996,
											"name": "SLOAD"
										},
										{
											"begin": 5987,
											"end": 5996,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 5987,
											"end": 5996,
											"name": "AND"
										},
										{
											"begin": 5922,
											"end": 6003,
											"name": "SWAP1"
										},
										{
											"begin": 5922,
											"end": 6003,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8204,
											"end": 8407,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 8204,
											"end": 8407,
											"name": "JUMPDEST"
										},
										{
											"begin": 8309,
											"end": 8319,
											"name": "CALLER"
										},
										{
											"begin": 8284,
											"end": 8288,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8330,
											"end": 8353,
											"name": "DUP2"
										},
										{
											"begin": 8330,
											"end": 8353,
											"name": "DUP2"
										},
										{
											"begin": 8330,
											"end": 8353,
											"name": "MSTORE"
										},
										{
											"begin": 8330,
											"end": 8341,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 8330,
											"end": 8353,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8330,
											"end": 8353,
											"name": "SWAP1"
										},
										{
											"begin": 8330,
											"end": 8353,
											"name": "DUP2"
										},
										{
											"begin": 8330,
											"end": 8353,
											"name": "MSTORE"
										},
										{
											"begin": 8330,
											"end": 8353,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8330,
											"end": 8353,
											"name": "DUP1"
										},
										{
											"begin": 8330,
											"end": 8353,
											"name": "DUP4"
										},
										{
											"begin": 8330,
											"end": 8353,
											"name": "KECCAK256"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8330,
											"end": 8362,
											"name": "DUP8"
										},
										{
											"begin": 8330,
											"end": 8362,
											"name": "AND"
										},
										{
											"begin": 8330,
											"end": 8362,
											"name": "DUP5"
										},
										{
											"begin": 8330,
											"end": 8362,
											"name": "MSTORE"
										},
										{
											"begin": 8330,
											"end": 8362,
											"name": "SWAP1"
										},
										{
											"begin": 8330,
											"end": 8362,
											"name": "SWAP2"
										},
										{
											"begin": 8330,
											"end": 8362,
											"name": "MSTORE"
										},
										{
											"begin": 8330,
											"end": 8362,
											"name": "DUP2"
										},
										{
											"begin": 8330,
											"end": 8362,
											"name": "KECCAK256"
										},
										{
											"begin": 8330,
											"end": 8362,
											"name": "SLOAD"
										},
										{
											"begin": 8284,
											"end": 8288,
											"name": "SWAP1"
										},
										{
											"begin": 8284,
											"end": 8288,
											"name": "SWAP2"
										},
										{
											"begin": 8300,
											"end": 8379,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 8300,
											"end": 8379,
											"name": "SWAP2"
										},
										{
											"begin": 8321,
											"end": 8328,
											"name": "DUP6"
										},
										{
											"begin": 8321,
											"end": 8328,
											"name": "SWAP1"
										},
										{
											"begin": 8330,
											"end": 8378,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 8330,
											"end": 8378,
											"name": "SWAP1"
										},
										{
											"begin": 8367,
											"end": 8377,
											"name": "DUP7"
										},
										{
											"begin": 8330,
											"end": 8378,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8330,
											"end": 8366,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 8330,
											"end": 8378,
											"name": "AND"
										},
										{
											"begin": 8330,
											"end": 8378,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11436,
											"end": 11515,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 11436,
											"end": 11515,
											"name": "JUMPDEST"
										},
										{
											"begin": 11483,
											"end": 11508,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 11489,
											"end": 11499,
											"name": "CALLER"
										},
										{
											"begin": 11501,
											"end": 11507,
											"name": "DUP3"
										},
										{
											"begin": 11483,
											"end": 11488,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 11483,
											"end": 11508,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11483,
											"end": 11508,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 11483,
											"end": 11508,
											"name": "JUMPDEST"
										},
										{
											"begin": 11436,
											"end": 11515,
											"name": "POP"
										},
										{
											"begin": 11436,
											"end": 11515,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 6245,
											"end": 6353,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 6245,
											"end": 6353,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 6328,
											"end": 6346,
											"name": "AND"
										},
										{
											"begin": 6302,
											"end": 6309,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6328,
											"end": 6346,
											"name": "SWAP1"
										},
										{
											"begin": 6328,
											"end": 6346,
											"name": "DUP2"
										},
										{
											"begin": 6328,
											"end": 6346,
											"name": "MSTORE"
										},
										{
											"begin": 6328,
											"end": 6346,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6328,
											"end": 6346,
											"name": "DUP2"
										},
										{
											"begin": 6328,
											"end": 6346,
											"name": "SWAP1"
										},
										{
											"begin": 6328,
											"end": 6346,
											"name": "MSTORE"
										},
										{
											"begin": 6328,
											"end": 6346,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6328,
											"end": 6346,
											"name": "SWAP1"
										},
										{
											"begin": 6328,
											"end": 6346,
											"name": "KECCAK256"
										},
										{
											"begin": 6328,
											"end": 6346,
											"name": "SLOAD"
										},
										{
											"begin": 6328,
											"end": 6346,
											"name": "SWAP1"
										},
										{
											"begin": 6245,
											"end": 6353,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11572,
											"end": 11673,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 11572,
											"end": 11673,
											"name": "JUMPDEST"
										},
										{
											"begin": 11640,
											"end": 11666,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 11650,
											"end": 11657,
											"name": "DUP3"
										},
										{
											"begin": 11659,
											"end": 11665,
											"name": "DUP3"
										},
										{
											"begin": 11640,
											"end": 11649,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 11640,
											"end": 11666,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11640,
											"end": 11666,
											"name": "tag",
											"value": "98"
										},
										{
											"begin": 11640,
											"end": 11666,
											"name": "JUMPDEST"
										},
										{
											"begin": 11572,
											"end": 11673,
											"name": "POP"
										},
										{
											"begin": 11572,
											"end": 11673,
											"name": "POP"
										},
										{
											"begin": 11572,
											"end": 11673,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4563,
											"end": 4583,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 4563,
											"end": 4583,
											"name": "JUMPDEST"
										},
										{
											"begin": 4563,
											"end": 4583,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4563,
											"end": 4583,
											"name": "SLOAD"
										},
										{
											"begin": 4563,
											"end": 4583,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4563,
											"end": 4583,
											"name": "SWAP1"
										},
										{
											"begin": 4563,
											"end": 4583,
											"name": "DIV"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4563,
											"end": 4583,
											"name": "AND"
										},
										{
											"begin": 4563,
											"end": 4583,
											"name": "DUP2"
										},
										{
											"begin": 4563,
											"end": 4583,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5282,
											"end": 5367,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 5282,
											"end": 5367,
											"name": "JUMPDEST"
										},
										{
											"begin": 5353,
											"end": 5360,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 5346,
											"end": 5360,
											"name": "DUP1"
										},
										{
											"begin": 5346,
											"end": 5360,
											"name": "SLOAD"
										},
										{
											"begin": 5346,
											"end": 5360,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5346,
											"end": 5360,
											"name": "DUP1"
										},
										{
											"begin": 5346,
											"end": 5360,
											"name": "MLOAD"
										},
										{
											"begin": 5346,
											"end": 5360,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5346,
											"end": 5360,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 5346,
											"end": 5360,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 5346,
											"end": 5360,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5346,
											"end": 5360,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5346,
											"end": 5360,
											"name": "DUP9"
										},
										{
											"begin": 5346,
											"end": 5360,
											"name": "AND"
										},
										{
											"begin": 5346,
											"end": 5360,
											"name": "ISZERO"
										},
										{
											"begin": 5346,
											"end": 5360,
											"name": "MUL"
										},
										{
											"begin": 5346,
											"end": 5360,
											"name": "ADD"
										},
										{
											"begin": 5346,
											"end": 5360,
											"name": "SWAP1"
										},
										{
											"begin": 5346,
											"end": 5360,
											"name": "SWAP6"
										},
										{
											"begin": 5346,
											"end": 5360,
											"name": "AND"
										},
										{
											"begin": 5346,
											"end": 5360,
											"name": "SWAP5"
										},
										{
											"begin": 5346,
											"end": 5360,
											"name": "SWAP1"
										},
										{
											"begin": 5346,
											"end": 5360,
											"name": "SWAP5"
										},
										{
											"begin": 5346,
											"end": 5360,
											"name": "DIV"
										},
										{
											"begin": 5346,
											"end": 5360,
											"name": "SWAP4"
										},
										{
											"begin": 5346,
											"end": 5360,
											"name": "DUP5"
										},
										{
											"begin": 5346,
											"end": 5360,
											"name": "ADD"
										},
										{
											"begin": 5346,
											"end": 5360,
											"name": "DUP2"
										},
										{
											"begin": 5346,
											"end": 5360,
											"name": "SWAP1"
										},
										{
											"begin": 5346,
											"end": 5360,
											"name": "DIV"
										},
										{
											"begin": 5346,
											"end": 5360,
											"name": "DUP2"
										},
										{
											"begin": 5346,
											"end": 5360,
											"name": "MUL"
										},
										{
											"begin": 5346,
											"end": 5360,
											"name": "DUP3"
										},
										{
											"begin": 5346,
											"end": 5360,
											"name": "ADD"
										},
										{
											"begin": 5346,
											"end": 5360,
											"name": "DUP2"
										},
										{
											"begin": 5346,
											"end": 5360,
											"name": "ADD"
										},
										{
											"begin": 5346,
											"end": 5360,
											"name": "SWAP1"
										},
										{
											"begin": 5346,
											"end": 5360,
											"name": "SWAP3"
										},
										{
											"begin": 5346,
											"end": 5360,
											"name": "MSTORE"
										},
										{
											"begin": 5346,
											"end": 5360,
											"name": "DUP3"
										},
										{
											"begin": 5346,
											"end": 5360,
											"name": "DUP2"
										},
										{
											"begin": 5346,
											"end": 5360,
											"name": "MSTORE"
										},
										{
											"begin": 5321,
											"end": 5327,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 5321,
											"end": 5327,
											"name": "SWAP4"
										},
										{
											"begin": 5346,
											"end": 5360,
											"name": "SWAP1"
										},
										{
											"begin": 5346,
											"end": 5360,
											"name": "SWAP3"
										},
										{
											"begin": 5353,
											"end": 5360,
											"name": "SWAP1"
										},
										{
											"begin": 5353,
											"end": 5360,
											"name": "SWAP2"
										},
										{
											"begin": 5346,
											"end": 5360,
											"name": "DUP4"
										},
										{
											"begin": 5346,
											"end": 5360,
											"name": "ADD"
										},
										{
											"begin": 5353,
											"end": 5360,
											"name": "DUP3"
										},
										{
											"begin": 5346,
											"end": 5360,
											"name": "DUP3"
										},
										{
											"begin": 5346,
											"end": 5360,
											"name": "DUP1"
										},
										{
											"begin": 5346,
											"end": 5360,
											"name": "ISZERO"
										},
										{
											"begin": 5346,
											"end": 5360,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 5346,
											"end": 5360,
											"name": "JUMPI"
										},
										{
											"begin": 5346,
											"end": 5360,
											"name": "DUP1"
										},
										{
											"begin": 5346,
											"end": 5360,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 5346,
											"end": 5360,
											"name": "LT"
										},
										{
											"begin": 5346,
											"end": 5360,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 5346,
											"end": 5360,
											"name": "JUMPI"
										},
										{
											"begin": 5346,
											"end": 5360,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5346,
											"end": 5360,
											"name": "DUP1"
										},
										{
											"begin": 5346,
											"end": 5360,
											"name": "DUP4"
										},
										{
											"begin": 5346,
											"end": 5360,
											"name": "SLOAD"
										},
										{
											"begin": 5346,
											"end": 5360,
											"name": "DIV"
										},
										{
											"begin": 5346,
											"end": 5360,
											"name": "MUL"
										},
										{
											"begin": 5346,
											"end": 5360,
											"name": "DUP4"
										},
										{
											"begin": 5346,
											"end": 5360,
											"name": "MSTORE"
										},
										{
											"begin": 5346,
											"end": 5360,
											"name": "SWAP2"
										},
										{
											"begin": 5346,
											"end": 5360,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5346,
											"end": 5360,
											"name": "ADD"
										},
										{
											"begin": 5346,
											"end": 5360,
											"name": "SWAP2"
										},
										{
											"begin": 5346,
											"end": 5360,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 5346,
											"end": 5360,
											"name": "JUMP"
										},
										{
											"begin": 12660,
											"end": 12738,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 12660,
											"end": 12738,
											"name": "JUMPDEST"
										},
										{
											"begin": 4715,
											"end": 4720,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4715,
											"end": 4720,
											"name": "SLOAD"
										},
										{
											"begin": 4715,
											"end": 4720,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4715,
											"end": 4720,
											"name": "SWAP1"
										},
										{
											"begin": 4715,
											"end": 4720,
											"name": "DIV"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4715,
											"end": 4720,
											"name": "AND"
										},
										{
											"begin": 4701,
											"end": 4711,
											"name": "CALLER"
										},
										{
											"begin": 4701,
											"end": 4720,
											"name": "EQ"
										},
										{
											"begin": 4693,
											"end": 4748,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 4693,
											"end": 4748,
											"name": "JUMPI"
										},
										{
											"begin": 4693,
											"end": 4748,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4693,
											"end": 4748,
											"name": "DUP1"
										},
										{
											"begin": 4693,
											"end": 4748,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 4693,
											"end": 4748,
											"name": "DUP2"
										},
										{
											"begin": 4693,
											"end": 4748,
											"name": "MSTORE"
										},
										{
											"begin": 4693,
											"end": 4748,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4693,
											"end": 4748,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4693,
											"end": 4748,
											"name": "DUP3"
										},
										{
											"begin": 4693,
											"end": 4748,
											"name": "ADD"
										},
										{
											"begin": 4693,
											"end": 4748,
											"name": "MSTORE"
										},
										{
											"begin": 4693,
											"end": 4748,
											"name": "PUSH",
											"value": "17"
										},
										{
											"begin": 4693,
											"end": 4748,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 4693,
											"end": 4748,
											"name": "DUP3"
										},
										{
											"begin": 4693,
											"end": 4748,
											"name": "ADD"
										},
										{
											"begin": 4693,
											"end": 4748,
											"name": "MSTORE"
										},
										{
											"begin": 4693,
											"end": 4748,
											"name": "PUSH",
											"value": "53656E646572206973206E6F7420746865206F776E6572000000000000000000"
										},
										{
											"begin": 4693,
											"end": 4748,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 4693,
											"end": 4748,
											"name": "DUP3"
										},
										{
											"begin": 4693,
											"end": 4748,
											"name": "ADD"
										},
										{
											"begin": 4693,
											"end": 4748,
											"name": "MSTORE"
										},
										{
											"begin": 4693,
											"end": 4748,
											"name": "SWAP1"
										},
										{
											"begin": 4693,
											"end": 4748,
											"name": "MLOAD"
										},
										{
											"begin": 4693,
											"end": 4748,
											"name": "SWAP1"
										},
										{
											"begin": 4693,
											"end": 4748,
											"name": "DUP2"
										},
										{
											"begin": 4693,
											"end": 4748,
											"name": "SWAP1"
										},
										{
											"begin": 4693,
											"end": 4748,
											"name": "SUB"
										},
										{
											"begin": 4693,
											"end": 4748,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 4693,
											"end": 4748,
											"name": "ADD"
										},
										{
											"begin": 4693,
											"end": 4748,
											"name": "SWAP1"
										},
										{
											"begin": 4693,
											"end": 4748,
											"name": "REVERT"
										},
										{
											"begin": 4693,
											"end": 4748,
											"name": "tag",
											"value": "105"
										},
										{
											"begin": 4693,
											"end": 4748,
											"name": "JUMPDEST"
										},
										{
											"begin": 12710,
											"end": 12734,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 12716,
											"end": 12726,
											"name": "CALLER"
										},
										{
											"begin": 12728,
											"end": 12733,
											"name": "DUP3"
										},
										{
											"begin": 12710,
											"end": 12715,
											"name": "PUSH [tag]",
											"value": "108"
										},
										{
											"begin": 12710,
											"end": 12734,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8894,
											"end": 9107,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 8894,
											"end": 9107,
											"name": "JUMPDEST"
										},
										{
											"begin": 9004,
											"end": 9014,
											"name": "CALLER"
										},
										{
											"begin": 8979,
											"end": 8983,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9025,
											"end": 9048,
											"name": "DUP2"
										},
										{
											"begin": 9025,
											"end": 9048,
											"name": "DUP2"
										},
										{
											"begin": 9025,
											"end": 9048,
											"name": "MSTORE"
										},
										{
											"begin": 9025,
											"end": 9036,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 9025,
											"end": 9048,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9025,
											"end": 9048,
											"name": "SWAP1"
										},
										{
											"begin": 9025,
											"end": 9048,
											"name": "DUP2"
										},
										{
											"begin": 9025,
											"end": 9048,
											"name": "MSTORE"
										},
										{
											"begin": 9025,
											"end": 9048,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9025,
											"end": 9048,
											"name": "DUP1"
										},
										{
											"begin": 9025,
											"end": 9048,
											"name": "DUP4"
										},
										{
											"begin": 9025,
											"end": 9048,
											"name": "KECCAK256"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 9025,
											"end": 9057,
											"name": "DUP8"
										},
										{
											"begin": 9025,
											"end": 9057,
											"name": "AND"
										},
										{
											"begin": 9025,
											"end": 9057,
											"name": "DUP5"
										},
										{
											"begin": 9025,
											"end": 9057,
											"name": "MSTORE"
										},
										{
											"begin": 9025,
											"end": 9057,
											"name": "SWAP1"
										},
										{
											"begin": 9025,
											"end": 9057,
											"name": "SWAP2"
										},
										{
											"begin": 9025,
											"end": 9057,
											"name": "MSTORE"
										},
										{
											"begin": 9025,
											"end": 9057,
											"name": "DUP2"
										},
										{
											"begin": 9025,
											"end": 9057,
											"name": "KECCAK256"
										},
										{
											"begin": 9025,
											"end": 9057,
											"name": "SLOAD"
										},
										{
											"begin": 8979,
											"end": 8983,
											"name": "SWAP1"
										},
										{
											"begin": 8979,
											"end": 8983,
											"name": "SWAP2"
										},
										{
											"begin": 8995,
											"end": 9079,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 8995,
											"end": 9079,
											"name": "SWAP2"
										},
										{
											"begin": 9016,
											"end": 9023,
											"name": "DUP6"
										},
										{
											"begin": 9016,
											"end": 9023,
											"name": "SWAP1"
										},
										{
											"begin": 9025,
											"end": 9078,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 9025,
											"end": 9078,
											"name": "SWAP1"
										},
										{
											"begin": 9062,
											"end": 9077,
											"name": "DUP7"
										},
										{
											"begin": 9025,
											"end": 9078,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 9025,
											"end": 9061,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 9025,
											"end": 9078,
											"name": "AND"
										},
										{
											"begin": 9025,
											"end": 9078,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6556,
											"end": 6709,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 6556,
											"end": 6709,
											"name": "JUMPDEST"
										},
										{
											"begin": 6625,
											"end": 6629,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6641,
											"end": 6681,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 6651,
											"end": 6661,
											"name": "CALLER"
										},
										{
											"begin": 6663,
											"end": 6672,
											"name": "DUP5"
										},
										{
											"begin": 6674,
											"end": 6680,
											"name": "DUP5"
										},
										{
											"begin": 6641,
											"end": 6650,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 6641,
											"end": 6681,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6767,
											"end": 6899,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 6767,
											"end": 6899,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 6865,
											"end": 6883,
											"name": "SWAP2"
										},
										{
											"begin": 6865,
											"end": 6883,
											"name": "DUP3"
										},
										{
											"begin": 6865,
											"end": 6883,
											"name": "AND"
										},
										{
											"begin": 6839,
											"end": 6846,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6865,
											"end": 6883,
											"name": "SWAP1"
										},
										{
											"begin": 6865,
											"end": 6883,
											"name": "DUP2"
										},
										{
											"begin": 6865,
											"end": 6883,
											"name": "MSTORE"
										},
										{
											"begin": 6865,
											"end": 6876,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6865,
											"end": 6883,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6865,
											"end": 6883,
											"name": "SWAP1"
										},
										{
											"begin": 6865,
											"end": 6883,
											"name": "DUP2"
										},
										{
											"begin": 6865,
											"end": 6883,
											"name": "MSTORE"
										},
										{
											"begin": 6865,
											"end": 6883,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6865,
											"end": 6883,
											"name": "DUP1"
										},
										{
											"begin": 6865,
											"end": 6883,
											"name": "DUP4"
										},
										{
											"begin": 6865,
											"end": 6883,
											"name": "KECCAK256"
										},
										{
											"begin": 6865,
											"end": 6892,
											"name": "SWAP4"
										},
										{
											"begin": 6865,
											"end": 6892,
											"name": "SWAP1"
										},
										{
											"begin": 6865,
											"end": 6892,
											"name": "SWAP5"
										},
										{
											"begin": 6865,
											"end": 6892,
											"name": "AND"
										},
										{
											"begin": 6865,
											"end": 6892,
											"name": "DUP3"
										},
										{
											"begin": 6865,
											"end": 6892,
											"name": "MSTORE"
										},
										{
											"begin": 6865,
											"end": 6892,
											"name": "SWAP2"
										},
										{
											"begin": 6865,
											"end": 6892,
											"name": "SWAP1"
										},
										{
											"begin": 6865,
											"end": 6892,
											"name": "SWAP2"
										},
										{
											"begin": 6865,
											"end": 6892,
											"name": "MSTORE"
										},
										{
											"begin": 6865,
											"end": 6892,
											"name": "KECCAK256"
										},
										{
											"begin": 6865,
											"end": 6892,
											"name": "SLOAD"
										},
										{
											"begin": 6865,
											"end": 6892,
											"name": "SWAP1"
										},
										{
											"begin": 6767,
											"end": 6899,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12906,
											"end": 13085,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 12906,
											"end": 13085,
											"name": "JUMPDEST"
										},
										{
											"begin": 4715,
											"end": 4720,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4715,
											"end": 4720,
											"name": "SLOAD"
										},
										{
											"begin": 4715,
											"end": 4720,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4715,
											"end": 4720,
											"name": "SWAP1"
										},
										{
											"begin": 4715,
											"end": 4720,
											"name": "DIV"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4715,
											"end": 4720,
											"name": "AND"
										},
										{
											"begin": 4701,
											"end": 4711,
											"name": "CALLER"
										},
										{
											"begin": 4701,
											"end": 4720,
											"name": "EQ"
										},
										{
											"begin": 4693,
											"end": 4748,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 4693,
											"end": 4748,
											"name": "JUMPI"
										},
										{
											"begin": 4693,
											"end": 4748,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4693,
											"end": 4748,
											"name": "DUP1"
										},
										{
											"begin": 4693,
											"end": 4748,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 4693,
											"end": 4748,
											"name": "DUP2"
										},
										{
											"begin": 4693,
											"end": 4748,
											"name": "MSTORE"
										},
										{
											"begin": 4693,
											"end": 4748,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4693,
											"end": 4748,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4693,
											"end": 4748,
											"name": "DUP3"
										},
										{
											"begin": 4693,
											"end": 4748,
											"name": "ADD"
										},
										{
											"begin": 4693,
											"end": 4748,
											"name": "MSTORE"
										},
										{
											"begin": 4693,
											"end": 4748,
											"name": "PUSH",
											"value": "17"
										},
										{
											"begin": 4693,
											"end": 4748,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 4693,
											"end": 4748,
											"name": "DUP3"
										},
										{
											"begin": 4693,
											"end": 4748,
											"name": "ADD"
										},
										{
											"begin": 4693,
											"end": 4748,
											"name": "MSTORE"
										},
										{
											"begin": 4693,
											"end": 4748,
											"name": "PUSH",
											"value": "53656E646572206973206E6F7420746865206F776E6572000000000000000000"
										},
										{
											"begin": 4693,
											"end": 4748,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 4693,
											"end": 4748,
											"name": "DUP3"
										},
										{
											"begin": 4693,
											"end": 4748,
											"name": "ADD"
										},
										{
											"begin": 4693,
											"end": 4748,
											"name": "MSTORE"
										},
										{
											"begin": 4693,
											"end": 4748,
											"name": "SWAP1"
										},
										{
											"begin": 4693,
											"end": 4748,
											"name": "MLOAD"
										},
										{
											"begin": 4693,
											"end": 4748,
											"name": "SWAP1"
										},
										{
											"begin": 4693,
											"end": 4748,
											"name": "DUP2"
										},
										{
											"begin": 4693,
											"end": 4748,
											"name": "SWAP1"
										},
										{
											"begin": 4693,
											"end": 4748,
											"name": "SUB"
										},
										{
											"begin": 4693,
											"end": 4748,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 4693,
											"end": 4748,
											"name": "ADD"
										},
										{
											"begin": 4693,
											"end": 4748,
											"name": "SWAP1"
										},
										{
											"begin": 4693,
											"end": 4748,
											"name": "REVERT"
										},
										{
											"begin": 4693,
											"end": 4748,
											"name": "tag",
											"value": "116"
										},
										{
											"begin": 4693,
											"end": 4748,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 12984,
											"end": 13006,
											"name": "DUP2"
										},
										{
											"begin": 12984,
											"end": 13006,
											"name": "AND"
										},
										{
											"begin": 12984,
											"end": 13006,
											"name": "ISZERO"
										},
										{
											"begin": 12984,
											"end": 13006,
											"name": "ISZERO"
										},
										{
											"begin": 12976,
											"end": 13007,
											"name": "PUSH [tag]",
											"value": "118"
										},
										{
											"begin": 12976,
											"end": 13007,
											"name": "JUMPI"
										},
										{
											"begin": 12976,
											"end": 13007,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12976,
											"end": 13007,
											"name": "DUP1"
										},
										{
											"begin": 12976,
											"end": 13007,
											"name": "REVERT"
										},
										{
											"begin": 12976,
											"end": 13007,
											"name": "tag",
											"value": "118"
										},
										{
											"begin": 12976,
											"end": 13007,
											"name": "JUMPDEST"
										},
										{
											"begin": 13015,
											"end": 13020,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13015,
											"end": 13031,
											"name": "DUP1"
										},
										{
											"begin": 13015,
											"end": 13031,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 13015,
											"end": 13031,
											"name": "AND"
										},
										{
											"begin": 13015,
											"end": 13031,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13015,
											"end": 13031,
											"name": "DUP5"
										},
										{
											"begin": 13015,
											"end": 13031,
											"name": "DUP2"
										},
										{
											"begin": 13015,
											"end": 13031,
											"name": "AND"
										},
										{
											"begin": 13015,
											"end": 13031,
											"name": "DUP3"
										},
										{
											"begin": 13015,
											"end": 13031,
											"name": "DUP2"
										},
										{
											"begin": 13015,
											"end": 13031,
											"name": "MUL"
										},
										{
											"begin": 13015,
											"end": 13031,
											"name": "SWAP4"
										},
										{
											"begin": 13015,
											"end": 13031,
											"name": "SWAP1"
										},
										{
											"begin": 13015,
											"end": 13031,
											"name": "SWAP4"
										},
										{
											"begin": 13015,
											"end": 13031,
											"name": "OR"
										},
										{
											"begin": 13015,
											"end": 13031,
											"name": "SWAP4"
										},
										{
											"begin": 13015,
											"end": 13031,
											"name": "DUP5"
										},
										{
											"begin": 13015,
											"end": 13031,
											"name": "SWAP1"
										},
										{
											"begin": 13015,
											"end": 13031,
											"name": "SSTORE"
										},
										{
											"begin": 13044,
											"end": 13078,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13044,
											"end": 13078,
											"name": "MLOAD"
										},
										{
											"begin": 13015,
											"end": 13031,
											"name": "SWAP3"
										},
										{
											"begin": 13015,
											"end": 13031,
											"name": "SWAP4"
										},
										{
											"begin": 13062,
											"end": 13067,
											"name": "SWAP2"
										},
										{
											"begin": 13062,
											"end": 13067,
											"name": "SWAP1"
										},
										{
											"begin": 13062,
											"end": 13067,
											"name": "SWAP2"
										},
										{
											"begin": 13062,
											"end": 13067,
											"name": "DIV"
										},
										{
											"begin": 13062,
											"end": 13067,
											"name": "AND"
										},
										{
											"begin": 13062,
											"end": 13067,
											"name": "SWAP1"
										},
										{
											"begin": 13044,
											"end": 13078,
											"name": "PUSH",
											"value": "5C486528EC3E3F0EA91181CFF8116F02BFA350E03B8B6F12E00765ADBB5AF85C"
										},
										{
											"begin": 13044,
											"end": 13078,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1"
										},
										{
											"begin": 13044,
											"end": 13078,
											"name": "LOG3"
										},
										{
											"begin": 12906,
											"end": 13085,
											"name": "POP"
										},
										{
											"begin": 12906,
											"end": 13085,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10999,
											"end": 11328,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 10999,
											"end": 11328,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 11091,
											"end": 11110,
											"name": "DUP4"
										},
										{
											"begin": 11091,
											"end": 11110,
											"name": "AND"
										},
										{
											"begin": 11091,
											"end": 11110,
											"name": "ISZERO"
										},
										{
											"begin": 11091,
											"end": 11110,
											"name": "ISZERO"
										},
										{
											"begin": 11083,
											"end": 11151,
											"name": "PUSH [tag]",
											"value": "120"
										},
										{
											"begin": 11083,
											"end": 11151,
											"name": "JUMPI"
										},
										{
											"begin": 11083,
											"end": 11151,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11083,
											"end": 11151,
											"name": "DUP1"
										},
										{
											"begin": 11083,
											"end": 11151,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 11083,
											"end": 11151,
											"name": "DUP2"
										},
										{
											"begin": 11083,
											"end": 11151,
											"name": "MSTORE"
										},
										{
											"begin": 11083,
											"end": 11151,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11083,
											"end": 11151,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11083,
											"end": 11151,
											"name": "DUP3"
										},
										{
											"begin": 11083,
											"end": 11151,
											"name": "ADD"
										},
										{
											"begin": 11083,
											"end": 11151,
											"name": "MSTORE"
										},
										{
											"begin": 11083,
											"end": 11151,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 11083,
											"end": 11151,
											"name": "DUP1"
										},
										{
											"begin": 11083,
											"end": 11151,
											"name": "DUP3"
										},
										{
											"begin": 11083,
											"end": 11151,
											"name": "ADD"
										},
										{
											"begin": 11083,
											"end": 11151,
											"name": "MSTORE"
										},
										{
											"begin": 11083,
											"end": 11151,
											"name": "PUSH",
											"value": "5A524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 11083,
											"end": 11151,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 11083,
											"end": 11151,
											"name": "DUP3"
										},
										{
											"begin": 11083,
											"end": 11151,
											"name": "ADD"
										},
										{
											"begin": 11083,
											"end": 11151,
											"name": "MSTORE"
										},
										{
											"begin": 11083,
											"end": 11151,
											"name": "PUSH",
											"value": "7265737300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11083,
											"end": 11151,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 11083,
											"end": 11151,
											"name": "DUP3"
										},
										{
											"begin": 11083,
											"end": 11151,
											"name": "ADD"
										},
										{
											"begin": 11083,
											"end": 11151,
											"name": "MSTORE"
										},
										{
											"begin": 11083,
											"end": 11151,
											"name": "SWAP1"
										},
										{
											"begin": 11083,
											"end": 11151,
											"name": "MLOAD"
										},
										{
											"begin": 11083,
											"end": 11151,
											"name": "SWAP1"
										},
										{
											"begin": 11083,
											"end": 11151,
											"name": "DUP2"
										},
										{
											"begin": 11083,
											"end": 11151,
											"name": "SWAP1"
										},
										{
											"begin": 11083,
											"end": 11151,
											"name": "SUB"
										},
										{
											"begin": 11083,
											"end": 11151,
											"name": "PUSH",
											"value": "84"
										},
										{
											"begin": 11083,
											"end": 11151,
											"name": "ADD"
										},
										{
											"begin": 11083,
											"end": 11151,
											"name": "SWAP1"
										},
										{
											"begin": 11083,
											"end": 11151,
											"name": "REVERT"
										},
										{
											"begin": 11083,
											"end": 11151,
											"name": "tag",
											"value": "120"
										},
										{
											"begin": 11083,
											"end": 11151,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 11169,
											"end": 11190,
											"name": "DUP3"
										},
										{
											"begin": 11169,
											"end": 11190,
											"name": "AND"
										},
										{
											"begin": 11169,
											"end": 11190,
											"name": "ISZERO"
										},
										{
											"begin": 11169,
											"end": 11190,
											"name": "ISZERO"
										},
										{
											"begin": 11161,
											"end": 11229,
											"name": "PUSH [tag]",
											"value": "121"
										},
										{
											"begin": 11161,
											"end": 11229,
											"name": "JUMPI"
										},
										{
											"begin": 11161,
											"end": 11229,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11161,
											"end": 11229,
											"name": "DUP1"
										},
										{
											"begin": 11161,
											"end": 11229,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 11161,
											"end": 11229,
											"name": "DUP2"
										},
										{
											"begin": 11161,
											"end": 11229,
											"name": "MSTORE"
										},
										{
											"begin": 11161,
											"end": 11229,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11161,
											"end": 11229,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11161,
											"end": 11229,
											"name": "DUP3"
										},
										{
											"begin": 11161,
											"end": 11229,
											"name": "ADD"
										},
										{
											"begin": 11161,
											"end": 11229,
											"name": "MSTORE"
										},
										{
											"begin": 11161,
											"end": 11229,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 11161,
											"end": 11229,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 11161,
											"end": 11229,
											"name": "DUP3"
										},
										{
											"begin": 11161,
											"end": 11229,
											"name": "ADD"
										},
										{
											"begin": 11161,
											"end": 11229,
											"name": "MSTORE"
										},
										{
											"begin": 11161,
											"end": 11229,
											"name": "PUSH",
											"value": "5A524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 11161,
											"end": 11229,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 11161,
											"end": 11229,
											"name": "DUP3"
										},
										{
											"begin": 11161,
											"end": 11229,
											"name": "ADD"
										},
										{
											"begin": 11161,
											"end": 11229,
											"name": "MSTORE"
										},
										{
											"begin": 11161,
											"end": 11229,
											"name": "PUSH",
											"value": "7373000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11161,
											"end": 11229,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 11161,
											"end": 11229,
											"name": "DUP3"
										},
										{
											"begin": 11161,
											"end": 11229,
											"name": "ADD"
										},
										{
											"begin": 11161,
											"end": 11229,
											"name": "MSTORE"
										},
										{
											"begin": 11161,
											"end": 11229,
											"name": "SWAP1"
										},
										{
											"begin": 11161,
											"end": 11229,
											"name": "MLOAD"
										},
										{
											"begin": 11161,
											"end": 11229,
											"name": "SWAP1"
										},
										{
											"begin": 11161,
											"end": 11229,
											"name": "DUP2"
										},
										{
											"begin": 11161,
											"end": 11229,
											"name": "SWAP1"
										},
										{
											"begin": 11161,
											"end": 11229,
											"name": "SUB"
										},
										{
											"begin": 11161,
											"end": 11229,
											"name": "PUSH",
											"value": "84"
										},
										{
											"begin": 11161,
											"end": 11229,
											"name": "ADD"
										},
										{
											"begin": 11161,
											"end": 11229,
											"name": "SWAP1"
										},
										{
											"begin": 11161,
											"end": 11229,
											"name": "REVERT"
										},
										{
											"begin": 11161,
											"end": 11229,
											"name": "tag",
											"value": "121"
										},
										{
											"begin": 11161,
											"end": 11229,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 11240,
											"end": 11258,
											"name": "DUP1"
										},
										{
											"begin": 11240,
											"end": 11258,
											"name": "DUP5"
										},
										{
											"begin": 11240,
											"end": 11258,
											"name": "AND"
										},
										{
											"begin": 11240,
											"end": 11258,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11240,
											"end": 11258,
											"name": "DUP2"
										},
										{
											"begin": 11240,
											"end": 11258,
											"name": "DUP2"
										},
										{
											"begin": 11240,
											"end": 11258,
											"name": "MSTORE"
										},
										{
											"begin": 11240,
											"end": 11251,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11240,
											"end": 11258,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11240,
											"end": 11258,
											"name": "SWAP1"
										},
										{
											"begin": 11240,
											"end": 11258,
											"name": "DUP2"
										},
										{
											"begin": 11240,
											"end": 11258,
											"name": "MSTORE"
										},
										{
											"begin": 11240,
											"end": 11258,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11240,
											"end": 11258,
											"name": "DUP1"
										},
										{
											"begin": 11240,
											"end": 11258,
											"name": "DUP4"
										},
										{
											"begin": 11240,
											"end": 11258,
											"name": "KECCAK256"
										},
										{
											"begin": 11240,
											"end": 11267,
											"name": "SWAP5"
										},
										{
											"begin": 11240,
											"end": 11267,
											"name": "DUP8"
										},
										{
											"begin": 11240,
											"end": 11267,
											"name": "AND"
										},
										{
											"begin": 11240,
											"end": 11267,
											"name": "DUP1"
										},
										{
											"begin": 11240,
											"end": 11267,
											"name": "DUP5"
										},
										{
											"begin": 11240,
											"end": 11267,
											"name": "MSTORE"
										},
										{
											"begin": 11240,
											"end": 11267,
											"name": "SWAP5"
										},
										{
											"begin": 11240,
											"end": 11267,
											"name": "DUP3"
										},
										{
											"begin": 11240,
											"end": 11267,
											"name": "MSTORE"
										},
										{
											"begin": 11240,
											"end": 11267,
											"name": "SWAP2"
										},
										{
											"begin": 11240,
											"end": 11267,
											"name": "DUP3"
										},
										{
											"begin": 11240,
											"end": 11267,
											"name": "SWAP1"
										},
										{
											"begin": 11240,
											"end": 11267,
											"name": "KECCAK256"
										},
										{
											"begin": 11240,
											"end": 11275,
											"name": "DUP6"
										},
										{
											"begin": 11240,
											"end": 11275,
											"name": "SWAP1"
										},
										{
											"begin": 11240,
											"end": 11275,
											"name": "SSTORE"
										},
										{
											"begin": 11290,
											"end": 11321,
											"name": "DUP2"
										},
										{
											"begin": 11290,
											"end": 11321,
											"name": "MLOAD"
										},
										{
											"begin": 11290,
											"end": 11321,
											"name": "DUP6"
										},
										{
											"begin": 11290,
											"end": 11321,
											"name": "DUP2"
										},
										{
											"begin": 11290,
											"end": 11321,
											"name": "MSTORE"
										},
										{
											"begin": 11290,
											"end": 11321,
											"name": "SWAP2"
										},
										{
											"begin": 11290,
											"end": 11321,
											"name": "MLOAD"
										},
										{
											"begin": 11290,
											"end": 11321,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 11290,
											"end": 11321,
											"name": "SWAP3"
										},
										{
											"begin": 11290,
											"end": 11321,
											"name": "DUP2"
										},
										{
											"begin": 11290,
											"end": 11321,
											"name": "SWAP1"
										},
										{
											"begin": 11290,
											"end": 11321,
											"name": "SUB"
										},
										{
											"begin": 11290,
											"end": 11321,
											"name": "SWAP1"
										},
										{
											"begin": 11290,
											"end": 11321,
											"name": "SWAP2"
										},
										{
											"begin": 11290,
											"end": 11321,
											"name": "ADD"
										},
										{
											"begin": 11290,
											"end": 11321,
											"name": "SWAP1"
										},
										{
											"begin": 11290,
											"end": 11321,
											"name": "LOG3"
										},
										{
											"begin": 10999,
											"end": 11328,
											"name": "POP"
										},
										{
											"begin": 10999,
											"end": 11328,
											"name": "POP"
										},
										{
											"begin": 10999,
											"end": 11328,
											"name": "POP"
										},
										{
											"begin": 10999,
											"end": 11328,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 9581,
											"end": 10003,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 9581,
											"end": 10003,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 9678,
											"end": 9698,
											"name": "DUP4"
										},
										{
											"begin": 9678,
											"end": 9698,
											"name": "AND"
										},
										{
											"begin": 9678,
											"end": 9698,
											"name": "ISZERO"
										},
										{
											"begin": 9678,
											"end": 9698,
											"name": "ISZERO"
										},
										{
											"begin": 9670,
											"end": 9740,
											"name": "PUSH [tag]",
											"value": "123"
										},
										{
											"begin": 9670,
											"end": 9740,
											"name": "JUMPI"
										},
										{
											"begin": 9670,
											"end": 9740,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9670,
											"end": 9740,
											"name": "DUP1"
										},
										{
											"begin": 9670,
											"end": 9740,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 9670,
											"end": 9740,
											"name": "DUP2"
										},
										{
											"begin": 9670,
											"end": 9740,
											"name": "MSTORE"
										},
										{
											"begin": 9670,
											"end": 9740,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9670,
											"end": 9740,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9670,
											"end": 9740,
											"name": "DUP3"
										},
										{
											"begin": 9670,
											"end": 9740,
											"name": "ADD"
										},
										{
											"begin": 9670,
											"end": 9740,
											"name": "MSTORE"
										},
										{
											"begin": 9670,
											"end": 9740,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 9670,
											"end": 9740,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 9670,
											"end": 9740,
											"name": "DUP3"
										},
										{
											"begin": 9670,
											"end": 9740,
											"name": "ADD"
										},
										{
											"begin": 9670,
											"end": 9740,
											"name": "MSTORE"
										},
										{
											"begin": 9670,
											"end": 9740,
											"name": "PUSH",
											"value": "5A524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 9670,
											"end": 9740,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 9670,
											"end": 9740,
											"name": "DUP3"
										},
										{
											"begin": 9670,
											"end": 9740,
											"name": "ADD"
										},
										{
											"begin": 9670,
											"end": 9740,
											"name": "MSTORE"
										},
										{
											"begin": 9670,
											"end": 9740,
											"name": "PUSH",
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9670,
											"end": 9740,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 9670,
											"end": 9740,
											"name": "DUP3"
										},
										{
											"begin": 9670,
											"end": 9740,
											"name": "ADD"
										},
										{
											"begin": 9670,
											"end": 9740,
											"name": "MSTORE"
										},
										{
											"begin": 9670,
											"end": 9740,
											"name": "SWAP1"
										},
										{
											"begin": 9670,
											"end": 9740,
											"name": "MLOAD"
										},
										{
											"begin": 9670,
											"end": 9740,
											"name": "SWAP1"
										},
										{
											"begin": 9670,
											"end": 9740,
											"name": "DUP2"
										},
										{
											"begin": 9670,
											"end": 9740,
											"name": "SWAP1"
										},
										{
											"begin": 9670,
											"end": 9740,
											"name": "SUB"
										},
										{
											"begin": 9670,
											"end": 9740,
											"name": "PUSH",
											"value": "84"
										},
										{
											"begin": 9670,
											"end": 9740,
											"name": "ADD"
										},
										{
											"begin": 9670,
											"end": 9740,
											"name": "SWAP1"
										},
										{
											"begin": 9670,
											"end": 9740,
											"name": "REVERT"
										},
										{
											"begin": 9670,
											"end": 9740,
											"name": "tag",
											"value": "123"
										},
										{
											"begin": 9670,
											"end": 9740,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 9758,
											"end": 9781,
											"name": "DUP3"
										},
										{
											"begin": 9758,
											"end": 9781,
											"name": "AND"
										},
										{
											"begin": 9758,
											"end": 9781,
											"name": "ISZERO"
										},
										{
											"begin": 9758,
											"end": 9781,
											"name": "ISZERO"
										},
										{
											"begin": 9750,
											"end": 9821,
											"name": "PUSH [tag]",
											"value": "124"
										},
										{
											"begin": 9750,
											"end": 9821,
											"name": "JUMPI"
										},
										{
											"begin": 9750,
											"end": 9821,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9750,
											"end": 9821,
											"name": "DUP1"
										},
										{
											"begin": 9750,
											"end": 9821,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 9750,
											"end": 9821,
											"name": "DUP2"
										},
										{
											"begin": 9750,
											"end": 9821,
											"name": "MSTORE"
										},
										{
											"begin": 9750,
											"end": 9821,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9750,
											"end": 9821,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9750,
											"end": 9821,
											"name": "DUP3"
										},
										{
											"begin": 9750,
											"end": 9821,
											"name": "ADD"
										},
										{
											"begin": 9750,
											"end": 9821,
											"name": "MSTORE"
										},
										{
											"begin": 9750,
											"end": 9821,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 9750,
											"end": 9821,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 9750,
											"end": 9821,
											"name": "DUP3"
										},
										{
											"begin": 9750,
											"end": 9821,
											"name": "ADD"
										},
										{
											"begin": 9750,
											"end": 9821,
											"name": "MSTORE"
										},
										{
											"begin": 9750,
											"end": 9821,
											"name": "PUSH",
											"value": "5A524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 9750,
											"end": 9821,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 9750,
											"end": 9821,
											"name": "DUP3"
										},
										{
											"begin": 9750,
											"end": 9821,
											"name": "ADD"
										},
										{
											"begin": 9750,
											"end": 9821,
											"name": "MSTORE"
										},
										{
											"begin": 9750,
											"end": 9821,
											"name": "PUSH",
											"value": "6573730000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9750,
											"end": 9821,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 9750,
											"end": 9821,
											"name": "DUP3"
										},
										{
											"begin": 9750,
											"end": 9821,
											"name": "ADD"
										},
										{
											"begin": 9750,
											"end": 9821,
											"name": "MSTORE"
										},
										{
											"begin": 9750,
											"end": 9821,
											"name": "SWAP1"
										},
										{
											"begin": 9750,
											"end": 9821,
											"name": "MLOAD"
										},
										{
											"begin": 9750,
											"end": 9821,
											"name": "SWAP1"
										},
										{
											"begin": 9750,
											"end": 9821,
											"name": "DUP2"
										},
										{
											"begin": 9750,
											"end": 9821,
											"name": "SWAP1"
										},
										{
											"begin": 9750,
											"end": 9821,
											"name": "SUB"
										},
										{
											"begin": 9750,
											"end": 9821,
											"name": "PUSH",
											"value": "84"
										},
										{
											"begin": 9750,
											"end": 9821,
											"name": "ADD"
										},
										{
											"begin": 9750,
											"end": 9821,
											"name": "SWAP1"
										},
										{
											"begin": 9750,
											"end": 9821,
											"name": "REVERT"
										},
										{
											"begin": 9750,
											"end": 9821,
											"name": "tag",
											"value": "124"
										},
										{
											"begin": 9750,
											"end": 9821,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 9852,
											"end": 9869,
											"name": "DUP4"
										},
										{
											"begin": 9852,
											"end": 9869,
											"name": "AND"
										},
										{
											"begin": 9852,
											"end": 9861,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9852,
											"end": 9869,
											"name": "SWAP1"
										},
										{
											"begin": 9852,
											"end": 9869,
											"name": "DUP2"
										},
										{
											"begin": 9852,
											"end": 9869,
											"name": "MSTORE"
										},
										{
											"begin": 9852,
											"end": 9869,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9852,
											"end": 9869,
											"name": "DUP2"
										},
										{
											"begin": 9852,
											"end": 9869,
											"name": "SWAP1"
										},
										{
											"begin": 9852,
											"end": 9869,
											"name": "MSTORE"
										},
										{
											"begin": 9852,
											"end": 9869,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9852,
											"end": 9869,
											"name": "SWAP1"
										},
										{
											"begin": 9852,
											"end": 9869,
											"name": "KECCAK256"
										},
										{
											"begin": 9852,
											"end": 9869,
											"name": "SLOAD"
										},
										{
											"begin": 9852,
											"end": 9881,
											"name": "PUSH [tag]",
											"value": "125"
										},
										{
											"begin": 9852,
											"end": 9881,
											"name": "SWAP1"
										},
										{
											"begin": 9874,
											"end": 9880,
											"name": "DUP3"
										},
										{
											"begin": 9852,
											"end": 9881,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 9852,
											"end": 9873,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 9852,
											"end": 9881,
											"name": "AND"
										},
										{
											"begin": 9852,
											"end": 9881,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9852,
											"end": 9881,
											"name": "tag",
											"value": "125"
										},
										{
											"begin": 9852,
											"end": 9881,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 9832,
											"end": 9849,
											"name": "DUP1"
										},
										{
											"begin": 9832,
											"end": 9849,
											"name": "DUP6"
										},
										{
											"begin": 9832,
											"end": 9849,
											"name": "AND"
										},
										{
											"begin": 9832,
											"end": 9841,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9832,
											"end": 9849,
											"name": "SWAP1"
										},
										{
											"begin": 9832,
											"end": 9849,
											"name": "DUP2"
										},
										{
											"begin": 9832,
											"end": 9849,
											"name": "MSTORE"
										},
										{
											"begin": 9832,
											"end": 9849,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9832,
											"end": 9849,
											"name": "DUP2"
										},
										{
											"begin": 9832,
											"end": 9849,
											"name": "SWAP1"
										},
										{
											"begin": 9832,
											"end": 9849,
											"name": "MSTORE"
										},
										{
											"begin": 9832,
											"end": 9849,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9832,
											"end": 9849,
											"name": "DUP1"
										},
										{
											"begin": 9832,
											"end": 9849,
											"name": "DUP3"
										},
										{
											"begin": 9832,
											"end": 9849,
											"name": "KECCAK256"
										},
										{
											"begin": 9832,
											"end": 9881,
											"name": "SWAP4"
										},
										{
											"begin": 9832,
											"end": 9881,
											"name": "SWAP1"
										},
										{
											"begin": 9832,
											"end": 9881,
											"name": "SWAP4"
										},
										{
											"begin": 9832,
											"end": 9881,
											"name": "SSTORE"
										},
										{
											"begin": 9914,
											"end": 9934,
											"name": "SWAP1"
										},
										{
											"begin": 9914,
											"end": 9934,
											"name": "DUP5"
										},
										{
											"begin": 9914,
											"end": 9934,
											"name": "AND"
										},
										{
											"begin": 9914,
											"end": 9934,
											"name": "DUP2"
										},
										{
											"begin": 9914,
											"end": 9934,
											"name": "MSTORE"
										},
										{
											"begin": 9914,
											"end": 9934,
											"name": "KECCAK256"
										},
										{
											"begin": 9914,
											"end": 9934,
											"name": "SLOAD"
										},
										{
											"begin": 9914,
											"end": 9946,
											"name": "PUSH [tag]",
											"value": "126"
										},
										{
											"begin": 9914,
											"end": 9946,
											"name": "SWAP1"
										},
										{
											"begin": 9939,
											"end": 9945,
											"name": "DUP3"
										},
										{
											"begin": 9914,
											"end": 9946,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 9914,
											"end": 9938,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 9914,
											"end": 9946,
											"name": "AND"
										},
										{
											"begin": 9914,
											"end": 9946,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9914,
											"end": 9946,
											"name": "tag",
											"value": "126"
										},
										{
											"begin": 9914,
											"end": 9946,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 9891,
											"end": 9911,
											"name": "DUP1"
										},
										{
											"begin": 9891,
											"end": 9911,
											"name": "DUP5"
										},
										{
											"begin": 9891,
											"end": 9911,
											"name": "AND"
										},
										{
											"begin": 9891,
											"end": 9900,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9891,
											"end": 9911,
											"name": "DUP2"
										},
										{
											"begin": 9891,
											"end": 9911,
											"name": "DUP2"
										},
										{
											"begin": 9891,
											"end": 9911,
											"name": "MSTORE"
										},
										{
											"begin": 9891,
											"end": 9911,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9891,
											"end": 9911,
											"name": "DUP2"
										},
										{
											"begin": 9891,
											"end": 9911,
											"name": "DUP2"
										},
										{
											"begin": 9891,
											"end": 9911,
											"name": "MSTORE"
										},
										{
											"begin": 9891,
											"end": 9911,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9891,
											"end": 9911,
											"name": "SWAP2"
										},
										{
											"begin": 9891,
											"end": 9911,
											"name": "DUP3"
										},
										{
											"begin": 9891,
											"end": 9911,
											"name": "SWAP1"
										},
										{
											"begin": 9891,
											"end": 9911,
											"name": "KECCAK256"
										},
										{
											"begin": 9891,
											"end": 9946,
											"name": "SWAP5"
										},
										{
											"begin": 9891,
											"end": 9946,
											"name": "SWAP1"
										},
										{
											"begin": 9891,
											"end": 9946,
											"name": "SWAP5"
										},
										{
											"begin": 9891,
											"end": 9946,
											"name": "SSTORE"
										},
										{
											"begin": 9961,
											"end": 9996,
											"name": "DUP1"
										},
										{
											"begin": 9961,
											"end": 9996,
											"name": "MLOAD"
										},
										{
											"begin": 9961,
											"end": 9996,
											"name": "DUP6"
										},
										{
											"begin": 9961,
											"end": 9996,
											"name": "DUP2"
										},
										{
											"begin": 9961,
											"end": 9996,
											"name": "MSTORE"
										},
										{
											"begin": 9961,
											"end": 9996,
											"name": "SWAP1"
										},
										{
											"begin": 9961,
											"end": 9996,
											"name": "MLOAD"
										},
										{
											"begin": 9891,
											"end": 9911,
											"name": "SWAP2"
										},
										{
											"begin": 9891,
											"end": 9911,
											"name": "SWAP4"
										},
										{
											"begin": 9961,
											"end": 9996,
											"name": "SWAP3"
										},
										{
											"begin": 9961,
											"end": 9996,
											"name": "DUP8"
										},
										{
											"begin": 9961,
											"end": 9996,
											"name": "AND"
										},
										{
											"begin": 9961,
											"end": 9996,
											"name": "SWAP3"
										},
										{
											"begin": 9961,
											"end": 9996,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9961,
											"end": 9996,
											"name": "SWAP3"
										},
										{
											"begin": 9961,
											"end": 9996,
											"name": "SWAP2"
										},
										{
											"begin": 9961,
											"end": 9996,
											"name": "DUP3"
										},
										{
											"begin": 9961,
											"end": 9996,
											"name": "SWAP1"
										},
										{
											"begin": 9961,
											"end": 9996,
											"name": "SUB"
										},
										{
											"begin": 9961,
											"end": 9996,
											"name": "ADD"
										},
										{
											"begin": 9961,
											"end": 9996,
											"name": "SWAP1"
										},
										{
											"begin": 9961,
											"end": 9996,
											"name": "LOG3"
										},
										{
											"begin": 9581,
											"end": 10003,
											"name": "POP"
										},
										{
											"begin": 9581,
											"end": 10003,
											"name": "POP"
										},
										{
											"begin": 9581,
											"end": 10003,
											"name": "POP"
										},
										{
											"begin": 9581,
											"end": 10003,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1384,
											"end": 1563,
											"name": "tag",
											"value": "87"
										},
										{
											"begin": 1384,
											"end": 1563,
											"name": "JUMPDEST"
										},
										{
											"begin": 1442,
											"end": 1449,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1442,
											"end": 1449,
											"name": "DUP1"
										},
										{
											"begin": 1469,
											"end": 1475,
											"name": "DUP4"
										},
										{
											"begin": 1469,
											"end": 1475,
											"name": "DUP4"
										},
										{
											"begin": 1469,
											"end": 1475,
											"name": "GT"
										},
										{
											"begin": 1469,
											"end": 1475,
											"name": "ISZERO"
										},
										{
											"begin": 1461,
											"end": 1510,
											"name": "PUSH [tag]",
											"value": "128"
										},
										{
											"begin": 1461,
											"end": 1510,
											"name": "JUMPI"
										},
										{
											"begin": 1461,
											"end": 1510,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1461,
											"end": 1510,
											"name": "DUP1"
										},
										{
											"begin": 1461,
											"end": 1510,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 1461,
											"end": 1510,
											"name": "DUP2"
										},
										{
											"begin": 1461,
											"end": 1510,
											"name": "MSTORE"
										},
										{
											"begin": 1461,
											"end": 1510,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1461,
											"end": 1510,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1461,
											"end": 1510,
											"name": "DUP3"
										},
										{
											"begin": 1461,
											"end": 1510,
											"name": "ADD"
										},
										{
											"begin": 1461,
											"end": 1510,
											"name": "MSTORE"
										},
										{
											"begin": 1461,
											"end": 1510,
											"name": "PUSH",
											"value": "1E"
										},
										{
											"begin": 1461,
											"end": 1510,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 1461,
											"end": 1510,
											"name": "DUP3"
										},
										{
											"begin": 1461,
											"end": 1510,
											"name": "ADD"
										},
										{
											"begin": 1461,
											"end": 1510,
											"name": "MSTORE"
										},
										{
											"begin": 1461,
											"end": 1510,
											"name": "PUSH",
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 1461,
											"end": 1510,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 1461,
											"end": 1510,
											"name": "DUP3"
										},
										{
											"begin": 1461,
											"end": 1510,
											"name": "ADD"
										},
										{
											"begin": 1461,
											"end": 1510,
											"name": "MSTORE"
										},
										{
											"begin": 1461,
											"end": 1510,
											"name": "SWAP1"
										},
										{
											"begin": 1461,
											"end": 1510,
											"name": "MLOAD"
										},
										{
											"begin": 1461,
											"end": 1510,
											"name": "SWAP1"
										},
										{
											"begin": 1461,
											"end": 1510,
											"name": "DUP2"
										},
										{
											"begin": 1461,
											"end": 1510,
											"name": "SWAP1"
										},
										{
											"begin": 1461,
											"end": 1510,
											"name": "SUB"
										},
										{
											"begin": 1461,
											"end": 1510,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 1461,
											"end": 1510,
											"name": "ADD"
										},
										{
											"begin": 1461,
											"end": 1510,
											"name": "SWAP1"
										},
										{
											"begin": 1461,
											"end": 1510,
											"name": "REVERT"
										},
										{
											"begin": 1461,
											"end": 1510,
											"name": "tag",
											"value": "128"
										},
										{
											"begin": 1461,
											"end": 1510,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 1532,
											"end": 1537,
											"name": "SWAP1"
										},
										{
											"begin": 1532,
											"end": 1537,
											"name": "SUB"
										},
										{
											"begin": 1532,
											"end": 1537,
											"name": "SWAP1"
										},
										{
											"begin": 1384,
											"end": 1563,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 944,
											"end": 1120,
											"name": "tag",
											"value": "92"
										},
										{
											"begin": 944,
											"end": 1120,
											"name": "JUMPDEST"
										},
										{
											"begin": 1002,
											"end": 1009,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1038,
											"name": "DUP3"
										},
										{
											"begin": 1033,
											"end": 1038,
											"name": "DUP3"
										},
										{
											"begin": 1033,
											"end": 1038,
											"name": "ADD"
										},
										{
											"begin": 1056,
											"end": 1062,
											"name": "DUP4"
										},
										{
											"begin": 1056,
											"end": 1062,
											"name": "DUP2"
										},
										{
											"begin": 1056,
											"end": 1062,
											"name": "LT"
										},
										{
											"begin": 1056,
											"end": 1062,
											"name": "ISZERO"
										},
										{
											"begin": 1048,
											"end": 1094,
											"name": "PUSH [tag]",
											"value": "130"
										},
										{
											"begin": 1048,
											"end": 1094,
											"name": "JUMPI"
										},
										{
											"begin": 1048,
											"end": 1094,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1048,
											"end": 1094,
											"name": "DUP1"
										},
										{
											"begin": 1048,
											"end": 1094,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 1048,
											"end": 1094,
											"name": "DUP2"
										},
										{
											"begin": 1048,
											"end": 1094,
											"name": "MSTORE"
										},
										{
											"begin": 1048,
											"end": 1094,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1048,
											"end": 1094,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1048,
											"end": 1094,
											"name": "DUP3"
										},
										{
											"begin": 1048,
											"end": 1094,
											"name": "ADD"
										},
										{
											"begin": 1048,
											"end": 1094,
											"name": "MSTORE"
										},
										{
											"begin": 1048,
											"end": 1094,
											"name": "PUSH",
											"value": "1B"
										},
										{
											"begin": 1048,
											"end": 1094,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 1048,
											"end": 1094,
											"name": "DUP3"
										},
										{
											"begin": 1048,
											"end": 1094,
											"name": "ADD"
										},
										{
											"begin": 1048,
											"end": 1094,
											"name": "MSTORE"
										},
										{
											"begin": 1048,
											"end": 1094,
											"name": "PUSH",
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 1048,
											"end": 1094,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 1048,
											"end": 1094,
											"name": "DUP3"
										},
										{
											"begin": 1048,
											"end": 1094,
											"name": "ADD"
										},
										{
											"begin": 1048,
											"end": 1094,
											"name": "MSTORE"
										},
										{
											"begin": 1048,
											"end": 1094,
											"name": "SWAP1"
										},
										{
											"begin": 1048,
											"end": 1094,
											"name": "MLOAD"
										},
										{
											"begin": 1048,
											"end": 1094,
											"name": "SWAP1"
										},
										{
											"begin": 1048,
											"end": 1094,
											"name": "DUP2"
										},
										{
											"begin": 1048,
											"end": 1094,
											"name": "SWAP1"
										},
										{
											"begin": 1048,
											"end": 1094,
											"name": "SUB"
										},
										{
											"begin": 1048,
											"end": 1094,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 1048,
											"end": 1094,
											"name": "ADD"
										},
										{
											"begin": 1048,
											"end": 1094,
											"name": "SWAP1"
										},
										{
											"begin": 1048,
											"end": 1094,
											"name": "REVERT"
										},
										{
											"begin": 1048,
											"end": 1094,
											"name": "tag",
											"value": "130"
										},
										{
											"begin": 1048,
											"end": 1094,
											"name": "JUMPDEST"
										},
										{
											"begin": 1112,
											"end": 1113,
											"name": "SWAP4"
										},
										{
											"begin": 944,
											"end": 1120,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 944,
											"end": 1120,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11992,
											"end": 12292,
											"name": "tag",
											"value": "95"
										},
										{
											"begin": 11992,
											"end": 12292,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 12066,
											"end": 12087,
											"name": "DUP3"
										},
										{
											"begin": 12066,
											"end": 12087,
											"name": "AND"
										},
										{
											"begin": 12066,
											"end": 12087,
											"name": "ISZERO"
										},
										{
											"begin": 12066,
											"end": 12087,
											"name": "ISZERO"
										},
										{
											"begin": 12058,
											"end": 12125,
											"name": "PUSH [tag]",
											"value": "132"
										},
										{
											"begin": 12058,
											"end": 12125,
											"name": "JUMPI"
										},
										{
											"begin": 12058,
											"end": 12125,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12058,
											"end": 12125,
											"name": "DUP1"
										},
										{
											"begin": 12058,
											"end": 12125,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 12058,
											"end": 12125,
											"name": "DUP2"
										},
										{
											"begin": 12058,
											"end": 12125,
											"name": "MSTORE"
										},
										{
											"begin": 12058,
											"end": 12125,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12058,
											"end": 12125,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12058,
											"end": 12125,
											"name": "DUP3"
										},
										{
											"begin": 12058,
											"end": 12125,
											"name": "ADD"
										},
										{
											"begin": 12058,
											"end": 12125,
											"name": "MSTORE"
										},
										{
											"begin": 12058,
											"end": 12125,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 12058,
											"end": 12125,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 12058,
											"end": 12125,
											"name": "DUP3"
										},
										{
											"begin": 12058,
											"end": 12125,
											"name": "ADD"
										},
										{
											"begin": 12058,
											"end": 12125,
											"name": "MSTORE"
										},
										{
											"begin": 12058,
											"end": 12125,
											"name": "PUSH",
											"value": "5A524332303A206275726E2066726F6D20746865207A65726F20616464726573"
										},
										{
											"begin": 12058,
											"end": 12125,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 12058,
											"end": 12125,
											"name": "DUP3"
										},
										{
											"begin": 12058,
											"end": 12125,
											"name": "ADD"
										},
										{
											"begin": 12058,
											"end": 12125,
											"name": "MSTORE"
										},
										{
											"begin": 12058,
											"end": 12125,
											"name": "PUSH",
											"value": "7300000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12058,
											"end": 12125,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 12058,
											"end": 12125,
											"name": "DUP3"
										},
										{
											"begin": 12058,
											"end": 12125,
											"name": "ADD"
										},
										{
											"begin": 12058,
											"end": 12125,
											"name": "MSTORE"
										},
										{
											"begin": 12058,
											"end": 12125,
											"name": "SWAP1"
										},
										{
											"begin": 12058,
											"end": 12125,
											"name": "MLOAD"
										},
										{
											"begin": 12058,
											"end": 12125,
											"name": "SWAP1"
										},
										{
											"begin": 12058,
											"end": 12125,
											"name": "DUP2"
										},
										{
											"begin": 12058,
											"end": 12125,
											"name": "SWAP1"
										},
										{
											"begin": 12058,
											"end": 12125,
											"name": "SUB"
										},
										{
											"begin": 12058,
											"end": 12125,
											"name": "PUSH",
											"value": "84"
										},
										{
											"begin": 12058,
											"end": 12125,
											"name": "ADD"
										},
										{
											"begin": 12058,
											"end": 12125,
											"name": "SWAP1"
										},
										{
											"begin": 12058,
											"end": 12125,
											"name": "REVERT"
										},
										{
											"begin": 12058,
											"end": 12125,
											"name": "tag",
											"value": "132"
										},
										{
											"begin": 12058,
											"end": 12125,
											"name": "JUMPDEST"
										},
										{
											"begin": 12151,
											"end": 12163,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 12151,
											"end": 12163,
											"name": "SLOAD"
										},
										{
											"begin": 12151,
											"end": 12174,
											"name": "PUSH [tag]",
											"value": "133"
										},
										{
											"begin": 12151,
											"end": 12174,
											"name": "SWAP1"
										},
										{
											"begin": 12168,
											"end": 12173,
											"name": "DUP3"
										},
										{
											"begin": 12151,
											"end": 12174,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 12151,
											"end": 12167,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 12151,
											"end": 12174,
											"name": "AND"
										},
										{
											"begin": 12151,
											"end": 12174,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12151,
											"end": 12174,
											"name": "tag",
											"value": "133"
										},
										{
											"begin": 12151,
											"end": 12174,
											"name": "JUMPDEST"
										},
										{
											"begin": 12136,
											"end": 12148,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 12136,
											"end": 12174,
											"name": "SSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 12205,
											"end": 12223,
											"name": "DUP3"
										},
										{
											"begin": 12205,
											"end": 12223,
											"name": "AND"
										},
										{
											"begin": 12205,
											"end": 12214,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12205,
											"end": 12223,
											"name": "SWAP1"
										},
										{
											"begin": 12205,
											"end": 12223,
											"name": "DUP2"
										},
										{
											"begin": 12205,
											"end": 12223,
											"name": "MSTORE"
										},
										{
											"begin": 12205,
											"end": 12223,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12205,
											"end": 12223,
											"name": "DUP2"
										},
										{
											"begin": 12205,
											"end": 12223,
											"name": "SWAP1"
										},
										{
											"begin": 12205,
											"end": 12223,
											"name": "MSTORE"
										},
										{
											"begin": 12205,
											"end": 12223,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12205,
											"end": 12223,
											"name": "SWAP1"
										},
										{
											"begin": 12205,
											"end": 12223,
											"name": "KECCAK256"
										},
										{
											"begin": 12205,
											"end": 12223,
											"name": "SLOAD"
										},
										{
											"begin": 12205,
											"end": 12234,
											"name": "PUSH [tag]",
											"value": "134"
										},
										{
											"begin": 12205,
											"end": 12234,
											"name": "SWAP1"
										},
										{
											"begin": 12228,
											"end": 12233,
											"name": "DUP3"
										},
										{
											"begin": 12205,
											"end": 12234,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 12205,
											"end": 12227,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 12205,
											"end": 12234,
											"name": "AND"
										},
										{
											"begin": 12205,
											"end": 12234,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12205,
											"end": 12234,
											"name": "tag",
											"value": "134"
										},
										{
											"begin": 12205,
											"end": 12234,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 12184,
											"end": 12202,
											"name": "DUP4"
										},
										{
											"begin": 12184,
											"end": 12202,
											"name": "AND"
										},
										{
											"begin": 12184,
											"end": 12193,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12184,
											"end": 12202,
											"name": "DUP2"
										},
										{
											"begin": 12184,
											"end": 12202,
											"name": "DUP2"
										},
										{
											"begin": 12184,
											"end": 12202,
											"name": "MSTORE"
										},
										{
											"begin": 12184,
											"end": 12202,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12184,
											"end": 12202,
											"name": "DUP2"
										},
										{
											"begin": 12184,
											"end": 12202,
											"name": "DUP2"
										},
										{
											"begin": 12184,
											"end": 12202,
											"name": "MSTORE"
										},
										{
											"begin": 12184,
											"end": 12202,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12184,
											"end": 12202,
											"name": "DUP1"
										},
										{
											"begin": 12184,
											"end": 12202,
											"name": "DUP4"
										},
										{
											"begin": 12184,
											"end": 12202,
											"name": "KECCAK256"
										},
										{
											"begin": 12184,
											"end": 12234,
											"name": "SWAP5"
										},
										{
											"begin": 12184,
											"end": 12234,
											"name": "SWAP1"
										},
										{
											"begin": 12184,
											"end": 12234,
											"name": "SWAP5"
										},
										{
											"begin": 12184,
											"end": 12234,
											"name": "SSTORE"
										},
										{
											"begin": 12249,
											"end": 12285,
											"name": "DUP4"
										},
										{
											"begin": 12249,
											"end": 12285,
											"name": "MLOAD"
										},
										{
											"begin": 12249,
											"end": 12285,
											"name": "DUP6"
										},
										{
											"begin": 12249,
											"end": 12285,
											"name": "DUP2"
										},
										{
											"begin": 12249,
											"end": 12285,
											"name": "MSTORE"
										},
										{
											"begin": 12249,
											"end": 12285,
											"name": "SWAP4"
										},
										{
											"begin": 12249,
											"end": 12285,
											"name": "MLOAD"
										},
										{
											"begin": 12184,
											"end": 12193,
											"name": "SWAP2"
										},
										{
											"begin": 12184,
											"end": 12193,
											"name": "SWAP4"
										},
										{
											"begin": 12249,
											"end": 12285,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 12249,
											"end": 12285,
											"name": "SWAP3"
										},
										{
											"begin": 12249,
											"end": 12285,
											"name": "SWAP1"
										},
										{
											"begin": 12249,
											"end": 12285,
											"name": "DUP2"
										},
										{
											"begin": 12249,
											"end": 12285,
											"name": "SWAP1"
										},
										{
											"begin": 12249,
											"end": 12285,
											"name": "SUB"
										},
										{
											"begin": 12249,
											"end": 12285,
											"name": "SWAP1"
										},
										{
											"begin": 12249,
											"end": 12285,
											"name": "SWAP2"
										},
										{
											"begin": 12249,
											"end": 12285,
											"name": "ADD"
										},
										{
											"begin": 12249,
											"end": 12285,
											"name": "SWAP1"
										},
										{
											"begin": 12249,
											"end": 12285,
											"name": "LOG3"
										},
										{
											"begin": 11992,
											"end": 12292,
											"name": "POP"
										},
										{
											"begin": 11992,
											"end": 12292,
											"name": "POP"
										},
										{
											"begin": 11992,
											"end": 12292,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12469,
											"end": 12654,
											"name": "tag",
											"value": "99"
										},
										{
											"begin": 12469,
											"end": 12654,
											"name": "JUMPDEST"
										},
										{
											"begin": 12540,
											"end": 12562,
											"name": "PUSH [tag]",
											"value": "136"
										},
										{
											"begin": 12546,
											"end": 12553,
											"name": "DUP3"
										},
										{
											"begin": 12555,
											"end": 12561,
											"name": "DUP3"
										},
										{
											"begin": 12540,
											"end": 12545,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 12540,
											"end": 12562,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12540,
											"end": 12562,
											"name": "tag",
											"value": "136"
										},
										{
											"begin": 12540,
											"end": 12562,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 12602,
											"end": 12622,
											"name": "DUP3"
										},
										{
											"begin": 12602,
											"end": 12622,
											"name": "AND"
										},
										{
											"begin": 12602,
											"end": 12622,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12602,
											"end": 12622,
											"name": "SWAP1"
										},
										{
											"begin": 12602,
											"end": 12622,
											"name": "DUP2"
										},
										{
											"begin": 12602,
											"end": 12622,
											"name": "MSTORE"
										},
										{
											"begin": 12602,
											"end": 12613,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12602,
											"end": 12622,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12602,
											"end": 12622,
											"name": "SWAP1"
										},
										{
											"begin": 12602,
											"end": 12622,
											"name": "DUP2"
										},
										{
											"begin": 12602,
											"end": 12622,
											"name": "MSTORE"
										},
										{
											"begin": 12602,
											"end": 12622,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12602,
											"end": 12622,
											"name": "DUP1"
										},
										{
											"begin": 12602,
											"end": 12622,
											"name": "DUP4"
										},
										{
											"begin": 12602,
											"end": 12622,
											"name": "KECCAK256"
										},
										{
											"begin": 12590,
											"end": 12600,
											"name": "CALLER"
										},
										{
											"begin": 12602,
											"end": 12634,
											"name": "DUP1"
										},
										{
											"begin": 12602,
											"end": 12634,
											"name": "DUP6"
										},
										{
											"begin": 12602,
											"end": 12634,
											"name": "MSTORE"
										},
										{
											"begin": 12602,
											"end": 12634,
											"name": "SWAP3"
										},
										{
											"begin": 12602,
											"end": 12634,
											"name": "MSTORE"
										},
										{
											"begin": 12602,
											"end": 12634,
											"name": "SWAP1"
										},
										{
											"begin": 12602,
											"end": 12634,
											"name": "SWAP2"
										},
										{
											"begin": 12602,
											"end": 12634,
											"name": "KECCAK256"
										},
										{
											"begin": 12602,
											"end": 12634,
											"name": "SLOAD"
										},
										{
											"begin": 12572,
											"end": 12647,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 12572,
											"end": 12647,
											"name": "SWAP2"
										},
										{
											"begin": 12581,
											"end": 12588,
											"name": "DUP5"
										},
										{
											"begin": 12581,
											"end": 12588,
											"name": "SWAP2"
										},
										{
											"begin": 12602,
											"end": 12646,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 12602,
											"end": 12646,
											"name": "SWAP1"
										},
										{
											"begin": 12639,
											"end": 12645,
											"name": "DUP6"
										},
										{
											"begin": 12602,
											"end": 12646,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 12602,
											"end": 12638,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 12602,
											"end": 12646,
											"name": "AND"
										},
										{
											"begin": 12602,
											"end": 12646,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10273,
											"end": 10574,
											"name": "tag",
											"value": "108"
										},
										{
											"begin": 10273,
											"end": 10574,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 10348,
											"end": 10369,
											"name": "DUP3"
										},
										{
											"begin": 10348,
											"end": 10369,
											"name": "AND"
										},
										{
											"begin": 10348,
											"end": 10369,
											"name": "ISZERO"
										},
										{
											"begin": 10348,
											"end": 10369,
											"name": "ISZERO"
										},
										{
											"begin": 10340,
											"end": 10405,
											"name": "PUSH [tag]",
											"value": "140"
										},
										{
											"begin": 10340,
											"end": 10405,
											"name": "JUMPI"
										},
										{
											"begin": 10340,
											"end": 10405,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10340,
											"end": 10405,
											"name": "DUP1"
										},
										{
											"begin": 10340,
											"end": 10405,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 10340,
											"end": 10405,
											"name": "DUP2"
										},
										{
											"begin": 10340,
											"end": 10405,
											"name": "MSTORE"
										},
										{
											"begin": 10340,
											"end": 10405,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10340,
											"end": 10405,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10340,
											"end": 10405,
											"name": "DUP3"
										},
										{
											"begin": 10340,
											"end": 10405,
											"name": "ADD"
										},
										{
											"begin": 10340,
											"end": 10405,
											"name": "MSTORE"
										},
										{
											"begin": 10340,
											"end": 10405,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 10340,
											"end": 10405,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 10340,
											"end": 10405,
											"name": "DUP3"
										},
										{
											"begin": 10340,
											"end": 10405,
											"name": "ADD"
										},
										{
											"begin": 10340,
											"end": 10405,
											"name": "MSTORE"
										},
										{
											"begin": 10340,
											"end": 10405,
											"name": "PUSH",
											"value": "5A524332303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 10340,
											"end": 10405,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 10340,
											"end": 10405,
											"name": "DUP3"
										},
										{
											"begin": 10340,
											"end": 10405,
											"name": "ADD"
										},
										{
											"begin": 10340,
											"end": 10405,
											"name": "MSTORE"
										},
										{
											"begin": 10340,
											"end": 10405,
											"name": "SWAP1"
										},
										{
											"begin": 10340,
											"end": 10405,
											"name": "MLOAD"
										},
										{
											"begin": 10340,
											"end": 10405,
											"name": "SWAP1"
										},
										{
											"begin": 10340,
											"end": 10405,
											"name": "DUP2"
										},
										{
											"begin": 10340,
											"end": 10405,
											"name": "SWAP1"
										},
										{
											"begin": 10340,
											"end": 10405,
											"name": "SUB"
										},
										{
											"begin": 10340,
											"end": 10405,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 10340,
											"end": 10405,
											"name": "ADD"
										},
										{
											"begin": 10340,
											"end": 10405,
											"name": "SWAP1"
										},
										{
											"begin": 10340,
											"end": 10405,
											"name": "REVERT"
										},
										{
											"begin": 10340,
											"end": 10405,
											"name": "tag",
											"value": "140"
										},
										{
											"begin": 10340,
											"end": 10405,
											"name": "JUMPDEST"
										},
										{
											"begin": 10430,
											"end": 10442,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 10430,
											"end": 10442,
											"name": "SLOAD"
										},
										{
											"begin": 10430,
											"end": 10454,
											"name": "PUSH [tag]",
											"value": "141"
										},
										{
											"begin": 10430,
											"end": 10454,
											"name": "SWAP1"
										},
										{
											"begin": 10447,
											"end": 10453,
											"name": "DUP3"
										},
										{
											"begin": 10430,
											"end": 10454,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 10430,
											"end": 10446,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 10430,
											"end": 10454,
											"name": "AND"
										},
										{
											"begin": 10430,
											"end": 10454,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10430,
											"end": 10454,
											"name": "tag",
											"value": "141"
										},
										{
											"begin": 10430,
											"end": 10454,
											"name": "JUMPDEST"
										},
										{
											"begin": 10415,
											"end": 10427,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 10415,
											"end": 10454,
											"name": "SSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 10485,
											"end": 10503,
											"name": "DUP3"
										},
										{
											"begin": 10485,
											"end": 10503,
											"name": "AND"
										},
										{
											"begin": 10485,
											"end": 10494,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10485,
											"end": 10503,
											"name": "SWAP1"
										},
										{
											"begin": 10485,
											"end": 10503,
											"name": "DUP2"
										},
										{
											"begin": 10485,
											"end": 10503,
											"name": "MSTORE"
										},
										{
											"begin": 10485,
											"end": 10503,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10485,
											"end": 10503,
											"name": "DUP2"
										},
										{
											"begin": 10485,
											"end": 10503,
											"name": "SWAP1"
										},
										{
											"begin": 10485,
											"end": 10503,
											"name": "MSTORE"
										},
										{
											"begin": 10485,
											"end": 10503,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10485,
											"end": 10503,
											"name": "SWAP1"
										},
										{
											"begin": 10485,
											"end": 10503,
											"name": "KECCAK256"
										},
										{
											"begin": 10485,
											"end": 10503,
											"name": "SLOAD"
										},
										{
											"begin": 10485,
											"end": 10515,
											"name": "PUSH [tag]",
											"value": "142"
										},
										{
											"begin": 10485,
											"end": 10515,
											"name": "SWAP1"
										},
										{
											"begin": 10508,
											"end": 10514,
											"name": "DUP3"
										},
										{
											"begin": 10485,
											"end": 10515,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 10485,
											"end": 10507,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 10485,
											"end": 10515,
											"name": "AND"
										},
										{
											"begin": 10485,
											"end": 10515,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10485,
											"end": 10515,
											"name": "tag",
											"value": "142"
										},
										{
											"begin": 10485,
											"end": 10515,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 10464,
											"end": 10482,
											"name": "DUP4"
										},
										{
											"begin": 10464,
											"end": 10482,
											"name": "AND"
										},
										{
											"begin": 10464,
											"end": 10473,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10464,
											"end": 10482,
											"name": "DUP2"
										},
										{
											"begin": 10464,
											"end": 10482,
											"name": "DUP2"
										},
										{
											"begin": 10464,
											"end": 10482,
											"name": "MSTORE"
										},
										{
											"begin": 10464,
											"end": 10482,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10464,
											"end": 10482,
											"name": "DUP2"
										},
										{
											"begin": 10464,
											"end": 10482,
											"name": "DUP2"
										},
										{
											"begin": 10464,
											"end": 10482,
											"name": "MSTORE"
										},
										{
											"begin": 10464,
											"end": 10482,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10464,
											"end": 10482,
											"name": "DUP1"
										},
										{
											"begin": 10464,
											"end": 10482,
											"name": "DUP4"
										},
										{
											"begin": 10464,
											"end": 10482,
											"name": "KECCAK256"
										},
										{
											"begin": 10464,
											"end": 10515,
											"name": "SWAP5"
										},
										{
											"begin": 10464,
											"end": 10515,
											"name": "SWAP1"
										},
										{
											"begin": 10464,
											"end": 10515,
											"name": "SWAP5"
										},
										{
											"begin": 10464,
											"end": 10515,
											"name": "SSTORE"
										},
										{
											"begin": 10530,
											"end": 10567,
											"name": "DUP4"
										},
										{
											"begin": 10530,
											"end": 10567,
											"name": "MLOAD"
										},
										{
											"begin": 10530,
											"end": 10567,
											"name": "DUP6"
										},
										{
											"begin": 10530,
											"end": 10567,
											"name": "DUP2"
										},
										{
											"begin": 10530,
											"end": 10567,
											"name": "MSTORE"
										},
										{
											"begin": 10530,
											"end": 10567,
											"name": "SWAP4"
										},
										{
											"begin": 10530,
											"end": 10567,
											"name": "MLOAD"
										},
										{
											"begin": 10464,
											"end": 10482,
											"name": "SWAP3"
										},
										{
											"begin": 10464,
											"end": 10482,
											"name": "SWAP4"
										},
										{
											"begin": 10464,
											"end": 10473,
											"name": "SWAP2"
										},
										{
											"begin": 10464,
											"end": 10473,
											"name": "SWAP3"
										},
										{
											"begin": 10530,
											"end": 10567,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 10530,
											"end": 10567,
											"name": "SWAP3"
										},
										{
											"begin": 10530,
											"end": 10567,
											"name": "DUP2"
										},
										{
											"begin": 10530,
											"end": 10567,
											"name": "SWAP1"
										},
										{
											"begin": 10530,
											"end": 10567,
											"name": "SUB"
										},
										{
											"begin": 10530,
											"end": 10567,
											"name": "SWAP1"
										},
										{
											"begin": 10530,
											"end": 10567,
											"name": "SWAP2"
										},
										{
											"begin": 10530,
											"end": 10567,
											"name": "ADD"
										},
										{
											"begin": 10530,
											"end": 10567,
											"name": "SWAP1"
										},
										{
											"begin": 10530,
											"end": 10567,
											"name": "LOG3"
										},
										{
											"begin": 10273,
											"end": 10574,
											"name": "POP"
										},
										{
											"begin": 10273,
											"end": 10574,
											"name": "POP"
										},
										{
											"begin": 10273,
											"end": 10574,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"mint(uint256)": "a0712d68",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"sender\",\"type\":\"address\"},{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"symbol\",\"type\":\"string\"},{\"name\":\"decimals\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"}],\"name\":\"TransferOwnership\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"See `IZRC20.allowance`.\"},\"approve(address,uint256)\":{\"details\":\"See `IZRC20.approve`.     * Requirements:     * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See `IZRC20.balanceOf`.\"},\"burn(uint256)\":{\"details\":\"Destoys `amount` tokens from the caller.     * See `ZRC20._burn`.\"},\"burnFrom(address,uint256)\":{\"details\":\"See `ZRC20._burnFrom`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * > Note that this information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including `IZRC20.balanceOf` and `IZRC20.transfer`.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IZRC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IZRC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See `IZRC20.totalSupply`.\"},\"transfer(address,uint256)\":{\"details\":\"See `IZRC20.transfer`.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See `IZRC20.transferFrom`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `value`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/Glouki.sol\":\"Glouki\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Glouki.sol\":{\"keccak256\":\"0x23b627aa044ea54c4807d23cacc715bba9628ecc03bf91d51c1f1e4f2ddb7b2a\",\"urls\":[\"bzzr://fec06352fb365d322890e9a79a92ad48bf315de3987359517a0977f322a80064\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				},
				"IZRC20": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "spender",
									"type": "address"
								},
								{
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "sender",
									"type": "address"
								},
								{
									"name": "recipient",
									"type": "address"
								},
								{
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "recipient",
									"type": "address"
								},
								{
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "owner",
									"type": "address"
								},
								{
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "",
					"userdoc": {
						"methods": {}
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/Glouki.sol\":699:3637  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0xb\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":252:259   */\n  dup1\n    /* \"--CODEGEN--\":246:260   */\n  mload\n    /* \"--CODEGEN--\":243:244   */\n  0x0\n    /* \"--CODEGEN--\":238:261   */\n  byte\n    /* \"--CODEGEN--\":232:236   */\n  0x73\n    /* \"--CODEGEN--\":229:262   */\n  eq\n    /* \"--CODEGEN--\":270:271   */\n  0x0\n    /* \"--CODEGEN--\":265:285   */\n  dup2\n  eq\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":222:285   */\n  jump(tag_1)\n    /* \"--CODEGEN--\":265:285   */\ntag_2:\n    /* \"--CODEGEN--\":274:283   */\n  invalid\n    /* \"--CODEGEN--\":222:285   */\ntag_1:\n  pop\n    /* \"--CODEGEN--\":298:307   */\n  address\n    /* \"--CODEGEN--\":295:296   */\n  0x0\n    /* \"--CODEGEN--\":288:308   */\n  mstore\n    /* \"--CODEGEN--\":328:332   */\n  0x73\n    /* \"--CODEGEN--\":319:326   */\n  dup2\n    /* \"--CODEGEN--\":311:333   */\n  mstore8\n    /* \"--CODEGEN--\":352:359   */\n  dup3\n    /* \"--CODEGEN--\":343:350   */\n  dup2\n    /* \"--CODEGEN--\":336:360   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Glouki.sol\":699:3637  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x0\n      dup1\n      revert\n\n    auxdata: 0xa165627a7a72305820310ae00fe13141eff665d47c2eb074cf97bfc470bf50d9d92ac6384ec6b1b7e60029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "604c602c600b82828239805160001a60731460008114601c57601e565bfe5b5030600052607381538281f30073000000000000000000000000000000000000000030146080604052600080fd00a165627a7a72305820310ae00fe13141eff665d47c2eb074cf97bfc470bf50d9d92ac6384ec6b1b7e60029",
							"opcodes": "PUSH1 0x4C PUSH1 0x2C PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x0 DUP2 EQ PUSH1 0x1C JUMPI PUSH1 0x1E JUMP JUMPDEST INVALID JUMPDEST POP ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN STOP PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 BALANCE EXP 0xe0 0xf 0xe1 BALANCE COINBASE 0xef 0xf6 PUSH6 0xD47C2EB074CF SWAP8 0xbf 0xc4 PUSH17 0xBF50D9D92AC6384EC6B1B7E60029000000 ",
							"sourceMap": "699:2938:0:-;;132:2:-1;166:7;155:9;146:7;137:37;252:7;246:14;243:1;238:23;232:4;229:33;270:1;265:20;;;;222:63;;265:20;274:9;222:63;;298:9;295:1;288:20;328:4;319:7;311:22;352:7;343;336:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fd00a165627a7a72305820310ae00fe13141eff665d47c2eb074cf97bfc470bf50d9d92ac6384ec6b1b7e60029",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 BALANCE EXP 0xe0 0xf 0xe1 BALANCE COINBASE 0xef 0xf6 PUSH6 0xD47C2EB074CF SWAP8 0xbf 0xc4 PUSH17 0xBF50D9D92AC6384EC6B1B7E60029000000 ",
							"sourceMap": "699:2938:0:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "15200",
								"executionCost": "116",
								"totalCost": "15316"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 699,
									"end": 3637,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 699,
									"end": 3637,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 252,
									"end": 259,
									"name": "DUP1"
								},
								{
									"begin": 246,
									"end": 260,
									"name": "MLOAD"
								},
								{
									"begin": 243,
									"end": 244,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 238,
									"end": 261,
									"name": "BYTE"
								},
								{
									"begin": 232,
									"end": 236,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 229,
									"end": 262,
									"name": "EQ"
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "DUP2"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "EQ"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "JUMPI"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "JUMP"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "JUMPDEST"
								},
								{
									"begin": 274,
									"end": 283,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "JUMPDEST"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "POP"
								},
								{
									"begin": 298,
									"end": 307,
									"name": "ADDRESS"
								},
								{
									"begin": 295,
									"end": 296,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 288,
									"end": 308,
									"name": "MSTORE"
								},
								{
									"begin": 328,
									"end": 332,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 319,
									"end": 326,
									"name": "DUP2"
								},
								{
									"begin": 311,
									"end": 333,
									"name": "MSTORE8"
								},
								{
									"begin": 352,
									"end": 359,
									"name": "DUP3"
								},
								{
									"begin": 343,
									"end": 350,
									"name": "DUP2"
								},
								{
									"begin": 336,
									"end": 360,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820310ae00fe13141eff665d47c2eb074cf97bfc470bf50d9d92ac6384ec6b1b7e60029",
									".code": [
										{
											"begin": 699,
											"end": 3637,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 699,
											"end": 3637,
											"name": "ADDRESS"
										},
										{
											"begin": 699,
											"end": 3637,
											"name": "EQ"
										},
										{
											"begin": 699,
											"end": 3637,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 699,
											"end": 3637,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 699,
											"end": 3637,
											"name": "MSTORE"
										},
										{
											"begin": 699,
											"end": 3637,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 699,
											"end": 3637,
											"name": "DUP1"
										},
										{
											"begin": 699,
											"end": 3637,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/Glouki.sol\":\"SafeMath\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Glouki.sol\":{\"keccak256\":\"0x23b627aa044ea54c4807d23cacc715bba9628ecc03bf91d51c1f1e4f2ddb7b2a\",\"urls\":[\"bzzr://fec06352fb365d322890e9a79a92ad48bf315de3987359517a0977f322a80064\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"formattedMessage": "contracts/Glouki.sol:219:24: Warning: This declaration shadows an existing declaration.\n    function allowance(address owner, address spender) public view returns (uint256) {\n                       ^-----------^\ncontracts/Glouki.sol:139:5: The shadowed declaration is here:\n    address public owner;\n    ^------------------^\n\n",
				"message": "This declaration shadows an existing declaration.",
				"severity": "warning",
				"sourceLocation": {
					"end": 6799,
					"file": "contracts/Glouki.sol",
					"start": 6786
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "contracts/Glouki.sol:340:23: Warning: This declaration shadows an existing declaration.\n    function _approve(address owner, address spender, uint256 value) internal {\n                      ^-----------^\ncontracts/Glouki.sol:139:5: The shadowed declaration is here:\n    address public owner;\n    ^------------------^\n\n",
				"message": "This declaration shadows an existing declaration.",
				"severity": "warning",
				"sourceLocation": {
					"end": 11030,
					"file": "contracts/Glouki.sol",
					"start": 11017
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/Glouki.sol": {
				"ast": {
					"absolutePath": "contracts/Glouki.sol",
					"exportedSymbols": {
						"Glouki": [
							744
						],
						"IZRC20": [
							68
						],
						"SafeMath": [
							199
						]
					},
					"id": 745,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 68,
							"linearizedBaseContracts": [
								68
							],
							"name": "IZRC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"id": 6,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "69:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 6,
												"src": "95:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "95:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "94:9:0"
									},
									"scope": 68,
									"src": "49:55:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 13,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "129:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 7,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "129:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "128:17:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "169:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 10,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "169:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "168:9:0"
									},
									"scope": 68,
									"src": "110:68:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 22,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "202:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 14,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "202:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 17,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "221:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 16,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "221:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "201:35:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "255:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 19,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "255:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "254:6:0"
									},
									"scope": 68,
									"src": "184:77:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 31,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "286:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "286:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "301:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 25,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "301:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "285:32:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "341:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 28,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "341:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "340:9:0"
									},
									"scope": 68,
									"src": "267:83:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 40,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "373:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "373:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 35,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "390:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 34,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "390:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "372:33:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "424:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 37,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "424:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "423:6:0"
									},
									"scope": 68,
									"src": "356:74:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 51,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "458:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 41,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "458:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "474:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "474:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 46,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "493:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 45,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "493:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "457:51:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "527:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 48,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "527:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "526:6:0"
									},
									"scope": 68,
									"src": "436:97:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 59,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "554:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "554:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "576:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "576:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "596:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "553:57:0"
									},
									"src": "539:72:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 67,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "632:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "632:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "655:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "680:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "680:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "631:63:0"
									},
									"src": "617:78:0"
								}
							],
							"scope": 745,
							"src": "26:671:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 199,
							"linearizedBaseContracts": [
								199
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 92,
										"nodeType": "Block",
										"src": "1011:109:0",
										"statements": [
											{
												"assignments": [
													78
												],
												"declarations": [
													{
														"constant": false,
														"id": 78,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 93,
														"src": "1021:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 77,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1021:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 82,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 79,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 70,
														"src": "1033:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 80,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 72,
														"src": "1037:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1033:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1021:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 86,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 84,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 78,
																"src": "1056:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 85,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 70,
																"src": "1061:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1056:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 87,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1064:29:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 83,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															762,
															763
														],
														"referencedDeclaration": 763,
														"src": "1048:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1048:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "1048:46:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 90,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 78,
													"src": "1112:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 76,
												"id": 91,
												"nodeType": "Return",
												"src": "1105:8:0"
											}
										]
									},
									"documentation": "@dev Returns the addition of two unsigned integers, reverting on\noverflow.\n     * Counterpart to Solidity's `+` operator.\n     * Requirements:\n- Addition cannot overflow.",
									"id": 93,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "957:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 69,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "957:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "968:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "968:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "956:22:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 75,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "1002:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 74,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1001:9:0"
									},
									"scope": 199,
									"src": "944:176:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 117,
										"nodeType": "Block",
										"src": "1451:112:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 105,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 103,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 97,
																"src": "1469:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 104,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 95,
																"src": "1474:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1469:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 106,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1477:32:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 102,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															762,
															763
														],
														"referencedDeclaration": 763,
														"src": "1461:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1461:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 108,
												"nodeType": "ExpressionStatement",
												"src": "1461:49:0"
											},
											{
												"assignments": [
													110
												],
												"declarations": [
													{
														"constant": false,
														"id": 110,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 118,
														"src": "1520:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 109,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1520:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 114,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 111,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 95,
														"src": "1532:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 112,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 97,
														"src": "1536:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1532:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1520:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 115,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 110,
													"src": "1555:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 101,
												"id": 116,
												"nodeType": "Return",
												"src": "1548:8:0"
											}
										]
									},
									"documentation": "@dev Returns the subtraction of two unsigned integers, reverting on\noverflow (when the result is negative).\n     * Counterpart to Solidity's `-` operator.\n     * Requirements:\n- Subtraction cannot overflow.",
									"id": 118,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "1397:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1397:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "1408:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1408:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1396:22:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "1442:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 99,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1442:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1441:9:0"
									},
									"scope": 199,
									"src": "1384:179:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 151,
										"nodeType": "Block",
										"src": "1870:391:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 127,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 120,
														"src": "2101:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 128,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2106:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2101:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 133,
												"nodeType": "IfStatement",
												"src": "2097:45:0",
												"trueBody": {
													"id": 132,
													"nodeType": "Block",
													"src": "2109:33:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 130,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2130:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 126,
															"id": 131,
															"nodeType": "Return",
															"src": "2123:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													135
												],
												"declarations": [
													{
														"constant": false,
														"id": 135,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 152,
														"src": "2152:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 134,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2152:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 139,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 136,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 120,
														"src": "2164:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 137,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "2168:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2164:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2152:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 143,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 141,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 135,
																	"src": "2187:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 142,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 120,
																	"src": "2191:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2187:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 144,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 122,
																"src": "2196:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2187:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2199:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 140,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															762,
															763
														],
														"referencedDeclaration": 763,
														"src": "2179:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2179:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 148,
												"nodeType": "ExpressionStatement",
												"src": "2179:56:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 149,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 135,
													"src": "2253:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 126,
												"id": 150,
												"nodeType": "Return",
												"src": "2246:8:0"
											}
										]
									},
									"documentation": "@dev Returns the multiplication of two unsigned integers, reverting on\noverflow.\n     * Counterpart to Solidity's `*` operator.\n     * Requirements:\n- Multiplication cannot overflow.",
									"id": 152,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "1816:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1816:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "1827:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1815:22:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 125,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "1861:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1861:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1860:9:0"
									},
									"scope": 199,
									"src": "1803:458:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 176,
										"nodeType": "Block",
										"src": "2783:259:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 164,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 162,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 156,
																"src": "2867:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 163,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2871:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2867:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 165,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2874:28:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 161,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															762,
															763
														],
														"referencedDeclaration": 763,
														"src": "2859:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2859:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 167,
												"nodeType": "ExpressionStatement",
												"src": "2859:44:0"
											},
											{
												"assignments": [
													169
												],
												"declarations": [
													{
														"constant": false,
														"id": 169,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 177,
														"src": "2913:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 168,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2913:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 173,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 170,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 154,
														"src": "2925:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 171,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "2929:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2925:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2913:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 174,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "3034:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 160,
												"id": 175,
												"nodeType": "Return",
												"src": "3027:8:0"
											}
										]
									},
									"documentation": "@dev Returns the integer division of two unsigned integers. Reverts on\ndivision by zero. The result is rounded towards zero.\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n- The divisor cannot be zero.",
									"id": 177,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "2729:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2729:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 156,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "2740:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2740:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2728:22:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "2774:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2774:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2773:9:0"
									},
									"scope": 199,
									"src": "2716:326:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 197,
										"nodeType": "Block",
										"src": "3553:82:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 189,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 187,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 181,
																"src": "3571:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 188,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3576:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3571:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 190,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3579:26:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 186,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															762,
															763
														],
														"referencedDeclaration": 763,
														"src": "3563:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3563:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 192,
												"nodeType": "ExpressionStatement",
												"src": "3563:43:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 193,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 179,
														"src": "3623:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 194,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 181,
														"src": "3627:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3623:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 185,
												"id": 196,
												"nodeType": "Return",
												"src": "3616:12:0"
											}
										]
									},
									"documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts when dividing by zero.\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n- The divisor cannot be zero.",
									"id": 198,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "3499:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3499:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 181,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "3510:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 180,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3510:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3498:22:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "3544:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3544:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3543:9:0"
									},
									"scope": 199,
									"src": "3486:149:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 745,
							"src": "699:2938:0"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 200,
										"name": "IZRC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 68,
										"src": "4305:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IZRC20_$68",
											"typeString": "contract IZRC20"
										}
									},
									"id": 201,
									"nodeType": "InheritanceSpecifier",
									"src": "4305:6:0"
								}
							],
							"contractDependencies": [
								68
							],
							"contractKind": "contract",
							"documentation": "@dev Implementation of the `IZRC20` interface.\n * We have followed general OpenZeppelin guidelines: functions revert instead\nof returning `false` on failure. This behavior is nonetheless conventional\nand does not conflict with the expectations of ZRC20 applications.\n * Additionally, an `Approval` event is emitted on calls to `transferFrom`.\nThis allows applications to reconstruct the allowance for all accounts just\nby listening to said events.\n * Finally, the non-standard `decreaseAllowance` and `increaseAllowance`\nfunctions have been added to mitigate the well-known issues around setting\nallowances..",
							"fullyImplemented": true,
							"id": 744,
							"linearizedBaseContracts": [
								744,
								68
							],
							"name": "Glouki",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 204,
									"libraryName": {
										"contractScope": null,
										"id": 202,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 199,
										"src": "4324:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$199",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "4318:27:0",
									"typeName": {
										"id": 203,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "4337:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 208,
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"scope": 744,
									"src": "4351:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 207,
										"keyType": {
											"id": 205,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4360:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4351:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 206,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4371:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 214,
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"scope": 744,
									"src": "4404:69:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 213,
										"keyType": {
											"id": 209,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4413:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4404:49:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 212,
											"keyType": {
												"id": 210,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4433:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "4424:28:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 211,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4444:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 216,
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"scope": 744,
									"src": "4480:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 215,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "4480:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 218,
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"scope": 744,
									"src": "4506:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 217,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "4506:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 220,
									"name": "_decimals",
									"nodeType": "VariableDeclaration",
									"scope": 744,
									"src": "4534:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 219,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "4534:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 222,
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"scope": 744,
									"src": "4563:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 221,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "4563:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 228,
									"name": "TransferOwnership",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4614:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4614:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4636:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4636:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4613:42:0"
									},
									"src": "4590:66:0"
								},
								{
									"body": {
										"id": 239,
										"nodeType": "Block",
										"src": "4683:83:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 234,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 231,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 759,
																	"src": "4701:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 232,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4701:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 233,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 222,
																"src": "4715:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4701:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "53656e646572206973206e6f7420746865206f776e6572",
															"id": 235,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4722:25:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ab09f98e2d0df4e964b9b7f9b0dd1b2bfe87c01f728557013892d40ee8359279",
																"typeString": "literal_string \"Sender is not the owner\""
															},
															"value": "Sender is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ab09f98e2d0df4e964b9b7f9b0dd1b2bfe87c01f728557013892d40ee8359279",
																"typeString": "literal_string \"Sender is not the owner\""
															}
														],
														"id": 230,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															762,
															763
														],
														"referencedDeclaration": 763,
														"src": "4693:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4693:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 237,
												"nodeType": "ExpressionStatement",
												"src": "4693:55:0"
											},
											{
												"id": 238,
												"nodeType": "PlaceholderStatement",
												"src": "4758:1:0"
											}
										]
									},
									"documentation": null,
									"id": 240,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4680:2:0"
									},
									"src": "4662:104:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "4850:173:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 249,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 216,
														"src": "4860:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 250,
														"name": "name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 242,
														"src": "4868:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "4860:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 252,
												"nodeType": "ExpressionStatement",
												"src": "4860:12:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 253,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 218,
														"src": "4882:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 254,
														"name": "symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 244,
														"src": "4892:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "4882:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 256,
												"nodeType": "ExpressionStatement",
												"src": "4882:16:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 257,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 220,
														"src": "4908:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 258,
														"name": "decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "4920:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "4908:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 260,
												"nodeType": "ExpressionStatement",
												"src": "4908:20:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 261,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 222,
														"src": "4938:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 262,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "4946:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 263,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "4946:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4938:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 265,
												"nodeType": "ExpressionStatement",
												"src": "4938:18:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 267,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 222,
															"src": "4972:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 274,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"hexValue": "31373030303030303030",
																"id": 268,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4979:10:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1700000000_by_1",
																	"typeString": "int_const 1700000000"
																},
																"value": "1700000000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 273,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"hexValue": "3130",
																	"id": 269,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4992:2:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 271,
																			"name": "decimals",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 246,
																			"src": "5006:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 270,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4998:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": "uint256"
																	},
																	"id": 272,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4998:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4992:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4979:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 266,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 566,
														"src": "4966:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 276,
												"nodeType": "ExpressionStatement",
												"src": "4966:50:0"
											}
										]
									},
									"documentation": null,
									"id": 278,
									"implemented": true,
									"isConstructor": true,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"name": "name",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "4785:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 241,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4785:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 244,
												"name": "symbol",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "4805:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 243,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4805:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 246,
												"name": "decimals",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "4827:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 245,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4827:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4784:58:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4850:0:0"
									},
									"scope": 744,
									"src": "4772:251:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 285,
										"nodeType": "Block",
										"src": "5140:29:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 283,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 216,
													"src": "5157:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 282,
												"id": 284,
												"nodeType": "Return",
												"src": "5150:12:0"
											}
										]
									},
									"documentation": "@dev Returns the name of the token.",
									"id": 286,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5101:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "5125:6:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 280,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5125:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5124:15:0"
									},
									"scope": 744,
									"src": "5088:81:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "5336:31:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 291,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 218,
													"src": "5353:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 290,
												"id": 292,
												"nodeType": "Return",
												"src": "5346:14:0"
											}
										]
									},
									"documentation": "@dev Returns the symbol of the token, usually a shorter version of the\nname.",
									"id": 294,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5297:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "5321:6:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 288,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5321:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5320:15:0"
									},
									"scope": 744,
									"src": "5282:85:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "5970:33:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 299,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 220,
													"src": "5987:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 298,
												"id": 300,
												"nodeType": "Return",
												"src": "5980:16:0"
											}
										]
									},
									"documentation": "@dev Returns the number of decimals used to get its user representation.\nFor example, if `decimals` equals `2`, a balance of `505` tokens should\nbe displayed to a user as `5,05` (`505 / 10 ** 2`).\n     * Tokens usually opt for a value of 18, imitating the relationship between\nEther and Wei.\n     * > Note that this information is only used for _display_ purposes: it in\nno way affects any of the arithmetic of the contract, including\n`IZRC20.balanceOf` and `IZRC20.transfer`.",
									"id": 302,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5939:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 297,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "5963:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 296,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5963:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5962:7:0"
									},
									"scope": 744,
									"src": "5922:81:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 304,
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 744,
									"src": "6009:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 303,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "6009:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 311,
										"nodeType": "Block",
										"src": "6151:36:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 309,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 304,
													"src": "6168:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 308,
												"id": 310,
												"nodeType": "Return",
												"src": "6161:19:0"
											}
										]
									},
									"documentation": "@dev See `IZRC20.totalSupply`.",
									"id": 312,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6118:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 307,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "6142:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6142:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6141:9:0"
									},
									"scope": 744,
									"src": "6098:89:0",
									"stateMutability": "view",
									"superFunction": 6,
									"visibility": "public"
								},
								{
									"body": {
										"id": 323,
										"nodeType": "Block",
										"src": "6311:42:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 319,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "6328:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 321,
													"indexExpression": {
														"argumentTypes": null,
														"id": 320,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 314,
														"src": "6338:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6328:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 318,
												"id": 322,
												"nodeType": "Return",
												"src": "6321:25:0"
											}
										]
									},
									"documentation": "@dev See `IZRC20.balanceOf`.",
									"id": 324,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "6264:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6264:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6263:17:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "6302:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6301:9:0"
									},
									"scope": 744,
									"src": "6245:108:0",
									"stateMutability": "view",
									"superFunction": 13,
									"visibility": "public"
								},
								{
									"body": {
										"id": 342,
										"nodeType": "Block",
										"src": "6631:78:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 334,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 759,
																"src": "6651:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "6651:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 336,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 326,
															"src": "6663:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 337,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 328,
															"src": "6674:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 333,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 523,
														"src": "6641:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6641:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 339,
												"nodeType": "ExpressionStatement",
												"src": "6641:40:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 340,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6698:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 332,
												"id": 341,
												"nodeType": "Return",
												"src": "6691:11:0"
											}
										]
									},
									"documentation": "@dev See `IZRC20.transfer`.\n     * Requirements:\n     * - `recipient` cannot be the zero address.\n- the caller must have a balance of at least `amount`.",
									"id": 343,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "6574:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 325,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6574:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 328,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "6593:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6593:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6573:35:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "6625:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 330,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6625:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6624:6:0"
									},
									"scope": 744,
									"src": "6556:153:0",
									"stateMutability": "nonpayable",
									"superFunction": 22,
									"visibility": "public"
								},
								{
									"body": {
										"id": 358,
										"nodeType": "Block",
										"src": "6848:51:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 352,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "6865:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 354,
														"indexExpression": {
															"argumentTypes": null,
															"id": 353,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 345,
															"src": "6877:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6865:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 356,
													"indexExpression": {
														"argumentTypes": null,
														"id": 355,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 347,
														"src": "6884:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6865:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 351,
												"id": 357,
												"nodeType": "Return",
												"src": "6858:34:0"
											}
										]
									},
									"documentation": "@dev See `IZRC20.allowance`.",
									"id": 359,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "6786:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 344,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6786:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 347,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "6801:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6801:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6785:32:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "6839:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6839:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6838:9:0"
									},
									"scope": 744,
									"src": "6767:132:0",
									"stateMutability": "view",
									"superFunction": 31,
									"visibility": "public"
								},
								{
									"body": {
										"id": 377,
										"nodeType": "Block",
										"src": "7108:74:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 369,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 759,
																"src": "7127:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 370,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "7127:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 371,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 361,
															"src": "7139:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 372,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "7148:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 368,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 608,
														"src": "7118:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7118:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 374,
												"nodeType": "ExpressionStatement",
												"src": "7118:36:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7171:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 367,
												"id": 376,
												"nodeType": "Return",
												"src": "7164:11:0"
											}
										]
									},
									"documentation": "@dev See `IZRC20.approve`.\n     * Requirements:\n     * - `spender` cannot be the zero address.",
									"id": 378,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "7054:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 360,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7054:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 363,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "7071:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 362,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7071:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7053:32:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "7102:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 365,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7102:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7101:6:0"
									},
									"scope": 744,
									"src": "7037:145:0",
									"stateMutability": "nonpayable",
									"superFunction": 40,
									"visibility": "public"
								},
								{
									"body": {
										"id": 412,
										"nodeType": "Block",
										"src": "7652:157:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 390,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "7672:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 391,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 382,
															"src": "7680:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 392,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "7691:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 389,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 523,
														"src": "7662:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7662:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 394,
												"nodeType": "ExpressionStatement",
												"src": "7662:36:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 396,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "7717:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 397,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 759,
																"src": "7725:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 398,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "7725:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 406,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "7773:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 399,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 214,
																			"src": "7737:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 401,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 400,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 380,
																			"src": "7749:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7737:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 404,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 402,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 759,
																			"src": "7757:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 403,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "7757:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7737:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 405,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 118,
																"src": "7737:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 407,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7737:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 395,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 608,
														"src": "7708:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7708:73:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 409,
												"nodeType": "ExpressionStatement",
												"src": "7708:73:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7798:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 388,
												"id": 411,
												"nodeType": "Return",
												"src": "7791:11:0"
											}
										]
									},
									"documentation": "@dev See `IZRC20.transferFrom`.\n     * Emits an `Approval` event indicating the updated allowance.\n     * Requirements:\n- `sender` and `recipient` cannot be the zero address.\n- `sender` must have a balance of at least `value`.\n- the caller must have allowance for `sender`'s tokens of at least\n`amount`.",
									"id": 413,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 380,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "7579:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7579:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 382,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "7595:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 381,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7595:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 384,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "7614:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 383,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7614:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7578:51:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "7646:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 386,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7646:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7645:6:0"
									},
									"scope": 744,
									"src": "7557:252:0",
									"stateMutability": "nonpayable",
									"superFunction": 51,
									"visibility": "public"
								},
								{
									"body": {
										"id": 439,
										"nodeType": "Block",
										"src": "8290:117:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 423,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 759,
																"src": "8309:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 424,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "8309:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 425,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 415,
															"src": "8321:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 433,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "8367:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 426,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 214,
																			"src": "8330:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 429,
																		"indexExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 427,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 759,
																				"src": "8342:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 428,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "8342:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8330:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 431,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 430,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 415,
																		"src": "8354:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "8330:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 432,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 93,
																"src": "8330:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 434,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8330:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 422,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 608,
														"src": "8300:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8300:79:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 436,
												"nodeType": "ExpressionStatement",
												"src": "8300:79:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8396:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 421,
												"id": 438,
												"nodeType": "Return",
												"src": "8389:11:0"
											}
										]
									},
									"documentation": "@dev Atomically increases the allowance granted to `spender` by the caller.\n     * This is an alternative to `approve` that can be used as a mitigation for\nproblems described in `IZRC20.approve`.\n     * Emits an `Approval` event indicating the updated allowance.\n     * Requirements:\n     * - `spender` cannot be the zero address.",
									"id": 440,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "8231:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 414,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8231:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "8248:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8248:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8230:37:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "8284:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 419,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8284:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8283:6:0"
									},
									"scope": 744,
									"src": "8204:203:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 466,
										"nodeType": "Block",
										"src": "8985:122:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 450,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 759,
																"src": "9004:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 451,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "9004:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 452,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 442,
															"src": "9016:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 460,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 444,
																	"src": "9062:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 453,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 214,
																			"src": "9025:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 456,
																		"indexExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 454,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 759,
																				"src": "9037:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 455,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "9037:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "9025:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 458,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 457,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 442,
																		"src": "9049:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9025:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 459,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 118,
																"src": "9025:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 461,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9025:53:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 449,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 608,
														"src": "8995:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8995:84:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 463,
												"nodeType": "ExpressionStatement",
												"src": "8995:84:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 464,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9096:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 448,
												"id": 465,
												"nodeType": "Return",
												"src": "9089:11:0"
											}
										]
									},
									"documentation": "@dev Atomically decreases the allowance granted to `spender` by the caller.\n     * This is an alternative to `approve` that can be used as a mitigation for\nproblems described in `IZRC20.approve`.\n     * Emits an `Approval` event indicating the updated allowance.\n     * Requirements:\n     * - `spender` cannot be the zero address.\n- `spender` must have allowance for the caller of at least\n`subtractedValue`.",
									"id": 467,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 442,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "8921:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 441,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8921:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 444,
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "8938:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 443,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8938:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8920:42:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 447,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "8979:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 446,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8979:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8978:6:0"
									},
									"scope": 744,
									"src": "8894:213:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 522,
										"nodeType": "Block",
										"src": "9660:343:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 481,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 477,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 469,
																"src": "9678:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 479,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9696:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 478,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9688:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 480,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9688:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9678:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5a524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 482,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9700:39:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a71d2694bc6d2108aedf85dd0a70f7e700b05dc386eed9d5e52d1f6164cd7ca1",
																"typeString": "literal_string \"ZRC20: transfer from the zero address\""
															},
															"value": "ZRC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a71d2694bc6d2108aedf85dd0a70f7e700b05dc386eed9d5e52d1f6164cd7ca1",
																"typeString": "literal_string \"ZRC20: transfer from the zero address\""
															}
														],
														"id": 476,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															762,
															763
														],
														"referencedDeclaration": 763,
														"src": "9670:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9670:70:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 484,
												"nodeType": "ExpressionStatement",
												"src": "9670:70:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 490,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 486,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 471,
																"src": "9758:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 488,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9779:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 487,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9771:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 489,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9771:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9758:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5a524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 491,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9783:37:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1b35b1575e9cbca8c6549a597fa908d5f347c702d658e53d30245451711ba64a",
																"typeString": "literal_string \"ZRC20: transfer to the zero address\""
															},
															"value": "ZRC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1b35b1575e9cbca8c6549a597fa908d5f347c702d658e53d30245451711ba64a",
																"typeString": "literal_string \"ZRC20: transfer to the zero address\""
															}
														],
														"id": 485,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															762,
															763
														],
														"referencedDeclaration": 763,
														"src": "9750:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9750:71:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 493,
												"nodeType": "ExpressionStatement",
												"src": "9750:71:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 494,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "9832:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 496,
														"indexExpression": {
															"argumentTypes": null,
															"id": 495,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 469,
															"src": "9842:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9832:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 501,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 473,
																"src": "9874:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 497,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 208,
																	"src": "9852:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 499,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 498,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 469,
																	"src": "9862:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9852:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 500,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 118,
															"src": "9852:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 502,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9852:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9832:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 504,
												"nodeType": "ExpressionStatement",
												"src": "9832:49:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 505,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "9891:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 507,
														"indexExpression": {
															"argumentTypes": null,
															"id": 506,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 471,
															"src": "9901:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9891:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 512,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 473,
																"src": "9939:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 508,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 208,
																	"src": "9914:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 510,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 509,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 471,
																	"src": "9924:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9914:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 511,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 93,
															"src": "9914:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 513,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9914:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9891:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 515,
												"nodeType": "ExpressionStatement",
												"src": "9891:55:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 517,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 469,
															"src": "9970:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 518,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 471,
															"src": "9978:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 519,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 473,
															"src": "9989:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 516,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 59,
														"src": "9961:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9961:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 521,
												"nodeType": "EmitStatement",
												"src": "9956:40:0"
											}
										]
									},
									"documentation": "@dev Moves tokens `amount` from `sender` to `recipient`.\n     * This is internal function is equivalent to `transfer`, and can be used to\ne.g. implement automatic token fees, slashing mechanisms, etc.\n     * Emits a `Transfer` event.\n     * Requirements:\n     * - `sender` cannot be the zero address.\n- `recipient` cannot be the zero address.\n- `sender` must have a balance of at least `amount`.",
									"id": 523,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 469,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "9600:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 468,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9600:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 471,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "9616:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 470,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9616:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 473,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "9635:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 472,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9635:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9599:51:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9660:0:0"
									},
									"scope": 744,
									"src": "9581:422:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 565,
										"nodeType": "Block",
										"src": "10330:244:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 535,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 531,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 525,
																"src": "10348:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 533,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10367:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 532,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10359:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 534,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10359:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10348:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5a524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 536,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10371:33:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_00c78195edab24998ca9c2bf5e4ef3b2abff86c85e4d41adc167136dfa649256",
																"typeString": "literal_string \"ZRC20: mint to the zero address\""
															},
															"value": "ZRC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_00c78195edab24998ca9c2bf5e4ef3b2abff86c85e4d41adc167136dfa649256",
																"typeString": "literal_string \"ZRC20: mint to the zero address\""
															}
														],
														"id": 530,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															762,
															763
														],
														"referencedDeclaration": 763,
														"src": "10340:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10340:65:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 538,
												"nodeType": "ExpressionStatement",
												"src": "10340:65:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 539,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 304,
														"src": "10415:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 542,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 527,
																"src": "10447:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 540,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 304,
																"src": "10430:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 93,
															"src": "10430:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10430:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10415:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 545,
												"nodeType": "ExpressionStatement",
												"src": "10415:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 546,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "10464:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 548,
														"indexExpression": {
															"argumentTypes": null,
															"id": 547,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 525,
															"src": "10474:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10464:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 553,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 527,
																"src": "10508:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 549,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 208,
																	"src": "10485:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 551,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 550,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 525,
																	"src": "10495:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10485:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 93,
															"src": "10485:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 554,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10485:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10464:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 556,
												"nodeType": "ExpressionStatement",
												"src": "10464:51:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 559,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10547:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10539:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 560,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10539:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 561,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 525,
															"src": "10551:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 562,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "10560:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 557,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 59,
														"src": "10530:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10530:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 564,
												"nodeType": "EmitStatement",
												"src": "10525:42:0"
											}
										]
									},
									"documentation": "@dev Creates `amount` tokens and assigns them to `account`, increasing\nthe total supply.\n     * Emits a `Transfer` event with `from` set to the zero address.\n     * Requirements\n     * - `to` cannot be the zero address.",
									"id": 566,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "10288:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 524,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10288:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 527,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "10305:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 526,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10305:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10287:33:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10330:0:0"
									},
									"scope": 744,
									"src": "10273:301:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 607,
										"nodeType": "Block",
										"src": "11073:255:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 576,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 568,
																"src": "11091:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 578,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11108:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 577,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11100:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 579,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11100:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11091:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5a524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 581,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11112:38:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1f29340249770fa0769ce318b3b121c379b8a6b71b788bfc9ec0fe244c175a51",
																"typeString": "literal_string \"ZRC20: approve from the zero address\""
															},
															"value": "ZRC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1f29340249770fa0769ce318b3b121c379b8a6b71b788bfc9ec0fe244c175a51",
																"typeString": "literal_string \"ZRC20: approve from the zero address\""
															}
														],
														"id": 575,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															762,
															763
														],
														"referencedDeclaration": 763,
														"src": "11083:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11083:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 583,
												"nodeType": "ExpressionStatement",
												"src": "11083:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 589,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 585,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 570,
																"src": "11169:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 587,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11188:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 586,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11180:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 588,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11180:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11169:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5a524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 590,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11192:36:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc86d182860676b82b7d43edae2df8eb2c3ae68d776f2e04b8c77a3eff5a3698",
																"typeString": "literal_string \"ZRC20: approve to the zero address\""
															},
															"value": "ZRC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc86d182860676b82b7d43edae2df8eb2c3ae68d776f2e04b8c77a3eff5a3698",
																"typeString": "literal_string \"ZRC20: approve to the zero address\""
															}
														],
														"id": 584,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															762,
															763
														],
														"referencedDeclaration": 763,
														"src": "11161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11161:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 592,
												"nodeType": "ExpressionStatement",
												"src": "11161:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 593,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 214,
																"src": "11240:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 596,
															"indexExpression": {
																"argumentTypes": null,
																"id": 594,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 568,
																"src": "11252:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11240:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 597,
														"indexExpression": {
															"argumentTypes": null,
															"id": 595,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 570,
															"src": "11259:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11240:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 598,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 572,
														"src": "11270:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11240:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 600,
												"nodeType": "ExpressionStatement",
												"src": "11240:35:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 602,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 568,
															"src": "11299:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 603,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 570,
															"src": "11306:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 604,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 572,
															"src": "11315:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 601,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "11290:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11290:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 606,
												"nodeType": "EmitStatement",
												"src": "11285:36:0"
											}
										]
									},
									"documentation": "@dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n     * This is internal function is equivalent to `approve`, and can be used to\ne.g. set automatic allowances for certain subsystems, etc.\n     * Emits an `Approval` event.\n     * Requirements:\n     * - `owner` cannot be the zero address.\n- `spender` cannot be the zero address.",
									"id": 608,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "11017:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 567,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11017:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 570,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "11032:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11032:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 572,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "11049:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11049:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11016:47:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11073:0:0"
									},
									"scope": 744,
									"src": "10999:329:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 619,
										"nodeType": "Block",
										"src": "11473:42:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 614,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 759,
																"src": "11489:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 615,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "11489:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 616,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 610,
															"src": "11501:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 613,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 676,
														"src": "11483:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11483:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 618,
												"nodeType": "ExpressionStatement",
												"src": "11483:25:0"
											}
										]
									},
									"documentation": "@dev Destoys `amount` tokens from the caller.\n     * See `ZRC20._burn`.",
									"id": 620,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "11450:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 609,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11450:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11449:16:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11473:0:0"
									},
									"scope": 744,
									"src": "11436:79:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 632,
										"nodeType": "Block",
										"src": "11630:43:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 628,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 622,
															"src": "11650:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 629,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 624,
															"src": "11659:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 627,
														"name": "_burnFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 704,
														"src": "11640:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11640:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 631,
												"nodeType": "ExpressionStatement",
												"src": "11640:26:0"
											}
										]
									},
									"documentation": "@dev See `ZRC20._burnFrom`.",
									"id": 633,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "burnFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "11590:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 621,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11590:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 624,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "11607:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 623,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11607:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11589:33:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 626,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11630:0:0"
									},
									"scope": 744,
									"src": "11572:101:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 675,
										"nodeType": "Block",
										"src": "12048:244:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 645,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 641,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 635,
																"src": "12066:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 643,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12085:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 642,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12077:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 644,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12077:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12066:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5a524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 646,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12089:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c8b480bb39d2a21861f1e5f3a5be7d7d7f8db2e6678510bdc3a6a411edf96ae9",
																"typeString": "literal_string \"ZRC20: burn from the zero address\""
															},
															"value": "ZRC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c8b480bb39d2a21861f1e5f3a5be7d7d7f8db2e6678510bdc3a6a411edf96ae9",
																"typeString": "literal_string \"ZRC20: burn from the zero address\""
															}
														],
														"id": 640,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															762,
															763
														],
														"referencedDeclaration": 763,
														"src": "12058:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12058:67:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 648,
												"nodeType": "ExpressionStatement",
												"src": "12058:67:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 649,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 304,
														"src": "12136:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 652,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 637,
																"src": "12168:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 650,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 304,
																"src": "12151:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 651,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 118,
															"src": "12151:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 653,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12151:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12136:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 655,
												"nodeType": "ExpressionStatement",
												"src": "12136:38:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 656,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "12184:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 658,
														"indexExpression": {
															"argumentTypes": null,
															"id": 657,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 635,
															"src": "12194:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12184:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 663,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 637,
																"src": "12228:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 659,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 208,
																	"src": "12205:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 661,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 660,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 635,
																	"src": "12215:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12205:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 662,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 118,
															"src": "12205:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 664,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12205:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12184:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 666,
												"nodeType": "ExpressionStatement",
												"src": "12184:50:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 668,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 635,
															"src": "12258:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 670,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12275:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 669,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12267:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 671,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12267:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 672,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 637,
															"src": "12279:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 667,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 59,
														"src": "12249:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12249:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 674,
												"nodeType": "EmitStatement",
												"src": "12244:41:0"
											}
										]
									},
									"documentation": "@dev Destroys `amount` tokens from `account`, reducing the\ntotal supply.\n     * Emits a `Transfer` event with `to` set to the zero address.\n     * Requirements\n     * - `account` cannot be the zero address.\n- `account` must have at least `amount` tokens.",
									"id": 676,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 635,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "12007:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 634,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12007:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 637,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "12024:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 636,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12024:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12006:32:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12048:0:0"
									},
									"scope": 744,
									"src": "11992:300:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 703,
										"nodeType": "Block",
										"src": "12530:124:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 684,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 678,
															"src": "12546:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 685,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 680,
															"src": "12555:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 683,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 676,
														"src": "12540:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12540:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 687,
												"nodeType": "ExpressionStatement",
												"src": "12540:22:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 689,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 678,
															"src": "12581:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 690,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 759,
																"src": "12590:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 691,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "12590:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 699,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 680,
																	"src": "12639:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 692,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 214,
																			"src": "12602:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 694,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 693,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 678,
																			"src": "12614:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "12602:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 697,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 695,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 759,
																			"src": "12623:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 696,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "12623:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "12602:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 698,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 118,
																"src": "12602:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 700,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12602:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 688,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 608,
														"src": "12572:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12572:75:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 702,
												"nodeType": "ExpressionStatement",
												"src": "12572:75:0"
											}
										]
									},
									"documentation": "@dev Destoys `amount` tokens from `account`.`amount` is then deducted\nfrom the caller's allowance.\n     * See `_burn` and `_approve`.",
									"id": 704,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "_burnFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 678,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "12488:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 677,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12488:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 680,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "12505:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 679,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12505:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12487:33:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12530:0:0"
									},
									"scope": 744,
									"src": "12469:185:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 717,
										"nodeType": "Block",
										"src": "12706:32:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 712,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 759,
																"src": "12716:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 713,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "12716:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 714,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 706,
															"src": "12728:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 711,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 566,
														"src": "12710:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12710:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 716,
												"nodeType": "ExpressionStatement",
												"src": "12710:24:0"
											}
										]
									},
									"documentation": null,
									"id": 718,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 709,
											"modifierName": {
												"argumentTypes": null,
												"id": 708,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 240,
												"src": "12696:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "12696:9:0"
										}
									],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 706,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "12674:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 705,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12674:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12673:15:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12706:0:0"
									},
									"scope": 744,
									"src": "12660:78:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 742,
										"nodeType": "Block",
										"src": "12968:117:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 730,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 726,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 720,
																"src": "12984:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 728,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13004:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 727,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12996:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 729,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12996:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12984:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 725,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															762,
															763
														],
														"referencedDeclaration": 762,
														"src": "12976:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12976:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 732,
												"nodeType": "ExpressionStatement",
												"src": "12976:31:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 733,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 222,
														"src": "13015:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 734,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 720,
														"src": "13023:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "13015:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 736,
												"nodeType": "ExpressionStatement",
												"src": "13015:16:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 738,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 222,
															"src": "13062:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 739,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 720,
															"src": "13069:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 737,
														"name": "TransferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 228,
														"src": "13044:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13044:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 741,
												"nodeType": "EmitStatement",
												"src": "13039:39:0"
											}
										]
									},
									"documentation": "@dev Allows the current owner to transfer control of the contract to a newOwner.\n@param newOwner The address to transfer ownership to.",
									"id": 743,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 723,
											"modifierName": {
												"argumentTypes": null,
												"id": 722,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 240,
												"src": "12958:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "12958:9:0"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 720,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 743,
												"src": "12933:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 719,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12933:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12932:18:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12968:0:0"
									},
									"scope": 744,
									"src": "12906:179:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 745,
							"src": "4286:8801:0"
						}
					],
					"src": "0:13088:0"
				},
				"id": 0
			}
		}
	}
}