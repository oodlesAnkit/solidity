{
	"id": "e603ca4f8b12ff0698cfe0fc81d75b58",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.4.24",
	"solcLongVersion": "0.4.24+commit.e67f0147",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/TestContract.sol": {
				"content": "pragma solidity ^0.4.24;\n\ninterface IZRC20 {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address account) external view returns (uint256);\n\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a, \"SafeMath: subtraction overflow\");\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Solidity only automatically asserts when dividing by 0\n        require(b > 0, \"SafeMath: division by zero\");\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b != 0, \"SafeMath: modulo by zero\");\n        return a % b;\n    }\n}\n\n/**\n * @dev Implementation of the `IZRC20` interface.\n *\n * We have followed general OpenZeppelin guidelines: functions revert instead\n * of returning `false` on failure. This behavior is nonetheless conventional\n * and does not conflict with the expectations of ZRC20 applications.\n *\n * Additionally, an `Approval` event is emitted on calls to `transferFrom`.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events.\n *\n * Finally, the non-standard `decreaseAllowance` and `increaseAllowance`\n * functions have been added to mitigate the well-known issues around setting\n * allowances..\n */\ncontract Trustee is IZRC20 {\n    using SafeMath for uint256;\n\n    mapping (address => uint256) private _balances;\n\n    mapping (address => mapping (address => uint256)) private _allowances;\n\n    string private _name;\n    string private _symbol;\n    uint8 private _decimals;\n    address public owner;\n\n    event TransferOwnership(address indexed from, address indexed to);\n\n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Sender is not the owner\");\n        _;\n    }\n\n    constructor (string memory name, string memory symbol, uint8 decimals) public {\n        _name = name;\n        _symbol = symbol;\n        _decimals = decimals;\n        owner = msg.sender;\n        _mint(owner, 1000000000 * 10 ** uint256(decimals));\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei.\n     *\n     * > Note that this information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * `IZRC20.balanceOf` and `IZRC20.transfer`.\n     */\n    function decimals() public view returns (uint8) {\n        return _decimals;\n    }\n\n    uint256 private _totalSupply;\n\n    /**\n     * @dev See `IZRC20.totalSupply`.\n     */\n    function totalSupply() public view returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See `IZRC20.balanceOf`.\n     */\n    function balanceOf(address account) public view returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See `IZRC20.transfer`.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public returns (bool) {\n        _transfer(msg.sender, recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See `IZRC20.allowance`.\n     */\n    function allowance(address owner, address spender) public view returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See `IZRC20.approve`.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public returns (bool) {\n        _approve(msg.sender, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See `IZRC20.transferFrom`.\n     *\n     * Emits an `Approval` event indicating the updated allowance.\n     *\n     * Requirements:\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `value`.\n     * - the caller must have allowance for `sender`'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {\n        _transfer(sender, recipient, amount);\n        _approve(sender, msg.sender, _allowances[sender][msg.sender].sub(amount));\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to `approve` that can be used as a mitigation for\n     * problems described in `IZRC20.approve`.\n     *\n     * Emits an `Approval` event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\n        _approve(msg.sender, spender, _allowances[msg.sender][spender].add(addedValue));\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to `approve` that can be used as a mitigation for\n     * problems described in `IZRC20.approve`.\n     *\n     * Emits an `Approval` event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\n        _approve(msg.sender, spender, _allowances[msg.sender][spender].sub(subtractedValue));\n        return true;\n    }\n\n    /**\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\n     *\n     * This is internal function is equivalent to `transfer`, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a `Transfer` event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(address sender, address recipient, uint256 amount) internal {\n        require(sender != address(0), \"ZRC20: transfer from the zero address\");\n        require(recipient != address(0), \"ZRC20: transfer to the zero address\");\n\n        _balances[sender] = _balances[sender].sub(amount);\n        _balances[recipient] = _balances[recipient].add(amount);\n        emit Transfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a `Transfer` event with `from` set to the zero address.\n     *\n     * Requirements\n     *\n     * - `to` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal {\n        require(account != address(0), \"ZRC20: mint to the zero address\");\n        _totalSupply = _totalSupply.add(amount);\n        _balances[account] = _balances[account].add(amount);\n        emit Transfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n     *\n     * This is internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an `Approval` event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        require(owner != address(0), \"ZRC20: approve from the zero address\");\n        require(spender != address(0), \"ZRC20: approve to the zero address\");\n\n        _allowances[owner][spender] = value;\n        emit Approval(owner, spender, value);\n    }\n\n    /**\n     * @dev Destoys `amount` tokens from the caller.\n     *\n     * See `ZRC20._burn`.\n     */\n    function burn(uint256 amount) public {\n        _burn(msg.sender, amount);\n    }\n\n    /**\n     * @dev See `ZRC20._burnFrom`.\n     */\n    function burnFrom(address account, uint256 amount) public {\n        _burnFrom(account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a `Transfer` event with `to` set to the zero address.\n     *\n     * Requirements\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 value) internal {\n        require(account != address(0), \"ZRC20: burn from the zero address\");\n\n        _totalSupply = _totalSupply.sub(value);\n        _balances[account] = _balances[account].sub(value);\n        emit Transfer(account, address(0), value);\n    }\n\n    /**\n     * @dev Destoys `amount` tokens from `account`.`amount` is then deducted\n     * from the caller's allowance.\n     *\n     * See `_burn` and `_approve`.\n     */\n    function _burnFrom(address account, uint256 amount) internal {\n        _burn(account, amount);\n        _approve(account, msg.sender, _allowances[account][msg.sender].sub(amount));\n    }\n\n    function mint(uint256 value) public onlyOwner {\n\t\t_mint(msg.sender, value);\n\t}\n\n    /**\n    * @dev Allows the current owner to transfer control of the contract to a newOwner.\n    * @param newOwner The address to transfer ownership to.\n    */\n    function transferOwnership(address newOwner) public onlyOwner {\n      require(newOwner != address(0));\n      owner = newOwner;\n      emit TransferOwnership(owner, newOwner);\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/TestContract.sol": {
				"IZRC20": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "spender",
									"type": "address"
								},
								{
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "sender",
									"type": "address"
								},
								{
									"name": "recipient",
									"type": "address"
								},
								{
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "recipient",
									"type": "address"
								},
								{
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "owner",
									"type": "address"
								},
								{
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "",
					"userdoc": {
						"methods": {}
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/TestContract.sol\":699:3637  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0xb\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":252:259   */\n  dup1\n    /* \"--CODEGEN--\":246:260   */\n  mload\n    /* \"--CODEGEN--\":243:244   */\n  0x0\n    /* \"--CODEGEN--\":238:261   */\n  byte\n    /* \"--CODEGEN--\":232:236   */\n  0x73\n    /* \"--CODEGEN--\":229:262   */\n  eq\n    /* \"--CODEGEN--\":270:271   */\n  0x0\n    /* \"--CODEGEN--\":265:285   */\n  dup2\n  eq\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":222:285   */\n  jump(tag_1)\n    /* \"--CODEGEN--\":265:285   */\ntag_2:\n    /* \"--CODEGEN--\":274:283   */\n  invalid\n    /* \"--CODEGEN--\":222:285   */\ntag_1:\n  pop\n    /* \"--CODEGEN--\":298:307   */\n  address\n    /* \"--CODEGEN--\":295:296   */\n  0x0\n    /* \"--CODEGEN--\":288:308   */\n  mstore\n    /* \"--CODEGEN--\":328:332   */\n  0x73\n    /* \"--CODEGEN--\":319:326   */\n  dup2\n    /* \"--CODEGEN--\":311:333   */\n  mstore8\n    /* \"--CODEGEN--\":352:359   */\n  dup3\n    /* \"--CODEGEN--\":343:350   */\n  dup2\n    /* \"--CODEGEN--\":336:360   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/TestContract.sol\":699:3637  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x0\n      dup1\n      revert\n\n    auxdata: 0xa165627a7a72305820e60aaa9f495dd799a521e724dcf420d64b98f285d2008b26e7697336f044d9500029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "604c602c600b82828239805160001a60731460008114601c57601e565bfe5b5030600052607381538281f30073000000000000000000000000000000000000000030146080604052600080fd00a165627a7a72305820e60aaa9f495dd799a521e724dcf420d64b98f285d2008b26e7697336f044d9500029",
							"opcodes": "PUSH1 0x4C PUSH1 0x2C PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x0 DUP2 EQ PUSH1 0x1C JUMPI PUSH1 0x1E JUMP JUMPDEST INVALID JUMPDEST POP ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN STOP PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xe6 EXP 0xaa SWAP16 0x49 0x5d 0xd7 SWAP10 0xa5 0x21 0xe7 0x24 0xdc DELEGATECALL KECCAK256 0xd6 0x4b SWAP9 CALLCODE DUP6 0xd2 STOP DUP12 0x26 0xe7 PUSH10 0x7336F044D95000290000 ",
							"sourceMap": "699:2938:0:-;;132:2:-1;166:7;155:9;146:7;137:37;252:7;246:14;243:1;238:23;232:4;229:33;270:1;265:20;;;;222:63;;265:20;274:9;222:63;;298:9;295:1;288:20;328:4;319:7;311:22;352:7;343;336:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fd00a165627a7a72305820e60aaa9f495dd799a521e724dcf420d64b98f285d2008b26e7697336f044d9500029",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xe6 EXP 0xaa SWAP16 0x49 0x5d 0xd7 SWAP10 0xa5 0x21 0xe7 0x24 0xdc DELEGATECALL KECCAK256 0xd6 0x4b SWAP9 CALLCODE DUP6 0xd2 STOP DUP12 0x26 0xe7 PUSH10 0x7336F044D95000290000 ",
							"sourceMap": "699:2938:0:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "15200",
								"executionCost": "116",
								"totalCost": "15316"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 699,
									"end": 3637,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 699,
									"end": 3637,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 252,
									"end": 259,
									"name": "DUP1"
								},
								{
									"begin": 246,
									"end": 260,
									"name": "MLOAD"
								},
								{
									"begin": 243,
									"end": 244,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 238,
									"end": 261,
									"name": "BYTE"
								},
								{
									"begin": 232,
									"end": 236,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 229,
									"end": 262,
									"name": "EQ"
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "DUP2"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "EQ"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "JUMPI"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "JUMP"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "JUMPDEST"
								},
								{
									"begin": 274,
									"end": 283,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "JUMPDEST"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "POP"
								},
								{
									"begin": 298,
									"end": 307,
									"name": "ADDRESS"
								},
								{
									"begin": 295,
									"end": 296,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 288,
									"end": 308,
									"name": "MSTORE"
								},
								{
									"begin": 328,
									"end": 332,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 319,
									"end": 326,
									"name": "DUP2"
								},
								{
									"begin": 311,
									"end": 333,
									"name": "MSTORE8"
								},
								{
									"begin": 352,
									"end": 359,
									"name": "DUP3"
								},
								{
									"begin": 343,
									"end": 350,
									"name": "DUP2"
								},
								{
									"begin": 336,
									"end": 360,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820e60aaa9f495dd799a521e724dcf420d64b98f285d2008b26e7697336f044d9500029",
									".code": [
										{
											"begin": 699,
											"end": 3637,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 699,
											"end": 3637,
											"name": "ADDRESS"
										},
										{
											"begin": 699,
											"end": 3637,
											"name": "EQ"
										},
										{
											"begin": 699,
											"end": 3637,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 699,
											"end": 3637,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 699,
											"end": 3637,
											"name": "MSTORE"
										},
										{
											"begin": 699,
											"end": 3637,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 699,
											"end": 3637,
											"name": "DUP1"
										},
										{
											"begin": 699,
											"end": 3637,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/TestContract.sol\":\"SafeMath\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/TestContract.sol\":{\"keccak256\":\"0xe051574366bf3c69a0df9084be9d29b5fdb47dc8e3a9bd5b6e60a6723939815b\",\"urls\":[\"bzzr://c90bce5152ae53e60c5e7b245652e0fff3edb02a5191be7d132964e5b359ec62\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				},
				"Trustee": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "spender",
									"type": "address"
								},
								{
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "sender",
									"type": "address"
								},
								{
									"name": "recipient",
									"type": "address"
								},
								{
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "spender",
									"type": "address"
								},
								{
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "account",
									"type": "address"
								},
								{
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "spender",
									"type": "address"
								},
								{
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "recipient",
									"type": "address"
								},
								{
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "owner",
									"type": "address"
								},
								{
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"name": "name",
									"type": "string"
								},
								{
									"name": "symbol",
									"type": "string"
								},
								{
									"name": "decimals",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								}
							],
							"name": "TransferOwnership",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {
							"allowance(address,address)": {
								"details": "See `IZRC20.allowance`."
							},
							"approve(address,uint256)": {
								"details": "See `IZRC20.approve`.     * Requirements:     * - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See `IZRC20.balanceOf`."
							},
							"burn(uint256)": {
								"details": "Destoys `amount` tokens from the caller.     * See `ZRC20._burn`."
							},
							"burnFrom(address,uint256)": {
								"details": "See `ZRC20._burnFrom`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * > Note that this information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including `IZRC20.balanceOf` and `IZRC20.transfer`."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IZRC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IZRC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See `IZRC20.totalSupply`."
							},
							"transfer(address,uint256)": {
								"details": "See `IZRC20.transfer`.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See `IZRC20.transferFrom`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `value`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Allows the current owner to transfer control of the contract to a newOwner.",
								"params": {
									"newOwner": "The address to transfer ownership to."
								}
							}
						}
					},
					"evm": {
						"assembly": "    /* \"contracts/TestContract.sol\":4286:13088  contract Trustee is IZRC20 {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/TestContract.sol\":4773:5024  constructor (string memory name, string memory symbol, uint8 decimals) public {... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/TestContract.sol\":4773:5024  constructor (string memory name, string memory symbol, uint8 decimals) public {... */\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  swap1\n  dup2\n  mstore\n  dup2\n  mload\n  0x20\n  dup1\n  dup5\n  add\n  mload\n  swap3\n  dup5\n  add\n  mload\n  swap2\n  dup5\n  add\n    /* \"contracts/TestContract.sol\":4861:4873  _name = name */\n  dup1\n  mload\n    /* \"contracts/TestContract.sol\":4773:5024  constructor (string memory name, string memory symbol, uint8 decimals) public {... */\n  swap1\n  swap5\n  swap4\n  swap1\n  swap4\n  add\n  swap3\n    /* \"contracts/TestContract.sol\":4861:4873  _name = name */\n  tag_4\n  swap2\n    /* \"contracts/TestContract.sol\":4861:4866  _name */\n  0x2\n  swap2\n    /* \"contracts/TestContract.sol\":4861:4873  _name = name */\n  swap1\n  dup7\n  add\n  swap1\n  jump\t// in(tag_5)\ntag_4:\n  pop\n    /* \"contracts/TestContract.sol\":4883:4899  _symbol = symbol */\n  dup2\n  mload\n  tag_6\n  swap1\n    /* \"contracts/TestContract.sol\":4883:4890  _symbol */\n  0x3\n  swap1\n    /* \"contracts/TestContract.sol\":4883:4899  _symbol = symbol */\n  0x20\n  dup6\n  add\n  swap1\n  jump\t// in(tag_5)\ntag_6:\n  pop\n    /* \"contracts/TestContract.sol\":4909:4918  _decimals */\n  0x4\n    /* \"contracts/TestContract.sol\":4909:4929  _decimals = decimals */\n  dup1\n  sload\n    /* \"contracts/TestContract.sol\":4947:4957  msg.sender */\n  caller\n    /* \"contracts/TestContract.sol\":4909:4929  _decimals = decimals */\n  0x100\n    /* \"contracts/TestContract.sol\":4939:4957  owner = msg.sender */\n  swap1\n  dup2\n  mul\n  not(sub(exp(0x2, 0xa8), 0x100))\n    /* \"contracts/TestContract.sol\":4909:4929  _decimals = decimals */\n  0xff\n  dup7\n  and\n  not(0xff)\n  swap1\n  swap5\n  and\n  dup5\n  or\n    /* \"contracts/TestContract.sol\":4939:4957  owner = msg.sender */\n  and\n  or\n  swap3\n  dup4\n  swap1\n  sstore\n    /* \"contracts/TestContract.sol\":4967:5017  _mint(owner, 1000000000 * 10 ** uint256(decimals)) */\n  tag_7\n  swap3\n    /* \"contracts/TestContract.sol\":4973:4978  owner */\n  div\n  sub(exp(0x2, 0xa0), 0x1)\n  and\n  swap1\n    /* \"contracts/TestContract.sol\":4980:4990  1000000000 */\n  0x3b9aca00\n    /* \"contracts/TestContract.sol\":4993:4995  10 */\n  0xa\n    /* \"contracts/TestContract.sol\":4993:5016  10 ** uint256(decimals) */\n  swap2\n  swap1\n  swap2\n  exp\n    /* \"contracts/TestContract.sol\":4980:5016  1000000000 * 10 ** uint256(decimals) */\n  mul\n    /* \"contracts/TestContract.sol\":4967:4972  _mint */\n  0x100000000\n  tag_8\n  dup2\n  mul\n    /* \"contracts/TestContract.sol\":4967:5017  _mint(owner, 1000000000 * 10 ** uint256(decimals)) */\n  div\n  jump\t// in\ntag_7:\n    /* \"contracts/TestContract.sol\":4773:5024  constructor (string memory name, string memory symbol, uint8 decimals) public {... */\n  pop\n  pop\n  pop\n    /* \"contracts/TestContract.sol\":4286:13088  contract Trustee is IZRC20 {... */\n  jump(tag_9)\n    /* \"contracts/TestContract.sol\":10274:10575  function _mint(address account, uint256 amount) internal {... */\ntag_8:\n  sub(exp(0x2, 0xa0), 0x1)\n    /* \"contracts/TestContract.sol\":10349:10370  account != address(0) */\n  dup3\n  and\n  iszero\n  iszero\n    /* \"contracts/TestContract.sol\":10341:10406  require(account != address(0), \"ZRC20: mint to the zero address\") */\n  tag_11\n  jumpi\n  0x40\n  dup1\n  mload\n  0x8c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x20\n  0x4\n  dup3\n  add\n  mstore\n  0x1f\n  0x24\n  dup3\n  add\n  mstore\n  0x5a524332303a206d696e7420746f20746865207a65726f206164647265737300\n  0x44\n  dup3\n  add\n  mstore\n  swap1\n  mload\n  swap1\n  dup2\n  swap1\n  sub\n  0x64\n  add\n  swap1\n  revert\ntag_11:\n    /* \"contracts/TestContract.sol\":10431:10443  _totalSupply */\n  sload(0x5)\n    /* \"contracts/TestContract.sol\":10431:10455  _totalSupply.add(amount) */\n  tag_12\n  swap1\n    /* \"contracts/TestContract.sol\":10448:10454  amount */\n  dup3\n    /* \"contracts/TestContract.sol\":10431:10447  _totalSupply.add */\n  0x100000000\n  tag_0_92\n  tag_13\n  dup3\n  mul\n  or\n    /* \"contracts/TestContract.sol\":10431:10455  _totalSupply.add(amount) */\n  div\n  jump\t// in\ntag_12:\n    /* \"contracts/TestContract.sol\":10416:10428  _totalSupply */\n  0x5\n    /* \"contracts/TestContract.sol\":10416:10455  _totalSupply = _totalSupply.add(amount) */\n  sstore\n  sub(exp(0x2, 0xa0), 0x1)\n    /* \"contracts/TestContract.sol\":10486:10504  _balances[account] */\n  dup3\n  and\n    /* \"contracts/TestContract.sol\":10486:10495  _balances */\n  0x0\n    /* \"contracts/TestContract.sol\":10486:10504  _balances[account] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n    /* \"contracts/TestContract.sol\":10486:10516  _balances[account].add(amount) */\n  tag_14\n  swap1\n    /* \"contracts/TestContract.sol\":10509:10515  amount */\n  dup3\n    /* \"contracts/TestContract.sol\":10486:10508  _balances[account].add */\n  0x100000000\n  tag_0_92\n  tag_13\n  dup3\n  mul\n  or\n    /* \"contracts/TestContract.sol\":10486:10516  _balances[account].add(amount) */\n  div\n  jump\t// in\ntag_14:\n  sub(exp(0x2, 0xa0), 0x1)\n    /* \"contracts/TestContract.sol\":10465:10483  _balances[account] */\n  dup4\n  and\n    /* \"contracts/TestContract.sol\":10465:10474  _balances */\n  0x0\n    /* \"contracts/TestContract.sol\":10465:10483  _balances[account] */\n  dup2\n  dup2\n  mstore\n  0x20\n  dup2\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n    /* \"contracts/TestContract.sol\":10465:10516  _balances[account] = _balances[account].add(amount) */\n  swap5\n  swap1\n  swap5\n  sstore\n    /* \"contracts/TestContract.sol\":10531:10568  Transfer(address(0), account, amount) */\n  dup4\n  mload\n  dup6\n  dup2\n  mstore\n  swap4\n  mload\n    /* \"contracts/TestContract.sol\":10465:10483  _balances[account] */\n  swap3\n  swap4\n    /* \"contracts/TestContract.sol\":10465:10474  _balances */\n  swap2\n  swap3\n    /* \"contracts/TestContract.sol\":10531:10568  Transfer(address(0), account, amount) */\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n  swap3\n  dup2\n  swap1\n  sub\n  swap1\n  swap2\n  add\n  swap1\n  log3\n    /* \"contracts/TestContract.sol\":10274:10575  function _mint(address account, uint256 amount) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/TestContract.sol\":944:1120  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\ntag_13:\n    /* \"contracts/TestContract.sol\":1002:1009  uint256 */\n  0x0\n    /* \"contracts/TestContract.sol\":1033:1038  a + b */\n  dup3\n  dup3\n  add\n    /* \"contracts/TestContract.sol\":1056:1062  c >= a */\n  dup4\n  dup2\n  lt\n  iszero\n    /* \"contracts/TestContract.sol\":1048:1094  require(c >= a, \"SafeMath: addition overflow\") */\n  tag_16\n  jumpi\n  0x40\n  dup1\n  mload\n  0x8c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x20\n  0x4\n  dup3\n  add\n  mstore\n  0x1b\n  0x24\n  dup3\n  add\n  mstore\n  0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n  0x44\n  dup3\n  add\n  mstore\n  swap1\n  mload\n  swap1\n  dup2\n  swap1\n  sub\n  0x64\n  add\n  swap1\n  revert\ntag_16:\n    /* \"contracts/TestContract.sol\":1112:1113  c */\n  swap4\n    /* \"contracts/TestContract.sol\":944:1120  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/TestContract.sol\":4286:13088  contract Trustee is IZRC20 {... */\ntag_5:\n  dup3\n  dup1\n  sload\n  0x1\n  dup2\n  0x1\n  and\n  iszero\n  0x100\n  mul\n  sub\n  and\n  0x2\n  swap1\n  div\n  swap1\n  0x0\n  mstore\n  keccak256(0x0, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_18\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_20)\ntag_18:\n  dup3\n  dup1\n  add\n  0x1\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_20\n  jumpi\n  swap2\n  dup3\n  add\ntag_19:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_20\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x1\n  add\n  swap1\n  jump(tag_19)\ntag_20:\n  pop\n  tag_21\n  swap3\n  swap2\n  pop\n  jump\t// in(tag_22)\ntag_21:\n  pop\n  swap1\n  jump\t// out\ntag_22:\n  tag_23\n  swap2\n  swap1\ntag_24:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_21\n  jumpi\n  0x0\n  dup2\n  sstore\n  0x1\n  add\n  jump(tag_24)\ntag_23:\n  swap1\n  jump\t// out\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/TestContract.sol\":4286:13088  contract Trustee is IZRC20 {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      and(div(calldataload(0x0), 0x100000000000000000000000000000000000000000000000000000000), 0xffffffff)\n      0x6fdde03\n      dup2\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x95ea7b3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x79cc6790\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa0712d68\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_17\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"contracts/TestContract.sol\":5089:5170  function name() public view returns (string memory) {... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_18\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_18:\n        /* \"contracts/TestContract.sol\":5089:5170  function name() public view returns (string memory) {... */\n      pop\n      tag_19\n      jump(tag_20)\n    tag_19:\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      mstore\n      dup4\n      mload\n      dup2\n      dup4\n      add\n      mstore\n      dup4\n      mload\n      swap2\n      swap3\n      dup4\n      swap3\n      swap1\n      dup4\n      add\n      swap2\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x0\n        /* \"--CODEGEN--\":8:108   */\n    tag_21:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_22\n      jumpi\n        /* \"--CODEGEN--\":90:101   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":71:82   */\n      dup4\n      dup3\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_21)\n    tag_22:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/TestContract.sol\":5089:5170  function name() public view returns (string memory) {... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_24\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x1\n      dup4\n      0x20\n      sub\n      0x100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_24:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TestContract.sol\":7038:7183  function approve(address spender, uint256 value) public returns (bool) {... */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_25\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_25:\n      pop\n        /* \"contracts/TestContract.sol\":7038:7183  function approve(address spender, uint256 value) public returns (bool) {... */\n      tag_26\n      and(calldataload(0x4), sub(exp(0x2, 0xa0), 0x1))\n      calldataload(0x24)\n      jump(tag_27)\n    tag_26:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/TestContract.sol\":6099:6188  function totalSupply() public view returns (uint256) {... */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_28\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_28:\n        /* \"contracts/TestContract.sol\":6099:6188  function totalSupply() public view returns (uint256) {... */\n      pop\n      tag_29\n      jump(tag_30)\n    tag_29:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/TestContract.sol\":7558:7810  function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {... */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_31\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_31:\n      pop\n        /* \"contracts/TestContract.sol\":7558:7810  function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {... */\n      tag_26\n      sub(exp(0x2, 0xa0), 0x1)\n      calldataload(0x4)\n      dup2\n      and\n      swap1\n      calldataload(0x24)\n      and\n      calldataload(0x44)\n      jump(tag_33)\n        /* \"contracts/TestContract.sol\":5923:6004  function decimals() public view returns (uint8) {... */\n    tag_6:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_34\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_34:\n        /* \"contracts/TestContract.sol\":5923:6004  function decimals() public view returns (uint8) {... */\n      pop\n      tag_35\n      jump(tag_36)\n    tag_35:\n      0x40\n      dup1\n      mload\n      0xff\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/TestContract.sol\":8205:8408  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_7:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_37\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_37:\n      pop\n        /* \"contracts/TestContract.sol\":8205:8408  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n      tag_26\n      and(calldataload(0x4), sub(exp(0x2, 0xa0), 0x1))\n      calldataload(0x24)\n      jump(tag_39)\n        /* \"contracts/TestContract.sol\":11437:11516  function burn(uint256 amount) public {... */\n    tag_8:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_40\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_40:\n      pop\n        /* \"contracts/TestContract.sol\":11437:11516  function burn(uint256 amount) public {... */\n      tag_41\n      calldataload(0x4)\n      jump(tag_42)\n    tag_41:\n      stop\n        /* \"contracts/TestContract.sol\":6246:6354  function balanceOf(address account) public view returns (uint256) {... */\n    tag_9:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_43\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_43:\n      pop\n        /* \"contracts/TestContract.sol\":6246:6354  function balanceOf(address account) public view returns (uint256) {... */\n      tag_29\n      and(calldataload(0x4), sub(exp(0x2, 0xa0), 0x1))\n      jump(tag_45)\n        /* \"contracts/TestContract.sol\":11573:11674  function burnFrom(address account, uint256 amount) public {... */\n    tag_10:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_46\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_46:\n      pop\n        /* \"contracts/TestContract.sol\":11573:11674  function burnFrom(address account, uint256 amount) public {... */\n      tag_41\n      and(calldataload(0x4), sub(exp(0x2, 0xa0), 0x1))\n      calldataload(0x24)\n      jump(tag_48)\n        /* \"contracts/TestContract.sol\":4564:4584  address public owner */\n    tag_11:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_49\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_49:\n        /* \"contracts/TestContract.sol\":4564:4584  address public owner */\n      pop\n      tag_50\n      jump(tag_51)\n    tag_50:\n      0x40\n      dup1\n      mload\n      sub(exp(0x2, 0xa0), 0x1)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/TestContract.sol\":5283:5368  function symbol() public view returns (string memory) {... */\n    tag_12:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_52\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_52:\n        /* \"contracts/TestContract.sol\":5283:5368  function symbol() public view returns (string memory) {... */\n      pop\n      tag_19\n      jump(tag_54)\n        /* \"contracts/TestContract.sol\":12661:12739  function mint(uint256 value) public onlyOwner {... */\n    tag_13:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_59\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_59:\n      pop\n        /* \"contracts/TestContract.sol\":12661:12739  function mint(uint256 value) public onlyOwner {... */\n      tag_41\n      calldataload(0x4)\n      jump(tag_61)\n        /* \"contracts/TestContract.sol\":8895:9108  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n    tag_14:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_62\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_62:\n      pop\n        /* \"contracts/TestContract.sol\":8895:9108  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n      tag_26\n      and(calldataload(0x4), sub(exp(0x2, 0xa0), 0x1))\n      calldataload(0x24)\n      jump(tag_64)\n        /* \"contracts/TestContract.sol\":6557:6710  function transfer(address recipient, uint256 amount) public returns (bool) {... */\n    tag_15:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_65\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_65:\n      pop\n        /* \"contracts/TestContract.sol\":6557:6710  function transfer(address recipient, uint256 amount) public returns (bool) {... */\n      tag_26\n      and(calldataload(0x4), sub(exp(0x2, 0xa0), 0x1))\n      calldataload(0x24)\n      jump(tag_67)\n        /* \"contracts/TestContract.sol\":6768:6900  function allowance(address owner, address spender) public view returns (uint256) {... */\n    tag_16:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_68\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_68:\n      pop\n        /* \"contracts/TestContract.sol\":6768:6900  function allowance(address owner, address spender) public view returns (uint256) {... */\n      tag_29\n      sub(exp(0x2, 0xa0), 0x1)\n      calldataload(0x4)\n      dup2\n      and\n      swap1\n      calldataload(0x24)\n      and\n      jump(tag_70)\n        /* \"contracts/TestContract.sol\":12907:13086  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_17:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_71\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_71:\n      pop\n        /* \"contracts/TestContract.sol\":12907:13086  function transferOwnership(address newOwner) public onlyOwner {... */\n      tag_41\n      and(calldataload(0x4), sub(exp(0x2, 0xa0), 0x1))\n      jump(tag_73)\n        /* \"contracts/TestContract.sol\":5089:5170  function name() public view returns (string memory) {... */\n    tag_20:\n        /* \"contracts/TestContract.sol\":5158:5163  _name */\n      0x2\n        /* \"contracts/TestContract.sol\":5151:5163  return _name */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      not(0x0)\n      0x100\n      0x1\n      dup8\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap5\n      and\n      dup6\n      swap1\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"contracts/TestContract.sol\":5126:5132  string */\n      0x60\n      swap4\n        /* \"contracts/TestContract.sol\":5151:5163  return _name */\n      swap1\n      swap3\n        /* \"contracts/TestContract.sol\":5158:5163  _name */\n      swap1\n      swap2\n        /* \"contracts/TestContract.sol\":5151:5163  return _name */\n      dup4\n      add\n        /* \"contracts/TestContract.sol\":5158:5163  _name */\n      dup3\n        /* \"contracts/TestContract.sol\":5151:5163  return _name */\n      dup3\n      dup1\n      iszero\n      tag_75\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_76\n      jumpi\n      0x100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_75)\n    tag_76:\n      dup3\n      add\n      swap2\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      swap1\n    tag_77:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x1\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_77\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_75:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/TestContract.sol\":5089:5170  function name() public view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/TestContract.sol\":7038:7183  function approve(address spender, uint256 value) public returns (bool) {... */\n    tag_27:\n        /* \"contracts/TestContract.sol\":7103:7107  bool */\n      0x0\n        /* \"contracts/TestContract.sol\":7119:7155  _approve(msg.sender, spender, value) */\n      tag_79\n        /* \"contracts/TestContract.sol\":7128:7138  msg.sender */\n      caller\n        /* \"contracts/TestContract.sol\":7140:7147  spender */\n      dup5\n        /* \"contracts/TestContract.sol\":7149:7154  value */\n      dup5\n        /* \"contracts/TestContract.sol\":7119:7127  _approve */\n      tag_80\n        /* \"contracts/TestContract.sol\":7119:7155  _approve(msg.sender, spender, value) */\n      jump\t// in\n    tag_79:\n      pop\n        /* \"contracts/TestContract.sol\":7172:7176  true */\n      0x1\n        /* \"contracts/TestContract.sol\":7038:7183  function approve(address spender, uint256 value) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TestContract.sol\":6099:6188  function totalSupply() public view returns (uint256) {... */\n    tag_30:\n        /* \"contracts/TestContract.sol\":6169:6181  _totalSupply */\n      sload(0x5)\n        /* \"contracts/TestContract.sol\":6099:6188  function totalSupply() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/TestContract.sol\":7558:7810  function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {... */\n    tag_33:\n        /* \"contracts/TestContract.sol\":7647:7651  bool */\n      0x0\n        /* \"contracts/TestContract.sol\":7663:7699  _transfer(sender, recipient, amount) */\n      tag_83\n        /* \"contracts/TestContract.sol\":7673:7679  sender */\n      dup5\n        /* \"contracts/TestContract.sol\":7681:7690  recipient */\n      dup5\n        /* \"contracts/TestContract.sol\":7692:7698  amount */\n      dup5\n        /* \"contracts/TestContract.sol\":7663:7672  _transfer */\n      tag_84\n        /* \"contracts/TestContract.sol\":7663:7699  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_83:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/TestContract.sol\":7738:7757  _allowances[sender] */\n      dup5\n      and\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"contracts/TestContract.sol\":7738:7749  _allowances */\n      0x1\n        /* \"contracts/TestContract.sol\":7738:7757  _allowances[sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/TestContract.sol\":7726:7736  msg.sender */\n      caller\n        /* \"contracts/TestContract.sol\":7738:7769  _allowances[sender][msg.sender] */\n      dup1\n      dup6\n      mstore\n      swap3\n      mstore\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"contracts/TestContract.sol\":7709:7782  _approve(sender, msg.sender, _allowances[sender][msg.sender].sub(amount)) */\n      tag_85\n      swap2\n        /* \"contracts/TestContract.sol\":7718:7724  sender */\n      dup7\n      swap2\n        /* \"contracts/TestContract.sol\":7738:7781  _allowances[sender][msg.sender].sub(amount) */\n      tag_86\n      swap1\n        /* \"contracts/TestContract.sol\":7774:7780  amount */\n      dup7\n        /* \"contracts/TestContract.sol\":7738:7781  _allowances[sender][msg.sender].sub(amount) */\n      0xffffffff\n        /* \"contracts/TestContract.sol\":7738:7773  _allowances[sender][msg.sender].sub */\n      tag_87\n        /* \"contracts/TestContract.sol\":7738:7781  _allowances[sender][msg.sender].sub(amount) */\n      and\n      jump\t// in\n    tag_86:\n        /* \"contracts/TestContract.sol\":7709:7717  _approve */\n      tag_80\n        /* \"contracts/TestContract.sol\":7709:7782  _approve(sender, msg.sender, _allowances[sender][msg.sender].sub(amount)) */\n      jump\t// in\n    tag_85:\n      pop\n        /* \"contracts/TestContract.sol\":7799:7803  true */\n      0x1\n        /* \"contracts/TestContract.sol\":7558:7810  function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TestContract.sol\":5923:6004  function decimals() public view returns (uint8) {... */\n    tag_36:\n        /* \"contracts/TestContract.sol\":5988:5997  _decimals */\n      and(0xff, sload(0x4))\n        /* \"contracts/TestContract.sol\":5923:6004  function decimals() public view returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/TestContract.sol\":8205:8408  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_39:\n        /* \"contracts/TestContract.sol\":8310:8320  msg.sender */\n      caller\n        /* \"contracts/TestContract.sol\":8285:8289  bool */\n      0x0\n        /* \"contracts/TestContract.sol\":8331:8354  _allowances[msg.sender] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/TestContract.sol\":8331:8342  _allowances */\n      0x1\n        /* \"contracts/TestContract.sol\":8331:8354  _allowances[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/TestContract.sol\":8331:8363  _allowances[msg.sender][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"contracts/TestContract.sol\":8285:8289  bool */\n      swap1\n      swap2\n        /* \"contracts/TestContract.sol\":8301:8380  _approve(msg.sender, spender, _allowances[msg.sender][spender].add(addedValue)) */\n      tag_79\n      swap2\n        /* \"contracts/TestContract.sol\":8322:8329  spender */\n      dup6\n      swap1\n        /* \"contracts/TestContract.sol\":8331:8379  _allowances[msg.sender][spender].add(addedValue) */\n      tag_86\n      swap1\n        /* \"contracts/TestContract.sol\":8368:8378  addedValue */\n      dup7\n        /* \"contracts/TestContract.sol\":8331:8379  _allowances[msg.sender][spender].add(addedValue) */\n      0xffffffff\n        /* \"contracts/TestContract.sol\":8331:8367  _allowances[msg.sender][spender].add */\n      tag_92\n        /* \"contracts/TestContract.sol\":8331:8379  _allowances[msg.sender][spender].add(addedValue) */\n      and\n      jump\t// in\n        /* \"contracts/TestContract.sol\":11437:11516  function burn(uint256 amount) public {... */\n    tag_42:\n        /* \"contracts/TestContract.sol\":11484:11509  _burn(msg.sender, amount) */\n      tag_94\n        /* \"contracts/TestContract.sol\":11490:11500  msg.sender */\n      caller\n        /* \"contracts/TestContract.sol\":11502:11508  amount */\n      dup3\n        /* \"contracts/TestContract.sol\":11484:11489  _burn */\n      tag_95\n        /* \"contracts/TestContract.sol\":11484:11509  _burn(msg.sender, amount) */\n      jump\t// in\n    tag_94:\n        /* \"contracts/TestContract.sol\":11437:11516  function burn(uint256 amount) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/TestContract.sol\":6246:6354  function balanceOf(address account) public view returns (uint256) {... */\n    tag_45:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/TestContract.sol\":6329:6347  _balances[account] */\n      and\n        /* \"contracts/TestContract.sol\":6303:6310  uint256 */\n      0x0\n        /* \"contracts/TestContract.sol\":6329:6347  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/TestContract.sol\":6246:6354  function balanceOf(address account) public view returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/TestContract.sol\":11573:11674  function burnFrom(address account, uint256 amount) public {... */\n    tag_48:\n        /* \"contracts/TestContract.sol\":11641:11667  _burnFrom(account, amount) */\n      tag_98\n        /* \"contracts/TestContract.sol\":11651:11658  account */\n      dup3\n        /* \"contracts/TestContract.sol\":11660:11666  amount */\n      dup3\n        /* \"contracts/TestContract.sol\":11641:11650  _burnFrom */\n      tag_99\n        /* \"contracts/TestContract.sol\":11641:11667  _burnFrom(account, amount) */\n      jump\t// in\n    tag_98:\n        /* \"contracts/TestContract.sol\":11573:11674  function burnFrom(address account, uint256 amount) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TestContract.sol\":4564:4584  address public owner */\n    tag_51:\n      sload(0x4)\n      0x100\n      swap1\n      div\n      sub(exp(0x2, 0xa0), 0x1)\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/TestContract.sol\":5283:5368  function symbol() public view returns (string memory) {... */\n    tag_54:\n        /* \"contracts/TestContract.sol\":5354:5361  _symbol */\n      0x3\n        /* \"contracts/TestContract.sol\":5347:5361  return _symbol */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x2\n      not(0x0)\n      0x100\n      0x1\n      dup9\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"contracts/TestContract.sol\":5322:5328  string */\n      0x60\n      swap4\n        /* \"contracts/TestContract.sol\":5347:5361  return _symbol */\n      swap1\n      swap3\n        /* \"contracts/TestContract.sol\":5354:5361  _symbol */\n      swap1\n      swap2\n        /* \"contracts/TestContract.sol\":5347:5361  return _symbol */\n      dup4\n      add\n        /* \"contracts/TestContract.sol\":5354:5361  _symbol */\n      dup3\n        /* \"contracts/TestContract.sol\":5347:5361  return _symbol */\n      dup3\n      dup1\n      iszero\n      tag_75\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_76\n      jumpi\n      0x100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_75)\n        /* \"contracts/TestContract.sol\":12661:12739  function mint(uint256 value) public onlyOwner {... */\n    tag_61:\n        /* \"contracts/TestContract.sol\":4716:4721  owner */\n      sload(0x4)\n      0x100\n      swap1\n      div\n      sub(exp(0x2, 0xa0), 0x1)\n      and\n        /* \"contracts/TestContract.sol\":4702:4712  msg.sender */\n      caller\n        /* \"contracts/TestContract.sol\":4702:4721  msg.sender == owner */\n      eq\n        /* \"contracts/TestContract.sol\":4694:4749  require(msg.sender == owner, \"Sender is not the owner\") */\n      tag_105\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0x17\n      0x24\n      dup3\n      add\n      mstore\n      0x53656e646572206973206e6f7420746865206f776e6572000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_105:\n        /* \"contracts/TestContract.sol\":12711:12735  _mint(msg.sender, value) */\n      tag_94\n        /* \"contracts/TestContract.sol\":12717:12727  msg.sender */\n      caller\n        /* \"contracts/TestContract.sol\":12729:12734  value */\n      dup3\n        /* \"contracts/TestContract.sol\":12711:12716  _mint */\n      tag_108\n        /* \"contracts/TestContract.sol\":12711:12735  _mint(msg.sender, value) */\n      jump\t// in\n        /* \"contracts/TestContract.sol\":8895:9108  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n    tag_64:\n        /* \"contracts/TestContract.sol\":9005:9015  msg.sender */\n      caller\n        /* \"contracts/TestContract.sol\":8980:8984  bool */\n      0x0\n        /* \"contracts/TestContract.sol\":9026:9049  _allowances[msg.sender] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/TestContract.sol\":9026:9037  _allowances */\n      0x1\n        /* \"contracts/TestContract.sol\":9026:9049  _allowances[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/TestContract.sol\":9026:9058  _allowances[msg.sender][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"contracts/TestContract.sol\":8980:8984  bool */\n      swap1\n      swap2\n        /* \"contracts/TestContract.sol\":8996:9080  _approve(msg.sender, spender, _allowances[msg.sender][spender].sub(subtractedValue)) */\n      tag_79\n      swap2\n        /* \"contracts/TestContract.sol\":9017:9024  spender */\n      dup6\n      swap1\n        /* \"contracts/TestContract.sol\":9026:9079  _allowances[msg.sender][spender].sub(subtractedValue) */\n      tag_86\n      swap1\n        /* \"contracts/TestContract.sol\":9063:9078  subtractedValue */\n      dup7\n        /* \"contracts/TestContract.sol\":9026:9079  _allowances[msg.sender][spender].sub(subtractedValue) */\n      0xffffffff\n        /* \"contracts/TestContract.sol\":9026:9062  _allowances[msg.sender][spender].sub */\n      tag_87\n        /* \"contracts/TestContract.sol\":9026:9079  _allowances[msg.sender][spender].sub(subtractedValue) */\n      and\n      jump\t// in\n        /* \"contracts/TestContract.sol\":6557:6710  function transfer(address recipient, uint256 amount) public returns (bool) {... */\n    tag_67:\n        /* \"contracts/TestContract.sol\":6626:6630  bool */\n      0x0\n        /* \"contracts/TestContract.sol\":6642:6682  _transfer(msg.sender, recipient, amount) */\n      tag_79\n        /* \"contracts/TestContract.sol\":6652:6662  msg.sender */\n      caller\n        /* \"contracts/TestContract.sol\":6664:6673  recipient */\n      dup5\n        /* \"contracts/TestContract.sol\":6675:6681  amount */\n      dup5\n        /* \"contracts/TestContract.sol\":6642:6651  _transfer */\n      tag_84\n        /* \"contracts/TestContract.sol\":6642:6682  _transfer(msg.sender, recipient, amount) */\n      jump\t// in\n        /* \"contracts/TestContract.sol\":6768:6900  function allowance(address owner, address spender) public view returns (uint256) {... */\n    tag_70:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/TestContract.sol\":6866:6884  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"contracts/TestContract.sol\":6840:6847  uint256 */\n      0x0\n        /* \"contracts/TestContract.sol\":6866:6884  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/TestContract.sol\":6866:6877  _allowances */\n      0x1\n        /* \"contracts/TestContract.sol\":6866:6884  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/TestContract.sol\":6866:6893  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"contracts/TestContract.sol\":6768:6900  function allowance(address owner, address spender) public view returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/TestContract.sol\":12907:13086  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_73:\n        /* \"contracts/TestContract.sol\":4716:4721  owner */\n      sload(0x4)\n      0x100\n      swap1\n      div\n      sub(exp(0x2, 0xa0), 0x1)\n      and\n        /* \"contracts/TestContract.sol\":4702:4712  msg.sender */\n      caller\n        /* \"contracts/TestContract.sol\":4702:4721  msg.sender == owner */\n      eq\n        /* \"contracts/TestContract.sol\":4694:4749  require(msg.sender == owner, \"Sender is not the owner\") */\n      tag_116\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0x17\n      0x24\n      dup3\n      add\n      mstore\n      0x53656e646572206973206e6f7420746865206f776e6572000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_116:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/TestContract.sol\":12985:13007  newOwner != address(0) */\n      dup2\n      and\n      iszero\n      iszero\n        /* \"contracts/TestContract.sol\":12977:13008  require(newOwner != address(0)) */\n      tag_118\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_118:\n        /* \"contracts/TestContract.sol\":13016:13021  owner */\n      0x4\n        /* \"contracts/TestContract.sol\":13016:13032  owner = newOwner */\n      dup1\n      sload\n      not(0xffffffffffffffffffffffffffffffffffffffff00)\n      and\n      0x100\n      sub(exp(0x2, 0xa0), 0x1)\n      dup5\n      dup2\n      and\n      dup3\n      dup2\n      mul\n      swap4\n      swap1\n      swap4\n      or\n      swap4\n      dup5\n      swap1\n      sstore\n        /* \"contracts/TestContract.sol\":13045:13079  TransferOwnership(owner, newOwner) */\n      mload(0x40)\n        /* \"contracts/TestContract.sol\":13016:13032  owner = newOwner */\n      swap3\n      swap4\n        /* \"contracts/TestContract.sol\":13063:13068  owner */\n      swap2\n      swap1\n      swap2\n      div\n      and\n      swap1\n        /* \"contracts/TestContract.sol\":13045:13079  TransferOwnership(owner, newOwner) */\n      0x5c486528ec3e3f0ea91181cff8116f02bfa350e03b8b6f12e00765adbb5af85c\n      swap1\n      0x0\n      swap1\n      log3\n        /* \"contracts/TestContract.sol\":12907:13086  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/TestContract.sol\":11000:11329  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_80:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/TestContract.sol\":11092:11111  owner != address(0) */\n      dup4\n      and\n      iszero\n      iszero\n        /* \"contracts/TestContract.sol\":11084:11152  require(owner != address(0), \"ZRC20: approve from the zero address\") */\n      tag_120\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0x24\n      dup1\n      dup3\n      add\n      mstore\n      0x5a524332303a20617070726f76652066726f6d20746865207a65726f20616464\n      0x44\n      dup3\n      add\n      mstore\n      0x7265737300000000000000000000000000000000000000000000000000000000\n      0x64\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x84\n      add\n      swap1\n      revert\n    tag_120:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/TestContract.sol\":11170:11191  spender != address(0) */\n      dup3\n      and\n      iszero\n      iszero\n        /* \"contracts/TestContract.sol\":11162:11230  require(spender != address(0), \"ZRC20: approve to the zero address\") */\n      tag_121\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0x22\n      0x24\n      dup3\n      add\n      mstore\n      0x5a524332303a20617070726f766520746f20746865207a65726f206164647265\n      0x44\n      dup3\n      add\n      mstore\n      0x7373000000000000000000000000000000000000000000000000000000000000\n      0x64\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x84\n      add\n      swap1\n      revert\n    tag_121:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/TestContract.sol\":11241:11259  _allowances[owner] */\n      dup1\n      dup5\n      and\n      0x0\n      dup2\n      dup2\n      mstore\n        /* \"contracts/TestContract.sol\":11241:11252  _allowances */\n      0x1\n        /* \"contracts/TestContract.sol\":11241:11259  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/TestContract.sol\":11241:11268  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/TestContract.sol\":11241:11276  _allowances[owner][spender] = value */\n      dup6\n      swap1\n      sstore\n        /* \"contracts/TestContract.sol\":11291:11322  Approval(owner, spender, value) */\n      dup2\n      mload\n      dup6\n      dup2\n      mstore\n      swap2\n      mload\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"contracts/TestContract.sol\":11000:11329  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TestContract.sol\":9582:10004  function _transfer(address sender, address recipient, uint256 amount) internal {... */\n    tag_84:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/TestContract.sol\":9679:9699  sender != address(0) */\n      dup4\n      and\n      iszero\n      iszero\n        /* \"contracts/TestContract.sol\":9671:9741  require(sender != address(0), \"ZRC20: transfer from the zero address\") */\n      tag_123\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0x25\n      0x24\n      dup3\n      add\n      mstore\n      0x5a524332303a207472616e736665722066726f6d20746865207a65726f206164\n      0x44\n      dup3\n      add\n      mstore\n      0x6472657373000000000000000000000000000000000000000000000000000000\n      0x64\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x84\n      add\n      swap1\n      revert\n    tag_123:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/TestContract.sol\":9759:9782  recipient != address(0) */\n      dup3\n      and\n      iszero\n      iszero\n        /* \"contracts/TestContract.sol\":9751:9822  require(recipient != address(0), \"ZRC20: transfer to the zero address\") */\n      tag_124\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0x23\n      0x24\n      dup3\n      add\n      mstore\n      0x5a524332303a207472616e7366657220746f20746865207a65726f2061646472\n      0x44\n      dup3\n      add\n      mstore\n      0x6573730000000000000000000000000000000000000000000000000000000000\n      0x64\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x84\n      add\n      swap1\n      revert\n    tag_124:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/TestContract.sol\":9853:9870  _balances[sender] */\n      dup4\n      and\n        /* \"contracts/TestContract.sol\":9853:9862  _balances */\n      0x0\n        /* \"contracts/TestContract.sol\":9853:9870  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/TestContract.sol\":9853:9882  _balances[sender].sub(amount) */\n      tag_125\n      swap1\n        /* \"contracts/TestContract.sol\":9875:9881  amount */\n      dup3\n        /* \"contracts/TestContract.sol\":9853:9882  _balances[sender].sub(amount) */\n      0xffffffff\n        /* \"contracts/TestContract.sol\":9853:9874  _balances[sender].sub */\n      tag_87\n        /* \"contracts/TestContract.sol\":9853:9882  _balances[sender].sub(amount) */\n      and\n      jump\t// in\n    tag_125:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/TestContract.sol\":9833:9850  _balances[sender] */\n      dup1\n      dup6\n      and\n        /* \"contracts/TestContract.sol\":9833:9842  _balances */\n      0x0\n        /* \"contracts/TestContract.sol\":9833:9850  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/TestContract.sol\":9833:9882  _balances[sender] = _balances[sender].sub(amount) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/TestContract.sol\":9915:9935  _balances[recipient] */\n      swap1\n      dup5\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"contracts/TestContract.sol\":9915:9947  _balances[recipient].add(amount) */\n      tag_126\n      swap1\n        /* \"contracts/TestContract.sol\":9940:9946  amount */\n      dup3\n        /* \"contracts/TestContract.sol\":9915:9947  _balances[recipient].add(amount) */\n      0xffffffff\n        /* \"contracts/TestContract.sol\":9915:9939  _balances[recipient].add */\n      tag_92\n        /* \"contracts/TestContract.sol\":9915:9947  _balances[recipient].add(amount) */\n      and\n      jump\t// in\n    tag_126:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/TestContract.sol\":9892:9912  _balances[recipient] */\n      dup1\n      dup5\n      and\n        /* \"contracts/TestContract.sol\":9892:9901  _balances */\n      0x0\n        /* \"contracts/TestContract.sol\":9892:9912  _balances[recipient] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/TestContract.sol\":9892:9947  _balances[recipient] = _balances[recipient].add(amount) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"contracts/TestContract.sol\":9962:9997  Transfer(sender, recipient, amount) */\n      dup1\n      mload\n      dup6\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"contracts/TestContract.sol\":9892:9912  _balances[recipient] */\n      swap2\n      swap4\n        /* \"contracts/TestContract.sol\":9962:9997  Transfer(sender, recipient, amount) */\n      swap3\n      dup8\n      and\n      swap3\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap3\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log3\n        /* \"contracts/TestContract.sol\":9582:10004  function _transfer(address sender, address recipient, uint256 amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TestContract.sol\":1384:1563  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_87:\n        /* \"contracts/TestContract.sol\":1442:1449  uint256 */\n      0x0\n      dup1\n        /* \"contracts/TestContract.sol\":1469:1475  b <= a */\n      dup4\n      dup4\n      gt\n      iszero\n        /* \"contracts/TestContract.sol\":1461:1510  require(b <= a, \"SafeMath: subtraction overflow\") */\n      tag_128\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0x1e\n      0x24\n      dup3\n      add\n      mstore\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_128:\n      pop\n      pop\n        /* \"contracts/TestContract.sol\":1532:1537  a - b */\n      swap1\n      sub\n      swap1\n        /* \"contracts/TestContract.sol\":1384:1563  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/TestContract.sol\":944:1120  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_92:\n        /* \"contracts/TestContract.sol\":1002:1009  uint256 */\n      0x0\n        /* \"contracts/TestContract.sol\":1033:1038  a + b */\n      dup3\n      dup3\n      add\n        /* \"contracts/TestContract.sol\":1056:1062  c >= a */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"contracts/TestContract.sol\":1048:1094  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_130\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_130:\n        /* \"contracts/TestContract.sol\":1112:1113  c */\n      swap4\n        /* \"contracts/TestContract.sol\":944:1120  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TestContract.sol\":11993:12293  function _burn(address account, uint256 value) internal {... */\n    tag_95:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/TestContract.sol\":12067:12088  account != address(0) */\n      dup3\n      and\n      iszero\n      iszero\n        /* \"contracts/TestContract.sol\":12059:12126  require(account != address(0), \"ZRC20: burn from the zero address\") */\n      tag_132\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0x21\n      0x24\n      dup3\n      add\n      mstore\n      0x5a524332303a206275726e2066726f6d20746865207a65726f20616464726573\n      0x44\n      dup3\n      add\n      mstore\n      0x7300000000000000000000000000000000000000000000000000000000000000\n      0x64\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x84\n      add\n      swap1\n      revert\n    tag_132:\n        /* \"contracts/TestContract.sol\":12152:12164  _totalSupply */\n      sload(0x5)\n        /* \"contracts/TestContract.sol\":12152:12175  _totalSupply.sub(value) */\n      tag_133\n      swap1\n        /* \"contracts/TestContract.sol\":12169:12174  value */\n      dup3\n        /* \"contracts/TestContract.sol\":12152:12175  _totalSupply.sub(value) */\n      0xffffffff\n        /* \"contracts/TestContract.sol\":12152:12168  _totalSupply.sub */\n      tag_87\n        /* \"contracts/TestContract.sol\":12152:12175  _totalSupply.sub(value) */\n      and\n      jump\t// in\n    tag_133:\n        /* \"contracts/TestContract.sol\":12137:12149  _totalSupply */\n      0x5\n        /* \"contracts/TestContract.sol\":12137:12175  _totalSupply = _totalSupply.sub(value) */\n      sstore\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/TestContract.sol\":12206:12224  _balances[account] */\n      dup3\n      and\n        /* \"contracts/TestContract.sol\":12206:12215  _balances */\n      0x0\n        /* \"contracts/TestContract.sol\":12206:12224  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/TestContract.sol\":12206:12235  _balances[account].sub(value) */\n      tag_134\n      swap1\n        /* \"contracts/TestContract.sol\":12229:12234  value */\n      dup3\n        /* \"contracts/TestContract.sol\":12206:12235  _balances[account].sub(value) */\n      0xffffffff\n        /* \"contracts/TestContract.sol\":12206:12228  _balances[account].sub */\n      tag_87\n        /* \"contracts/TestContract.sol\":12206:12235  _balances[account].sub(value) */\n      and\n      jump\t// in\n    tag_134:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/TestContract.sol\":12185:12203  _balances[account] */\n      dup4\n      and\n        /* \"contracts/TestContract.sol\":12185:12194  _balances */\n      0x0\n        /* \"contracts/TestContract.sol\":12185:12203  _balances[account] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/TestContract.sol\":12185:12235  _balances[account] = _balances[account].sub(value) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"contracts/TestContract.sol\":12250:12286  Transfer(account, address(0), value) */\n      dup4\n      mload\n      dup6\n      dup2\n      mstore\n      swap4\n      mload\n        /* \"contracts/TestContract.sol\":12185:12194  _balances */\n      swap2\n      swap4\n        /* \"contracts/TestContract.sol\":12250:12286  Transfer(account, address(0), value) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap3\n      swap1\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"contracts/TestContract.sol\":11993:12293  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TestContract.sol\":12470:12655  function _burnFrom(address account, uint256 amount) internal {... */\n    tag_99:\n        /* \"contracts/TestContract.sol\":12541:12563  _burn(account, amount) */\n      tag_136\n        /* \"contracts/TestContract.sol\":12547:12554  account */\n      dup3\n        /* \"contracts/TestContract.sol\":12556:12562  amount */\n      dup3\n        /* \"contracts/TestContract.sol\":12541:12546  _burn */\n      tag_95\n        /* \"contracts/TestContract.sol\":12541:12563  _burn(account, amount) */\n      jump\t// in\n    tag_136:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/TestContract.sol\":12603:12623  _allowances[account] */\n      dup3\n      and\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"contracts/TestContract.sol\":12603:12614  _allowances */\n      0x1\n        /* \"contracts/TestContract.sol\":12603:12623  _allowances[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/TestContract.sol\":12591:12601  msg.sender */\n      caller\n        /* \"contracts/TestContract.sol\":12603:12635  _allowances[account][msg.sender] */\n      dup1\n      dup6\n      mstore\n      swap3\n      mstore\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"contracts/TestContract.sol\":12573:12648  _approve(account, msg.sender, _allowances[account][msg.sender].sub(amount)) */\n      tag_98\n      swap2\n        /* \"contracts/TestContract.sol\":12582:12589  account */\n      dup5\n      swap2\n        /* \"contracts/TestContract.sol\":12603:12647  _allowances[account][msg.sender].sub(amount) */\n      tag_86\n      swap1\n        /* \"contracts/TestContract.sol\":12640:12646  amount */\n      dup6\n        /* \"contracts/TestContract.sol\":12603:12647  _allowances[account][msg.sender].sub(amount) */\n      0xffffffff\n        /* \"contracts/TestContract.sol\":12603:12639  _allowances[account][msg.sender].sub */\n      tag_87\n        /* \"contracts/TestContract.sol\":12603:12647  _allowances[account][msg.sender].sub(amount) */\n      and\n      jump\t// in\n        /* \"contracts/TestContract.sol\":10274:10575  function _mint(address account, uint256 amount) internal {... */\n    tag_108:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/TestContract.sol\":10349:10370  account != address(0) */\n      dup3\n      and\n      iszero\n      iszero\n        /* \"contracts/TestContract.sol\":10341:10406  require(account != address(0), \"ZRC20: mint to the zero address\") */\n      tag_140\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0x1f\n      0x24\n      dup3\n      add\n      mstore\n      0x5a524332303a206d696e7420746f20746865207a65726f206164647265737300\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_140:\n        /* \"contracts/TestContract.sol\":10431:10443  _totalSupply */\n      sload(0x5)\n        /* \"contracts/TestContract.sol\":10431:10455  _totalSupply.add(amount) */\n      tag_141\n      swap1\n        /* \"contracts/TestContract.sol\":10448:10454  amount */\n      dup3\n        /* \"contracts/TestContract.sol\":10431:10455  _totalSupply.add(amount) */\n      0xffffffff\n        /* \"contracts/TestContract.sol\":10431:10447  _totalSupply.add */\n      tag_92\n        /* \"contracts/TestContract.sol\":10431:10455  _totalSupply.add(amount) */\n      and\n      jump\t// in\n    tag_141:\n        /* \"contracts/TestContract.sol\":10416:10428  _totalSupply */\n      0x5\n        /* \"contracts/TestContract.sol\":10416:10455  _totalSupply = _totalSupply.add(amount) */\n      sstore\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/TestContract.sol\":10486:10504  _balances[account] */\n      dup3\n      and\n        /* \"contracts/TestContract.sol\":10486:10495  _balances */\n      0x0\n        /* \"contracts/TestContract.sol\":10486:10504  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/TestContract.sol\":10486:10516  _balances[account].add(amount) */\n      tag_142\n      swap1\n        /* \"contracts/TestContract.sol\":10509:10515  amount */\n      dup3\n        /* \"contracts/TestContract.sol\":10486:10516  _balances[account].add(amount) */\n      0xffffffff\n        /* \"contracts/TestContract.sol\":10486:10508  _balances[account].add */\n      tag_92\n        /* \"contracts/TestContract.sol\":10486:10516  _balances[account].add(amount) */\n      and\n      jump\t// in\n    tag_142:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/TestContract.sol\":10465:10483  _balances[account] */\n      dup4\n      and\n        /* \"contracts/TestContract.sol\":10465:10474  _balances */\n      0x0\n        /* \"contracts/TestContract.sol\":10465:10483  _balances[account] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/TestContract.sol\":10465:10516  _balances[account] = _balances[account].add(amount) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"contracts/TestContract.sol\":10531:10568  Transfer(address(0), account, amount) */\n      dup4\n      mload\n      dup6\n      dup2\n      mstore\n      swap4\n      mload\n        /* \"contracts/TestContract.sol\":10465:10483  _balances[account] */\n      swap3\n      swap4\n        /* \"contracts/TestContract.sol\":10465:10474  _balances */\n      swap2\n      swap3\n        /* \"contracts/TestContract.sol\":10531:10568  Transfer(address(0), account, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"contracts/TestContract.sol\":10274:10575  function _mint(address account, uint256 amount) internal {... */\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a723058205e1617b56ad3ed7ae27843acc54c90863801d5c20fd523870850c69f5383b4c30029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604051620010e7380380620010e783398101604090815281516020808401519284015191840180519094939093019262000053916002919086019062000262565b5081516200006990600390602085019062000262565b50600480543361010090810261010060a860020a031960ff861660ff199094168417161792839055620000bc9204600160a060020a031690633b9aca00600a9190910a02640100000000620000c5810204565b50505062000307565b600160a060020a03821615156200013d57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5a524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b6005546200015a908264010000000062000aec620001e682021704565b600555600160a060020a03821660009081526020819052604090205462000190908264010000000062000aec620001e682021704565b600160a060020a0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6000828201838110156200025b57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620002a557805160ff1916838001178555620002d5565b82800160010185558215620002d5579182015b82811115620002d5578251825591602001919060010190620002b8565b50620002e3929150620002e7565b5090565b6200030491905b80821115620002e35760008155600101620002ee565b90565b610dd080620003176000396000f3006080604052600436106100e55763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100ea578063095ea7b31461017457806318160ddd146101ac57806323b872dd146101d3578063313ce567146101fd578063395093511461022857806342966c681461024c57806370a082311461026657806379cc6790146102875780638da5cb5b146102ab57806395d89b41146102dc578063a0712d68146102f1578063a457c2d714610309578063a9059cbb1461032d578063dd62ed3e14610351578063f2fde38b14610378575b600080fd5b3480156100f657600080fd5b506100ff610399565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610139578181015183820152602001610121565b50505050905090810190601f1680156101665780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561018057600080fd5b50610198600160a060020a036004351660243561042c565b604080519115158252519081900360200190f35b3480156101b857600080fd5b506101c1610442565b60408051918252519081900360200190f35b3480156101df57600080fd5b50610198600160a060020a0360043581169060243516604435610448565b34801561020957600080fd5b5061021261049f565b6040805160ff9092168252519081900360200190f35b34801561023457600080fd5b50610198600160a060020a03600435166024356104a8565b34801561025857600080fd5b506102646004356104e4565b005b34801561027257600080fd5b506101c1600160a060020a03600435166104f1565b34801561029357600080fd5b50610264600160a060020a036004351660243561050c565b3480156102b757600080fd5b506102c061051a565b60408051600160a060020a039092168252519081900360200190f35b3480156102e857600080fd5b506100ff61052e565b3480156102fd57600080fd5b5061026460043561058f565b34801561031557600080fd5b50610198600160a060020a0360043516602435610600565b34801561033957600080fd5b50610198600160a060020a036004351660243561063c565b34801561035d57600080fd5b506101c1600160a060020a0360043581169060243516610649565b34801561038457600080fd5b50610264600160a060020a0360043516610674565b60028054604080516020601f60001961010060018716150201909416859004938401819004810282018101909252828152606093909290918301828280156104225780601f106103f757610100808354040283529160200191610422565b820191906000526020600020905b81548152906001019060200180831161040557829003601f168201915b5050505050905090565b6000610439338484610759565b50600192915050565b60055490565b60006104558484846108c6565b600160a060020a038416600090815260016020908152604080832033808552925290912054610495918691610490908663ffffffff610a8a16565b610759565b5060019392505050565b60045460ff1690565b336000818152600160209081526040808320600160a060020a03871684529091528120549091610439918590610490908663ffffffff610aec16565b6104ee3382610b50565b50565b600160a060020a031660009081526020819052604090205490565b6105168282610c6a565b5050565b6004546101009004600160a060020a031681565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104225780601f106103f757610100808354040283529160200191610422565b6004546101009004600160a060020a031633146105f6576040805160e560020a62461bcd02815260206004820152601760248201527f53656e646572206973206e6f7420746865206f776e6572000000000000000000604482015290519081900360640190fd5b6104ee3382610caf565b336000818152600160209081526040808320600160a060020a03871684529091528120549091610439918590610490908663ffffffff610a8a16565b60006104393384846108c6565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b6004546101009004600160a060020a031633146106db576040805160e560020a62461bcd02815260206004820152601760248201527f53656e646572206973206e6f7420746865206f776e6572000000000000000000604482015290519081900360640190fd5b600160a060020a03811615156106f057600080fd5b6004805474ffffffffffffffffffffffffffffffffffffffff001916610100600160a060020a03848116828102939093179384905560405192939190910416907f5c486528ec3e3f0ea91181cff8116f02bfa350e03b8b6f12e00765adbb5af85c90600090a350565b600160a060020a03831615156107de576040805160e560020a62461bcd028152602060048201526024808201527f5a524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f7265737300000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b600160a060020a0382161515610864576040805160e560020a62461bcd02815260206004820152602260248201527f5a524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f7373000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b600160a060020a03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b600160a060020a038316151561094c576040805160e560020a62461bcd02815260206004820152602560248201527f5a524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f6472657373000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b600160a060020a03821615156109d2576040805160e560020a62461bcd02815260206004820152602360248201527f5a524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f6573730000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b600160a060020a0383166000908152602081905260409020546109fb908263ffffffff610a8a16565b600160a060020a038085166000908152602081905260408082209390935590841681522054610a30908263ffffffff610aec16565b600160a060020a038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008083831115610ae5576040805160e560020a62461bcd02815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b5050900390565b600082820183811015610b49576040805160e560020a62461bcd02815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b600160a060020a0382161515610bd6576040805160e560020a62461bcd02815260206004820152602160248201527f5a524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f7300000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b600554610be9908263ffffffff610a8a16565b600555600160a060020a038216600090815260208190526040902054610c15908263ffffffff610a8a16565b600160a060020a038316600081815260208181526040808320949094558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a35050565b610c748282610b50565b600160a060020a038216600090815260016020908152604080832033808552925290912054610516918491610490908563ffffffff610a8a16565b600160a060020a0382161515610d0f576040805160e560020a62461bcd02815260206004820152601f60248201527f5a524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b600554610d22908263ffffffff610aec16565b600555600160a060020a038216600090815260208190526040902054610d4e908263ffffffff610aec16565b600160a060020a0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a350505600a165627a7a723058205e1617b56ad3ed7ae27843acc54c90863801d5c20fd523870850c69f5383b4c30029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x10E7 CODESIZE SUB DUP1 PUSH3 0x10E7 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 SWAP1 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 DUP1 DUP5 ADD MLOAD SWAP3 DUP5 ADD MLOAD SWAP2 DUP5 ADD DUP1 MLOAD SWAP1 SWAP5 SWAP4 SWAP1 SWAP4 ADD SWAP3 PUSH3 0x53 SWAP2 PUSH1 0x2 SWAP2 SWAP1 DUP7 ADD SWAP1 PUSH3 0x262 JUMP JUMPDEST POP DUP2 MLOAD PUSH3 0x69 SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x262 JUMP JUMPDEST POP PUSH1 0x4 DUP1 SLOAD CALLER PUSH2 0x100 SWAP1 DUP2 MUL PUSH2 0x100 PUSH1 0xA8 PUSH1 0x2 EXP SUB NOT PUSH1 0xFF DUP7 AND PUSH1 0xFF NOT SWAP1 SWAP5 AND DUP5 OR AND OR SWAP3 DUP4 SWAP1 SSTORE PUSH3 0xBC SWAP3 DIV PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 PUSH4 0x3B9ACA00 PUSH1 0xA SWAP2 SWAP1 SWAP2 EXP MUL PUSH5 0x100000000 PUSH3 0xC5 DUP2 MUL DIV JUMP JUMPDEST POP POP POP PUSH3 0x307 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND ISZERO ISZERO PUSH3 0x13D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5A524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH3 0x15A SWAP1 DUP3 PUSH5 0x100000000 PUSH3 0xAEC PUSH3 0x1E6 DUP3 MUL OR DIV JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH3 0x190 SWAP1 DUP3 PUSH5 0x100000000 PUSH3 0xAEC PUSH3 0x1E6 DUP3 MUL OR DIV JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH3 0x25B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x2A5 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x2D5 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x2D5 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x2D5 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x2B8 JUMP JUMPDEST POP PUSH3 0x2E3 SWAP3 SWAP2 POP PUSH3 0x2E7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH3 0x304 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x2E3 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x2EE JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xDD0 DUP1 PUSH3 0x317 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE5 JUMPI PUSH4 0xFFFFFFFF PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD DIV AND PUSH4 0x6FDDE03 DUP2 EQ PUSH2 0xEA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x228 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2DC JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x2F1 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x32D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x378 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFF PUSH2 0x399 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x139 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x121 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x166 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x180 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x198 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0x42C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C1 PUSH2 0x442 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x198 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD DUP2 AND SWAP1 PUSH1 0x24 CALLDATALOAD AND PUSH1 0x44 CALLDATALOAD PUSH2 0x448 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x209 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x212 PUSH2 0x49F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x234 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x198 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0x4A8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x258 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x264 PUSH1 0x4 CALLDATALOAD PUSH2 0x4E4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x272 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x4F1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x293 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x264 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0x50C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C0 PUSH2 0x51A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFF PUSH2 0x52E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x264 PUSH1 0x4 CALLDATALOAD PUSH2 0x58F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x315 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x198 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0x600 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x339 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x198 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0x63C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD DUP2 AND SWAP1 PUSH1 0x24 CALLDATALOAD AND PUSH2 0x649 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x384 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x264 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x674 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP8 AND ISZERO MUL ADD SWAP1 SWAP5 AND DUP6 SWAP1 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x422 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3F7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x422 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x405 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x439 CALLER DUP5 DUP5 PUSH2 0x759 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x455 DUP5 DUP5 DUP5 PUSH2 0x8C6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x495 SWAP2 DUP7 SWAP2 PUSH2 0x490 SWAP1 DUP7 PUSH4 0xFFFFFFFF PUSH2 0xA8A AND JUMP JUMPDEST PUSH2 0x759 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x439 SWAP2 DUP6 SWAP1 PUSH2 0x490 SWAP1 DUP7 PUSH4 0xFFFFFFFF PUSH2 0xAEC AND JUMP JUMPDEST PUSH2 0x4EE CALLER DUP3 PUSH2 0xB50 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x516 DUP3 DUP3 PUSH2 0xC6A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x422 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3F7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x422 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x5F6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656E646572206973206E6F7420746865206F776E6572000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x4EE CALLER DUP3 PUSH2 0xCAF JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x439 SWAP2 DUP6 SWAP1 PUSH2 0x490 SWAP1 DUP7 PUSH4 0xFFFFFFFF PUSH2 0xA8A AND JUMP JUMPDEST PUSH1 0x0 PUSH2 0x439 CALLER DUP5 DUP5 PUSH2 0x8C6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x6DB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656E646572206973206E6F7420746865206F776E6572000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND ISZERO ISZERO PUSH2 0x6F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 NOT AND PUSH2 0x100 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 DUP2 AND DUP3 DUP2 MUL SWAP4 SWAP1 SWAP4 OR SWAP4 DUP5 SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP3 SWAP4 SWAP2 SWAP1 SWAP2 DIV AND SWAP1 PUSH32 0x5C486528EC3E3F0EA91181CFF8116F02BFA350E03B8B6F12E00765ADBB5AF85C SWAP1 PUSH1 0x0 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND ISZERO ISZERO PUSH2 0x7DE JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x5A524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x84 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND ISZERO ISZERO PUSH2 0x864 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5A524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x84 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND ISZERO ISZERO PUSH2 0x94C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5A524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x84 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND ISZERO ISZERO PUSH2 0x9D2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5A524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x84 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x9FB SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xA8A AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0xA30 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xAEC AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP4 GT ISZERO PUSH2 0xAE5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xB49 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND ISZERO ISZERO PUSH2 0xBD6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5A524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x84 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH2 0xBE9 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xA8A AND JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xC15 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xA8A AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP2 SWAP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xC74 DUP3 DUP3 PUSH2 0xB50 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x516 SWAP2 DUP5 SWAP2 PUSH2 0x490 SWAP1 DUP6 PUSH4 0xFFFFFFFF PUSH2 0xA8A AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND ISZERO ISZERO PUSH2 0xD0F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5A524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH2 0xD22 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xAEC AND JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xD4E SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xAEC AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0x5e AND OR 0xb5 PUSH11 0xD3ED7AE27843ACC54C9086 CODESIZE ADD 0xd5 0xc2 0xf 0xd5 0x23 DUP8 ADDMOD POP 0xc6 SWAP16 MSTORE8 DUP4 0xb4 0xc3 STOP 0x29 ",
							"sourceMap": "4286:8802:0:-;;;4773:251;8:9:-1;5:2;;;30:1;27;20:12;5:2;4773:251:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4861:12;;4773:251;;;;;;;4861:12;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;4883:16:0;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;4909:9:0;:20;;4947:10;4909:20;4939:18;;;-1:-1:-1;;;;;;4909:20:0;;;-1:-1:-1;;4909:20:0;;;;;4939:18;;;;;;4967:50;;4973:5;-1:-1:-1;;;;;4973:5:0;;4980:10;4993:2;:23;;;;4980:36;4967:5;;;;:50;:::i;:::-;4773:251;;;4286:8802;;10274:301;-1:-1:-1;;;;;10349:21:0;;;;10341:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10431:12;;:24;;10448:6;10431:16;;;;;;:24;:::i;:::-;10416:12;:39;-1:-1:-1;;;;;10486:18:0;;:9;:18;;;;;;;;;;;:30;;10509:6;10486:22;;;;;;:30;:::i;:::-;-1:-1:-1;;;;;10465:18:0;;:9;:18;;;;;;;;;;;:51;;;;10531:37;;;;;;;10465:18;;:9;;10531:37;;;;;;;;;;10274:301;;:::o;944:176::-;1002:7;1033:5;;;1056:6;;;;1048:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1112:1;944:176;-1:-1:-1;;;944:176:0:o;4286:8802::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4286:8802:0;;;-1:-1:-1;4286:8802:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6080604052600436106100e55763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100ea578063095ea7b31461017457806318160ddd146101ac57806323b872dd146101d3578063313ce567146101fd578063395093511461022857806342966c681461024c57806370a082311461026657806379cc6790146102875780638da5cb5b146102ab57806395d89b41146102dc578063a0712d68146102f1578063a457c2d714610309578063a9059cbb1461032d578063dd62ed3e14610351578063f2fde38b14610378575b600080fd5b3480156100f657600080fd5b506100ff610399565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610139578181015183820152602001610121565b50505050905090810190601f1680156101665780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561018057600080fd5b50610198600160a060020a036004351660243561042c565b604080519115158252519081900360200190f35b3480156101b857600080fd5b506101c1610442565b60408051918252519081900360200190f35b3480156101df57600080fd5b50610198600160a060020a0360043581169060243516604435610448565b34801561020957600080fd5b5061021261049f565b6040805160ff9092168252519081900360200190f35b34801561023457600080fd5b50610198600160a060020a03600435166024356104a8565b34801561025857600080fd5b506102646004356104e4565b005b34801561027257600080fd5b506101c1600160a060020a03600435166104f1565b34801561029357600080fd5b50610264600160a060020a036004351660243561050c565b3480156102b757600080fd5b506102c061051a565b60408051600160a060020a039092168252519081900360200190f35b3480156102e857600080fd5b506100ff61052e565b3480156102fd57600080fd5b5061026460043561058f565b34801561031557600080fd5b50610198600160a060020a0360043516602435610600565b34801561033957600080fd5b50610198600160a060020a036004351660243561063c565b34801561035d57600080fd5b506101c1600160a060020a0360043581169060243516610649565b34801561038457600080fd5b50610264600160a060020a0360043516610674565b60028054604080516020601f60001961010060018716150201909416859004938401819004810282018101909252828152606093909290918301828280156104225780601f106103f757610100808354040283529160200191610422565b820191906000526020600020905b81548152906001019060200180831161040557829003601f168201915b5050505050905090565b6000610439338484610759565b50600192915050565b60055490565b60006104558484846108c6565b600160a060020a038416600090815260016020908152604080832033808552925290912054610495918691610490908663ffffffff610a8a16565b610759565b5060019392505050565b60045460ff1690565b336000818152600160209081526040808320600160a060020a03871684529091528120549091610439918590610490908663ffffffff610aec16565b6104ee3382610b50565b50565b600160a060020a031660009081526020819052604090205490565b6105168282610c6a565b5050565b6004546101009004600160a060020a031681565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104225780601f106103f757610100808354040283529160200191610422565b6004546101009004600160a060020a031633146105f6576040805160e560020a62461bcd02815260206004820152601760248201527f53656e646572206973206e6f7420746865206f776e6572000000000000000000604482015290519081900360640190fd5b6104ee3382610caf565b336000818152600160209081526040808320600160a060020a03871684529091528120549091610439918590610490908663ffffffff610a8a16565b60006104393384846108c6565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b6004546101009004600160a060020a031633146106db576040805160e560020a62461bcd02815260206004820152601760248201527f53656e646572206973206e6f7420746865206f776e6572000000000000000000604482015290519081900360640190fd5b600160a060020a03811615156106f057600080fd5b6004805474ffffffffffffffffffffffffffffffffffffffff001916610100600160a060020a03848116828102939093179384905560405192939190910416907f5c486528ec3e3f0ea91181cff8116f02bfa350e03b8b6f12e00765adbb5af85c90600090a350565b600160a060020a03831615156107de576040805160e560020a62461bcd028152602060048201526024808201527f5a524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f7265737300000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b600160a060020a0382161515610864576040805160e560020a62461bcd02815260206004820152602260248201527f5a524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f7373000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b600160a060020a03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b600160a060020a038316151561094c576040805160e560020a62461bcd02815260206004820152602560248201527f5a524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f6472657373000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b600160a060020a03821615156109d2576040805160e560020a62461bcd02815260206004820152602360248201527f5a524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f6573730000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b600160a060020a0383166000908152602081905260409020546109fb908263ffffffff610a8a16565b600160a060020a038085166000908152602081905260408082209390935590841681522054610a30908263ffffffff610aec16565b600160a060020a038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008083831115610ae5576040805160e560020a62461bcd02815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b5050900390565b600082820183811015610b49576040805160e560020a62461bcd02815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b600160a060020a0382161515610bd6576040805160e560020a62461bcd02815260206004820152602160248201527f5a524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f7300000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b600554610be9908263ffffffff610a8a16565b600555600160a060020a038216600090815260208190526040902054610c15908263ffffffff610a8a16565b600160a060020a038316600081815260208181526040808320949094558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a35050565b610c748282610b50565b600160a060020a038216600090815260016020908152604080832033808552925290912054610516918491610490908563ffffffff610a8a16565b600160a060020a0382161515610d0f576040805160e560020a62461bcd02815260206004820152601f60248201527f5a524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b600554610d22908263ffffffff610aec16565b600555600160a060020a038216600090815260208190526040902054610d4e908263ffffffff610aec16565b600160a060020a0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a350505600a165627a7a723058205e1617b56ad3ed7ae27843acc54c90863801d5c20fd523870850c69f5383b4c30029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE5 JUMPI PUSH4 0xFFFFFFFF PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD DIV AND PUSH4 0x6FDDE03 DUP2 EQ PUSH2 0xEA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x228 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2DC JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x2F1 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x32D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x378 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFF PUSH2 0x399 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x139 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x121 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x166 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x180 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x198 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0x42C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C1 PUSH2 0x442 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x198 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD DUP2 AND SWAP1 PUSH1 0x24 CALLDATALOAD AND PUSH1 0x44 CALLDATALOAD PUSH2 0x448 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x209 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x212 PUSH2 0x49F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x234 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x198 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0x4A8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x258 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x264 PUSH1 0x4 CALLDATALOAD PUSH2 0x4E4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x272 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x4F1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x293 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x264 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0x50C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C0 PUSH2 0x51A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFF PUSH2 0x52E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x264 PUSH1 0x4 CALLDATALOAD PUSH2 0x58F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x315 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x198 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0x600 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x339 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x198 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0x63C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD DUP2 AND SWAP1 PUSH1 0x24 CALLDATALOAD AND PUSH2 0x649 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x384 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x264 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x674 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP8 AND ISZERO MUL ADD SWAP1 SWAP5 AND DUP6 SWAP1 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x422 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3F7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x422 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x405 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x439 CALLER DUP5 DUP5 PUSH2 0x759 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x455 DUP5 DUP5 DUP5 PUSH2 0x8C6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x495 SWAP2 DUP7 SWAP2 PUSH2 0x490 SWAP1 DUP7 PUSH4 0xFFFFFFFF PUSH2 0xA8A AND JUMP JUMPDEST PUSH2 0x759 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x439 SWAP2 DUP6 SWAP1 PUSH2 0x490 SWAP1 DUP7 PUSH4 0xFFFFFFFF PUSH2 0xAEC AND JUMP JUMPDEST PUSH2 0x4EE CALLER DUP3 PUSH2 0xB50 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x516 DUP3 DUP3 PUSH2 0xC6A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x422 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3F7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x422 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x5F6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656E646572206973206E6F7420746865206F776E6572000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x4EE CALLER DUP3 PUSH2 0xCAF JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x439 SWAP2 DUP6 SWAP1 PUSH2 0x490 SWAP1 DUP7 PUSH4 0xFFFFFFFF PUSH2 0xA8A AND JUMP JUMPDEST PUSH1 0x0 PUSH2 0x439 CALLER DUP5 DUP5 PUSH2 0x8C6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x6DB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656E646572206973206E6F7420746865206F776E6572000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND ISZERO ISZERO PUSH2 0x6F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 NOT AND PUSH2 0x100 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 DUP2 AND DUP3 DUP2 MUL SWAP4 SWAP1 SWAP4 OR SWAP4 DUP5 SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP3 SWAP4 SWAP2 SWAP1 SWAP2 DIV AND SWAP1 PUSH32 0x5C486528EC3E3F0EA91181CFF8116F02BFA350E03B8B6F12E00765ADBB5AF85C SWAP1 PUSH1 0x0 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND ISZERO ISZERO PUSH2 0x7DE JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x5A524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x84 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND ISZERO ISZERO PUSH2 0x864 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5A524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x84 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND ISZERO ISZERO PUSH2 0x94C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5A524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x84 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND ISZERO ISZERO PUSH2 0x9D2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5A524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x84 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x9FB SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xA8A AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0xA30 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xAEC AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP4 GT ISZERO PUSH2 0xAE5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xB49 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND ISZERO ISZERO PUSH2 0xBD6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5A524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x84 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH2 0xBE9 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xA8A AND JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xC15 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xA8A AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP2 SWAP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xC74 DUP3 DUP3 PUSH2 0xB50 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x516 SWAP2 DUP5 SWAP2 PUSH2 0x490 SWAP1 DUP6 PUSH4 0xFFFFFFFF PUSH2 0xA8A AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND ISZERO ISZERO PUSH2 0xD0F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5A524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH2 0xD22 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xAEC AND JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xD4E SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xAEC AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0x5e AND OR 0xb5 PUSH11 0xD3ED7AE27843ACC54C9086 CODESIZE ADD 0xd5 0xc2 0xf 0xd5 0x23 DUP8 ADDMOD POP 0xc6 SWAP16 MSTORE8 DUP4 0xb4 0xc3 STOP 0x29 ",
							"sourceMap": "4286:8802:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5089:81;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5089:81:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;5089:81:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7038:145;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;7038:145:0;-1:-1:-1;;;;;7038:145:0;;;;;;;;;;;;;;;;;;;;;;;;;6099:89;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6099:89:0;;;;;;;;;;;;;;;;;;;;7558:252;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;7558:252:0;-1:-1:-1;;;;;7558:252:0;;;;;;;;;;;;5923:81;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5923:81:0;;;;;;;;;;;;;;;;;;;;;;;8205:203;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;8205:203:0;-1:-1:-1;;;;;8205:203:0;;;;;;;11437:79;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;11437:79:0;;;;;;;6246:108;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;6246:108:0;-1:-1:-1;;;;;6246:108:0;;;;;11573:101;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;11573:101:0;-1:-1:-1;;;;;11573:101:0;;;;;;;4564:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4564:20:0;;;;;;;;-1:-1:-1;;;;;4564:20:0;;;;;;;;;;;;;;5283:85;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5283:85:0;;;;12661:78;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;12661:78:0;;;;;8895:213;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;8895:213:0;-1:-1:-1;;;;;8895:213:0;;;;;;;6557:153;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;6557:153:0;-1:-1:-1;;;;;6557:153:0;;;;;;;6768:132;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;6768:132:0;-1:-1:-1;;;;;6768:132:0;;;;;;;;;;12907:179;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;12907:179:0;-1:-1:-1;;;;;12907:179:0;;;;;5089:81;5158:5;5151:12;;;;;;;-1:-1:-1;;5151:12:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5126:6;;5151:12;;5158:5;;5151:12;;5158:5;5151:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5089:81;:::o;7038:145::-;7103:4;7119:36;7128:10;7140:7;7149:5;7119:8;:36::i;:::-;-1:-1:-1;7172:4:0;7038:145;;;;:::o;6099:89::-;6169:12;;6099:89;:::o;7558:252::-;7647:4;7663:36;7673:6;7681:9;7692:6;7663:9;:36::i;:::-;-1:-1:-1;;;;;7738:19:0;;;;;;:11;:19;;;;;;;;7726:10;7738:31;;;;;;;;;7709:73;;7718:6;;7738:43;;7774:6;7738:43;:35;:43;:::i;:::-;7709:8;:73::i;:::-;-1:-1:-1;7799:4:0;7558:252;;;;;:::o;5923:81::-;5988:9;;;;5923:81;:::o;8205:203::-;8310:10;8285:4;8331:23;;;:11;:23;;;;;;;;-1:-1:-1;;;;;8331:32:0;;;;;;;;;;8285:4;;8301:79;;8322:7;;8331:48;;8368:10;8331:48;:36;:48;:::i;11437:79::-;11484:25;11490:10;11502:6;11484:5;:25::i;:::-;11437:79;:::o;6246:108::-;-1:-1:-1;;;;;6329:18:0;6303:7;6329:18;;;;;;;;;;;;6246:108::o;11573:101::-;11641:26;11651:7;11660:6;11641:9;:26::i;:::-;11573:101;;:::o;4564:20::-;;;;;;-1:-1:-1;;;;;4564:20:0;;:::o;5283:85::-;5354:7;5347:14;;;;;;;;-1:-1:-1;;5347:14:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5322:6;;5347:14;;5354:7;;5347:14;;5354:7;5347:14;;;;;;;;;;;;;;;;;;;;;;;;12661:78;4716:5;;;;;-1:-1:-1;;;;;4716:5:0;4702:10;:19;4694:55;;;;;-1:-1:-1;;;;;4694:55:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;12711:24;12717:10;12729:5;12711;:24::i;8895:213::-;9005:10;8980:4;9026:23;;;:11;:23;;;;;;;;-1:-1:-1;;;;;9026:32:0;;;;;;;;;;8980:4;;8996:84;;9017:7;;9026:53;;9063:15;9026:53;:36;:53;:::i;6557:153::-;6626:4;6642:40;6652:10;6664:9;6675:6;6642:9;:40::i;6768:132::-;-1:-1:-1;;;;;6866:18:0;;;6840:7;6866:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;6768:132::o;12907:179::-;4716:5;;;;;-1:-1:-1;;;;;4716:5:0;4702:10;:19;4694:55;;;;;-1:-1:-1;;;;;4694:55:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;12985:22:0;;;;12977:31;;;;;;13016:5;:16;;-1:-1:-1;;13016:16:0;;-1:-1:-1;;;;;13016:16:0;;;;;;;;;;;;;;13045:34;;13016:16;;13063:5;;;;;;13045:34;;-1:-1:-1;;13045:34:0;12907:179;:::o;11000:329::-;-1:-1:-1;;;;;11092:19:0;;;;11084:68;;;;;-1:-1:-1;;;;;11084:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11170:21:0;;;;11162:68;;;;;-1:-1:-1;;;;;11162:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11241:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:35;;;11291:31;;;;;;;;;;;;;;;;;11000:329;;;:::o;9582:422::-;-1:-1:-1;;;;;9679:20:0;;;;9671:70;;;;;-1:-1:-1;;;;;9671:70:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9759:23:0;;;;9751:71;;;;;-1:-1:-1;;;;;9751:71:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9853:17:0;;:9;:17;;;;;;;;;;;:29;;9875:6;9853:29;:21;:29;:::i;:::-;-1:-1:-1;;;;;9833:17:0;;;:9;:17;;;;;;;;;;;:49;;;;9915:20;;;;;;;:32;;9940:6;9915:32;:24;:32;:::i;:::-;-1:-1:-1;;;;;9892:20:0;;;:9;:20;;;;;;;;;;;;:55;;;;9962:35;;;;;;;9892:20;;9962:35;;;;;;;;;;;;;9582:422;;;:::o;1384:179::-;1442:7;;1469:6;;;;1461:49;;;;;-1:-1:-1;;;;;1461:49:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1532:5:0;;;1384:179::o;944:176::-;1002:7;1033:5;;;1056:6;;;;1048:46;;;;;-1:-1:-1;;;;;1048:46:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;1112:1;944:176;-1:-1:-1;;;944:176:0:o;11993:300::-;-1:-1:-1;;;;;12067:21:0;;;;12059:67;;;;;-1:-1:-1;;;;;12059:67:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12152:12;;:23;;12169:5;12152:23;:16;:23;:::i;:::-;12137:12;:38;-1:-1:-1;;;;;12206:18:0;;:9;:18;;;;;;;;;;;:29;;12229:5;12206:29;:22;:29;:::i;:::-;-1:-1:-1;;;;;12185:18:0;;:9;:18;;;;;;;;;;;:50;;;;12250:36;;;;;;;12185:9;;12250:36;;;;;;;;;;;11993:300;;:::o;12470:185::-;12541:22;12547:7;12556:6;12541:5;:22::i;:::-;-1:-1:-1;;;;;12603:20:0;;;;;;:11;:20;;;;;;;;12591:10;12603:32;;;;;;;;;12573:75;;12582:7;;12603:44;;12640:6;12603:44;:36;:44;:::i;10274:301::-;-1:-1:-1;;;;;10349:21:0;;;;10341:65;;;;;-1:-1:-1;;;;;10341:65:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;10431:12;;:24;;10448:6;10431:24;:16;:24;:::i;:::-;10416:12;:39;-1:-1:-1;;;;;10486:18:0;;:9;:18;;;;;;;;;;;:30;;10509:6;10486:30;:22;:30;:::i;:::-;-1:-1:-1;;;;;10465:18:0;;:9;:18;;;;;;;;;;;:51;;;;10531:37;;;;;;;10465:18;;:9;;10531:37;;;;;;;;;;10274:301;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "707200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "1016",
								"approve(address,uint256)": "22592",
								"balanceOf(address)": "763",
								"burn(uint256)": "infinite",
								"burnFrom(address,uint256)": "infinite",
								"decimals()": "487",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"mint(uint256)": "infinite",
								"name()": "infinite",
								"owner()": "746",
								"symbol()": "infinite",
								"totalSupply()": "428",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "22824"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_burnFrom(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 4286,
									"end": 13088,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "MSTORE"
								},
								{
									"begin": 4773,
									"end": 5024,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 4773,
									"end": 5024,
									"name": "POP"
								},
								{
									"begin": 4773,
									"end": 5024,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 4773,
									"end": 5024,
									"name": "MLOAD"
								},
								{
									"begin": 4773,
									"end": 5024,
									"name": "PUSHSIZE"
								},
								{
									"begin": 4773,
									"end": 5024,
									"name": "CODESIZE"
								},
								{
									"begin": 4773,
									"end": 5024,
									"name": "SUB"
								},
								{
									"begin": 4773,
									"end": 5024,
									"name": "DUP1"
								},
								{
									"begin": 4773,
									"end": 5024,
									"name": "PUSHSIZE"
								},
								{
									"begin": 4773,
									"end": 5024,
									"name": "DUP4"
								},
								{
									"begin": 4773,
									"end": 5024,
									"name": "CODECOPY"
								},
								{
									"begin": 4773,
									"end": 5024,
									"name": "DUP2"
								},
								{
									"begin": 4773,
									"end": 5024,
									"name": "ADD"
								},
								{
									"begin": 4773,
									"end": 5024,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 4773,
									"end": 5024,
									"name": "SWAP1"
								},
								{
									"begin": 4773,
									"end": 5024,
									"name": "DUP2"
								},
								{
									"begin": 4773,
									"end": 5024,
									"name": "MSTORE"
								},
								{
									"begin": 4773,
									"end": 5024,
									"name": "DUP2"
								},
								{
									"begin": 4773,
									"end": 5024,
									"name": "MLOAD"
								},
								{
									"begin": 4773,
									"end": 5024,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 4773,
									"end": 5024,
									"name": "DUP1"
								},
								{
									"begin": 4773,
									"end": 5024,
									"name": "DUP5"
								},
								{
									"begin": 4773,
									"end": 5024,
									"name": "ADD"
								},
								{
									"begin": 4773,
									"end": 5024,
									"name": "MLOAD"
								},
								{
									"begin": 4773,
									"end": 5024,
									"name": "SWAP3"
								},
								{
									"begin": 4773,
									"end": 5024,
									"name": "DUP5"
								},
								{
									"begin": 4773,
									"end": 5024,
									"name": "ADD"
								},
								{
									"begin": 4773,
									"end": 5024,
									"name": "MLOAD"
								},
								{
									"begin": 4773,
									"end": 5024,
									"name": "SWAP2"
								},
								{
									"begin": 4773,
									"end": 5024,
									"name": "DUP5"
								},
								{
									"begin": 4773,
									"end": 5024,
									"name": "ADD"
								},
								{
									"begin": 4861,
									"end": 4873,
									"name": "DUP1"
								},
								{
									"begin": 4861,
									"end": 4873,
									"name": "MLOAD"
								},
								{
									"begin": 4773,
									"end": 5024,
									"name": "SWAP1"
								},
								{
									"begin": 4773,
									"end": 5024,
									"name": "SWAP5"
								},
								{
									"begin": 4773,
									"end": 5024,
									"name": "SWAP4"
								},
								{
									"begin": 4773,
									"end": 5024,
									"name": "SWAP1"
								},
								{
									"begin": 4773,
									"end": 5024,
									"name": "SWAP4"
								},
								{
									"begin": 4773,
									"end": 5024,
									"name": "ADD"
								},
								{
									"begin": 4773,
									"end": 5024,
									"name": "SWAP3"
								},
								{
									"begin": 4861,
									"end": 4873,
									"name": "PUSH [tag]",
									"value": "4"
								},
								{
									"begin": 4861,
									"end": 4873,
									"name": "SWAP2"
								},
								{
									"begin": 4861,
									"end": 4866,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 4861,
									"end": 4866,
									"name": "SWAP2"
								},
								{
									"begin": 4861,
									"end": 4873,
									"name": "SWAP1"
								},
								{
									"begin": 4861,
									"end": 4873,
									"name": "DUP7"
								},
								{
									"begin": 4861,
									"end": 4873,
									"name": "ADD"
								},
								{
									"begin": 4861,
									"end": 4873,
									"name": "SWAP1"
								},
								{
									"begin": 4861,
									"end": 4873,
									"name": "PUSH [tag]",
									"value": "5"
								},
								{
									"begin": 4861,
									"end": 4873,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 4861,
									"end": 4873,
									"name": "tag",
									"value": "4"
								},
								{
									"begin": 4861,
									"end": 4873,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 4883,
									"end": 4899,
									"name": "DUP2"
								},
								{
									"begin": 4883,
									"end": 4899,
									"name": "MLOAD"
								},
								{
									"begin": 4883,
									"end": 4899,
									"name": "PUSH [tag]",
									"value": "6"
								},
								{
									"begin": 4883,
									"end": 4899,
									"name": "SWAP1"
								},
								{
									"begin": 4883,
									"end": 4890,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 4883,
									"end": 4890,
									"name": "SWAP1"
								},
								{
									"begin": 4883,
									"end": 4899,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 4883,
									"end": 4899,
									"name": "DUP6"
								},
								{
									"begin": 4883,
									"end": 4899,
									"name": "ADD"
								},
								{
									"begin": 4883,
									"end": 4899,
									"name": "SWAP1"
								},
								{
									"begin": 4883,
									"end": 4899,
									"name": "PUSH [tag]",
									"value": "5"
								},
								{
									"begin": 4883,
									"end": 4899,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 4883,
									"end": 4899,
									"name": "tag",
									"value": "6"
								},
								{
									"begin": 4883,
									"end": 4899,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 4909,
									"end": 4918,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 4909,
									"end": 4929,
									"name": "DUP1"
								},
								{
									"begin": 4909,
									"end": 4929,
									"name": "SLOAD"
								},
								{
									"begin": 4947,
									"end": 4957,
									"name": "CALLER"
								},
								{
									"begin": 4909,
									"end": 4929,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 4939,
									"end": 4957,
									"name": "SWAP1"
								},
								{
									"begin": 4939,
									"end": 4957,
									"name": "DUP2"
								},
								{
									"begin": 4939,
									"end": 4957,
									"name": "MUL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "EXP"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT"
								},
								{
									"begin": 4909,
									"end": 4929,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 4909,
									"end": 4929,
									"name": "DUP7"
								},
								{
									"begin": 4909,
									"end": 4929,
									"name": "AND"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT"
								},
								{
									"begin": 4909,
									"end": 4929,
									"name": "SWAP1"
								},
								{
									"begin": 4909,
									"end": 4929,
									"name": "SWAP5"
								},
								{
									"begin": 4909,
									"end": 4929,
									"name": "AND"
								},
								{
									"begin": 4909,
									"end": 4929,
									"name": "DUP5"
								},
								{
									"begin": 4909,
									"end": 4929,
									"name": "OR"
								},
								{
									"begin": 4939,
									"end": 4957,
									"name": "AND"
								},
								{
									"begin": 4939,
									"end": 4957,
									"name": "OR"
								},
								{
									"begin": 4939,
									"end": 4957,
									"name": "SWAP3"
								},
								{
									"begin": 4939,
									"end": 4957,
									"name": "DUP4"
								},
								{
									"begin": 4939,
									"end": 4957,
									"name": "SWAP1"
								},
								{
									"begin": 4939,
									"end": 4957,
									"name": "SSTORE"
								},
								{
									"begin": 4967,
									"end": 5017,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": 4967,
									"end": 5017,
									"name": "SWAP3"
								},
								{
									"begin": 4973,
									"end": 4978,
									"name": "DIV"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "EXP"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": 4973,
									"end": 4978,
									"name": "AND"
								},
								{
									"begin": 4973,
									"end": 4978,
									"name": "SWAP1"
								},
								{
									"begin": 4980,
									"end": 4990,
									"name": "PUSH",
									"value": "3B9ACA00"
								},
								{
									"begin": 4993,
									"end": 4995,
									"name": "PUSH",
									"value": "A"
								},
								{
									"begin": 4993,
									"end": 5016,
									"name": "SWAP2"
								},
								{
									"begin": 4993,
									"end": 5016,
									"name": "SWAP1"
								},
								{
									"begin": 4993,
									"end": 5016,
									"name": "SWAP2"
								},
								{
									"begin": 4993,
									"end": 5016,
									"name": "EXP"
								},
								{
									"begin": 4980,
									"end": 5016,
									"name": "MUL"
								},
								{
									"begin": 4967,
									"end": 4972,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 4967,
									"end": 4972,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 4967,
									"end": 4972,
									"name": "DUP2"
								},
								{
									"begin": 4967,
									"end": 4972,
									"name": "MUL"
								},
								{
									"begin": 4967,
									"end": 5017,
									"name": "DIV"
								},
								{
									"begin": 4967,
									"end": 5017,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 4967,
									"end": 5017,
									"name": "tag",
									"value": "7"
								},
								{
									"begin": 4967,
									"end": 5017,
									"name": "JUMPDEST"
								},
								{
									"begin": 4773,
									"end": 5024,
									"name": "POP"
								},
								{
									"begin": 4773,
									"end": 5024,
									"name": "POP"
								},
								{
									"begin": 4773,
									"end": 5024,
									"name": "POP"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "PUSH [tag]",
									"value": "9"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "JUMP"
								},
								{
									"begin": 10274,
									"end": 10575,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 10274,
									"end": 10575,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "EXP"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": 10349,
									"end": 10370,
									"name": "DUP3"
								},
								{
									"begin": 10349,
									"end": 10370,
									"name": "AND"
								},
								{
									"begin": 10349,
									"end": 10370,
									"name": "ISZERO"
								},
								{
									"begin": 10349,
									"end": 10370,
									"name": "ISZERO"
								},
								{
									"begin": 10341,
									"end": 10406,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 10341,
									"end": 10406,
									"name": "JUMPI"
								},
								{
									"begin": 10341,
									"end": 10406,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 10341,
									"end": 10406,
									"name": "DUP1"
								},
								{
									"begin": 10341,
									"end": 10406,
									"name": "MLOAD"
								},
								{
									"begin": 10341,
									"end": 10406,
									"name": "PUSH",
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 10341,
									"end": 10406,
									"name": "DUP2"
								},
								{
									"begin": 10341,
									"end": 10406,
									"name": "MSTORE"
								},
								{
									"begin": 10341,
									"end": 10406,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 10341,
									"end": 10406,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 10341,
									"end": 10406,
									"name": "DUP3"
								},
								{
									"begin": 10341,
									"end": 10406,
									"name": "ADD"
								},
								{
									"begin": 10341,
									"end": 10406,
									"name": "MSTORE"
								},
								{
									"begin": 10341,
									"end": 10406,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 10341,
									"end": 10406,
									"name": "PUSH",
									"value": "24"
								},
								{
									"begin": 10341,
									"end": 10406,
									"name": "DUP3"
								},
								{
									"begin": 10341,
									"end": 10406,
									"name": "ADD"
								},
								{
									"begin": 10341,
									"end": 10406,
									"name": "MSTORE"
								},
								{
									"begin": 10341,
									"end": 10406,
									"name": "PUSH",
									"value": "5A524332303A206D696E7420746F20746865207A65726F206164647265737300"
								},
								{
									"begin": 10341,
									"end": 10406,
									"name": "PUSH",
									"value": "44"
								},
								{
									"begin": 10341,
									"end": 10406,
									"name": "DUP3"
								},
								{
									"begin": 10341,
									"end": 10406,
									"name": "ADD"
								},
								{
									"begin": 10341,
									"end": 10406,
									"name": "MSTORE"
								},
								{
									"begin": 10341,
									"end": 10406,
									"name": "SWAP1"
								},
								{
									"begin": 10341,
									"end": 10406,
									"name": "MLOAD"
								},
								{
									"begin": 10341,
									"end": 10406,
									"name": "SWAP1"
								},
								{
									"begin": 10341,
									"end": 10406,
									"name": "DUP2"
								},
								{
									"begin": 10341,
									"end": 10406,
									"name": "SWAP1"
								},
								{
									"begin": 10341,
									"end": 10406,
									"name": "SUB"
								},
								{
									"begin": 10341,
									"end": 10406,
									"name": "PUSH",
									"value": "64"
								},
								{
									"begin": 10341,
									"end": 10406,
									"name": "ADD"
								},
								{
									"begin": 10341,
									"end": 10406,
									"name": "SWAP1"
								},
								{
									"begin": 10341,
									"end": 10406,
									"name": "REVERT"
								},
								{
									"begin": 10341,
									"end": 10406,
									"name": "tag",
									"value": "11"
								},
								{
									"begin": 10341,
									"end": 10406,
									"name": "JUMPDEST"
								},
								{
									"begin": 10431,
									"end": 10443,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 10431,
									"end": 10443,
									"name": "SLOAD"
								},
								{
									"begin": 10431,
									"end": 10455,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 10431,
									"end": 10455,
									"name": "SWAP1"
								},
								{
									"begin": 10448,
									"end": 10454,
									"name": "DUP3"
								},
								{
									"begin": 10431,
									"end": 10447,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 10431,
									"end": 10447,
									"name": "PUSH [tag]",
									"value": "18446744073709551708"
								},
								{
									"begin": 10431,
									"end": 10447,
									"name": "PUSH [tag]",
									"value": "13"
								},
								{
									"begin": 10431,
									"end": 10447,
									"name": "DUP3"
								},
								{
									"begin": 10431,
									"end": 10447,
									"name": "MUL"
								},
								{
									"begin": 10431,
									"end": 10447,
									"name": "OR"
								},
								{
									"begin": 10431,
									"end": 10455,
									"name": "DIV"
								},
								{
									"begin": 10431,
									"end": 10455,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 10431,
									"end": 10455,
									"name": "tag",
									"value": "12"
								},
								{
									"begin": 10431,
									"end": 10455,
									"name": "JUMPDEST"
								},
								{
									"begin": 10416,
									"end": 10428,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 10416,
									"end": 10455,
									"name": "SSTORE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "EXP"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": 10486,
									"end": 10504,
									"name": "DUP3"
								},
								{
									"begin": 10486,
									"end": 10504,
									"name": "AND"
								},
								{
									"begin": 10486,
									"end": 10495,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 10486,
									"end": 10504,
									"name": "SWAP1"
								},
								{
									"begin": 10486,
									"end": 10504,
									"name": "DUP2"
								},
								{
									"begin": 10486,
									"end": 10504,
									"name": "MSTORE"
								},
								{
									"begin": 10486,
									"end": 10504,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 10486,
									"end": 10504,
									"name": "DUP2"
								},
								{
									"begin": 10486,
									"end": 10504,
									"name": "SWAP1"
								},
								{
									"begin": 10486,
									"end": 10504,
									"name": "MSTORE"
								},
								{
									"begin": 10486,
									"end": 10504,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 10486,
									"end": 10504,
									"name": "SWAP1"
								},
								{
									"begin": 10486,
									"end": 10504,
									"name": "KECCAK256"
								},
								{
									"begin": 10486,
									"end": 10504,
									"name": "SLOAD"
								},
								{
									"begin": 10486,
									"end": 10516,
									"name": "PUSH [tag]",
									"value": "14"
								},
								{
									"begin": 10486,
									"end": 10516,
									"name": "SWAP1"
								},
								{
									"begin": 10509,
									"end": 10515,
									"name": "DUP3"
								},
								{
									"begin": 10486,
									"end": 10508,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 10486,
									"end": 10508,
									"name": "PUSH [tag]",
									"value": "18446744073709551708"
								},
								{
									"begin": 10486,
									"end": 10508,
									"name": "PUSH [tag]",
									"value": "13"
								},
								{
									"begin": 10486,
									"end": 10508,
									"name": "DUP3"
								},
								{
									"begin": 10486,
									"end": 10508,
									"name": "MUL"
								},
								{
									"begin": 10486,
									"end": 10508,
									"name": "OR"
								},
								{
									"begin": 10486,
									"end": 10516,
									"name": "DIV"
								},
								{
									"begin": 10486,
									"end": 10516,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 10486,
									"end": 10516,
									"name": "tag",
									"value": "14"
								},
								{
									"begin": 10486,
									"end": 10516,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "EXP"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": 10465,
									"end": 10483,
									"name": "DUP4"
								},
								{
									"begin": 10465,
									"end": 10483,
									"name": "AND"
								},
								{
									"begin": 10465,
									"end": 10474,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 10465,
									"end": 10483,
									"name": "DUP2"
								},
								{
									"begin": 10465,
									"end": 10483,
									"name": "DUP2"
								},
								{
									"begin": 10465,
									"end": 10483,
									"name": "MSTORE"
								},
								{
									"begin": 10465,
									"end": 10483,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 10465,
									"end": 10483,
									"name": "DUP2"
								},
								{
									"begin": 10465,
									"end": 10483,
									"name": "DUP2"
								},
								{
									"begin": 10465,
									"end": 10483,
									"name": "MSTORE"
								},
								{
									"begin": 10465,
									"end": 10483,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 10465,
									"end": 10483,
									"name": "DUP1"
								},
								{
									"begin": 10465,
									"end": 10483,
									"name": "DUP4"
								},
								{
									"begin": 10465,
									"end": 10483,
									"name": "KECCAK256"
								},
								{
									"begin": 10465,
									"end": 10516,
									"name": "SWAP5"
								},
								{
									"begin": 10465,
									"end": 10516,
									"name": "SWAP1"
								},
								{
									"begin": 10465,
									"end": 10516,
									"name": "SWAP5"
								},
								{
									"begin": 10465,
									"end": 10516,
									"name": "SSTORE"
								},
								{
									"begin": 10531,
									"end": 10568,
									"name": "DUP4"
								},
								{
									"begin": 10531,
									"end": 10568,
									"name": "MLOAD"
								},
								{
									"begin": 10531,
									"end": 10568,
									"name": "DUP6"
								},
								{
									"begin": 10531,
									"end": 10568,
									"name": "DUP2"
								},
								{
									"begin": 10531,
									"end": 10568,
									"name": "MSTORE"
								},
								{
									"begin": 10531,
									"end": 10568,
									"name": "SWAP4"
								},
								{
									"begin": 10531,
									"end": 10568,
									"name": "MLOAD"
								},
								{
									"begin": 10465,
									"end": 10483,
									"name": "SWAP3"
								},
								{
									"begin": 10465,
									"end": 10483,
									"name": "SWAP4"
								},
								{
									"begin": 10465,
									"end": 10474,
									"name": "SWAP2"
								},
								{
									"begin": 10465,
									"end": 10474,
									"name": "SWAP3"
								},
								{
									"begin": 10531,
									"end": 10568,
									"name": "PUSH",
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 10531,
									"end": 10568,
									"name": "SWAP3"
								},
								{
									"begin": 10531,
									"end": 10568,
									"name": "DUP2"
								},
								{
									"begin": 10531,
									"end": 10568,
									"name": "SWAP1"
								},
								{
									"begin": 10531,
									"end": 10568,
									"name": "SUB"
								},
								{
									"begin": 10531,
									"end": 10568,
									"name": "SWAP1"
								},
								{
									"begin": 10531,
									"end": 10568,
									"name": "SWAP2"
								},
								{
									"begin": 10531,
									"end": 10568,
									"name": "ADD"
								},
								{
									"begin": 10531,
									"end": 10568,
									"name": "SWAP1"
								},
								{
									"begin": 10531,
									"end": 10568,
									"name": "LOG3"
								},
								{
									"begin": 10274,
									"end": 10575,
									"name": "POP"
								},
								{
									"begin": 10274,
									"end": 10575,
									"name": "POP"
								},
								{
									"begin": 10274,
									"end": 10575,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 944,
									"end": 1120,
									"name": "tag",
									"value": "13"
								},
								{
									"begin": 944,
									"end": 1120,
									"name": "JUMPDEST"
								},
								{
									"begin": 1002,
									"end": 1009,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1033,
									"end": 1038,
									"name": "DUP3"
								},
								{
									"begin": 1033,
									"end": 1038,
									"name": "DUP3"
								},
								{
									"begin": 1033,
									"end": 1038,
									"name": "ADD"
								},
								{
									"begin": 1056,
									"end": 1062,
									"name": "DUP4"
								},
								{
									"begin": 1056,
									"end": 1062,
									"name": "DUP2"
								},
								{
									"begin": 1056,
									"end": 1062,
									"name": "LT"
								},
								{
									"begin": 1056,
									"end": 1062,
									"name": "ISZERO"
								},
								{
									"begin": 1048,
									"end": 1094,
									"name": "PUSH [tag]",
									"value": "16"
								},
								{
									"begin": 1048,
									"end": 1094,
									"name": "JUMPI"
								},
								{
									"begin": 1048,
									"end": 1094,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1048,
									"end": 1094,
									"name": "DUP1"
								},
								{
									"begin": 1048,
									"end": 1094,
									"name": "MLOAD"
								},
								{
									"begin": 1048,
									"end": 1094,
									"name": "PUSH",
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1048,
									"end": 1094,
									"name": "DUP2"
								},
								{
									"begin": 1048,
									"end": 1094,
									"name": "MSTORE"
								},
								{
									"begin": 1048,
									"end": 1094,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1048,
									"end": 1094,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 1048,
									"end": 1094,
									"name": "DUP3"
								},
								{
									"begin": 1048,
									"end": 1094,
									"name": "ADD"
								},
								{
									"begin": 1048,
									"end": 1094,
									"name": "MSTORE"
								},
								{
									"begin": 1048,
									"end": 1094,
									"name": "PUSH",
									"value": "1B"
								},
								{
									"begin": 1048,
									"end": 1094,
									"name": "PUSH",
									"value": "24"
								},
								{
									"begin": 1048,
									"end": 1094,
									"name": "DUP3"
								},
								{
									"begin": 1048,
									"end": 1094,
									"name": "ADD"
								},
								{
									"begin": 1048,
									"end": 1094,
									"name": "MSTORE"
								},
								{
									"begin": 1048,
									"end": 1094,
									"name": "PUSH",
									"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
								},
								{
									"begin": 1048,
									"end": 1094,
									"name": "PUSH",
									"value": "44"
								},
								{
									"begin": 1048,
									"end": 1094,
									"name": "DUP3"
								},
								{
									"begin": 1048,
									"end": 1094,
									"name": "ADD"
								},
								{
									"begin": 1048,
									"end": 1094,
									"name": "MSTORE"
								},
								{
									"begin": 1048,
									"end": 1094,
									"name": "SWAP1"
								},
								{
									"begin": 1048,
									"end": 1094,
									"name": "MLOAD"
								},
								{
									"begin": 1048,
									"end": 1094,
									"name": "SWAP1"
								},
								{
									"begin": 1048,
									"end": 1094,
									"name": "DUP2"
								},
								{
									"begin": 1048,
									"end": 1094,
									"name": "SWAP1"
								},
								{
									"begin": 1048,
									"end": 1094,
									"name": "SUB"
								},
								{
									"begin": 1048,
									"end": 1094,
									"name": "PUSH",
									"value": "64"
								},
								{
									"begin": 1048,
									"end": 1094,
									"name": "ADD"
								},
								{
									"begin": 1048,
									"end": 1094,
									"name": "SWAP1"
								},
								{
									"begin": 1048,
									"end": 1094,
									"name": "REVERT"
								},
								{
									"begin": 1048,
									"end": 1094,
									"name": "tag",
									"value": "16"
								},
								{
									"begin": 1048,
									"end": 1094,
									"name": "JUMPDEST"
								},
								{
									"begin": 1112,
									"end": 1113,
									"name": "SWAP4"
								},
								{
									"begin": 944,
									"end": 1120,
									"name": "SWAP3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 944,
									"end": 1120,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "tag",
									"value": "5"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "JUMPDEST"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "DUP3"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "DUP1"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "SLOAD"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "DUP2"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "AND"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "ISZERO"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "MUL"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "SUB"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "AND"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "SWAP1"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "DIV"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "SWAP1"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "MSTORE"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "KECCAK256"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "SWAP1"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "ADD"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "SWAP1"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "DIV"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "DUP2"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "ADD"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "SWAP3"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "DUP3"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "LT"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "PUSH [tag]",
									"value": "18"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "JUMPI"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "DUP1"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "MLOAD"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "NOT"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "AND"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "DUP4"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "DUP1"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "ADD"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "OR"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "DUP6"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "SSTORE"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "PUSH [tag]",
									"value": "20"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "JUMP"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "tag",
									"value": "18"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "JUMPDEST"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "DUP3"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "DUP1"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "ADD"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "ADD"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "DUP6"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "SSTORE"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "DUP3"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "ISZERO"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "PUSH [tag]",
									"value": "20"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "JUMPI"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "SWAP2"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "DUP3"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "ADD"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "tag",
									"value": "19"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "JUMPDEST"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "DUP3"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "DUP2"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "GT"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "ISZERO"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "PUSH [tag]",
									"value": "20"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "JUMPI"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "DUP3"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "MLOAD"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "DUP3"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "SSTORE"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "SWAP2"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "ADD"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "SWAP2"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "SWAP1"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "ADD"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "SWAP1"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "PUSH [tag]",
									"value": "19"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "JUMP"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "tag",
									"value": "20"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "PUSH [tag]",
									"value": "21"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "SWAP3"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "SWAP2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "PUSH [tag]",
									"value": "22"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "tag",
									"value": "21"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "JUMPDEST"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "POP"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "SWAP1"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "tag",
									"value": "22"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "JUMPDEST"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "PUSH [tag]",
									"value": "23"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "SWAP2"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "SWAP1"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "tag",
									"value": "24"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "JUMPDEST"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "DUP1"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "DUP3"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "GT"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "ISZERO"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "PUSH [tag]",
									"value": "21"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "JUMPI"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "DUP2"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "SSTORE"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "ADD"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "PUSH [tag]",
									"value": "24"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "JUMP"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "tag",
									"value": "23"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "JUMPDEST"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "SWAP1"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "tag",
									"value": "9"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "JUMPDEST"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "DUP1"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "CODECOPY"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 4286,
									"end": 13088,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a723058205e1617b56ad3ed7ae27843acc54c90863801d5c20fd523870850c69f5383b4c30029",
									".code": [
										{
											"begin": 4286,
											"end": 13088,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "MSTORE"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "LT"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "JUMPI"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "DIV"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "AND"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "DUP2"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "EQ"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "JUMPI"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "DUP1"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "EQ"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "JUMPI"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "DUP1"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "EQ"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "JUMPI"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "DUP1"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "EQ"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "JUMPI"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "DUP1"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "EQ"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "JUMPI"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "DUP1"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "PUSH",
											"value": "39509351"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "EQ"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "JUMPI"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "DUP1"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "PUSH",
											"value": "42966C68"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "EQ"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "JUMPI"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "DUP1"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "EQ"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "JUMPI"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "DUP1"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "PUSH",
											"value": "79CC6790"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "EQ"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "JUMPI"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "DUP1"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "EQ"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "JUMPI"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "DUP1"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "EQ"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "JUMPI"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "DUP1"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "PUSH",
											"value": "A0712D68"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "EQ"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "JUMPI"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "DUP1"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "PUSH",
											"value": "A457C2D7"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "EQ"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "JUMPI"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "DUP1"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "EQ"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "JUMPI"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "DUP1"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "EQ"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "JUMPI"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "DUP1"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "PUSH",
											"value": "F2FDE38B"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "EQ"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "JUMPI"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "JUMPDEST"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "DUP1"
										},
										{
											"begin": 4286,
											"end": 13088,
											"name": "REVERT"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "JUMPDEST"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "POP"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "JUMP"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "JUMPDEST"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "DUP1"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "MLOAD"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "DUP1"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "DUP3"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "MSTORE"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "DUP4"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "MLOAD"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "DUP2"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "DUP4"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "ADD"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "MSTORE"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "DUP4"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "MLOAD"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "SWAP2"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "SWAP3"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "DUP4"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "SWAP3"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "SWAP1"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "DUP4"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "ADD"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "SWAP2"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "DUP6"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "ADD"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "SWAP1"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "DUP1"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "DUP4"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "DUP4"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP4"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP3"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "POP"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "POP"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "POP"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "SWAP1"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "POP"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "SWAP1"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "DUP2"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "ADD"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "SWAP1"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "AND"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "DUP1"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "ISZERO"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "JUMPI"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "DUP1"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "DUP3"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "SUB"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "DUP1"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "MLOAD"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "DUP4"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "SUB"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "EXP"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "SUB"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "NOT"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "AND"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "DUP2"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "MSTORE"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "ADD"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "SWAP2"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "POP"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "JUMPDEST"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "POP"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "SWAP3"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "POP"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "POP"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "POP"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "MLOAD"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "DUP1"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "SWAP2"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "SUB"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "SWAP1"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "RETURN"
										},
										{
											"begin": 7038,
											"end": 7183,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 7038,
											"end": 7183,
											"name": "JUMPDEST"
										},
										{
											"begin": 7038,
											"end": 7183,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 7038,
											"end": 7183,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7038,
											"end": 7183,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7038,
											"end": 7183,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7038,
											"end": 7183,
											"name": "AND"
										},
										{
											"begin": 7038,
											"end": 7183,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 7038,
											"end": 7183,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7038,
											"end": 7183,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 7038,
											"end": 7183,
											"name": "JUMP"
										},
										{
											"begin": 7038,
											"end": 7183,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 7038,
											"end": 7183,
											"name": "JUMPDEST"
										},
										{
											"begin": 7038,
											"end": 7183,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7038,
											"end": 7183,
											"name": "DUP1"
										},
										{
											"begin": 7038,
											"end": 7183,
											"name": "MLOAD"
										},
										{
											"begin": 7038,
											"end": 7183,
											"name": "SWAP2"
										},
										{
											"begin": 7038,
											"end": 7183,
											"name": "ISZERO"
										},
										{
											"begin": 7038,
											"end": 7183,
											"name": "ISZERO"
										},
										{
											"begin": 7038,
											"end": 7183,
											"name": "DUP3"
										},
										{
											"begin": 7038,
											"end": 7183,
											"name": "MSTORE"
										},
										{
											"begin": 7038,
											"end": 7183,
											"name": "MLOAD"
										},
										{
											"begin": 7038,
											"end": 7183,
											"name": "SWAP1"
										},
										{
											"begin": 7038,
											"end": 7183,
											"name": "DUP2"
										},
										{
											"begin": 7038,
											"end": 7183,
											"name": "SWAP1"
										},
										{
											"begin": 7038,
											"end": 7183,
											"name": "SUB"
										},
										{
											"begin": 7038,
											"end": 7183,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7038,
											"end": 7183,
											"name": "ADD"
										},
										{
											"begin": 7038,
											"end": 7183,
											"name": "SWAP1"
										},
										{
											"begin": 7038,
											"end": 7183,
											"name": "RETURN"
										},
										{
											"begin": 6099,
											"end": 6188,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 6099,
											"end": 6188,
											"name": "JUMPDEST"
										},
										{
											"begin": 6099,
											"end": 6188,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6099,
											"end": 6188,
											"name": "POP"
										},
										{
											"begin": 6099,
											"end": 6188,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 6099,
											"end": 6188,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 6099,
											"end": 6188,
											"name": "JUMP"
										},
										{
											"begin": 6099,
											"end": 6188,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 6099,
											"end": 6188,
											"name": "JUMPDEST"
										},
										{
											"begin": 6099,
											"end": 6188,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6099,
											"end": 6188,
											"name": "DUP1"
										},
										{
											"begin": 6099,
											"end": 6188,
											"name": "MLOAD"
										},
										{
											"begin": 6099,
											"end": 6188,
											"name": "SWAP2"
										},
										{
											"begin": 6099,
											"end": 6188,
											"name": "DUP3"
										},
										{
											"begin": 6099,
											"end": 6188,
											"name": "MSTORE"
										},
										{
											"begin": 6099,
											"end": 6188,
											"name": "MLOAD"
										},
										{
											"begin": 6099,
											"end": 6188,
											"name": "SWAP1"
										},
										{
											"begin": 6099,
											"end": 6188,
											"name": "DUP2"
										},
										{
											"begin": 6099,
											"end": 6188,
											"name": "SWAP1"
										},
										{
											"begin": 6099,
											"end": 6188,
											"name": "SUB"
										},
										{
											"begin": 6099,
											"end": 6188,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6099,
											"end": 6188,
											"name": "ADD"
										},
										{
											"begin": 6099,
											"end": 6188,
											"name": "SWAP1"
										},
										{
											"begin": 6099,
											"end": 6188,
											"name": "RETURN"
										},
										{
											"begin": 7558,
											"end": 7810,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 7558,
											"end": 7810,
											"name": "JUMPDEST"
										},
										{
											"begin": 7558,
											"end": 7810,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 7558,
											"end": 7810,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7558,
											"end": 7810,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7558,
											"end": 7810,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7558,
											"end": 7810,
											"name": "DUP2"
										},
										{
											"begin": 7558,
											"end": 7810,
											"name": "AND"
										},
										{
											"begin": 7558,
											"end": 7810,
											"name": "SWAP1"
										},
										{
											"begin": 7558,
											"end": 7810,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 7558,
											"end": 7810,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7558,
											"end": 7810,
											"name": "AND"
										},
										{
											"begin": 7558,
											"end": 7810,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 7558,
											"end": 7810,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7558,
											"end": 7810,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 7558,
											"end": 7810,
											"name": "JUMP"
										},
										{
											"begin": 5923,
											"end": 6004,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 5923,
											"end": 6004,
											"name": "JUMPDEST"
										},
										{
											"begin": 5923,
											"end": 6004,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 5923,
											"end": 6004,
											"name": "POP"
										},
										{
											"begin": 5923,
											"end": 6004,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 5923,
											"end": 6004,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 5923,
											"end": 6004,
											"name": "JUMP"
										},
										{
											"begin": 5923,
											"end": 6004,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 5923,
											"end": 6004,
											"name": "JUMPDEST"
										},
										{
											"begin": 5923,
											"end": 6004,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5923,
											"end": 6004,
											"name": "DUP1"
										},
										{
											"begin": 5923,
											"end": 6004,
											"name": "MLOAD"
										},
										{
											"begin": 5923,
											"end": 6004,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 5923,
											"end": 6004,
											"name": "SWAP1"
										},
										{
											"begin": 5923,
											"end": 6004,
											"name": "SWAP3"
										},
										{
											"begin": 5923,
											"end": 6004,
											"name": "AND"
										},
										{
											"begin": 5923,
											"end": 6004,
											"name": "DUP3"
										},
										{
											"begin": 5923,
											"end": 6004,
											"name": "MSTORE"
										},
										{
											"begin": 5923,
											"end": 6004,
											"name": "MLOAD"
										},
										{
											"begin": 5923,
											"end": 6004,
											"name": "SWAP1"
										},
										{
											"begin": 5923,
											"end": 6004,
											"name": "DUP2"
										},
										{
											"begin": 5923,
											"end": 6004,
											"name": "SWAP1"
										},
										{
											"begin": 5923,
											"end": 6004,
											"name": "SUB"
										},
										{
											"begin": 5923,
											"end": 6004,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5923,
											"end": 6004,
											"name": "ADD"
										},
										{
											"begin": 5923,
											"end": 6004,
											"name": "SWAP1"
										},
										{
											"begin": 5923,
											"end": 6004,
											"name": "RETURN"
										},
										{
											"begin": 8205,
											"end": 8408,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 8205,
											"end": 8408,
											"name": "JUMPDEST"
										},
										{
											"begin": 8205,
											"end": 8408,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 8205,
											"end": 8408,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8205,
											"end": 8408,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8205,
											"end": 8408,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8205,
											"end": 8408,
											"name": "AND"
										},
										{
											"begin": 8205,
											"end": 8408,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 8205,
											"end": 8408,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8205,
											"end": 8408,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 8205,
											"end": 8408,
											"name": "JUMP"
										},
										{
											"begin": 11437,
											"end": 11516,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 11437,
											"end": 11516,
											"name": "JUMPDEST"
										},
										{
											"begin": 11437,
											"end": 11516,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 11437,
											"end": 11516,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 11437,
											"end": 11516,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11437,
											"end": 11516,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 11437,
											"end": 11516,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 11437,
											"end": 11516,
											"name": "JUMP"
										},
										{
											"begin": 11437,
											"end": 11516,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 11437,
											"end": 11516,
											"name": "JUMPDEST"
										},
										{
											"begin": 11437,
											"end": 11516,
											"name": "STOP"
										},
										{
											"begin": 6246,
											"end": 6354,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 6246,
											"end": 6354,
											"name": "JUMPDEST"
										},
										{
											"begin": 6246,
											"end": 6354,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 6246,
											"end": 6354,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 6246,
											"end": 6354,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6246,
											"end": 6354,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 6246,
											"end": 6354,
											"name": "AND"
										},
										{
											"begin": 6246,
											"end": 6354,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 6246,
											"end": 6354,
											"name": "JUMP"
										},
										{
											"begin": 11573,
											"end": 11674,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 11573,
											"end": 11674,
											"name": "JUMPDEST"
										},
										{
											"begin": 11573,
											"end": 11674,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 11573,
											"end": 11674,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 11573,
											"end": 11674,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11573,
											"end": 11674,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 11573,
											"end": 11674,
											"name": "AND"
										},
										{
											"begin": 11573,
											"end": 11674,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 11573,
											"end": 11674,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 11573,
											"end": 11674,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 11573,
											"end": 11674,
											"name": "JUMP"
										},
										{
											"begin": 4564,
											"end": 4584,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 4564,
											"end": 4584,
											"name": "JUMPDEST"
										},
										{
											"begin": 4564,
											"end": 4584,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4564,
											"end": 4584,
											"name": "POP"
										},
										{
											"begin": 4564,
											"end": 4584,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 4564,
											"end": 4584,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 4564,
											"end": 4584,
											"name": "JUMP"
										},
										{
											"begin": 4564,
											"end": 4584,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 4564,
											"end": 4584,
											"name": "JUMPDEST"
										},
										{
											"begin": 4564,
											"end": 4584,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4564,
											"end": 4584,
											"name": "DUP1"
										},
										{
											"begin": 4564,
											"end": 4584,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4564,
											"end": 4584,
											"name": "SWAP1"
										},
										{
											"begin": 4564,
											"end": 4584,
											"name": "SWAP3"
										},
										{
											"begin": 4564,
											"end": 4584,
											"name": "AND"
										},
										{
											"begin": 4564,
											"end": 4584,
											"name": "DUP3"
										},
										{
											"begin": 4564,
											"end": 4584,
											"name": "MSTORE"
										},
										{
											"begin": 4564,
											"end": 4584,
											"name": "MLOAD"
										},
										{
											"begin": 4564,
											"end": 4584,
											"name": "SWAP1"
										},
										{
											"begin": 4564,
											"end": 4584,
											"name": "DUP2"
										},
										{
											"begin": 4564,
											"end": 4584,
											"name": "SWAP1"
										},
										{
											"begin": 4564,
											"end": 4584,
											"name": "SUB"
										},
										{
											"begin": 4564,
											"end": 4584,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4564,
											"end": 4584,
											"name": "ADD"
										},
										{
											"begin": 4564,
											"end": 4584,
											"name": "SWAP1"
										},
										{
											"begin": 4564,
											"end": 4584,
											"name": "RETURN"
										},
										{
											"begin": 5283,
											"end": 5368,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 5283,
											"end": 5368,
											"name": "JUMPDEST"
										},
										{
											"begin": 5283,
											"end": 5368,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 5283,
											"end": 5368,
											"name": "POP"
										},
										{
											"begin": 5283,
											"end": 5368,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 5283,
											"end": 5368,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 5283,
											"end": 5368,
											"name": "JUMP"
										},
										{
											"begin": 12661,
											"end": 12739,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 12661,
											"end": 12739,
											"name": "JUMPDEST"
										},
										{
											"begin": 12661,
											"end": 12739,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 12661,
											"end": 12739,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 12661,
											"end": 12739,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12661,
											"end": 12739,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12661,
											"end": 12739,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 12661,
											"end": 12739,
											"name": "JUMP"
										},
										{
											"begin": 8895,
											"end": 9108,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 8895,
											"end": 9108,
											"name": "JUMPDEST"
										},
										{
											"begin": 8895,
											"end": 9108,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 8895,
											"end": 9108,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8895,
											"end": 9108,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8895,
											"end": 9108,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8895,
											"end": 9108,
											"name": "AND"
										},
										{
											"begin": 8895,
											"end": 9108,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 8895,
											"end": 9108,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8895,
											"end": 9108,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 8895,
											"end": 9108,
											"name": "JUMP"
										},
										{
											"begin": 6557,
											"end": 6710,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 6557,
											"end": 6710,
											"name": "JUMPDEST"
										},
										{
											"begin": 6557,
											"end": 6710,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 6557,
											"end": 6710,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 6557,
											"end": 6710,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6557,
											"end": 6710,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 6557,
											"end": 6710,
											"name": "AND"
										},
										{
											"begin": 6557,
											"end": 6710,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 6557,
											"end": 6710,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 6557,
											"end": 6710,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 6557,
											"end": 6710,
											"name": "JUMP"
										},
										{
											"begin": 6768,
											"end": 6900,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 6768,
											"end": 6900,
											"name": "JUMPDEST"
										},
										{
											"begin": 6768,
											"end": 6900,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 6768,
											"end": 6900,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 6768,
											"end": 6900,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6768,
											"end": 6900,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 6768,
											"end": 6900,
											"name": "DUP2"
										},
										{
											"begin": 6768,
											"end": 6900,
											"name": "AND"
										},
										{
											"begin": 6768,
											"end": 6900,
											"name": "SWAP1"
										},
										{
											"begin": 6768,
											"end": 6900,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 6768,
											"end": 6900,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 6768,
											"end": 6900,
											"name": "AND"
										},
										{
											"begin": 6768,
											"end": 6900,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 6768,
											"end": 6900,
											"name": "JUMP"
										},
										{
											"begin": 12907,
											"end": 13086,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 12907,
											"end": 13086,
											"name": "JUMPDEST"
										},
										{
											"begin": 12907,
											"end": 13086,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 12907,
											"end": 13086,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 12907,
											"end": 13086,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12907,
											"end": 13086,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12907,
											"end": 13086,
											"name": "AND"
										},
										{
											"begin": 12907,
											"end": 13086,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 12907,
											"end": 13086,
											"name": "JUMP"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "JUMPDEST"
										},
										{
											"begin": 5158,
											"end": 5163,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "DUP1"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "SLOAD"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "DUP1"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "MLOAD"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "DUP8"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "AND"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "ISZERO"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "MUL"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "ADD"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "SWAP1"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "SWAP5"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "AND"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "DUP6"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "SWAP1"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "DIV"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "SWAP4"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "DUP5"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "ADD"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "DUP2"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "SWAP1"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "DIV"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "DUP2"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "MUL"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "DUP3"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "ADD"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "DUP2"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "ADD"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "SWAP1"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "SWAP3"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "MSTORE"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "DUP3"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "DUP2"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "MSTORE"
										},
										{
											"begin": 5126,
											"end": 5132,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 5126,
											"end": 5132,
											"name": "SWAP4"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "SWAP1"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "SWAP3"
										},
										{
											"begin": 5158,
											"end": 5163,
											"name": "SWAP1"
										},
										{
											"begin": 5158,
											"end": 5163,
											"name": "SWAP2"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "DUP4"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "ADD"
										},
										{
											"begin": 5158,
											"end": 5163,
											"name": "DUP3"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "DUP3"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "DUP1"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "ISZERO"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "JUMPI"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "DUP1"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "LT"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "JUMPI"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "DUP1"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "DUP4"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "SLOAD"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "DIV"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "MUL"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "DUP4"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "MSTORE"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "SWAP2"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "ADD"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "SWAP2"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "JUMP"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "JUMPDEST"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "DUP3"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "ADD"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "SWAP2"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "SWAP1"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "MSTORE"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "KECCAK256"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "SWAP1"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "JUMPDEST"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "DUP2"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "SLOAD"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "DUP2"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "MSTORE"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "SWAP1"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "ADD"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "SWAP1"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "ADD"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "DUP1"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "DUP4"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "GT"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "JUMPI"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "DUP3"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "SWAP1"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "SUB"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "AND"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "DUP3"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "ADD"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "SWAP2"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "JUMPDEST"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "POP"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "POP"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "POP"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "POP"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "POP"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "SWAP1"
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "POP"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "SWAP1"
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7038,
											"end": 7183,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 7038,
											"end": 7183,
											"name": "JUMPDEST"
										},
										{
											"begin": 7103,
											"end": 7107,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7119,
											"end": 7155,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 7128,
											"end": 7138,
											"name": "CALLER"
										},
										{
											"begin": 7140,
											"end": 7147,
											"name": "DUP5"
										},
										{
											"begin": 7149,
											"end": 7154,
											"name": "DUP5"
										},
										{
											"begin": 7119,
											"end": 7127,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 7119,
											"end": 7155,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7119,
											"end": 7155,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 7119,
											"end": 7155,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 7172,
											"end": 7176,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 7038,
											"end": 7183,
											"name": "SWAP3"
										},
										{
											"begin": 7038,
											"end": 7183,
											"name": "SWAP2"
										},
										{
											"begin": 7038,
											"end": 7183,
											"name": "POP"
										},
										{
											"begin": 7038,
											"end": 7183,
											"name": "POP"
										},
										{
											"begin": 7038,
											"end": 7183,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 6099,
											"end": 6188,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 6099,
											"end": 6188,
											"name": "JUMPDEST"
										},
										{
											"begin": 6169,
											"end": 6181,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 6169,
											"end": 6181,
											"name": "SLOAD"
										},
										{
											"begin": 6099,
											"end": 6188,
											"name": "SWAP1"
										},
										{
											"begin": 6099,
											"end": 6188,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7558,
											"end": 7810,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 7558,
											"end": 7810,
											"name": "JUMPDEST"
										},
										{
											"begin": 7647,
											"end": 7651,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7663,
											"end": 7699,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 7673,
											"end": 7679,
											"name": "DUP5"
										},
										{
											"begin": 7681,
											"end": 7690,
											"name": "DUP5"
										},
										{
											"begin": 7692,
											"end": 7698,
											"name": "DUP5"
										},
										{
											"begin": 7663,
											"end": 7672,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 7663,
											"end": 7699,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7663,
											"end": 7699,
											"name": "tag",
											"value": "83"
										},
										{
											"begin": 7663,
											"end": 7699,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7738,
											"end": 7757,
											"name": "DUP5"
										},
										{
											"begin": 7738,
											"end": 7757,
											"name": "AND"
										},
										{
											"begin": 7738,
											"end": 7757,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7738,
											"end": 7757,
											"name": "SWAP1"
										},
										{
											"begin": 7738,
											"end": 7757,
											"name": "DUP2"
										},
										{
											"begin": 7738,
											"end": 7757,
											"name": "MSTORE"
										},
										{
											"begin": 7738,
											"end": 7749,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 7738,
											"end": 7757,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7738,
											"end": 7757,
											"name": "SWAP1"
										},
										{
											"begin": 7738,
											"end": 7757,
											"name": "DUP2"
										},
										{
											"begin": 7738,
											"end": 7757,
											"name": "MSTORE"
										},
										{
											"begin": 7738,
											"end": 7757,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7738,
											"end": 7757,
											"name": "DUP1"
										},
										{
											"begin": 7738,
											"end": 7757,
											"name": "DUP4"
										},
										{
											"begin": 7738,
											"end": 7757,
											"name": "KECCAK256"
										},
										{
											"begin": 7726,
											"end": 7736,
											"name": "CALLER"
										},
										{
											"begin": 7738,
											"end": 7769,
											"name": "DUP1"
										},
										{
											"begin": 7738,
											"end": 7769,
											"name": "DUP6"
										},
										{
											"begin": 7738,
											"end": 7769,
											"name": "MSTORE"
										},
										{
											"begin": 7738,
											"end": 7769,
											"name": "SWAP3"
										},
										{
											"begin": 7738,
											"end": 7769,
											"name": "MSTORE"
										},
										{
											"begin": 7738,
											"end": 7769,
											"name": "SWAP1"
										},
										{
											"begin": 7738,
											"end": 7769,
											"name": "SWAP2"
										},
										{
											"begin": 7738,
											"end": 7769,
											"name": "KECCAK256"
										},
										{
											"begin": 7738,
											"end": 7769,
											"name": "SLOAD"
										},
										{
											"begin": 7709,
											"end": 7782,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 7709,
											"end": 7782,
											"name": "SWAP2"
										},
										{
											"begin": 7718,
											"end": 7724,
											"name": "DUP7"
										},
										{
											"begin": 7718,
											"end": 7724,
											"name": "SWAP2"
										},
										{
											"begin": 7738,
											"end": 7781,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 7738,
											"end": 7781,
											"name": "SWAP1"
										},
										{
											"begin": 7774,
											"end": 7780,
											"name": "DUP7"
										},
										{
											"begin": 7738,
											"end": 7781,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 7738,
											"end": 7773,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 7738,
											"end": 7781,
											"name": "AND"
										},
										{
											"begin": 7738,
											"end": 7781,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7738,
											"end": 7781,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 7738,
											"end": 7781,
											"name": "JUMPDEST"
										},
										{
											"begin": 7709,
											"end": 7717,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 7709,
											"end": 7782,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7709,
											"end": 7782,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 7709,
											"end": 7782,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 7799,
											"end": 7803,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 7558,
											"end": 7810,
											"name": "SWAP4"
										},
										{
											"begin": 7558,
											"end": 7810,
											"name": "SWAP3"
										},
										{
											"begin": 7558,
											"end": 7810,
											"name": "POP"
										},
										{
											"begin": 7558,
											"end": 7810,
											"name": "POP"
										},
										{
											"begin": 7558,
											"end": 7810,
											"name": "POP"
										},
										{
											"begin": 7558,
											"end": 7810,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5923,
											"end": 6004,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 5923,
											"end": 6004,
											"name": "JUMPDEST"
										},
										{
											"begin": 5988,
											"end": 5997,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5988,
											"end": 5997,
											"name": "SLOAD"
										},
										{
											"begin": 5988,
											"end": 5997,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 5988,
											"end": 5997,
											"name": "AND"
										},
										{
											"begin": 5923,
											"end": 6004,
											"name": "SWAP1"
										},
										{
											"begin": 5923,
											"end": 6004,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8205,
											"end": 8408,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 8205,
											"end": 8408,
											"name": "JUMPDEST"
										},
										{
											"begin": 8310,
											"end": 8320,
											"name": "CALLER"
										},
										{
											"begin": 8285,
											"end": 8289,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8331,
											"end": 8354,
											"name": "DUP2"
										},
										{
											"begin": 8331,
											"end": 8354,
											"name": "DUP2"
										},
										{
											"begin": 8331,
											"end": 8354,
											"name": "MSTORE"
										},
										{
											"begin": 8331,
											"end": 8342,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 8331,
											"end": 8354,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8331,
											"end": 8354,
											"name": "SWAP1"
										},
										{
											"begin": 8331,
											"end": 8354,
											"name": "DUP2"
										},
										{
											"begin": 8331,
											"end": 8354,
											"name": "MSTORE"
										},
										{
											"begin": 8331,
											"end": 8354,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8331,
											"end": 8354,
											"name": "DUP1"
										},
										{
											"begin": 8331,
											"end": 8354,
											"name": "DUP4"
										},
										{
											"begin": 8331,
											"end": 8354,
											"name": "KECCAK256"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8331,
											"end": 8363,
											"name": "DUP8"
										},
										{
											"begin": 8331,
											"end": 8363,
											"name": "AND"
										},
										{
											"begin": 8331,
											"end": 8363,
											"name": "DUP5"
										},
										{
											"begin": 8331,
											"end": 8363,
											"name": "MSTORE"
										},
										{
											"begin": 8331,
											"end": 8363,
											"name": "SWAP1"
										},
										{
											"begin": 8331,
											"end": 8363,
											"name": "SWAP2"
										},
										{
											"begin": 8331,
											"end": 8363,
											"name": "MSTORE"
										},
										{
											"begin": 8331,
											"end": 8363,
											"name": "DUP2"
										},
										{
											"begin": 8331,
											"end": 8363,
											"name": "KECCAK256"
										},
										{
											"begin": 8331,
											"end": 8363,
											"name": "SLOAD"
										},
										{
											"begin": 8285,
											"end": 8289,
											"name": "SWAP1"
										},
										{
											"begin": 8285,
											"end": 8289,
											"name": "SWAP2"
										},
										{
											"begin": 8301,
											"end": 8380,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 8301,
											"end": 8380,
											"name": "SWAP2"
										},
										{
											"begin": 8322,
											"end": 8329,
											"name": "DUP6"
										},
										{
											"begin": 8322,
											"end": 8329,
											"name": "SWAP1"
										},
										{
											"begin": 8331,
											"end": 8379,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 8331,
											"end": 8379,
											"name": "SWAP1"
										},
										{
											"begin": 8368,
											"end": 8378,
											"name": "DUP7"
										},
										{
											"begin": 8331,
											"end": 8379,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8331,
											"end": 8367,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 8331,
											"end": 8379,
											"name": "AND"
										},
										{
											"begin": 8331,
											"end": 8379,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11437,
											"end": 11516,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 11437,
											"end": 11516,
											"name": "JUMPDEST"
										},
										{
											"begin": 11484,
											"end": 11509,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 11490,
											"end": 11500,
											"name": "CALLER"
										},
										{
											"begin": 11502,
											"end": 11508,
											"name": "DUP3"
										},
										{
											"begin": 11484,
											"end": 11489,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 11484,
											"end": 11509,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11484,
											"end": 11509,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 11484,
											"end": 11509,
											"name": "JUMPDEST"
										},
										{
											"begin": 11437,
											"end": 11516,
											"name": "POP"
										},
										{
											"begin": 11437,
											"end": 11516,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 6246,
											"end": 6354,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 6246,
											"end": 6354,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 6329,
											"end": 6347,
											"name": "AND"
										},
										{
											"begin": 6303,
											"end": 6310,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6329,
											"end": 6347,
											"name": "SWAP1"
										},
										{
											"begin": 6329,
											"end": 6347,
											"name": "DUP2"
										},
										{
											"begin": 6329,
											"end": 6347,
											"name": "MSTORE"
										},
										{
											"begin": 6329,
											"end": 6347,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6329,
											"end": 6347,
											"name": "DUP2"
										},
										{
											"begin": 6329,
											"end": 6347,
											"name": "SWAP1"
										},
										{
											"begin": 6329,
											"end": 6347,
											"name": "MSTORE"
										},
										{
											"begin": 6329,
											"end": 6347,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6329,
											"end": 6347,
											"name": "SWAP1"
										},
										{
											"begin": 6329,
											"end": 6347,
											"name": "KECCAK256"
										},
										{
											"begin": 6329,
											"end": 6347,
											"name": "SLOAD"
										},
										{
											"begin": 6329,
											"end": 6347,
											"name": "SWAP1"
										},
										{
											"begin": 6246,
											"end": 6354,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11573,
											"end": 11674,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 11573,
											"end": 11674,
											"name": "JUMPDEST"
										},
										{
											"begin": 11641,
											"end": 11667,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 11651,
											"end": 11658,
											"name": "DUP3"
										},
										{
											"begin": 11660,
											"end": 11666,
											"name": "DUP3"
										},
										{
											"begin": 11641,
											"end": 11650,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 11641,
											"end": 11667,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11641,
											"end": 11667,
											"name": "tag",
											"value": "98"
										},
										{
											"begin": 11641,
											"end": 11667,
											"name": "JUMPDEST"
										},
										{
											"begin": 11573,
											"end": 11674,
											"name": "POP"
										},
										{
											"begin": 11573,
											"end": 11674,
											"name": "POP"
										},
										{
											"begin": 11573,
											"end": 11674,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4564,
											"end": 4584,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 4564,
											"end": 4584,
											"name": "JUMPDEST"
										},
										{
											"begin": 4564,
											"end": 4584,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4564,
											"end": 4584,
											"name": "SLOAD"
										},
										{
											"begin": 4564,
											"end": 4584,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4564,
											"end": 4584,
											"name": "SWAP1"
										},
										{
											"begin": 4564,
											"end": 4584,
											"name": "DIV"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4564,
											"end": 4584,
											"name": "AND"
										},
										{
											"begin": 4564,
											"end": 4584,
											"name": "DUP2"
										},
										{
											"begin": 4564,
											"end": 4584,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5283,
											"end": 5368,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 5283,
											"end": 5368,
											"name": "JUMPDEST"
										},
										{
											"begin": 5354,
											"end": 5361,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 5347,
											"end": 5361,
											"name": "DUP1"
										},
										{
											"begin": 5347,
											"end": 5361,
											"name": "SLOAD"
										},
										{
											"begin": 5347,
											"end": 5361,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5347,
											"end": 5361,
											"name": "DUP1"
										},
										{
											"begin": 5347,
											"end": 5361,
											"name": "MLOAD"
										},
										{
											"begin": 5347,
											"end": 5361,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5347,
											"end": 5361,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 5347,
											"end": 5361,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 5347,
											"end": 5361,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5347,
											"end": 5361,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5347,
											"end": 5361,
											"name": "DUP9"
										},
										{
											"begin": 5347,
											"end": 5361,
											"name": "AND"
										},
										{
											"begin": 5347,
											"end": 5361,
											"name": "ISZERO"
										},
										{
											"begin": 5347,
											"end": 5361,
											"name": "MUL"
										},
										{
											"begin": 5347,
											"end": 5361,
											"name": "ADD"
										},
										{
											"begin": 5347,
											"end": 5361,
											"name": "SWAP1"
										},
										{
											"begin": 5347,
											"end": 5361,
											"name": "SWAP6"
										},
										{
											"begin": 5347,
											"end": 5361,
											"name": "AND"
										},
										{
											"begin": 5347,
											"end": 5361,
											"name": "SWAP5"
										},
										{
											"begin": 5347,
											"end": 5361,
											"name": "SWAP1"
										},
										{
											"begin": 5347,
											"end": 5361,
											"name": "SWAP5"
										},
										{
											"begin": 5347,
											"end": 5361,
											"name": "DIV"
										},
										{
											"begin": 5347,
											"end": 5361,
											"name": "SWAP4"
										},
										{
											"begin": 5347,
											"end": 5361,
											"name": "DUP5"
										},
										{
											"begin": 5347,
											"end": 5361,
											"name": "ADD"
										},
										{
											"begin": 5347,
											"end": 5361,
											"name": "DUP2"
										},
										{
											"begin": 5347,
											"end": 5361,
											"name": "SWAP1"
										},
										{
											"begin": 5347,
											"end": 5361,
											"name": "DIV"
										},
										{
											"begin": 5347,
											"end": 5361,
											"name": "DUP2"
										},
										{
											"begin": 5347,
											"end": 5361,
											"name": "MUL"
										},
										{
											"begin": 5347,
											"end": 5361,
											"name": "DUP3"
										},
										{
											"begin": 5347,
											"end": 5361,
											"name": "ADD"
										},
										{
											"begin": 5347,
											"end": 5361,
											"name": "DUP2"
										},
										{
											"begin": 5347,
											"end": 5361,
											"name": "ADD"
										},
										{
											"begin": 5347,
											"end": 5361,
											"name": "SWAP1"
										},
										{
											"begin": 5347,
											"end": 5361,
											"name": "SWAP3"
										},
										{
											"begin": 5347,
											"end": 5361,
											"name": "MSTORE"
										},
										{
											"begin": 5347,
											"end": 5361,
											"name": "DUP3"
										},
										{
											"begin": 5347,
											"end": 5361,
											"name": "DUP2"
										},
										{
											"begin": 5347,
											"end": 5361,
											"name": "MSTORE"
										},
										{
											"begin": 5322,
											"end": 5328,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 5322,
											"end": 5328,
											"name": "SWAP4"
										},
										{
											"begin": 5347,
											"end": 5361,
											"name": "SWAP1"
										},
										{
											"begin": 5347,
											"end": 5361,
											"name": "SWAP3"
										},
										{
											"begin": 5354,
											"end": 5361,
											"name": "SWAP1"
										},
										{
											"begin": 5354,
											"end": 5361,
											"name": "SWAP2"
										},
										{
											"begin": 5347,
											"end": 5361,
											"name": "DUP4"
										},
										{
											"begin": 5347,
											"end": 5361,
											"name": "ADD"
										},
										{
											"begin": 5354,
											"end": 5361,
											"name": "DUP3"
										},
										{
											"begin": 5347,
											"end": 5361,
											"name": "DUP3"
										},
										{
											"begin": 5347,
											"end": 5361,
											"name": "DUP1"
										},
										{
											"begin": 5347,
											"end": 5361,
											"name": "ISZERO"
										},
										{
											"begin": 5347,
											"end": 5361,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 5347,
											"end": 5361,
											"name": "JUMPI"
										},
										{
											"begin": 5347,
											"end": 5361,
											"name": "DUP1"
										},
										{
											"begin": 5347,
											"end": 5361,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 5347,
											"end": 5361,
											"name": "LT"
										},
										{
											"begin": 5347,
											"end": 5361,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 5347,
											"end": 5361,
											"name": "JUMPI"
										},
										{
											"begin": 5347,
											"end": 5361,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5347,
											"end": 5361,
											"name": "DUP1"
										},
										{
											"begin": 5347,
											"end": 5361,
											"name": "DUP4"
										},
										{
											"begin": 5347,
											"end": 5361,
											"name": "SLOAD"
										},
										{
											"begin": 5347,
											"end": 5361,
											"name": "DIV"
										},
										{
											"begin": 5347,
											"end": 5361,
											"name": "MUL"
										},
										{
											"begin": 5347,
											"end": 5361,
											"name": "DUP4"
										},
										{
											"begin": 5347,
											"end": 5361,
											"name": "MSTORE"
										},
										{
											"begin": 5347,
											"end": 5361,
											"name": "SWAP2"
										},
										{
											"begin": 5347,
											"end": 5361,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5347,
											"end": 5361,
											"name": "ADD"
										},
										{
											"begin": 5347,
											"end": 5361,
											"name": "SWAP2"
										},
										{
											"begin": 5347,
											"end": 5361,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 5347,
											"end": 5361,
											"name": "JUMP"
										},
										{
											"begin": 12661,
											"end": 12739,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 12661,
											"end": 12739,
											"name": "JUMPDEST"
										},
										{
											"begin": 4716,
											"end": 4721,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4716,
											"end": 4721,
											"name": "SLOAD"
										},
										{
											"begin": 4716,
											"end": 4721,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4716,
											"end": 4721,
											"name": "SWAP1"
										},
										{
											"begin": 4716,
											"end": 4721,
											"name": "DIV"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4716,
											"end": 4721,
											"name": "AND"
										},
										{
											"begin": 4702,
											"end": 4712,
											"name": "CALLER"
										},
										{
											"begin": 4702,
											"end": 4721,
											"name": "EQ"
										},
										{
											"begin": 4694,
											"end": 4749,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 4694,
											"end": 4749,
											"name": "JUMPI"
										},
										{
											"begin": 4694,
											"end": 4749,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4694,
											"end": 4749,
											"name": "DUP1"
										},
										{
											"begin": 4694,
											"end": 4749,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 4694,
											"end": 4749,
											"name": "DUP2"
										},
										{
											"begin": 4694,
											"end": 4749,
											"name": "MSTORE"
										},
										{
											"begin": 4694,
											"end": 4749,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4694,
											"end": 4749,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4694,
											"end": 4749,
											"name": "DUP3"
										},
										{
											"begin": 4694,
											"end": 4749,
											"name": "ADD"
										},
										{
											"begin": 4694,
											"end": 4749,
											"name": "MSTORE"
										},
										{
											"begin": 4694,
											"end": 4749,
											"name": "PUSH",
											"value": "17"
										},
										{
											"begin": 4694,
											"end": 4749,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 4694,
											"end": 4749,
											"name": "DUP3"
										},
										{
											"begin": 4694,
											"end": 4749,
											"name": "ADD"
										},
										{
											"begin": 4694,
											"end": 4749,
											"name": "MSTORE"
										},
										{
											"begin": 4694,
											"end": 4749,
											"name": "PUSH",
											"value": "53656E646572206973206E6F7420746865206F776E6572000000000000000000"
										},
										{
											"begin": 4694,
											"end": 4749,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 4694,
											"end": 4749,
											"name": "DUP3"
										},
										{
											"begin": 4694,
											"end": 4749,
											"name": "ADD"
										},
										{
											"begin": 4694,
											"end": 4749,
											"name": "MSTORE"
										},
										{
											"begin": 4694,
											"end": 4749,
											"name": "SWAP1"
										},
										{
											"begin": 4694,
											"end": 4749,
											"name": "MLOAD"
										},
										{
											"begin": 4694,
											"end": 4749,
											"name": "SWAP1"
										},
										{
											"begin": 4694,
											"end": 4749,
											"name": "DUP2"
										},
										{
											"begin": 4694,
											"end": 4749,
											"name": "SWAP1"
										},
										{
											"begin": 4694,
											"end": 4749,
											"name": "SUB"
										},
										{
											"begin": 4694,
											"end": 4749,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 4694,
											"end": 4749,
											"name": "ADD"
										},
										{
											"begin": 4694,
											"end": 4749,
											"name": "SWAP1"
										},
										{
											"begin": 4694,
											"end": 4749,
											"name": "REVERT"
										},
										{
											"begin": 4694,
											"end": 4749,
											"name": "tag",
											"value": "105"
										},
										{
											"begin": 4694,
											"end": 4749,
											"name": "JUMPDEST"
										},
										{
											"begin": 12711,
											"end": 12735,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 12717,
											"end": 12727,
											"name": "CALLER"
										},
										{
											"begin": 12729,
											"end": 12734,
											"name": "DUP3"
										},
										{
											"begin": 12711,
											"end": 12716,
											"name": "PUSH [tag]",
											"value": "108"
										},
										{
											"begin": 12711,
											"end": 12735,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8895,
											"end": 9108,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 8895,
											"end": 9108,
											"name": "JUMPDEST"
										},
										{
											"begin": 9005,
											"end": 9015,
											"name": "CALLER"
										},
										{
											"begin": 8980,
											"end": 8984,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9026,
											"end": 9049,
											"name": "DUP2"
										},
										{
											"begin": 9026,
											"end": 9049,
											"name": "DUP2"
										},
										{
											"begin": 9026,
											"end": 9049,
											"name": "MSTORE"
										},
										{
											"begin": 9026,
											"end": 9037,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 9026,
											"end": 9049,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9026,
											"end": 9049,
											"name": "SWAP1"
										},
										{
											"begin": 9026,
											"end": 9049,
											"name": "DUP2"
										},
										{
											"begin": 9026,
											"end": 9049,
											"name": "MSTORE"
										},
										{
											"begin": 9026,
											"end": 9049,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9026,
											"end": 9049,
											"name": "DUP1"
										},
										{
											"begin": 9026,
											"end": 9049,
											"name": "DUP4"
										},
										{
											"begin": 9026,
											"end": 9049,
											"name": "KECCAK256"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 9026,
											"end": 9058,
											"name": "DUP8"
										},
										{
											"begin": 9026,
											"end": 9058,
											"name": "AND"
										},
										{
											"begin": 9026,
											"end": 9058,
											"name": "DUP5"
										},
										{
											"begin": 9026,
											"end": 9058,
											"name": "MSTORE"
										},
										{
											"begin": 9026,
											"end": 9058,
											"name": "SWAP1"
										},
										{
											"begin": 9026,
											"end": 9058,
											"name": "SWAP2"
										},
										{
											"begin": 9026,
											"end": 9058,
											"name": "MSTORE"
										},
										{
											"begin": 9026,
											"end": 9058,
											"name": "DUP2"
										},
										{
											"begin": 9026,
											"end": 9058,
											"name": "KECCAK256"
										},
										{
											"begin": 9026,
											"end": 9058,
											"name": "SLOAD"
										},
										{
											"begin": 8980,
											"end": 8984,
											"name": "SWAP1"
										},
										{
											"begin": 8980,
											"end": 8984,
											"name": "SWAP2"
										},
										{
											"begin": 8996,
											"end": 9080,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 8996,
											"end": 9080,
											"name": "SWAP2"
										},
										{
											"begin": 9017,
											"end": 9024,
											"name": "DUP6"
										},
										{
											"begin": 9017,
											"end": 9024,
											"name": "SWAP1"
										},
										{
											"begin": 9026,
											"end": 9079,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 9026,
											"end": 9079,
											"name": "SWAP1"
										},
										{
											"begin": 9063,
											"end": 9078,
											"name": "DUP7"
										},
										{
											"begin": 9026,
											"end": 9079,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 9026,
											"end": 9062,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 9026,
											"end": 9079,
											"name": "AND"
										},
										{
											"begin": 9026,
											"end": 9079,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6557,
											"end": 6710,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 6557,
											"end": 6710,
											"name": "JUMPDEST"
										},
										{
											"begin": 6626,
											"end": 6630,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6642,
											"end": 6682,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "CALLER"
										},
										{
											"begin": 6664,
											"end": 6673,
											"name": "DUP5"
										},
										{
											"begin": 6675,
											"end": 6681,
											"name": "DUP5"
										},
										{
											"begin": 6642,
											"end": 6651,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 6642,
											"end": 6682,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6768,
											"end": 6900,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 6768,
											"end": 6900,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 6866,
											"end": 6884,
											"name": "SWAP2"
										},
										{
											"begin": 6866,
											"end": 6884,
											"name": "DUP3"
										},
										{
											"begin": 6866,
											"end": 6884,
											"name": "AND"
										},
										{
											"begin": 6840,
											"end": 6847,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6884,
											"name": "SWAP1"
										},
										{
											"begin": 6866,
											"end": 6884,
											"name": "DUP2"
										},
										{
											"begin": 6866,
											"end": 6884,
											"name": "MSTORE"
										},
										{
											"begin": 6866,
											"end": 6877,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6866,
											"end": 6884,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6884,
											"name": "SWAP1"
										},
										{
											"begin": 6866,
											"end": 6884,
											"name": "DUP2"
										},
										{
											"begin": 6866,
											"end": 6884,
											"name": "MSTORE"
										},
										{
											"begin": 6866,
											"end": 6884,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6866,
											"end": 6884,
											"name": "DUP1"
										},
										{
											"begin": 6866,
											"end": 6884,
											"name": "DUP4"
										},
										{
											"begin": 6866,
											"end": 6884,
											"name": "KECCAK256"
										},
										{
											"begin": 6866,
											"end": 6893,
											"name": "SWAP4"
										},
										{
											"begin": 6866,
											"end": 6893,
											"name": "SWAP1"
										},
										{
											"begin": 6866,
											"end": 6893,
											"name": "SWAP5"
										},
										{
											"begin": 6866,
											"end": 6893,
											"name": "AND"
										},
										{
											"begin": 6866,
											"end": 6893,
											"name": "DUP3"
										},
										{
											"begin": 6866,
											"end": 6893,
											"name": "MSTORE"
										},
										{
											"begin": 6866,
											"end": 6893,
											"name": "SWAP2"
										},
										{
											"begin": 6866,
											"end": 6893,
											"name": "SWAP1"
										},
										{
											"begin": 6866,
											"end": 6893,
											"name": "SWAP2"
										},
										{
											"begin": 6866,
											"end": 6893,
											"name": "MSTORE"
										},
										{
											"begin": 6866,
											"end": 6893,
											"name": "KECCAK256"
										},
										{
											"begin": 6866,
											"end": 6893,
											"name": "SLOAD"
										},
										{
											"begin": 6866,
											"end": 6893,
											"name": "SWAP1"
										},
										{
											"begin": 6768,
											"end": 6900,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12907,
											"end": 13086,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 12907,
											"end": 13086,
											"name": "JUMPDEST"
										},
										{
											"begin": 4716,
											"end": 4721,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4716,
											"end": 4721,
											"name": "SLOAD"
										},
										{
											"begin": 4716,
											"end": 4721,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4716,
											"end": 4721,
											"name": "SWAP1"
										},
										{
											"begin": 4716,
											"end": 4721,
											"name": "DIV"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4716,
											"end": 4721,
											"name": "AND"
										},
										{
											"begin": 4702,
											"end": 4712,
											"name": "CALLER"
										},
										{
											"begin": 4702,
											"end": 4721,
											"name": "EQ"
										},
										{
											"begin": 4694,
											"end": 4749,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 4694,
											"end": 4749,
											"name": "JUMPI"
										},
										{
											"begin": 4694,
											"end": 4749,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4694,
											"end": 4749,
											"name": "DUP1"
										},
										{
											"begin": 4694,
											"end": 4749,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 4694,
											"end": 4749,
											"name": "DUP2"
										},
										{
											"begin": 4694,
											"end": 4749,
											"name": "MSTORE"
										},
										{
											"begin": 4694,
											"end": 4749,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4694,
											"end": 4749,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4694,
											"end": 4749,
											"name": "DUP3"
										},
										{
											"begin": 4694,
											"end": 4749,
											"name": "ADD"
										},
										{
											"begin": 4694,
											"end": 4749,
											"name": "MSTORE"
										},
										{
											"begin": 4694,
											"end": 4749,
											"name": "PUSH",
											"value": "17"
										},
										{
											"begin": 4694,
											"end": 4749,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 4694,
											"end": 4749,
											"name": "DUP3"
										},
										{
											"begin": 4694,
											"end": 4749,
											"name": "ADD"
										},
										{
											"begin": 4694,
											"end": 4749,
											"name": "MSTORE"
										},
										{
											"begin": 4694,
											"end": 4749,
											"name": "PUSH",
											"value": "53656E646572206973206E6F7420746865206F776E6572000000000000000000"
										},
										{
											"begin": 4694,
											"end": 4749,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 4694,
											"end": 4749,
											"name": "DUP3"
										},
										{
											"begin": 4694,
											"end": 4749,
											"name": "ADD"
										},
										{
											"begin": 4694,
											"end": 4749,
											"name": "MSTORE"
										},
										{
											"begin": 4694,
											"end": 4749,
											"name": "SWAP1"
										},
										{
											"begin": 4694,
											"end": 4749,
											"name": "MLOAD"
										},
										{
											"begin": 4694,
											"end": 4749,
											"name": "SWAP1"
										},
										{
											"begin": 4694,
											"end": 4749,
											"name": "DUP2"
										},
										{
											"begin": 4694,
											"end": 4749,
											"name": "SWAP1"
										},
										{
											"begin": 4694,
											"end": 4749,
											"name": "SUB"
										},
										{
											"begin": 4694,
											"end": 4749,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 4694,
											"end": 4749,
											"name": "ADD"
										},
										{
											"begin": 4694,
											"end": 4749,
											"name": "SWAP1"
										},
										{
											"begin": 4694,
											"end": 4749,
											"name": "REVERT"
										},
										{
											"begin": 4694,
											"end": 4749,
											"name": "tag",
											"value": "116"
										},
										{
											"begin": 4694,
											"end": 4749,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 12985,
											"end": 13007,
											"name": "DUP2"
										},
										{
											"begin": 12985,
											"end": 13007,
											"name": "AND"
										},
										{
											"begin": 12985,
											"end": 13007,
											"name": "ISZERO"
										},
										{
											"begin": 12985,
											"end": 13007,
											"name": "ISZERO"
										},
										{
											"begin": 12977,
											"end": 13008,
											"name": "PUSH [tag]",
											"value": "118"
										},
										{
											"begin": 12977,
											"end": 13008,
											"name": "JUMPI"
										},
										{
											"begin": 12977,
											"end": 13008,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12977,
											"end": 13008,
											"name": "DUP1"
										},
										{
											"begin": 12977,
											"end": 13008,
											"name": "REVERT"
										},
										{
											"begin": 12977,
											"end": 13008,
											"name": "tag",
											"value": "118"
										},
										{
											"begin": 12977,
											"end": 13008,
											"name": "JUMPDEST"
										},
										{
											"begin": 13016,
											"end": 13021,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13016,
											"end": 13032,
											"name": "DUP1"
										},
										{
											"begin": 13016,
											"end": 13032,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 13016,
											"end": 13032,
											"name": "AND"
										},
										{
											"begin": 13016,
											"end": 13032,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13016,
											"end": 13032,
											"name": "DUP5"
										},
										{
											"begin": 13016,
											"end": 13032,
											"name": "DUP2"
										},
										{
											"begin": 13016,
											"end": 13032,
											"name": "AND"
										},
										{
											"begin": 13016,
											"end": 13032,
											"name": "DUP3"
										},
										{
											"begin": 13016,
											"end": 13032,
											"name": "DUP2"
										},
										{
											"begin": 13016,
											"end": 13032,
											"name": "MUL"
										},
										{
											"begin": 13016,
											"end": 13032,
											"name": "SWAP4"
										},
										{
											"begin": 13016,
											"end": 13032,
											"name": "SWAP1"
										},
										{
											"begin": 13016,
											"end": 13032,
											"name": "SWAP4"
										},
										{
											"begin": 13016,
											"end": 13032,
											"name": "OR"
										},
										{
											"begin": 13016,
											"end": 13032,
											"name": "SWAP4"
										},
										{
											"begin": 13016,
											"end": 13032,
											"name": "DUP5"
										},
										{
											"begin": 13016,
											"end": 13032,
											"name": "SWAP1"
										},
										{
											"begin": 13016,
											"end": 13032,
											"name": "SSTORE"
										},
										{
											"begin": 13045,
											"end": 13079,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13045,
											"end": 13079,
											"name": "MLOAD"
										},
										{
											"begin": 13016,
											"end": 13032,
											"name": "SWAP3"
										},
										{
											"begin": 13016,
											"end": 13032,
											"name": "SWAP4"
										},
										{
											"begin": 13063,
											"end": 13068,
											"name": "SWAP2"
										},
										{
											"begin": 13063,
											"end": 13068,
											"name": "SWAP1"
										},
										{
											"begin": 13063,
											"end": 13068,
											"name": "SWAP2"
										},
										{
											"begin": 13063,
											"end": 13068,
											"name": "DIV"
										},
										{
											"begin": 13063,
											"end": 13068,
											"name": "AND"
										},
										{
											"begin": 13063,
											"end": 13068,
											"name": "SWAP1"
										},
										{
											"begin": 13045,
											"end": 13079,
											"name": "PUSH",
											"value": "5C486528EC3E3F0EA91181CFF8116F02BFA350E03B8B6F12E00765ADBB5AF85C"
										},
										{
											"begin": 13045,
											"end": 13079,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1"
										},
										{
											"begin": 13045,
											"end": 13079,
											"name": "LOG3"
										},
										{
											"begin": 12907,
											"end": 13086,
											"name": "POP"
										},
										{
											"begin": 12907,
											"end": 13086,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11000,
											"end": 11329,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 11000,
											"end": 11329,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 11092,
											"end": 11111,
											"name": "DUP4"
										},
										{
											"begin": 11092,
											"end": 11111,
											"name": "AND"
										},
										{
											"begin": 11092,
											"end": 11111,
											"name": "ISZERO"
										},
										{
											"begin": 11092,
											"end": 11111,
											"name": "ISZERO"
										},
										{
											"begin": 11084,
											"end": 11152,
											"name": "PUSH [tag]",
											"value": "120"
										},
										{
											"begin": 11084,
											"end": 11152,
											"name": "JUMPI"
										},
										{
											"begin": 11084,
											"end": 11152,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11084,
											"end": 11152,
											"name": "DUP1"
										},
										{
											"begin": 11084,
											"end": 11152,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 11084,
											"end": 11152,
											"name": "DUP2"
										},
										{
											"begin": 11084,
											"end": 11152,
											"name": "MSTORE"
										},
										{
											"begin": 11084,
											"end": 11152,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11084,
											"end": 11152,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11084,
											"end": 11152,
											"name": "DUP3"
										},
										{
											"begin": 11084,
											"end": 11152,
											"name": "ADD"
										},
										{
											"begin": 11084,
											"end": 11152,
											"name": "MSTORE"
										},
										{
											"begin": 11084,
											"end": 11152,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 11084,
											"end": 11152,
											"name": "DUP1"
										},
										{
											"begin": 11084,
											"end": 11152,
											"name": "DUP3"
										},
										{
											"begin": 11084,
											"end": 11152,
											"name": "ADD"
										},
										{
											"begin": 11084,
											"end": 11152,
											"name": "MSTORE"
										},
										{
											"begin": 11084,
											"end": 11152,
											"name": "PUSH",
											"value": "5A524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 11084,
											"end": 11152,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 11084,
											"end": 11152,
											"name": "DUP3"
										},
										{
											"begin": 11084,
											"end": 11152,
											"name": "ADD"
										},
										{
											"begin": 11084,
											"end": 11152,
											"name": "MSTORE"
										},
										{
											"begin": 11084,
											"end": 11152,
											"name": "PUSH",
											"value": "7265737300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11084,
											"end": 11152,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 11084,
											"end": 11152,
											"name": "DUP3"
										},
										{
											"begin": 11084,
											"end": 11152,
											"name": "ADD"
										},
										{
											"begin": 11084,
											"end": 11152,
											"name": "MSTORE"
										},
										{
											"begin": 11084,
											"end": 11152,
											"name": "SWAP1"
										},
										{
											"begin": 11084,
											"end": 11152,
											"name": "MLOAD"
										},
										{
											"begin": 11084,
											"end": 11152,
											"name": "SWAP1"
										},
										{
											"begin": 11084,
											"end": 11152,
											"name": "DUP2"
										},
										{
											"begin": 11084,
											"end": 11152,
											"name": "SWAP1"
										},
										{
											"begin": 11084,
											"end": 11152,
											"name": "SUB"
										},
										{
											"begin": 11084,
											"end": 11152,
											"name": "PUSH",
											"value": "84"
										},
										{
											"begin": 11084,
											"end": 11152,
											"name": "ADD"
										},
										{
											"begin": 11084,
											"end": 11152,
											"name": "SWAP1"
										},
										{
											"begin": 11084,
											"end": 11152,
											"name": "REVERT"
										},
										{
											"begin": 11084,
											"end": 11152,
											"name": "tag",
											"value": "120"
										},
										{
											"begin": 11084,
											"end": 11152,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 11170,
											"end": 11191,
											"name": "DUP3"
										},
										{
											"begin": 11170,
											"end": 11191,
											"name": "AND"
										},
										{
											"begin": 11170,
											"end": 11191,
											"name": "ISZERO"
										},
										{
											"begin": 11170,
											"end": 11191,
											"name": "ISZERO"
										},
										{
											"begin": 11162,
											"end": 11230,
											"name": "PUSH [tag]",
											"value": "121"
										},
										{
											"begin": 11162,
											"end": 11230,
											"name": "JUMPI"
										},
										{
											"begin": 11162,
											"end": 11230,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11162,
											"end": 11230,
											"name": "DUP1"
										},
										{
											"begin": 11162,
											"end": 11230,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 11162,
											"end": 11230,
											"name": "DUP2"
										},
										{
											"begin": 11162,
											"end": 11230,
											"name": "MSTORE"
										},
										{
											"begin": 11162,
											"end": 11230,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11162,
											"end": 11230,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11162,
											"end": 11230,
											"name": "DUP3"
										},
										{
											"begin": 11162,
											"end": 11230,
											"name": "ADD"
										},
										{
											"begin": 11162,
											"end": 11230,
											"name": "MSTORE"
										},
										{
											"begin": 11162,
											"end": 11230,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 11162,
											"end": 11230,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 11162,
											"end": 11230,
											"name": "DUP3"
										},
										{
											"begin": 11162,
											"end": 11230,
											"name": "ADD"
										},
										{
											"begin": 11162,
											"end": 11230,
											"name": "MSTORE"
										},
										{
											"begin": 11162,
											"end": 11230,
											"name": "PUSH",
											"value": "5A524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 11162,
											"end": 11230,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 11162,
											"end": 11230,
											"name": "DUP3"
										},
										{
											"begin": 11162,
											"end": 11230,
											"name": "ADD"
										},
										{
											"begin": 11162,
											"end": 11230,
											"name": "MSTORE"
										},
										{
											"begin": 11162,
											"end": 11230,
											"name": "PUSH",
											"value": "7373000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11162,
											"end": 11230,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 11162,
											"end": 11230,
											"name": "DUP3"
										},
										{
											"begin": 11162,
											"end": 11230,
											"name": "ADD"
										},
										{
											"begin": 11162,
											"end": 11230,
											"name": "MSTORE"
										},
										{
											"begin": 11162,
											"end": 11230,
											"name": "SWAP1"
										},
										{
											"begin": 11162,
											"end": 11230,
											"name": "MLOAD"
										},
										{
											"begin": 11162,
											"end": 11230,
											"name": "SWAP1"
										},
										{
											"begin": 11162,
											"end": 11230,
											"name": "DUP2"
										},
										{
											"begin": 11162,
											"end": 11230,
											"name": "SWAP1"
										},
										{
											"begin": 11162,
											"end": 11230,
											"name": "SUB"
										},
										{
											"begin": 11162,
											"end": 11230,
											"name": "PUSH",
											"value": "84"
										},
										{
											"begin": 11162,
											"end": 11230,
											"name": "ADD"
										},
										{
											"begin": 11162,
											"end": 11230,
											"name": "SWAP1"
										},
										{
											"begin": 11162,
											"end": 11230,
											"name": "REVERT"
										},
										{
											"begin": 11162,
											"end": 11230,
											"name": "tag",
											"value": "121"
										},
										{
											"begin": 11162,
											"end": 11230,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 11241,
											"end": 11259,
											"name": "DUP1"
										},
										{
											"begin": 11241,
											"end": 11259,
											"name": "DUP5"
										},
										{
											"begin": 11241,
											"end": 11259,
											"name": "AND"
										},
										{
											"begin": 11241,
											"end": 11259,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11241,
											"end": 11259,
											"name": "DUP2"
										},
										{
											"begin": 11241,
											"end": 11259,
											"name": "DUP2"
										},
										{
											"begin": 11241,
											"end": 11259,
											"name": "MSTORE"
										},
										{
											"begin": 11241,
											"end": 11252,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11241,
											"end": 11259,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11241,
											"end": 11259,
											"name": "SWAP1"
										},
										{
											"begin": 11241,
											"end": 11259,
											"name": "DUP2"
										},
										{
											"begin": 11241,
											"end": 11259,
											"name": "MSTORE"
										},
										{
											"begin": 11241,
											"end": 11259,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11241,
											"end": 11259,
											"name": "DUP1"
										},
										{
											"begin": 11241,
											"end": 11259,
											"name": "DUP4"
										},
										{
											"begin": 11241,
											"end": 11259,
											"name": "KECCAK256"
										},
										{
											"begin": 11241,
											"end": 11268,
											"name": "SWAP5"
										},
										{
											"begin": 11241,
											"end": 11268,
											"name": "DUP8"
										},
										{
											"begin": 11241,
											"end": 11268,
											"name": "AND"
										},
										{
											"begin": 11241,
											"end": 11268,
											"name": "DUP1"
										},
										{
											"begin": 11241,
											"end": 11268,
											"name": "DUP5"
										},
										{
											"begin": 11241,
											"end": 11268,
											"name": "MSTORE"
										},
										{
											"begin": 11241,
											"end": 11268,
											"name": "SWAP5"
										},
										{
											"begin": 11241,
											"end": 11268,
											"name": "DUP3"
										},
										{
											"begin": 11241,
											"end": 11268,
											"name": "MSTORE"
										},
										{
											"begin": 11241,
											"end": 11268,
											"name": "SWAP2"
										},
										{
											"begin": 11241,
											"end": 11268,
											"name": "DUP3"
										},
										{
											"begin": 11241,
											"end": 11268,
											"name": "SWAP1"
										},
										{
											"begin": 11241,
											"end": 11268,
											"name": "KECCAK256"
										},
										{
											"begin": 11241,
											"end": 11276,
											"name": "DUP6"
										},
										{
											"begin": 11241,
											"end": 11276,
											"name": "SWAP1"
										},
										{
											"begin": 11241,
											"end": 11276,
											"name": "SSTORE"
										},
										{
											"begin": 11291,
											"end": 11322,
											"name": "DUP2"
										},
										{
											"begin": 11291,
											"end": 11322,
											"name": "MLOAD"
										},
										{
											"begin": 11291,
											"end": 11322,
											"name": "DUP6"
										},
										{
											"begin": 11291,
											"end": 11322,
											"name": "DUP2"
										},
										{
											"begin": 11291,
											"end": 11322,
											"name": "MSTORE"
										},
										{
											"begin": 11291,
											"end": 11322,
											"name": "SWAP2"
										},
										{
											"begin": 11291,
											"end": 11322,
											"name": "MLOAD"
										},
										{
											"begin": 11291,
											"end": 11322,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 11291,
											"end": 11322,
											"name": "SWAP3"
										},
										{
											"begin": 11291,
											"end": 11322,
											"name": "DUP2"
										},
										{
											"begin": 11291,
											"end": 11322,
											"name": "SWAP1"
										},
										{
											"begin": 11291,
											"end": 11322,
											"name": "SUB"
										},
										{
											"begin": 11291,
											"end": 11322,
											"name": "SWAP1"
										},
										{
											"begin": 11291,
											"end": 11322,
											"name": "SWAP2"
										},
										{
											"begin": 11291,
											"end": 11322,
											"name": "ADD"
										},
										{
											"begin": 11291,
											"end": 11322,
											"name": "SWAP1"
										},
										{
											"begin": 11291,
											"end": 11322,
											"name": "LOG3"
										},
										{
											"begin": 11000,
											"end": 11329,
											"name": "POP"
										},
										{
											"begin": 11000,
											"end": 11329,
											"name": "POP"
										},
										{
											"begin": 11000,
											"end": 11329,
											"name": "POP"
										},
										{
											"begin": 11000,
											"end": 11329,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 9582,
											"end": 10004,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 9582,
											"end": 10004,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 9679,
											"end": 9699,
											"name": "DUP4"
										},
										{
											"begin": 9679,
											"end": 9699,
											"name": "AND"
										},
										{
											"begin": 9679,
											"end": 9699,
											"name": "ISZERO"
										},
										{
											"begin": 9679,
											"end": 9699,
											"name": "ISZERO"
										},
										{
											"begin": 9671,
											"end": 9741,
											"name": "PUSH [tag]",
											"value": "123"
										},
										{
											"begin": 9671,
											"end": 9741,
											"name": "JUMPI"
										},
										{
											"begin": 9671,
											"end": 9741,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9671,
											"end": 9741,
											"name": "DUP1"
										},
										{
											"begin": 9671,
											"end": 9741,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 9671,
											"end": 9741,
											"name": "DUP2"
										},
										{
											"begin": 9671,
											"end": 9741,
											"name": "MSTORE"
										},
										{
											"begin": 9671,
											"end": 9741,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9671,
											"end": 9741,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9671,
											"end": 9741,
											"name": "DUP3"
										},
										{
											"begin": 9671,
											"end": 9741,
											"name": "ADD"
										},
										{
											"begin": 9671,
											"end": 9741,
											"name": "MSTORE"
										},
										{
											"begin": 9671,
											"end": 9741,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 9671,
											"end": 9741,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 9671,
											"end": 9741,
											"name": "DUP3"
										},
										{
											"begin": 9671,
											"end": 9741,
											"name": "ADD"
										},
										{
											"begin": 9671,
											"end": 9741,
											"name": "MSTORE"
										},
										{
											"begin": 9671,
											"end": 9741,
											"name": "PUSH",
											"value": "5A524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 9671,
											"end": 9741,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 9671,
											"end": 9741,
											"name": "DUP3"
										},
										{
											"begin": 9671,
											"end": 9741,
											"name": "ADD"
										},
										{
											"begin": 9671,
											"end": 9741,
											"name": "MSTORE"
										},
										{
											"begin": 9671,
											"end": 9741,
											"name": "PUSH",
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9671,
											"end": 9741,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 9671,
											"end": 9741,
											"name": "DUP3"
										},
										{
											"begin": 9671,
											"end": 9741,
											"name": "ADD"
										},
										{
											"begin": 9671,
											"end": 9741,
											"name": "MSTORE"
										},
										{
											"begin": 9671,
											"end": 9741,
											"name": "SWAP1"
										},
										{
											"begin": 9671,
											"end": 9741,
											"name": "MLOAD"
										},
										{
											"begin": 9671,
											"end": 9741,
											"name": "SWAP1"
										},
										{
											"begin": 9671,
											"end": 9741,
											"name": "DUP2"
										},
										{
											"begin": 9671,
											"end": 9741,
											"name": "SWAP1"
										},
										{
											"begin": 9671,
											"end": 9741,
											"name": "SUB"
										},
										{
											"begin": 9671,
											"end": 9741,
											"name": "PUSH",
											"value": "84"
										},
										{
											"begin": 9671,
											"end": 9741,
											"name": "ADD"
										},
										{
											"begin": 9671,
											"end": 9741,
											"name": "SWAP1"
										},
										{
											"begin": 9671,
											"end": 9741,
											"name": "REVERT"
										},
										{
											"begin": 9671,
											"end": 9741,
											"name": "tag",
											"value": "123"
										},
										{
											"begin": 9671,
											"end": 9741,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 9759,
											"end": 9782,
											"name": "DUP3"
										},
										{
											"begin": 9759,
											"end": 9782,
											"name": "AND"
										},
										{
											"begin": 9759,
											"end": 9782,
											"name": "ISZERO"
										},
										{
											"begin": 9759,
											"end": 9782,
											"name": "ISZERO"
										},
										{
											"begin": 9751,
											"end": 9822,
											"name": "PUSH [tag]",
											"value": "124"
										},
										{
											"begin": 9751,
											"end": 9822,
											"name": "JUMPI"
										},
										{
											"begin": 9751,
											"end": 9822,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9751,
											"end": 9822,
											"name": "DUP1"
										},
										{
											"begin": 9751,
											"end": 9822,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 9751,
											"end": 9822,
											"name": "DUP2"
										},
										{
											"begin": 9751,
											"end": 9822,
											"name": "MSTORE"
										},
										{
											"begin": 9751,
											"end": 9822,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9751,
											"end": 9822,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9751,
											"end": 9822,
											"name": "DUP3"
										},
										{
											"begin": 9751,
											"end": 9822,
											"name": "ADD"
										},
										{
											"begin": 9751,
											"end": 9822,
											"name": "MSTORE"
										},
										{
											"begin": 9751,
											"end": 9822,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 9751,
											"end": 9822,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 9751,
											"end": 9822,
											"name": "DUP3"
										},
										{
											"begin": 9751,
											"end": 9822,
											"name": "ADD"
										},
										{
											"begin": 9751,
											"end": 9822,
											"name": "MSTORE"
										},
										{
											"begin": 9751,
											"end": 9822,
											"name": "PUSH",
											"value": "5A524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 9751,
											"end": 9822,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 9751,
											"end": 9822,
											"name": "DUP3"
										},
										{
											"begin": 9751,
											"end": 9822,
											"name": "ADD"
										},
										{
											"begin": 9751,
											"end": 9822,
											"name": "MSTORE"
										},
										{
											"begin": 9751,
											"end": 9822,
											"name": "PUSH",
											"value": "6573730000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9751,
											"end": 9822,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 9751,
											"end": 9822,
											"name": "DUP3"
										},
										{
											"begin": 9751,
											"end": 9822,
											"name": "ADD"
										},
										{
											"begin": 9751,
											"end": 9822,
											"name": "MSTORE"
										},
										{
											"begin": 9751,
											"end": 9822,
											"name": "SWAP1"
										},
										{
											"begin": 9751,
											"end": 9822,
											"name": "MLOAD"
										},
										{
											"begin": 9751,
											"end": 9822,
											"name": "SWAP1"
										},
										{
											"begin": 9751,
											"end": 9822,
											"name": "DUP2"
										},
										{
											"begin": 9751,
											"end": 9822,
											"name": "SWAP1"
										},
										{
											"begin": 9751,
											"end": 9822,
											"name": "SUB"
										},
										{
											"begin": 9751,
											"end": 9822,
											"name": "PUSH",
											"value": "84"
										},
										{
											"begin": 9751,
											"end": 9822,
											"name": "ADD"
										},
										{
											"begin": 9751,
											"end": 9822,
											"name": "SWAP1"
										},
										{
											"begin": 9751,
											"end": 9822,
											"name": "REVERT"
										},
										{
											"begin": 9751,
											"end": 9822,
											"name": "tag",
											"value": "124"
										},
										{
											"begin": 9751,
											"end": 9822,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 9853,
											"end": 9870,
											"name": "DUP4"
										},
										{
											"begin": 9853,
											"end": 9870,
											"name": "AND"
										},
										{
											"begin": 9853,
											"end": 9862,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9853,
											"end": 9870,
											"name": "SWAP1"
										},
										{
											"begin": 9853,
											"end": 9870,
											"name": "DUP2"
										},
										{
											"begin": 9853,
											"end": 9870,
											"name": "MSTORE"
										},
										{
											"begin": 9853,
											"end": 9870,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9853,
											"end": 9870,
											"name": "DUP2"
										},
										{
											"begin": 9853,
											"end": 9870,
											"name": "SWAP1"
										},
										{
											"begin": 9853,
											"end": 9870,
											"name": "MSTORE"
										},
										{
											"begin": 9853,
											"end": 9870,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9853,
											"end": 9870,
											"name": "SWAP1"
										},
										{
											"begin": 9853,
											"end": 9870,
											"name": "KECCAK256"
										},
										{
											"begin": 9853,
											"end": 9870,
											"name": "SLOAD"
										},
										{
											"begin": 9853,
											"end": 9882,
											"name": "PUSH [tag]",
											"value": "125"
										},
										{
											"begin": 9853,
											"end": 9882,
											"name": "SWAP1"
										},
										{
											"begin": 9875,
											"end": 9881,
											"name": "DUP3"
										},
										{
											"begin": 9853,
											"end": 9882,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 9853,
											"end": 9874,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 9853,
											"end": 9882,
											"name": "AND"
										},
										{
											"begin": 9853,
											"end": 9882,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9853,
											"end": 9882,
											"name": "tag",
											"value": "125"
										},
										{
											"begin": 9853,
											"end": 9882,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 9833,
											"end": 9850,
											"name": "DUP1"
										},
										{
											"begin": 9833,
											"end": 9850,
											"name": "DUP6"
										},
										{
											"begin": 9833,
											"end": 9850,
											"name": "AND"
										},
										{
											"begin": 9833,
											"end": 9842,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9833,
											"end": 9850,
											"name": "SWAP1"
										},
										{
											"begin": 9833,
											"end": 9850,
											"name": "DUP2"
										},
										{
											"begin": 9833,
											"end": 9850,
											"name": "MSTORE"
										},
										{
											"begin": 9833,
											"end": 9850,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9833,
											"end": 9850,
											"name": "DUP2"
										},
										{
											"begin": 9833,
											"end": 9850,
											"name": "SWAP1"
										},
										{
											"begin": 9833,
											"end": 9850,
											"name": "MSTORE"
										},
										{
											"begin": 9833,
											"end": 9850,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9833,
											"end": 9850,
											"name": "DUP1"
										},
										{
											"begin": 9833,
											"end": 9850,
											"name": "DUP3"
										},
										{
											"begin": 9833,
											"end": 9850,
											"name": "KECCAK256"
										},
										{
											"begin": 9833,
											"end": 9882,
											"name": "SWAP4"
										},
										{
											"begin": 9833,
											"end": 9882,
											"name": "SWAP1"
										},
										{
											"begin": 9833,
											"end": 9882,
											"name": "SWAP4"
										},
										{
											"begin": 9833,
											"end": 9882,
											"name": "SSTORE"
										},
										{
											"begin": 9915,
											"end": 9935,
											"name": "SWAP1"
										},
										{
											"begin": 9915,
											"end": 9935,
											"name": "DUP5"
										},
										{
											"begin": 9915,
											"end": 9935,
											"name": "AND"
										},
										{
											"begin": 9915,
											"end": 9935,
											"name": "DUP2"
										},
										{
											"begin": 9915,
											"end": 9935,
											"name": "MSTORE"
										},
										{
											"begin": 9915,
											"end": 9935,
											"name": "KECCAK256"
										},
										{
											"begin": 9915,
											"end": 9935,
											"name": "SLOAD"
										},
										{
											"begin": 9915,
											"end": 9947,
											"name": "PUSH [tag]",
											"value": "126"
										},
										{
											"begin": 9915,
											"end": 9947,
											"name": "SWAP1"
										},
										{
											"begin": 9940,
											"end": 9946,
											"name": "DUP3"
										},
										{
											"begin": 9915,
											"end": 9947,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 9915,
											"end": 9939,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 9915,
											"end": 9947,
											"name": "AND"
										},
										{
											"begin": 9915,
											"end": 9947,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9915,
											"end": 9947,
											"name": "tag",
											"value": "126"
										},
										{
											"begin": 9915,
											"end": 9947,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 9892,
											"end": 9912,
											"name": "DUP1"
										},
										{
											"begin": 9892,
											"end": 9912,
											"name": "DUP5"
										},
										{
											"begin": 9892,
											"end": 9912,
											"name": "AND"
										},
										{
											"begin": 9892,
											"end": 9901,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9892,
											"end": 9912,
											"name": "DUP2"
										},
										{
											"begin": 9892,
											"end": 9912,
											"name": "DUP2"
										},
										{
											"begin": 9892,
											"end": 9912,
											"name": "MSTORE"
										},
										{
											"begin": 9892,
											"end": 9912,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9892,
											"end": 9912,
											"name": "DUP2"
										},
										{
											"begin": 9892,
											"end": 9912,
											"name": "DUP2"
										},
										{
											"begin": 9892,
											"end": 9912,
											"name": "MSTORE"
										},
										{
											"begin": 9892,
											"end": 9912,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9892,
											"end": 9912,
											"name": "SWAP2"
										},
										{
											"begin": 9892,
											"end": 9912,
											"name": "DUP3"
										},
										{
											"begin": 9892,
											"end": 9912,
											"name": "SWAP1"
										},
										{
											"begin": 9892,
											"end": 9912,
											"name": "KECCAK256"
										},
										{
											"begin": 9892,
											"end": 9947,
											"name": "SWAP5"
										},
										{
											"begin": 9892,
											"end": 9947,
											"name": "SWAP1"
										},
										{
											"begin": 9892,
											"end": 9947,
											"name": "SWAP5"
										},
										{
											"begin": 9892,
											"end": 9947,
											"name": "SSTORE"
										},
										{
											"begin": 9962,
											"end": 9997,
											"name": "DUP1"
										},
										{
											"begin": 9962,
											"end": 9997,
											"name": "MLOAD"
										},
										{
											"begin": 9962,
											"end": 9997,
											"name": "DUP6"
										},
										{
											"begin": 9962,
											"end": 9997,
											"name": "DUP2"
										},
										{
											"begin": 9962,
											"end": 9997,
											"name": "MSTORE"
										},
										{
											"begin": 9962,
											"end": 9997,
											"name": "SWAP1"
										},
										{
											"begin": 9962,
											"end": 9997,
											"name": "MLOAD"
										},
										{
											"begin": 9892,
											"end": 9912,
											"name": "SWAP2"
										},
										{
											"begin": 9892,
											"end": 9912,
											"name": "SWAP4"
										},
										{
											"begin": 9962,
											"end": 9997,
											"name": "SWAP3"
										},
										{
											"begin": 9962,
											"end": 9997,
											"name": "DUP8"
										},
										{
											"begin": 9962,
											"end": 9997,
											"name": "AND"
										},
										{
											"begin": 9962,
											"end": 9997,
											"name": "SWAP3"
										},
										{
											"begin": 9962,
											"end": 9997,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9962,
											"end": 9997,
											"name": "SWAP3"
										},
										{
											"begin": 9962,
											"end": 9997,
											"name": "SWAP2"
										},
										{
											"begin": 9962,
											"end": 9997,
											"name": "DUP3"
										},
										{
											"begin": 9962,
											"end": 9997,
											"name": "SWAP1"
										},
										{
											"begin": 9962,
											"end": 9997,
											"name": "SUB"
										},
										{
											"begin": 9962,
											"end": 9997,
											"name": "ADD"
										},
										{
											"begin": 9962,
											"end": 9997,
											"name": "SWAP1"
										},
										{
											"begin": 9962,
											"end": 9997,
											"name": "LOG3"
										},
										{
											"begin": 9582,
											"end": 10004,
											"name": "POP"
										},
										{
											"begin": 9582,
											"end": 10004,
											"name": "POP"
										},
										{
											"begin": 9582,
											"end": 10004,
											"name": "POP"
										},
										{
											"begin": 9582,
											"end": 10004,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1384,
											"end": 1563,
											"name": "tag",
											"value": "87"
										},
										{
											"begin": 1384,
											"end": 1563,
											"name": "JUMPDEST"
										},
										{
											"begin": 1442,
											"end": 1449,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1442,
											"end": 1449,
											"name": "DUP1"
										},
										{
											"begin": 1469,
											"end": 1475,
											"name": "DUP4"
										},
										{
											"begin": 1469,
											"end": 1475,
											"name": "DUP4"
										},
										{
											"begin": 1469,
											"end": 1475,
											"name": "GT"
										},
										{
											"begin": 1469,
											"end": 1475,
											"name": "ISZERO"
										},
										{
											"begin": 1461,
											"end": 1510,
											"name": "PUSH [tag]",
											"value": "128"
										},
										{
											"begin": 1461,
											"end": 1510,
											"name": "JUMPI"
										},
										{
											"begin": 1461,
											"end": 1510,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1461,
											"end": 1510,
											"name": "DUP1"
										},
										{
											"begin": 1461,
											"end": 1510,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 1461,
											"end": 1510,
											"name": "DUP2"
										},
										{
											"begin": 1461,
											"end": 1510,
											"name": "MSTORE"
										},
										{
											"begin": 1461,
											"end": 1510,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1461,
											"end": 1510,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1461,
											"end": 1510,
											"name": "DUP3"
										},
										{
											"begin": 1461,
											"end": 1510,
											"name": "ADD"
										},
										{
											"begin": 1461,
											"end": 1510,
											"name": "MSTORE"
										},
										{
											"begin": 1461,
											"end": 1510,
											"name": "PUSH",
											"value": "1E"
										},
										{
											"begin": 1461,
											"end": 1510,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 1461,
											"end": 1510,
											"name": "DUP3"
										},
										{
											"begin": 1461,
											"end": 1510,
											"name": "ADD"
										},
										{
											"begin": 1461,
											"end": 1510,
											"name": "MSTORE"
										},
										{
											"begin": 1461,
											"end": 1510,
											"name": "PUSH",
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 1461,
											"end": 1510,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 1461,
											"end": 1510,
											"name": "DUP3"
										},
										{
											"begin": 1461,
											"end": 1510,
											"name": "ADD"
										},
										{
											"begin": 1461,
											"end": 1510,
											"name": "MSTORE"
										},
										{
											"begin": 1461,
											"end": 1510,
											"name": "SWAP1"
										},
										{
											"begin": 1461,
											"end": 1510,
											"name": "MLOAD"
										},
										{
											"begin": 1461,
											"end": 1510,
											"name": "SWAP1"
										},
										{
											"begin": 1461,
											"end": 1510,
											"name": "DUP2"
										},
										{
											"begin": 1461,
											"end": 1510,
											"name": "SWAP1"
										},
										{
											"begin": 1461,
											"end": 1510,
											"name": "SUB"
										},
										{
											"begin": 1461,
											"end": 1510,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 1461,
											"end": 1510,
											"name": "ADD"
										},
										{
											"begin": 1461,
											"end": 1510,
											"name": "SWAP1"
										},
										{
											"begin": 1461,
											"end": 1510,
											"name": "REVERT"
										},
										{
											"begin": 1461,
											"end": 1510,
											"name": "tag",
											"value": "128"
										},
										{
											"begin": 1461,
											"end": 1510,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 1532,
											"end": 1537,
											"name": "SWAP1"
										},
										{
											"begin": 1532,
											"end": 1537,
											"name": "SUB"
										},
										{
											"begin": 1532,
											"end": 1537,
											"name": "SWAP1"
										},
										{
											"begin": 1384,
											"end": 1563,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 944,
											"end": 1120,
											"name": "tag",
											"value": "92"
										},
										{
											"begin": 944,
											"end": 1120,
											"name": "JUMPDEST"
										},
										{
											"begin": 1002,
											"end": 1009,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1038,
											"name": "DUP3"
										},
										{
											"begin": 1033,
											"end": 1038,
											"name": "DUP3"
										},
										{
											"begin": 1033,
											"end": 1038,
											"name": "ADD"
										},
										{
											"begin": 1056,
											"end": 1062,
											"name": "DUP4"
										},
										{
											"begin": 1056,
											"end": 1062,
											"name": "DUP2"
										},
										{
											"begin": 1056,
											"end": 1062,
											"name": "LT"
										},
										{
											"begin": 1056,
											"end": 1062,
											"name": "ISZERO"
										},
										{
											"begin": 1048,
											"end": 1094,
											"name": "PUSH [tag]",
											"value": "130"
										},
										{
											"begin": 1048,
											"end": 1094,
											"name": "JUMPI"
										},
										{
											"begin": 1048,
											"end": 1094,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1048,
											"end": 1094,
											"name": "DUP1"
										},
										{
											"begin": 1048,
											"end": 1094,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 1048,
											"end": 1094,
											"name": "DUP2"
										},
										{
											"begin": 1048,
											"end": 1094,
											"name": "MSTORE"
										},
										{
											"begin": 1048,
											"end": 1094,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1048,
											"end": 1094,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1048,
											"end": 1094,
											"name": "DUP3"
										},
										{
											"begin": 1048,
											"end": 1094,
											"name": "ADD"
										},
										{
											"begin": 1048,
											"end": 1094,
											"name": "MSTORE"
										},
										{
											"begin": 1048,
											"end": 1094,
											"name": "PUSH",
											"value": "1B"
										},
										{
											"begin": 1048,
											"end": 1094,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 1048,
											"end": 1094,
											"name": "DUP3"
										},
										{
											"begin": 1048,
											"end": 1094,
											"name": "ADD"
										},
										{
											"begin": 1048,
											"end": 1094,
											"name": "MSTORE"
										},
										{
											"begin": 1048,
											"end": 1094,
											"name": "PUSH",
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 1048,
											"end": 1094,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 1048,
											"end": 1094,
											"name": "DUP3"
										},
										{
											"begin": 1048,
											"end": 1094,
											"name": "ADD"
										},
										{
											"begin": 1048,
											"end": 1094,
											"name": "MSTORE"
										},
										{
											"begin": 1048,
											"end": 1094,
											"name": "SWAP1"
										},
										{
											"begin": 1048,
											"end": 1094,
											"name": "MLOAD"
										},
										{
											"begin": 1048,
											"end": 1094,
											"name": "SWAP1"
										},
										{
											"begin": 1048,
											"end": 1094,
											"name": "DUP2"
										},
										{
											"begin": 1048,
											"end": 1094,
											"name": "SWAP1"
										},
										{
											"begin": 1048,
											"end": 1094,
											"name": "SUB"
										},
										{
											"begin": 1048,
											"end": 1094,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 1048,
											"end": 1094,
											"name": "ADD"
										},
										{
											"begin": 1048,
											"end": 1094,
											"name": "SWAP1"
										},
										{
											"begin": 1048,
											"end": 1094,
											"name": "REVERT"
										},
										{
											"begin": 1048,
											"end": 1094,
											"name": "tag",
											"value": "130"
										},
										{
											"begin": 1048,
											"end": 1094,
											"name": "JUMPDEST"
										},
										{
											"begin": 1112,
											"end": 1113,
											"name": "SWAP4"
										},
										{
											"begin": 944,
											"end": 1120,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 944,
											"end": 1120,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11993,
											"end": 12293,
											"name": "tag",
											"value": "95"
										},
										{
											"begin": 11993,
											"end": 12293,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 12067,
											"end": 12088,
											"name": "DUP3"
										},
										{
											"begin": 12067,
											"end": 12088,
											"name": "AND"
										},
										{
											"begin": 12067,
											"end": 12088,
											"name": "ISZERO"
										},
										{
											"begin": 12067,
											"end": 12088,
											"name": "ISZERO"
										},
										{
											"begin": 12059,
											"end": 12126,
											"name": "PUSH [tag]",
											"value": "132"
										},
										{
											"begin": 12059,
											"end": 12126,
											"name": "JUMPI"
										},
										{
											"begin": 12059,
											"end": 12126,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12059,
											"end": 12126,
											"name": "DUP1"
										},
										{
											"begin": 12059,
											"end": 12126,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 12059,
											"end": 12126,
											"name": "DUP2"
										},
										{
											"begin": 12059,
											"end": 12126,
											"name": "MSTORE"
										},
										{
											"begin": 12059,
											"end": 12126,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12059,
											"end": 12126,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12059,
											"end": 12126,
											"name": "DUP3"
										},
										{
											"begin": 12059,
											"end": 12126,
											"name": "ADD"
										},
										{
											"begin": 12059,
											"end": 12126,
											"name": "MSTORE"
										},
										{
											"begin": 12059,
											"end": 12126,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 12059,
											"end": 12126,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 12059,
											"end": 12126,
											"name": "DUP3"
										},
										{
											"begin": 12059,
											"end": 12126,
											"name": "ADD"
										},
										{
											"begin": 12059,
											"end": 12126,
											"name": "MSTORE"
										},
										{
											"begin": 12059,
											"end": 12126,
											"name": "PUSH",
											"value": "5A524332303A206275726E2066726F6D20746865207A65726F20616464726573"
										},
										{
											"begin": 12059,
											"end": 12126,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 12059,
											"end": 12126,
											"name": "DUP3"
										},
										{
											"begin": 12059,
											"end": 12126,
											"name": "ADD"
										},
										{
											"begin": 12059,
											"end": 12126,
											"name": "MSTORE"
										},
										{
											"begin": 12059,
											"end": 12126,
											"name": "PUSH",
											"value": "7300000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12059,
											"end": 12126,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 12059,
											"end": 12126,
											"name": "DUP3"
										},
										{
											"begin": 12059,
											"end": 12126,
											"name": "ADD"
										},
										{
											"begin": 12059,
											"end": 12126,
											"name": "MSTORE"
										},
										{
											"begin": 12059,
											"end": 12126,
											"name": "SWAP1"
										},
										{
											"begin": 12059,
											"end": 12126,
											"name": "MLOAD"
										},
										{
											"begin": 12059,
											"end": 12126,
											"name": "SWAP1"
										},
										{
											"begin": 12059,
											"end": 12126,
											"name": "DUP2"
										},
										{
											"begin": 12059,
											"end": 12126,
											"name": "SWAP1"
										},
										{
											"begin": 12059,
											"end": 12126,
											"name": "SUB"
										},
										{
											"begin": 12059,
											"end": 12126,
											"name": "PUSH",
											"value": "84"
										},
										{
											"begin": 12059,
											"end": 12126,
											"name": "ADD"
										},
										{
											"begin": 12059,
											"end": 12126,
											"name": "SWAP1"
										},
										{
											"begin": 12059,
											"end": 12126,
											"name": "REVERT"
										},
										{
											"begin": 12059,
											"end": 12126,
											"name": "tag",
											"value": "132"
										},
										{
											"begin": 12059,
											"end": 12126,
											"name": "JUMPDEST"
										},
										{
											"begin": 12152,
											"end": 12164,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 12152,
											"end": 12164,
											"name": "SLOAD"
										},
										{
											"begin": 12152,
											"end": 12175,
											"name": "PUSH [tag]",
											"value": "133"
										},
										{
											"begin": 12152,
											"end": 12175,
											"name": "SWAP1"
										},
										{
											"begin": 12169,
											"end": 12174,
											"name": "DUP3"
										},
										{
											"begin": 12152,
											"end": 12175,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 12152,
											"end": 12168,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 12152,
											"end": 12175,
											"name": "AND"
										},
										{
											"begin": 12152,
											"end": 12175,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12152,
											"end": 12175,
											"name": "tag",
											"value": "133"
										},
										{
											"begin": 12152,
											"end": 12175,
											"name": "JUMPDEST"
										},
										{
											"begin": 12137,
											"end": 12149,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 12137,
											"end": 12175,
											"name": "SSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 12206,
											"end": 12224,
											"name": "DUP3"
										},
										{
											"begin": 12206,
											"end": 12224,
											"name": "AND"
										},
										{
											"begin": 12206,
											"end": 12215,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12206,
											"end": 12224,
											"name": "SWAP1"
										},
										{
											"begin": 12206,
											"end": 12224,
											"name": "DUP2"
										},
										{
											"begin": 12206,
											"end": 12224,
											"name": "MSTORE"
										},
										{
											"begin": 12206,
											"end": 12224,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12206,
											"end": 12224,
											"name": "DUP2"
										},
										{
											"begin": 12206,
											"end": 12224,
											"name": "SWAP1"
										},
										{
											"begin": 12206,
											"end": 12224,
											"name": "MSTORE"
										},
										{
											"begin": 12206,
											"end": 12224,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12206,
											"end": 12224,
											"name": "SWAP1"
										},
										{
											"begin": 12206,
											"end": 12224,
											"name": "KECCAK256"
										},
										{
											"begin": 12206,
											"end": 12224,
											"name": "SLOAD"
										},
										{
											"begin": 12206,
											"end": 12235,
											"name": "PUSH [tag]",
											"value": "134"
										},
										{
											"begin": 12206,
											"end": 12235,
											"name": "SWAP1"
										},
										{
											"begin": 12229,
											"end": 12234,
											"name": "DUP3"
										},
										{
											"begin": 12206,
											"end": 12235,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 12206,
											"end": 12228,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 12206,
											"end": 12235,
											"name": "AND"
										},
										{
											"begin": 12206,
											"end": 12235,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12206,
											"end": 12235,
											"name": "tag",
											"value": "134"
										},
										{
											"begin": 12206,
											"end": 12235,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 12185,
											"end": 12203,
											"name": "DUP4"
										},
										{
											"begin": 12185,
											"end": 12203,
											"name": "AND"
										},
										{
											"begin": 12185,
											"end": 12194,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12185,
											"end": 12203,
											"name": "DUP2"
										},
										{
											"begin": 12185,
											"end": 12203,
											"name": "DUP2"
										},
										{
											"begin": 12185,
											"end": 12203,
											"name": "MSTORE"
										},
										{
											"begin": 12185,
											"end": 12203,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12185,
											"end": 12203,
											"name": "DUP2"
										},
										{
											"begin": 12185,
											"end": 12203,
											"name": "DUP2"
										},
										{
											"begin": 12185,
											"end": 12203,
											"name": "MSTORE"
										},
										{
											"begin": 12185,
											"end": 12203,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12185,
											"end": 12203,
											"name": "DUP1"
										},
										{
											"begin": 12185,
											"end": 12203,
											"name": "DUP4"
										},
										{
											"begin": 12185,
											"end": 12203,
											"name": "KECCAK256"
										},
										{
											"begin": 12185,
											"end": 12235,
											"name": "SWAP5"
										},
										{
											"begin": 12185,
											"end": 12235,
											"name": "SWAP1"
										},
										{
											"begin": 12185,
											"end": 12235,
											"name": "SWAP5"
										},
										{
											"begin": 12185,
											"end": 12235,
											"name": "SSTORE"
										},
										{
											"begin": 12250,
											"end": 12286,
											"name": "DUP4"
										},
										{
											"begin": 12250,
											"end": 12286,
											"name": "MLOAD"
										},
										{
											"begin": 12250,
											"end": 12286,
											"name": "DUP6"
										},
										{
											"begin": 12250,
											"end": 12286,
											"name": "DUP2"
										},
										{
											"begin": 12250,
											"end": 12286,
											"name": "MSTORE"
										},
										{
											"begin": 12250,
											"end": 12286,
											"name": "SWAP4"
										},
										{
											"begin": 12250,
											"end": 12286,
											"name": "MLOAD"
										},
										{
											"begin": 12185,
											"end": 12194,
											"name": "SWAP2"
										},
										{
											"begin": 12185,
											"end": 12194,
											"name": "SWAP4"
										},
										{
											"begin": 12250,
											"end": 12286,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 12250,
											"end": 12286,
											"name": "SWAP3"
										},
										{
											"begin": 12250,
											"end": 12286,
											"name": "SWAP1"
										},
										{
											"begin": 12250,
											"end": 12286,
											"name": "DUP2"
										},
										{
											"begin": 12250,
											"end": 12286,
											"name": "SWAP1"
										},
										{
											"begin": 12250,
											"end": 12286,
											"name": "SUB"
										},
										{
											"begin": 12250,
											"end": 12286,
											"name": "SWAP1"
										},
										{
											"begin": 12250,
											"end": 12286,
											"name": "SWAP2"
										},
										{
											"begin": 12250,
											"end": 12286,
											"name": "ADD"
										},
										{
											"begin": 12250,
											"end": 12286,
											"name": "SWAP1"
										},
										{
											"begin": 12250,
											"end": 12286,
											"name": "LOG3"
										},
										{
											"begin": 11993,
											"end": 12293,
											"name": "POP"
										},
										{
											"begin": 11993,
											"end": 12293,
											"name": "POP"
										},
										{
											"begin": 11993,
											"end": 12293,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12470,
											"end": 12655,
											"name": "tag",
											"value": "99"
										},
										{
											"begin": 12470,
											"end": 12655,
											"name": "JUMPDEST"
										},
										{
											"begin": 12541,
											"end": 12563,
											"name": "PUSH [tag]",
											"value": "136"
										},
										{
											"begin": 12547,
											"end": 12554,
											"name": "DUP3"
										},
										{
											"begin": 12556,
											"end": 12562,
											"name": "DUP3"
										},
										{
											"begin": 12541,
											"end": 12546,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 12541,
											"end": 12563,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12541,
											"end": 12563,
											"name": "tag",
											"value": "136"
										},
										{
											"begin": 12541,
											"end": 12563,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 12603,
											"end": 12623,
											"name": "DUP3"
										},
										{
											"begin": 12603,
											"end": 12623,
											"name": "AND"
										},
										{
											"begin": 12603,
											"end": 12623,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12603,
											"end": 12623,
											"name": "SWAP1"
										},
										{
											"begin": 12603,
											"end": 12623,
											"name": "DUP2"
										},
										{
											"begin": 12603,
											"end": 12623,
											"name": "MSTORE"
										},
										{
											"begin": 12603,
											"end": 12614,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12603,
											"end": 12623,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12603,
											"end": 12623,
											"name": "SWAP1"
										},
										{
											"begin": 12603,
											"end": 12623,
											"name": "DUP2"
										},
										{
											"begin": 12603,
											"end": 12623,
											"name": "MSTORE"
										},
										{
											"begin": 12603,
											"end": 12623,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12603,
											"end": 12623,
											"name": "DUP1"
										},
										{
											"begin": 12603,
											"end": 12623,
											"name": "DUP4"
										},
										{
											"begin": 12603,
											"end": 12623,
											"name": "KECCAK256"
										},
										{
											"begin": 12591,
											"end": 12601,
											"name": "CALLER"
										},
										{
											"begin": 12603,
											"end": 12635,
											"name": "DUP1"
										},
										{
											"begin": 12603,
											"end": 12635,
											"name": "DUP6"
										},
										{
											"begin": 12603,
											"end": 12635,
											"name": "MSTORE"
										},
										{
											"begin": 12603,
											"end": 12635,
											"name": "SWAP3"
										},
										{
											"begin": 12603,
											"end": 12635,
											"name": "MSTORE"
										},
										{
											"begin": 12603,
											"end": 12635,
											"name": "SWAP1"
										},
										{
											"begin": 12603,
											"end": 12635,
											"name": "SWAP2"
										},
										{
											"begin": 12603,
											"end": 12635,
											"name": "KECCAK256"
										},
										{
											"begin": 12603,
											"end": 12635,
											"name": "SLOAD"
										},
										{
											"begin": 12573,
											"end": 12648,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 12573,
											"end": 12648,
											"name": "SWAP2"
										},
										{
											"begin": 12582,
											"end": 12589,
											"name": "DUP5"
										},
										{
											"begin": 12582,
											"end": 12589,
											"name": "SWAP2"
										},
										{
											"begin": 12603,
											"end": 12647,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 12603,
											"end": 12647,
											"name": "SWAP1"
										},
										{
											"begin": 12640,
											"end": 12646,
											"name": "DUP6"
										},
										{
											"begin": 12603,
											"end": 12647,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 12603,
											"end": 12639,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 12603,
											"end": 12647,
											"name": "AND"
										},
										{
											"begin": 12603,
											"end": 12647,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10274,
											"end": 10575,
											"name": "tag",
											"value": "108"
										},
										{
											"begin": 10274,
											"end": 10575,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 10349,
											"end": 10370,
											"name": "DUP3"
										},
										{
											"begin": 10349,
											"end": 10370,
											"name": "AND"
										},
										{
											"begin": 10349,
											"end": 10370,
											"name": "ISZERO"
										},
										{
											"begin": 10349,
											"end": 10370,
											"name": "ISZERO"
										},
										{
											"begin": 10341,
											"end": 10406,
											"name": "PUSH [tag]",
											"value": "140"
										},
										{
											"begin": 10341,
											"end": 10406,
											"name": "JUMPI"
										},
										{
											"begin": 10341,
											"end": 10406,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10341,
											"end": 10406,
											"name": "DUP1"
										},
										{
											"begin": 10341,
											"end": 10406,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 10341,
											"end": 10406,
											"name": "DUP2"
										},
										{
											"begin": 10341,
											"end": 10406,
											"name": "MSTORE"
										},
										{
											"begin": 10341,
											"end": 10406,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10341,
											"end": 10406,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10341,
											"end": 10406,
											"name": "DUP3"
										},
										{
											"begin": 10341,
											"end": 10406,
											"name": "ADD"
										},
										{
											"begin": 10341,
											"end": 10406,
											"name": "MSTORE"
										},
										{
											"begin": 10341,
											"end": 10406,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 10341,
											"end": 10406,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 10341,
											"end": 10406,
											"name": "DUP3"
										},
										{
											"begin": 10341,
											"end": 10406,
											"name": "ADD"
										},
										{
											"begin": 10341,
											"end": 10406,
											"name": "MSTORE"
										},
										{
											"begin": 10341,
											"end": 10406,
											"name": "PUSH",
											"value": "5A524332303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 10341,
											"end": 10406,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 10341,
											"end": 10406,
											"name": "DUP3"
										},
										{
											"begin": 10341,
											"end": 10406,
											"name": "ADD"
										},
										{
											"begin": 10341,
											"end": 10406,
											"name": "MSTORE"
										},
										{
											"begin": 10341,
											"end": 10406,
											"name": "SWAP1"
										},
										{
											"begin": 10341,
											"end": 10406,
											"name": "MLOAD"
										},
										{
											"begin": 10341,
											"end": 10406,
											"name": "SWAP1"
										},
										{
											"begin": 10341,
											"end": 10406,
											"name": "DUP2"
										},
										{
											"begin": 10341,
											"end": 10406,
											"name": "SWAP1"
										},
										{
											"begin": 10341,
											"end": 10406,
											"name": "SUB"
										},
										{
											"begin": 10341,
											"end": 10406,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 10341,
											"end": 10406,
											"name": "ADD"
										},
										{
											"begin": 10341,
											"end": 10406,
											"name": "SWAP1"
										},
										{
											"begin": 10341,
											"end": 10406,
											"name": "REVERT"
										},
										{
											"begin": 10341,
											"end": 10406,
											"name": "tag",
											"value": "140"
										},
										{
											"begin": 10341,
											"end": 10406,
											"name": "JUMPDEST"
										},
										{
											"begin": 10431,
											"end": 10443,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 10431,
											"end": 10443,
											"name": "SLOAD"
										},
										{
											"begin": 10431,
											"end": 10455,
											"name": "PUSH [tag]",
											"value": "141"
										},
										{
											"begin": 10431,
											"end": 10455,
											"name": "SWAP1"
										},
										{
											"begin": 10448,
											"end": 10454,
											"name": "DUP3"
										},
										{
											"begin": 10431,
											"end": 10455,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 10431,
											"end": 10447,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 10431,
											"end": 10455,
											"name": "AND"
										},
										{
											"begin": 10431,
											"end": 10455,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10431,
											"end": 10455,
											"name": "tag",
											"value": "141"
										},
										{
											"begin": 10431,
											"end": 10455,
											"name": "JUMPDEST"
										},
										{
											"begin": 10416,
											"end": 10428,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 10416,
											"end": 10455,
											"name": "SSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 10486,
											"end": 10504,
											"name": "DUP3"
										},
										{
											"begin": 10486,
											"end": 10504,
											"name": "AND"
										},
										{
											"begin": 10486,
											"end": 10495,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10486,
											"end": 10504,
											"name": "SWAP1"
										},
										{
											"begin": 10486,
											"end": 10504,
											"name": "DUP2"
										},
										{
											"begin": 10486,
											"end": 10504,
											"name": "MSTORE"
										},
										{
											"begin": 10486,
											"end": 10504,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10486,
											"end": 10504,
											"name": "DUP2"
										},
										{
											"begin": 10486,
											"end": 10504,
											"name": "SWAP1"
										},
										{
											"begin": 10486,
											"end": 10504,
											"name": "MSTORE"
										},
										{
											"begin": 10486,
											"end": 10504,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10486,
											"end": 10504,
											"name": "SWAP1"
										},
										{
											"begin": 10486,
											"end": 10504,
											"name": "KECCAK256"
										},
										{
											"begin": 10486,
											"end": 10504,
											"name": "SLOAD"
										},
										{
											"begin": 10486,
											"end": 10516,
											"name": "PUSH [tag]",
											"value": "142"
										},
										{
											"begin": 10486,
											"end": 10516,
											"name": "SWAP1"
										},
										{
											"begin": 10509,
											"end": 10515,
											"name": "DUP3"
										},
										{
											"begin": 10486,
											"end": 10516,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 10486,
											"end": 10508,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 10486,
											"end": 10516,
											"name": "AND"
										},
										{
											"begin": 10486,
											"end": 10516,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10486,
											"end": 10516,
											"name": "tag",
											"value": "142"
										},
										{
											"begin": 10486,
											"end": 10516,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 10465,
											"end": 10483,
											"name": "DUP4"
										},
										{
											"begin": 10465,
											"end": 10483,
											"name": "AND"
										},
										{
											"begin": 10465,
											"end": 10474,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10465,
											"end": 10483,
											"name": "DUP2"
										},
										{
											"begin": 10465,
											"end": 10483,
											"name": "DUP2"
										},
										{
											"begin": 10465,
											"end": 10483,
											"name": "MSTORE"
										},
										{
											"begin": 10465,
											"end": 10483,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10465,
											"end": 10483,
											"name": "DUP2"
										},
										{
											"begin": 10465,
											"end": 10483,
											"name": "DUP2"
										},
										{
											"begin": 10465,
											"end": 10483,
											"name": "MSTORE"
										},
										{
											"begin": 10465,
											"end": 10483,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10465,
											"end": 10483,
											"name": "DUP1"
										},
										{
											"begin": 10465,
											"end": 10483,
											"name": "DUP4"
										},
										{
											"begin": 10465,
											"end": 10483,
											"name": "KECCAK256"
										},
										{
											"begin": 10465,
											"end": 10516,
											"name": "SWAP5"
										},
										{
											"begin": 10465,
											"end": 10516,
											"name": "SWAP1"
										},
										{
											"begin": 10465,
											"end": 10516,
											"name": "SWAP5"
										},
										{
											"begin": 10465,
											"end": 10516,
											"name": "SSTORE"
										},
										{
											"begin": 10531,
											"end": 10568,
											"name": "DUP4"
										},
										{
											"begin": 10531,
											"end": 10568,
											"name": "MLOAD"
										},
										{
											"begin": 10531,
											"end": 10568,
											"name": "DUP6"
										},
										{
											"begin": 10531,
											"end": 10568,
											"name": "DUP2"
										},
										{
											"begin": 10531,
											"end": 10568,
											"name": "MSTORE"
										},
										{
											"begin": 10531,
											"end": 10568,
											"name": "SWAP4"
										},
										{
											"begin": 10531,
											"end": 10568,
											"name": "MLOAD"
										},
										{
											"begin": 10465,
											"end": 10483,
											"name": "SWAP3"
										},
										{
											"begin": 10465,
											"end": 10483,
											"name": "SWAP4"
										},
										{
											"begin": 10465,
											"end": 10474,
											"name": "SWAP2"
										},
										{
											"begin": 10465,
											"end": 10474,
											"name": "SWAP3"
										},
										{
											"begin": 10531,
											"end": 10568,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 10531,
											"end": 10568,
											"name": "SWAP3"
										},
										{
											"begin": 10531,
											"end": 10568,
											"name": "DUP2"
										},
										{
											"begin": 10531,
											"end": 10568,
											"name": "SWAP1"
										},
										{
											"begin": 10531,
											"end": 10568,
											"name": "SUB"
										},
										{
											"begin": 10531,
											"end": 10568,
											"name": "SWAP1"
										},
										{
											"begin": 10531,
											"end": 10568,
											"name": "SWAP2"
										},
										{
											"begin": 10531,
											"end": 10568,
											"name": "ADD"
										},
										{
											"begin": 10531,
											"end": 10568,
											"name": "SWAP1"
										},
										{
											"begin": 10531,
											"end": 10568,
											"name": "LOG3"
										},
										{
											"begin": 10274,
											"end": 10575,
											"name": "POP"
										},
										{
											"begin": 10274,
											"end": 10575,
											"name": "POP"
										},
										{
											"begin": 10274,
											"end": 10575,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"mint(uint256)": "a0712d68",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"sender\",\"type\":\"address\"},{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"symbol\",\"type\":\"string\"},{\"name\":\"decimals\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"}],\"name\":\"TransferOwnership\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"See `IZRC20.allowance`.\"},\"approve(address,uint256)\":{\"details\":\"See `IZRC20.approve`.     * Requirements:     * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See `IZRC20.balanceOf`.\"},\"burn(uint256)\":{\"details\":\"Destoys `amount` tokens from the caller.     * See `ZRC20._burn`.\"},\"burnFrom(address,uint256)\":{\"details\":\"See `ZRC20._burnFrom`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * > Note that this information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including `IZRC20.balanceOf` and `IZRC20.transfer`.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IZRC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IZRC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See `IZRC20.totalSupply`.\"},\"transfer(address,uint256)\":{\"details\":\"See `IZRC20.transfer`.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See `IZRC20.transferFrom`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `value`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/TestContract.sol\":\"Trustee\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/TestContract.sol\":{\"keccak256\":\"0xe051574366bf3c69a0df9084be9d29b5fdb47dc8e3a9bd5b6e60a6723939815b\",\"urls\":[\"bzzr://c90bce5152ae53e60c5e7b245652e0fff3edb02a5191be7d132964e5b359ec62\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"formattedMessage": "contracts/TestContract.sol:219:24: Warning: This declaration shadows an existing declaration.\n    function allowance(address owner, address spender) public view returns (uint256) {\n                       ^-----------^\ncontracts/TestContract.sol:139:5: The shadowed declaration is here:\n    address public owner;\n    ^------------------^\n\n",
				"message": "This declaration shadows an existing declaration.",
				"severity": "warning",
				"sourceLocation": {
					"end": 6800,
					"file": "contracts/TestContract.sol",
					"start": 6787
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "contracts/TestContract.sol:340:23: Warning: This declaration shadows an existing declaration.\n    function _approve(address owner, address spender, uint256 value) internal {\n                      ^-----------^\ncontracts/TestContract.sol:139:5: The shadowed declaration is here:\n    address public owner;\n    ^------------------^\n\n",
				"message": "This declaration shadows an existing declaration.",
				"severity": "warning",
				"sourceLocation": {
					"end": 11031,
					"file": "contracts/TestContract.sol",
					"start": 11018
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/TestContract.sol": {
				"ast": {
					"absolutePath": "contracts/TestContract.sol",
					"exportedSymbols": {
						"IZRC20": [
							68
						],
						"SafeMath": [
							199
						],
						"Trustee": [
							744
						]
					},
					"id": 745,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 68,
							"linearizedBaseContracts": [
								68
							],
							"name": "IZRC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"id": 6,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "69:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 6,
												"src": "95:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "95:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "94:9:0"
									},
									"scope": 68,
									"src": "49:55:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 13,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "129:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 7,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "129:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "128:17:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "169:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 10,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "169:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "168:9:0"
									},
									"scope": 68,
									"src": "110:68:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 22,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "202:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 14,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "202:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 17,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "221:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 16,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "221:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "201:35:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "255:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 19,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "255:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "254:6:0"
									},
									"scope": 68,
									"src": "184:77:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 31,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "286:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "286:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "301:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 25,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "301:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "285:32:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "341:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 28,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "341:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "340:9:0"
									},
									"scope": 68,
									"src": "267:83:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 40,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "373:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "373:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 35,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "390:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 34,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "390:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "372:33:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "424:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 37,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "424:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "423:6:0"
									},
									"scope": 68,
									"src": "356:74:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 51,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "458:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 41,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "458:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "474:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "474:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 46,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "493:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 45,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "493:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "457:51:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "527:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 48,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "527:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "526:6:0"
									},
									"scope": 68,
									"src": "436:97:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 59,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "554:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "554:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "576:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "576:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "596:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "553:57:0"
									},
									"src": "539:72:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 67,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "632:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "632:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "655:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "680:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "680:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "631:63:0"
									},
									"src": "617:78:0"
								}
							],
							"scope": 745,
							"src": "26:671:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 199,
							"linearizedBaseContracts": [
								199
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 92,
										"nodeType": "Block",
										"src": "1011:109:0",
										"statements": [
											{
												"assignments": [
													78
												],
												"declarations": [
													{
														"constant": false,
														"id": 78,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 93,
														"src": "1021:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 77,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1021:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 82,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 79,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 70,
														"src": "1033:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 80,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 72,
														"src": "1037:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1033:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1021:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 86,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 84,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 78,
																"src": "1056:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 85,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 70,
																"src": "1061:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1056:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 87,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1064:29:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 83,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															762,
															763
														],
														"referencedDeclaration": 763,
														"src": "1048:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1048:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "1048:46:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 90,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 78,
													"src": "1112:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 76,
												"id": 91,
												"nodeType": "Return",
												"src": "1105:8:0"
											}
										]
									},
									"documentation": "@dev Returns the addition of two unsigned integers, reverting on\noverflow.\n     * Counterpart to Solidity's `+` operator.\n     * Requirements:\n- Addition cannot overflow.",
									"id": 93,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "957:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 69,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "957:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "968:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "968:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "956:22:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 75,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "1002:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 74,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1001:9:0"
									},
									"scope": 199,
									"src": "944:176:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 117,
										"nodeType": "Block",
										"src": "1451:112:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 105,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 103,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 97,
																"src": "1469:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 104,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 95,
																"src": "1474:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1469:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 106,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1477:32:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 102,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															762,
															763
														],
														"referencedDeclaration": 763,
														"src": "1461:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1461:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 108,
												"nodeType": "ExpressionStatement",
												"src": "1461:49:0"
											},
											{
												"assignments": [
													110
												],
												"declarations": [
													{
														"constant": false,
														"id": 110,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 118,
														"src": "1520:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 109,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1520:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 114,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 111,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 95,
														"src": "1532:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 112,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 97,
														"src": "1536:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1532:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1520:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 115,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 110,
													"src": "1555:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 101,
												"id": 116,
												"nodeType": "Return",
												"src": "1548:8:0"
											}
										]
									},
									"documentation": "@dev Returns the subtraction of two unsigned integers, reverting on\noverflow (when the result is negative).\n     * Counterpart to Solidity's `-` operator.\n     * Requirements:\n- Subtraction cannot overflow.",
									"id": 118,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "1397:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1397:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "1408:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1408:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1396:22:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "1442:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 99,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1442:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1441:9:0"
									},
									"scope": 199,
									"src": "1384:179:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 151,
										"nodeType": "Block",
										"src": "1870:391:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 127,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 120,
														"src": "2101:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 128,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2106:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2101:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 133,
												"nodeType": "IfStatement",
												"src": "2097:45:0",
												"trueBody": {
													"id": 132,
													"nodeType": "Block",
													"src": "2109:33:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 130,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2130:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 126,
															"id": 131,
															"nodeType": "Return",
															"src": "2123:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													135
												],
												"declarations": [
													{
														"constant": false,
														"id": 135,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 152,
														"src": "2152:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 134,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2152:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 139,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 136,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 120,
														"src": "2164:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 137,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "2168:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2164:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2152:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 143,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 141,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 135,
																	"src": "2187:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 142,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 120,
																	"src": "2191:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2187:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 144,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 122,
																"src": "2196:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2187:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2199:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 140,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															762,
															763
														],
														"referencedDeclaration": 763,
														"src": "2179:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2179:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 148,
												"nodeType": "ExpressionStatement",
												"src": "2179:56:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 149,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 135,
													"src": "2253:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 126,
												"id": 150,
												"nodeType": "Return",
												"src": "2246:8:0"
											}
										]
									},
									"documentation": "@dev Returns the multiplication of two unsigned integers, reverting on\noverflow.\n     * Counterpart to Solidity's `*` operator.\n     * Requirements:\n- Multiplication cannot overflow.",
									"id": 152,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "1816:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1816:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "1827:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1815:22:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 125,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "1861:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1861:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1860:9:0"
									},
									"scope": 199,
									"src": "1803:458:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 176,
										"nodeType": "Block",
										"src": "2783:259:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 164,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 162,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 156,
																"src": "2867:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 163,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2871:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2867:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 165,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2874:28:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 161,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															762,
															763
														],
														"referencedDeclaration": 763,
														"src": "2859:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2859:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 167,
												"nodeType": "ExpressionStatement",
												"src": "2859:44:0"
											},
											{
												"assignments": [
													169
												],
												"declarations": [
													{
														"constant": false,
														"id": 169,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 177,
														"src": "2913:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 168,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2913:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 173,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 170,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 154,
														"src": "2925:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 171,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "2929:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2925:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2913:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 174,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "3034:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 160,
												"id": 175,
												"nodeType": "Return",
												"src": "3027:8:0"
											}
										]
									},
									"documentation": "@dev Returns the integer division of two unsigned integers. Reverts on\ndivision by zero. The result is rounded towards zero.\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n- The divisor cannot be zero.",
									"id": 177,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "2729:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2729:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 156,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "2740:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2740:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2728:22:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "2774:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2774:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2773:9:0"
									},
									"scope": 199,
									"src": "2716:326:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 197,
										"nodeType": "Block",
										"src": "3553:82:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 189,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 187,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 181,
																"src": "3571:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 188,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3576:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3571:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 190,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3579:26:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 186,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															762,
															763
														],
														"referencedDeclaration": 763,
														"src": "3563:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3563:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 192,
												"nodeType": "ExpressionStatement",
												"src": "3563:43:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 193,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 179,
														"src": "3623:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 194,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 181,
														"src": "3627:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3623:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 185,
												"id": 196,
												"nodeType": "Return",
												"src": "3616:12:0"
											}
										]
									},
									"documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts when dividing by zero.\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n- The divisor cannot be zero.",
									"id": 198,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "3499:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3499:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 181,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "3510:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 180,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3510:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3498:22:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "3544:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3544:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3543:9:0"
									},
									"scope": 199,
									"src": "3486:149:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 745,
							"src": "699:2938:0"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 200,
										"name": "IZRC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 68,
										"src": "4306:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IZRC20_$68",
											"typeString": "contract IZRC20"
										}
									},
									"id": 201,
									"nodeType": "InheritanceSpecifier",
									"src": "4306:6:0"
								}
							],
							"contractDependencies": [
								68
							],
							"contractKind": "contract",
							"documentation": "@dev Implementation of the `IZRC20` interface.\n * We have followed general OpenZeppelin guidelines: functions revert instead\nof returning `false` on failure. This behavior is nonetheless conventional\nand does not conflict with the expectations of ZRC20 applications.\n * Additionally, an `Approval` event is emitted on calls to `transferFrom`.\nThis allows applications to reconstruct the allowance for all accounts just\nby listening to said events.\n * Finally, the non-standard `decreaseAllowance` and `increaseAllowance`\nfunctions have been added to mitigate the well-known issues around setting\nallowances..",
							"fullyImplemented": true,
							"id": 744,
							"linearizedBaseContracts": [
								744,
								68
							],
							"name": "Trustee",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 204,
									"libraryName": {
										"contractScope": null,
										"id": 202,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 199,
										"src": "4325:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$199",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "4319:27:0",
									"typeName": {
										"id": 203,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "4338:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 208,
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"scope": 744,
									"src": "4352:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 207,
										"keyType": {
											"id": 205,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4361:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4352:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 206,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4372:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 214,
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"scope": 744,
									"src": "4405:69:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 213,
										"keyType": {
											"id": 209,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4414:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4405:49:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 212,
											"keyType": {
												"id": 210,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4434:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "4425:28:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 211,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4445:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 216,
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"scope": 744,
									"src": "4481:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 215,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "4481:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 218,
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"scope": 744,
									"src": "4507:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 217,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "4507:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 220,
									"name": "_decimals",
									"nodeType": "VariableDeclaration",
									"scope": 744,
									"src": "4535:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 219,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "4535:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 222,
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"scope": 744,
									"src": "4564:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 221,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "4564:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 228,
									"name": "TransferOwnership",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4615:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4615:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4637:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4637:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4614:42:0"
									},
									"src": "4591:66:0"
								},
								{
									"body": {
										"id": 239,
										"nodeType": "Block",
										"src": "4684:83:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 234,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 231,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 759,
																	"src": "4702:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 232,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4702:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 233,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 222,
																"src": "4716:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4702:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "53656e646572206973206e6f7420746865206f776e6572",
															"id": 235,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4723:25:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ab09f98e2d0df4e964b9b7f9b0dd1b2bfe87c01f728557013892d40ee8359279",
																"typeString": "literal_string \"Sender is not the owner\""
															},
															"value": "Sender is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ab09f98e2d0df4e964b9b7f9b0dd1b2bfe87c01f728557013892d40ee8359279",
																"typeString": "literal_string \"Sender is not the owner\""
															}
														],
														"id": 230,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															762,
															763
														],
														"referencedDeclaration": 763,
														"src": "4694:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4694:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 237,
												"nodeType": "ExpressionStatement",
												"src": "4694:55:0"
											},
											{
												"id": 238,
												"nodeType": "PlaceholderStatement",
												"src": "4759:1:0"
											}
										]
									},
									"documentation": null,
									"id": 240,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4681:2:0"
									},
									"src": "4663:104:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "4851:173:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 249,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 216,
														"src": "4861:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 250,
														"name": "name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 242,
														"src": "4869:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "4861:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 252,
												"nodeType": "ExpressionStatement",
												"src": "4861:12:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 253,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 218,
														"src": "4883:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 254,
														"name": "symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 244,
														"src": "4893:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "4883:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 256,
												"nodeType": "ExpressionStatement",
												"src": "4883:16:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 257,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 220,
														"src": "4909:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 258,
														"name": "decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "4921:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "4909:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 260,
												"nodeType": "ExpressionStatement",
												"src": "4909:20:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 261,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 222,
														"src": "4939:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 262,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "4947:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 263,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "4947:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4939:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 265,
												"nodeType": "ExpressionStatement",
												"src": "4939:18:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 267,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 222,
															"src": "4973:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 274,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"hexValue": "31303030303030303030",
																"id": 268,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4980:10:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000_by_1",
																	"typeString": "int_const 1000000000"
																},
																"value": "1000000000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 273,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"hexValue": "3130",
																	"id": 269,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4993:2:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 271,
																			"name": "decimals",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 246,
																			"src": "5007:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 270,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4999:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": "uint256"
																	},
																	"id": 272,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4999:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4993:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4980:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 266,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 566,
														"src": "4967:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4967:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 276,
												"nodeType": "ExpressionStatement",
												"src": "4967:50:0"
											}
										]
									},
									"documentation": null,
									"id": 278,
									"implemented": true,
									"isConstructor": true,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"name": "name",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "4786:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 241,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4786:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 244,
												"name": "symbol",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "4806:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 243,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4806:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 246,
												"name": "decimals",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "4828:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 245,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4828:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4785:58:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4851:0:0"
									},
									"scope": 744,
									"src": "4773:251:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 285,
										"nodeType": "Block",
										"src": "5141:29:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 283,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 216,
													"src": "5158:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 282,
												"id": 284,
												"nodeType": "Return",
												"src": "5151:12:0"
											}
										]
									},
									"documentation": "@dev Returns the name of the token.",
									"id": 286,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5102:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "5126:6:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 280,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5126:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5125:15:0"
									},
									"scope": 744,
									"src": "5089:81:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "5337:31:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 291,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 218,
													"src": "5354:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 290,
												"id": 292,
												"nodeType": "Return",
												"src": "5347:14:0"
											}
										]
									},
									"documentation": "@dev Returns the symbol of the token, usually a shorter version of the\nname.",
									"id": 294,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5298:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "5322:6:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 288,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5322:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5321:15:0"
									},
									"scope": 744,
									"src": "5283:85:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "5971:33:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 299,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 220,
													"src": "5988:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 298,
												"id": 300,
												"nodeType": "Return",
												"src": "5981:16:0"
											}
										]
									},
									"documentation": "@dev Returns the number of decimals used to get its user representation.\nFor example, if `decimals` equals `2`, a balance of `505` tokens should\nbe displayed to a user as `5,05` (`505 / 10 ** 2`).\n     * Tokens usually opt for a value of 18, imitating the relationship between\nEther and Wei.\n     * > Note that this information is only used for _display_ purposes: it in\nno way affects any of the arithmetic of the contract, including\n`IZRC20.balanceOf` and `IZRC20.transfer`.",
									"id": 302,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5940:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 297,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "5964:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 296,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5964:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5963:7:0"
									},
									"scope": 744,
									"src": "5923:81:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 304,
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 744,
									"src": "6010:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 303,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "6010:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 311,
										"nodeType": "Block",
										"src": "6152:36:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 309,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 304,
													"src": "6169:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 308,
												"id": 310,
												"nodeType": "Return",
												"src": "6162:19:0"
											}
										]
									},
									"documentation": "@dev See `IZRC20.totalSupply`.",
									"id": 312,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6119:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 307,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "6143:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6143:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6142:9:0"
									},
									"scope": 744,
									"src": "6099:89:0",
									"stateMutability": "view",
									"superFunction": 6,
									"visibility": "public"
								},
								{
									"body": {
										"id": 323,
										"nodeType": "Block",
										"src": "6312:42:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 319,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "6329:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 321,
													"indexExpression": {
														"argumentTypes": null,
														"id": 320,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 314,
														"src": "6339:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6329:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 318,
												"id": 322,
												"nodeType": "Return",
												"src": "6322:25:0"
											}
										]
									},
									"documentation": "@dev See `IZRC20.balanceOf`.",
									"id": 324,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "6265:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6265:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6264:17:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "6303:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6303:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6302:9:0"
									},
									"scope": 744,
									"src": "6246:108:0",
									"stateMutability": "view",
									"superFunction": 13,
									"visibility": "public"
								},
								{
									"body": {
										"id": 342,
										"nodeType": "Block",
										"src": "6632:78:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 334,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 759,
																"src": "6652:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "6652:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 336,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 326,
															"src": "6664:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 337,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 328,
															"src": "6675:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 333,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 523,
														"src": "6642:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6642:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 339,
												"nodeType": "ExpressionStatement",
												"src": "6642:40:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 340,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6699:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 332,
												"id": 341,
												"nodeType": "Return",
												"src": "6692:11:0"
											}
										]
									},
									"documentation": "@dev See `IZRC20.transfer`.\n     * Requirements:\n     * - `recipient` cannot be the zero address.\n- the caller must have a balance of at least `amount`.",
									"id": 343,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "6575:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 325,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6575:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 328,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "6594:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6594:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6574:35:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "6626:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 330,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6626:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6625:6:0"
									},
									"scope": 744,
									"src": "6557:153:0",
									"stateMutability": "nonpayable",
									"superFunction": 22,
									"visibility": "public"
								},
								{
									"body": {
										"id": 358,
										"nodeType": "Block",
										"src": "6849:51:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 352,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "6866:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 354,
														"indexExpression": {
															"argumentTypes": null,
															"id": 353,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 345,
															"src": "6878:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6866:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 356,
													"indexExpression": {
														"argumentTypes": null,
														"id": 355,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 347,
														"src": "6885:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6866:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 351,
												"id": 357,
												"nodeType": "Return",
												"src": "6859:34:0"
											}
										]
									},
									"documentation": "@dev See `IZRC20.allowance`.",
									"id": 359,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "6787:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 344,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6787:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 347,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "6802:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6802:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6786:32:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "6840:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6840:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6839:9:0"
									},
									"scope": 744,
									"src": "6768:132:0",
									"stateMutability": "view",
									"superFunction": 31,
									"visibility": "public"
								},
								{
									"body": {
										"id": 377,
										"nodeType": "Block",
										"src": "7109:74:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 369,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 759,
																"src": "7128:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 370,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "7128:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 371,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 361,
															"src": "7140:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 372,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "7149:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 368,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 608,
														"src": "7119:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7119:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 374,
												"nodeType": "ExpressionStatement",
												"src": "7119:36:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7172:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 367,
												"id": 376,
												"nodeType": "Return",
												"src": "7165:11:0"
											}
										]
									},
									"documentation": "@dev See `IZRC20.approve`.\n     * Requirements:\n     * - `spender` cannot be the zero address.",
									"id": 378,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "7055:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 360,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7055:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 363,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "7072:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 362,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7072:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7054:32:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "7103:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 365,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7103:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7102:6:0"
									},
									"scope": 744,
									"src": "7038:145:0",
									"stateMutability": "nonpayable",
									"superFunction": 40,
									"visibility": "public"
								},
								{
									"body": {
										"id": 412,
										"nodeType": "Block",
										"src": "7653:157:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 390,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "7673:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 391,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 382,
															"src": "7681:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 392,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "7692:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 389,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 523,
														"src": "7663:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7663:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 394,
												"nodeType": "ExpressionStatement",
												"src": "7663:36:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 396,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "7718:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 397,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 759,
																"src": "7726:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 398,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "7726:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 406,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "7774:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 399,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 214,
																			"src": "7738:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 401,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 400,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 380,
																			"src": "7750:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7738:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 404,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 402,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 759,
																			"src": "7758:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 403,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "7758:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7738:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 405,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 118,
																"src": "7738:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 407,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7738:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 395,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 608,
														"src": "7709:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7709:73:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 409,
												"nodeType": "ExpressionStatement",
												"src": "7709:73:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7799:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 388,
												"id": 411,
												"nodeType": "Return",
												"src": "7792:11:0"
											}
										]
									},
									"documentation": "@dev See `IZRC20.transferFrom`.\n     * Emits an `Approval` event indicating the updated allowance.\n     * Requirements:\n- `sender` and `recipient` cannot be the zero address.\n- `sender` must have a balance of at least `value`.\n- the caller must have allowance for `sender`'s tokens of at least\n`amount`.",
									"id": 413,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 380,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "7580:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7580:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 382,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "7596:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 381,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7596:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 384,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "7615:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 383,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7615:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7579:51:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "7647:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 386,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7647:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7646:6:0"
									},
									"scope": 744,
									"src": "7558:252:0",
									"stateMutability": "nonpayable",
									"superFunction": 51,
									"visibility": "public"
								},
								{
									"body": {
										"id": 439,
										"nodeType": "Block",
										"src": "8291:117:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 423,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 759,
																"src": "8310:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 424,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "8310:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 425,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 415,
															"src": "8322:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 433,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "8368:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 426,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 214,
																			"src": "8331:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 429,
																		"indexExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 427,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 759,
																				"src": "8343:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 428,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "8343:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8331:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 431,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 430,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 415,
																		"src": "8355:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "8331:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 432,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 93,
																"src": "8331:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 434,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8331:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 422,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 608,
														"src": "8301:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8301:79:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 436,
												"nodeType": "ExpressionStatement",
												"src": "8301:79:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8397:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 421,
												"id": 438,
												"nodeType": "Return",
												"src": "8390:11:0"
											}
										]
									},
									"documentation": "@dev Atomically increases the allowance granted to `spender` by the caller.\n     * This is an alternative to `approve` that can be used as a mitigation for\nproblems described in `IZRC20.approve`.\n     * Emits an `Approval` event indicating the updated allowance.\n     * Requirements:\n     * - `spender` cannot be the zero address.",
									"id": 440,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "8232:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 414,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8232:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "8249:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8249:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8231:37:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "8285:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 419,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8285:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8284:6:0"
									},
									"scope": 744,
									"src": "8205:203:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 466,
										"nodeType": "Block",
										"src": "8986:122:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 450,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 759,
																"src": "9005:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 451,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "9005:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 452,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 442,
															"src": "9017:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 460,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 444,
																	"src": "9063:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 453,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 214,
																			"src": "9026:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 456,
																		"indexExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 454,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 759,
																				"src": "9038:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 455,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "9038:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "9026:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 458,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 457,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 442,
																		"src": "9050:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9026:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 459,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 118,
																"src": "9026:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 461,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9026:53:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 449,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 608,
														"src": "8996:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8996:84:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 463,
												"nodeType": "ExpressionStatement",
												"src": "8996:84:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 464,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9097:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 448,
												"id": 465,
												"nodeType": "Return",
												"src": "9090:11:0"
											}
										]
									},
									"documentation": "@dev Atomically decreases the allowance granted to `spender` by the caller.\n     * This is an alternative to `approve` that can be used as a mitigation for\nproblems described in `IZRC20.approve`.\n     * Emits an `Approval` event indicating the updated allowance.\n     * Requirements:\n     * - `spender` cannot be the zero address.\n- `spender` must have allowance for the caller of at least\n`subtractedValue`.",
									"id": 467,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 442,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "8922:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 441,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8922:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 444,
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "8939:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 443,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8939:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8921:42:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 447,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "8980:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 446,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8980:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8979:6:0"
									},
									"scope": 744,
									"src": "8895:213:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 522,
										"nodeType": "Block",
										"src": "9661:343:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 481,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 477,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 469,
																"src": "9679:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 479,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9697:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 478,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9689:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 480,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9689:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9679:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5a524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 482,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9701:39:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a71d2694bc6d2108aedf85dd0a70f7e700b05dc386eed9d5e52d1f6164cd7ca1",
																"typeString": "literal_string \"ZRC20: transfer from the zero address\""
															},
															"value": "ZRC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a71d2694bc6d2108aedf85dd0a70f7e700b05dc386eed9d5e52d1f6164cd7ca1",
																"typeString": "literal_string \"ZRC20: transfer from the zero address\""
															}
														],
														"id": 476,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															762,
															763
														],
														"referencedDeclaration": 763,
														"src": "9671:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9671:70:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 484,
												"nodeType": "ExpressionStatement",
												"src": "9671:70:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 490,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 486,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 471,
																"src": "9759:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 488,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9780:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 487,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9772:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 489,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9772:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9759:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5a524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 491,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9784:37:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1b35b1575e9cbca8c6549a597fa908d5f347c702d658e53d30245451711ba64a",
																"typeString": "literal_string \"ZRC20: transfer to the zero address\""
															},
															"value": "ZRC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1b35b1575e9cbca8c6549a597fa908d5f347c702d658e53d30245451711ba64a",
																"typeString": "literal_string \"ZRC20: transfer to the zero address\""
															}
														],
														"id": 485,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															762,
															763
														],
														"referencedDeclaration": 763,
														"src": "9751:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9751:71:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 493,
												"nodeType": "ExpressionStatement",
												"src": "9751:71:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 494,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "9833:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 496,
														"indexExpression": {
															"argumentTypes": null,
															"id": 495,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 469,
															"src": "9843:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9833:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 501,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 473,
																"src": "9875:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 497,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 208,
																	"src": "9853:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 499,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 498,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 469,
																	"src": "9863:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9853:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 500,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 118,
															"src": "9853:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 502,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9853:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9833:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 504,
												"nodeType": "ExpressionStatement",
												"src": "9833:49:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 505,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "9892:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 507,
														"indexExpression": {
															"argumentTypes": null,
															"id": 506,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 471,
															"src": "9902:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9892:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 512,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 473,
																"src": "9940:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 508,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 208,
																	"src": "9915:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 510,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 509,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 471,
																	"src": "9925:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9915:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 511,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 93,
															"src": "9915:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 513,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9915:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9892:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 515,
												"nodeType": "ExpressionStatement",
												"src": "9892:55:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 517,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 469,
															"src": "9971:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 518,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 471,
															"src": "9979:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 519,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 473,
															"src": "9990:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 516,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 59,
														"src": "9962:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9962:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 521,
												"nodeType": "EmitStatement",
												"src": "9957:40:0"
											}
										]
									},
									"documentation": "@dev Moves tokens `amount` from `sender` to `recipient`.\n     * This is internal function is equivalent to `transfer`, and can be used to\ne.g. implement automatic token fees, slashing mechanisms, etc.\n     * Emits a `Transfer` event.\n     * Requirements:\n     * - `sender` cannot be the zero address.\n- `recipient` cannot be the zero address.\n- `sender` must have a balance of at least `amount`.",
									"id": 523,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 469,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "9601:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 468,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9601:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 471,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "9617:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 470,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9617:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 473,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "9636:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 472,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9636:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9600:51:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9661:0:0"
									},
									"scope": 744,
									"src": "9582:422:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 565,
										"nodeType": "Block",
										"src": "10331:244:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 535,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 531,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 525,
																"src": "10349:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 533,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10368:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 532,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10360:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 534,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10360:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10349:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5a524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 536,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10372:33:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_00c78195edab24998ca9c2bf5e4ef3b2abff86c85e4d41adc167136dfa649256",
																"typeString": "literal_string \"ZRC20: mint to the zero address\""
															},
															"value": "ZRC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_00c78195edab24998ca9c2bf5e4ef3b2abff86c85e4d41adc167136dfa649256",
																"typeString": "literal_string \"ZRC20: mint to the zero address\""
															}
														],
														"id": 530,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															762,
															763
														],
														"referencedDeclaration": 763,
														"src": "10341:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10341:65:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 538,
												"nodeType": "ExpressionStatement",
												"src": "10341:65:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 539,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 304,
														"src": "10416:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 542,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 527,
																"src": "10448:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 540,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 304,
																"src": "10431:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 93,
															"src": "10431:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10431:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10416:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 545,
												"nodeType": "ExpressionStatement",
												"src": "10416:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 546,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "10465:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 548,
														"indexExpression": {
															"argumentTypes": null,
															"id": 547,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 525,
															"src": "10475:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10465:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 553,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 527,
																"src": "10509:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 549,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 208,
																	"src": "10486:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 551,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 550,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 525,
																	"src": "10496:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10486:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 93,
															"src": "10486:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 554,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10486:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10465:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 556,
												"nodeType": "ExpressionStatement",
												"src": "10465:51:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 559,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10548:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10540:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 560,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10540:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 561,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 525,
															"src": "10552:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 562,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "10561:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 557,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 59,
														"src": "10531:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10531:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 564,
												"nodeType": "EmitStatement",
												"src": "10526:42:0"
											}
										]
									},
									"documentation": "@dev Creates `amount` tokens and assigns them to `account`, increasing\nthe total supply.\n     * Emits a `Transfer` event with `from` set to the zero address.\n     * Requirements\n     * - `to` cannot be the zero address.",
									"id": 566,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "10289:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 524,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10289:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 527,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "10306:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 526,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10306:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10288:33:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10331:0:0"
									},
									"scope": 744,
									"src": "10274:301:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 607,
										"nodeType": "Block",
										"src": "11074:255:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 576,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 568,
																"src": "11092:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 578,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11109:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 577,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11101:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 579,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11101:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11092:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5a524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 581,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11113:38:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1f29340249770fa0769ce318b3b121c379b8a6b71b788bfc9ec0fe244c175a51",
																"typeString": "literal_string \"ZRC20: approve from the zero address\""
															},
															"value": "ZRC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1f29340249770fa0769ce318b3b121c379b8a6b71b788bfc9ec0fe244c175a51",
																"typeString": "literal_string \"ZRC20: approve from the zero address\""
															}
														],
														"id": 575,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															762,
															763
														],
														"referencedDeclaration": 763,
														"src": "11084:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11084:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 583,
												"nodeType": "ExpressionStatement",
												"src": "11084:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 589,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 585,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 570,
																"src": "11170:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 587,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11189:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 586,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 588,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11181:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11170:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5a524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 590,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11193:36:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc86d182860676b82b7d43edae2df8eb2c3ae68d776f2e04b8c77a3eff5a3698",
																"typeString": "literal_string \"ZRC20: approve to the zero address\""
															},
															"value": "ZRC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc86d182860676b82b7d43edae2df8eb2c3ae68d776f2e04b8c77a3eff5a3698",
																"typeString": "literal_string \"ZRC20: approve to the zero address\""
															}
														],
														"id": 584,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															762,
															763
														],
														"referencedDeclaration": 763,
														"src": "11162:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11162:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 592,
												"nodeType": "ExpressionStatement",
												"src": "11162:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 593,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 214,
																"src": "11241:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 596,
															"indexExpression": {
																"argumentTypes": null,
																"id": 594,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 568,
																"src": "11253:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11241:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 597,
														"indexExpression": {
															"argumentTypes": null,
															"id": 595,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 570,
															"src": "11260:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11241:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 598,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 572,
														"src": "11271:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11241:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 600,
												"nodeType": "ExpressionStatement",
												"src": "11241:35:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 602,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 568,
															"src": "11300:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 603,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 570,
															"src": "11307:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 604,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 572,
															"src": "11316:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 601,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "11291:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11291:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 606,
												"nodeType": "EmitStatement",
												"src": "11286:36:0"
											}
										]
									},
									"documentation": "@dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n     * This is internal function is equivalent to `approve`, and can be used to\ne.g. set automatic allowances for certain subsystems, etc.\n     * Emits an `Approval` event.\n     * Requirements:\n     * - `owner` cannot be the zero address.\n- `spender` cannot be the zero address.",
									"id": 608,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "11018:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 567,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11018:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 570,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "11033:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11033:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 572,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "11050:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11050:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11017:47:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11074:0:0"
									},
									"scope": 744,
									"src": "11000:329:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 619,
										"nodeType": "Block",
										"src": "11474:42:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 614,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 759,
																"src": "11490:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 615,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "11490:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 616,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 610,
															"src": "11502:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 613,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 676,
														"src": "11484:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11484:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 618,
												"nodeType": "ExpressionStatement",
												"src": "11484:25:0"
											}
										]
									},
									"documentation": "@dev Destoys `amount` tokens from the caller.\n     * See `ZRC20._burn`.",
									"id": 620,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "11451:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 609,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11451:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11450:16:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11474:0:0"
									},
									"scope": 744,
									"src": "11437:79:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 632,
										"nodeType": "Block",
										"src": "11631:43:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 628,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 622,
															"src": "11651:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 629,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 624,
															"src": "11660:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 627,
														"name": "_burnFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 704,
														"src": "11641:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11641:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 631,
												"nodeType": "ExpressionStatement",
												"src": "11641:26:0"
											}
										]
									},
									"documentation": "@dev See `ZRC20._burnFrom`.",
									"id": 633,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "burnFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "11591:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 621,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11591:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 624,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "11608:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 623,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11608:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11590:33:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 626,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11631:0:0"
									},
									"scope": 744,
									"src": "11573:101:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 675,
										"nodeType": "Block",
										"src": "12049:244:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 645,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 641,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 635,
																"src": "12067:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 643,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12086:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 642,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12078:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 644,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12078:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12067:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5a524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 646,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12090:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c8b480bb39d2a21861f1e5f3a5be7d7d7f8db2e6678510bdc3a6a411edf96ae9",
																"typeString": "literal_string \"ZRC20: burn from the zero address\""
															},
															"value": "ZRC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c8b480bb39d2a21861f1e5f3a5be7d7d7f8db2e6678510bdc3a6a411edf96ae9",
																"typeString": "literal_string \"ZRC20: burn from the zero address\""
															}
														],
														"id": 640,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															762,
															763
														],
														"referencedDeclaration": 763,
														"src": "12059:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12059:67:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 648,
												"nodeType": "ExpressionStatement",
												"src": "12059:67:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 649,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 304,
														"src": "12137:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 652,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 637,
																"src": "12169:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 650,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 304,
																"src": "12152:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 651,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 118,
															"src": "12152:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 653,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12152:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12137:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 655,
												"nodeType": "ExpressionStatement",
												"src": "12137:38:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 656,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "12185:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 658,
														"indexExpression": {
															"argumentTypes": null,
															"id": 657,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 635,
															"src": "12195:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12185:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 663,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 637,
																"src": "12229:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 659,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 208,
																	"src": "12206:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 661,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 660,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 635,
																	"src": "12216:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12206:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 662,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 118,
															"src": "12206:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 664,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12206:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12185:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 666,
												"nodeType": "ExpressionStatement",
												"src": "12185:50:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 668,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 635,
															"src": "12259:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 670,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12276:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 669,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12268:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 671,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12268:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 672,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 637,
															"src": "12280:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 667,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 59,
														"src": "12250:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12250:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 674,
												"nodeType": "EmitStatement",
												"src": "12245:41:0"
											}
										]
									},
									"documentation": "@dev Destroys `amount` tokens from `account`, reducing the\ntotal supply.\n     * Emits a `Transfer` event with `to` set to the zero address.\n     * Requirements\n     * - `account` cannot be the zero address.\n- `account` must have at least `amount` tokens.",
									"id": 676,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 635,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "12008:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 634,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12008:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 637,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "12025:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 636,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12025:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12007:32:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12049:0:0"
									},
									"scope": 744,
									"src": "11993:300:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 703,
										"nodeType": "Block",
										"src": "12531:124:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 684,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 678,
															"src": "12547:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 685,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 680,
															"src": "12556:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 683,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 676,
														"src": "12541:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12541:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 687,
												"nodeType": "ExpressionStatement",
												"src": "12541:22:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 689,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 678,
															"src": "12582:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 690,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 759,
																"src": "12591:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 691,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "12591:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 699,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 680,
																	"src": "12640:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 692,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 214,
																			"src": "12603:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 694,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 693,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 678,
																			"src": "12615:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "12603:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 697,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 695,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 759,
																			"src": "12624:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 696,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "12624:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "12603:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 698,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 118,
																"src": "12603:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 700,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12603:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 688,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 608,
														"src": "12573:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12573:75:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 702,
												"nodeType": "ExpressionStatement",
												"src": "12573:75:0"
											}
										]
									},
									"documentation": "@dev Destoys `amount` tokens from `account`.`amount` is then deducted\nfrom the caller's allowance.\n     * See `_burn` and `_approve`.",
									"id": 704,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "_burnFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 678,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "12489:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 677,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12489:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 680,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "12506:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 679,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12506:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12488:33:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12531:0:0"
									},
									"scope": 744,
									"src": "12470:185:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 717,
										"nodeType": "Block",
										"src": "12707:32:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 712,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 759,
																"src": "12717:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 713,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "12717:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 714,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 706,
															"src": "12729:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 711,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 566,
														"src": "12711:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12711:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 716,
												"nodeType": "ExpressionStatement",
												"src": "12711:24:0"
											}
										]
									},
									"documentation": null,
									"id": 718,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 709,
											"modifierName": {
												"argumentTypes": null,
												"id": 708,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 240,
												"src": "12697:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "12697:9:0"
										}
									],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 706,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "12675:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 705,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12675:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12674:15:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12707:0:0"
									},
									"scope": 744,
									"src": "12661:78:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 742,
										"nodeType": "Block",
										"src": "12969:117:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 730,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 726,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 720,
																"src": "12985:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 728,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13005:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 727,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12997:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 729,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12997:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12985:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 725,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															762,
															763
														],
														"referencedDeclaration": 762,
														"src": "12977:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12977:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 732,
												"nodeType": "ExpressionStatement",
												"src": "12977:31:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 733,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 222,
														"src": "13016:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 734,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 720,
														"src": "13024:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "13016:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 736,
												"nodeType": "ExpressionStatement",
												"src": "13016:16:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 738,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 222,
															"src": "13063:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 739,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 720,
															"src": "13070:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 737,
														"name": "TransferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 228,
														"src": "13045:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13045:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 741,
												"nodeType": "EmitStatement",
												"src": "13040:39:0"
											}
										]
									},
									"documentation": "@dev Allows the current owner to transfer control of the contract to a newOwner.\n@param newOwner The address to transfer ownership to.",
									"id": 743,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 723,
											"modifierName": {
												"argumentTypes": null,
												"id": 722,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 240,
												"src": "12959:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "12959:9:0"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 720,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 743,
												"src": "12934:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 719,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12934:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12933:18:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12969:0:0"
									},
									"scope": 744,
									"src": "12907:179:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 745,
							"src": "4286:8802:0"
						}
					],
					"src": "0:13089:0"
				},
				"id": 0
			}
		}
	}
}