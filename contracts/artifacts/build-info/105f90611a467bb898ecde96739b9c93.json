{
	"id": "105f90611a467bb898ecde96739b9c93",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.4.24",
	"solcLongVersion": "0.4.24+commit.e67f0147",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/ss.sol": {
				"content": "pragma solidity ^0.4.24;\n\n\n/**\n * @title SafeMath\n * @dev Math operations with safety checks that throw on error\n */\nlibrary SafeMath {\n\n  /**\n  * @dev Multiplies two numbers, throws on overflow.\n  */\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n    if (a == 0) {\n      return 0;\n    }\n    uint256 c = a * b;\n    assert(c / a == b);\n    return c;\n  }\n\n  /**\n  * @dev Integer division of two numbers, truncating the quotient.\n  */\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\n    // uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n    return a / b;\n  }\n\n  /**\n  * @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\n  */\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    assert(b <= a);\n    return a - b;\n  }\n\n  /**\n  * @dev Adds two numbers, throws on overflow.\n  */\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a + b;\n    assert(c >= a);\n    return c;\n  }\n}\n\ncontract WethioValidator {\n    using SafeMath for uint256;\n\n    event Vote(address _voter, address _candidate, uint256 _cap);\n    event Unvote(address _voter, address _candidate, uint256 _cap);\n    event Propose(address _owner, address _candidate, uint256 _cap);\n    event Resign(address _owner, address _candidate);\n    event Withdraw(address _owner, uint256 _blockNumber, uint256 _cap);\n\n    struct ValidatorState {\n        address owner;\n        bool isCandidate;\n        uint256 cap;\n        mapping(address => uint256) voters;\n    }\n\n    struct WithdrawState {\n      mapping(uint256 => uint256) caps;\n      uint256[] blockNumbers;\n    }\n\n    mapping(address => WithdrawState) withdrawsState;\n\n    mapping(address => ValidatorState) validatorsState;\n    mapping(address => address[]) voters;\n    address[] public candidates;\n\n    uint256 public candidateCount = 0;\n    uint256 public minCandidateCap;\n    uint256 public minVoterCap;\n    uint256 public maxValidatorNumber;\n    uint256 public candidateWithdrawDelay;\n    uint256 public voterWithdrawDelay;\n\n    modifier onlyValidCandidateCap {\n        // anyone can deposit X wethio to become a candidate\n        require(msg.value >= minCandidateCap);\n        _;\n    }\n\n    modifier onlyValidVoterCap {\n        require(msg.value >= minVoterCap);\n        _;\n    }\n\n    modifier onlyOwner(address _candidate) {\n        require(validatorsState[_candidate].owner == msg.sender);\n        _;\n    }\n\n    modifier onlyCandidate(address _candidate) {\n        require(validatorsState[_candidate].isCandidate);\n        _;\n    }\n\n    modifier onlyValidCandidate (address _candidate) {\n        require(validatorsState[_candidate].isCandidate);\n        _;\n    }\n\n    modifier onlyNotCandidate (address _candidate) {\n        require(!validatorsState[_candidate].isCandidate);\n        _;\n    }\n\n    modifier onlyValidVote (address _candidate, uint256 _cap) {\n        require(validatorsState[_candidate].voters[msg.sender] >= _cap);\n        if (validatorsState[_candidate].owner == msg.sender) {\n            require(validatorsState[_candidate].voters[msg.sender].sub(_cap) >= minCandidateCap);\n        }\n        _;\n    }\n\n    modifier onlyValidWithdraw (uint256 _blockNumber, uint _index) {\n        require(_blockNumber > 0);\n        require(block.number >= _blockNumber);\n        require(withdrawsState[msg.sender].caps[_blockNumber] > 0);\n        require(withdrawsState[msg.sender].blockNumbers[_index] == _blockNumber);\n        _;\n    }\n\n    function WethioValidator (\n        address[] _candidates,\n        uint256[] _caps,\n        address _firstOwner,\n        uint256 _minCandidateCap,\n        uint256 _minVoterCap,\n        uint256 _maxValidatorNumber,\n        uint256 _candidateWithdrawDelay,\n        uint256 _voterWithdrawDelay\n    ) public {\n        minCandidateCap = _minCandidateCap;\n        minVoterCap = _minVoterCap;\n        maxValidatorNumber = _maxValidatorNumber;\n        candidateWithdrawDelay = _candidateWithdrawDelay;\n        voterWithdrawDelay = _voterWithdrawDelay;\n        candidateCount = _candidates.length;\n\n        for (uint256 i = 0; i < _candidates.length; i++) {\n            candidates.push(_candidates[i]);\n            validatorsState[_candidates[i]] = ValidatorState({\n                owner: _firstOwner,\n                isCandidate: true,\n                cap: _caps[i]\n            });\n            voters[_candidates[i]].push(_firstOwner);\n            validatorsState[_candidates[i]].voters[_firstOwner] = minCandidateCap;\n        }\n    }\n\n    function propose(address _candidate) external payable onlyValidCandidateCap onlyNotCandidate(_candidate) {\n        uint256 cap = validatorsState[_candidate].cap.add(msg.value);\n        candidates.push(_candidate);\n        validatorsState[_candidate] = ValidatorState({\n            owner: msg.sender,\n            isCandidate: true,\n            cap: cap\n        });\n        validatorsState[_candidate].voters[msg.sender] = validatorsState[_candidate].voters[msg.sender].add(msg.value);\n        candidateCount = candidateCount.add(1);\n        voters[_candidate].push(msg.sender);\n        emit Propose(msg.sender, _candidate, msg.value);\n    }\n\n    function vote(address _candidate) external payable onlyValidVoterCap onlyValidCandidate(_candidate) {\n        validatorsState[_candidate].cap = validatorsState[_candidate].cap.add(msg.value);\n        if (validatorsState[_candidate].voters[msg.sender] == 0) {\n            voters[_candidate].push(msg.sender);\n        }\n        validatorsState[_candidate].voters[msg.sender] = validatorsState[_candidate].voters[msg.sender].add(msg.value);\n        emit Vote(msg.sender, _candidate, msg.value);\n    }\n\n    function getCandidates() public view returns(address[]) {\n        return candidates;\n    }\n\n    function getCandidateCap(address _candidate) public view returns(uint256) {\n        return validatorsState[_candidate].cap;\n    }\n\n    function getCandidateOwner(address _candidate) public view returns(address) {\n        return validatorsState[_candidate].owner;\n    }\n\n    function getVoterCap(address _candidate, address _voter) public view returns(uint256) {\n        return validatorsState[_candidate].voters[_voter];\n    }\n\n    function getVoters(address _candidate) public view returns(address[]) {\n        return voters[_candidate];\n    }\n\n    function isCandidate(address _candidate) public view returns(bool) {\n        return validatorsState[_candidate].isCandidate;\n    }\n\n    function getWithdrawBlockNumbers() public view returns(uint256[]) {\n        return withdrawsState[msg.sender].blockNumbers;\n    }\n\n    function getWithdrawCap(uint256 _blockNumber) public view returns(uint256) {\n        return withdrawsState[msg.sender].caps[_blockNumber];\n    }\n\n    function unvote(address _candidate, uint256 _cap) public onlyValidVote(_candidate, _cap) {\n        validatorsState[_candidate].cap = validatorsState[_candidate].cap.sub(_cap);\n        validatorsState[_candidate].voters[msg.sender] = validatorsState[_candidate].voters[msg.sender].sub(_cap);\n\n        // refund after delay X blocks\n        uint256 withdrawBlockNumber = voterWithdrawDelay.add(block.number);\n        withdrawsState[msg.sender].caps[withdrawBlockNumber] = withdrawsState[msg.sender].caps[withdrawBlockNumber].add(_cap);\n        withdrawsState[msg.sender].blockNumbers.push(withdrawBlockNumber);\n\n        emit Unvote(msg.sender, _candidate, _cap);\n    }\n\n    function resign(address _candidate) public onlyOwner(_candidate) onlyCandidate(_candidate) {\n        validatorsState[_candidate].isCandidate = false;\n        candidateCount = candidateCount.sub(1);\n        for (uint256 i = 0; i < candidates.length; i++) {\n            if (candidates[i] == _candidate) {\n                delete candidates[i];\n                break;\n            }\n        }\n        uint256 cap = validatorsState[_candidate].voters[msg.sender];\n        validatorsState[_candidate].cap = validatorsState[_candidate].cap.sub(cap);\n        validatorsState[_candidate].voters[msg.sender] = 0;\n        // refunding after resigning X blocks\n        uint256 withdrawBlockNumber = candidateWithdrawDelay.add(block.number);\n        withdrawsState[msg.sender].caps[withdrawBlockNumber] = withdrawsState[msg.sender].caps[withdrawBlockNumber].add(cap);\n        withdrawsState[msg.sender].blockNumbers.push(withdrawBlockNumber);\n        emit Resign(msg.sender, _candidate);\n    }\n\n    function withdraw(uint256 _blockNumber, uint _index) public onlyValidWithdraw(_blockNumber, _index) {\n        uint256 cap = withdrawsState[msg.sender].caps[_blockNumber];\n        delete withdrawsState[msg.sender].caps[_blockNumber];\n        delete withdrawsState[msg.sender].blockNumbers[_index];\n        msg.sender.transfer(cap);\n        emit Withdraw(msg.sender, _blockNumber, cap);\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/ss.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"methods": {},
						"title": "SafeMath"
					},
					"evm": {
						"assembly": "    /* \"contracts/ss.sol\":117:1145  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0xb\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":252:259   */\n  dup1\n    /* \"--CODEGEN--\":246:260   */\n  mload\n    /* \"--CODEGEN--\":243:244   */\n  0x0\n    /* \"--CODEGEN--\":238:261   */\n  byte\n    /* \"--CODEGEN--\":232:236   */\n  0x73\n    /* \"--CODEGEN--\":229:262   */\n  eq\n    /* \"--CODEGEN--\":270:271   */\n  0x0\n    /* \"--CODEGEN--\":265:285   */\n  dup2\n  eq\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":222:285   */\n  jump(tag_1)\n    /* \"--CODEGEN--\":265:285   */\ntag_2:\n    /* \"--CODEGEN--\":274:283   */\n  invalid\n    /* \"--CODEGEN--\":222:285   */\ntag_1:\n  pop\n    /* \"--CODEGEN--\":298:307   */\n  address\n    /* \"--CODEGEN--\":295:296   */\n  0x0\n    /* \"--CODEGEN--\":288:308   */\n  mstore\n    /* \"--CODEGEN--\":328:332   */\n  0x73\n    /* \"--CODEGEN--\":319:326   */\n  dup2\n    /* \"--CODEGEN--\":311:333   */\n  mstore8\n    /* \"--CODEGEN--\":352:359   */\n  dup3\n    /* \"--CODEGEN--\":343:350   */\n  dup2\n    /* \"--CODEGEN--\":336:360   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ss.sol\":117:1145  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x0\n      dup1\n      revert\n\n    auxdata: 0xa165627a7a723058203432ca6feb4640a7295357f082e62d45a4ac88d0c18b63751d8c422237c6e32b0029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "604c602c600b82828239805160001a60731460008114601c57601e565bfe5b5030600052607381538281f30073000000000000000000000000000000000000000030146080604052600080fd00a165627a7a723058203432ca6feb4640a7295357f082e62d45a4ac88d0c18b63751d8c422237c6e32b0029",
							"opcodes": "PUSH1 0x4C PUSH1 0x2C PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x0 DUP2 EQ PUSH1 0x1C JUMPI PUSH1 0x1E JUMP JUMPDEST INVALID JUMPDEST POP ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN STOP PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 CALLVALUE ORIGIN 0xca PUSH16 0xEB4640A7295357F082E62D45A4AC88D0 0xc1 DUP12 PUSH4 0x751D8C42 0x22 CALLDATACOPY 0xc6 0xe3 0x2b STOP 0x29 ",
							"sourceMap": "117:1028:0:-;;132:2:-1;166:7;155:9;146:7;137:37;252:7;246:14;243:1;238:23;232:4;229:33;270:1;265:20;;;;222:63;;265:20;274:9;222:63;;298:9;295:1;288:20;328:4;319:7;311:22;352:7;343;336:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fd00a165627a7a723058203432ca6feb4640a7295357f082e62d45a4ac88d0c18b63751d8c422237c6e32b0029",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 CALLVALUE ORIGIN 0xca PUSH16 0xEB4640A7295357F082E62D45A4AC88D0 0xc1 DUP12 PUSH4 0x751D8C42 0x22 CALLDATACOPY 0xc6 0xe3 0x2b STOP 0x29 ",
							"sourceMap": "117:1028:0:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "15200",
								"executionCost": "116",
								"totalCost": "15316"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 117,
									"end": 1145,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 117,
									"end": 1145,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 252,
									"end": 259,
									"name": "DUP1"
								},
								{
									"begin": 246,
									"end": 260,
									"name": "MLOAD"
								},
								{
									"begin": 243,
									"end": 244,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 238,
									"end": 261,
									"name": "BYTE"
								},
								{
									"begin": 232,
									"end": 236,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 229,
									"end": 262,
									"name": "EQ"
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "DUP2"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "EQ"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "JUMPI"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "JUMP"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "JUMPDEST"
								},
								{
									"begin": 274,
									"end": 283,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "JUMPDEST"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "POP"
								},
								{
									"begin": 298,
									"end": 307,
									"name": "ADDRESS"
								},
								{
									"begin": 295,
									"end": 296,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 288,
									"end": 308,
									"name": "MSTORE"
								},
								{
									"begin": 328,
									"end": 332,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 319,
									"end": 326,
									"name": "DUP2"
								},
								{
									"begin": 311,
									"end": 333,
									"name": "MSTORE8"
								},
								{
									"begin": 352,
									"end": 359,
									"name": "DUP3"
								},
								{
									"begin": 343,
									"end": 350,
									"name": "DUP2"
								},
								{
									"begin": 336,
									"end": 360,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a723058203432ca6feb4640a7295357f082e62d45a4ac88d0c18b63751d8c422237c6e32b0029",
									".code": [
										{
											"begin": 117,
											"end": 1145,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 117,
											"end": 1145,
											"name": "ADDRESS"
										},
										{
											"begin": 117,
											"end": 1145,
											"name": "EQ"
										},
										{
											"begin": 117,
											"end": 1145,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 117,
											"end": 1145,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 117,
											"end": 1145,
											"name": "MSTORE"
										},
										{
											"begin": 117,
											"end": 1145,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 117,
											"end": 1145,
											"name": "DUP1"
										},
										{
											"begin": 117,
											"end": 1145,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{},\"title\":\"SafeMath\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/ss.sol\":\"SafeMath\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ss.sol\":{\"keccak256\":\"0xc2a58f09227223ef1739da1a912ccf24e184c06df440a118ae2ed4ebbb7edb5d\",\"urls\":[\"bzzr://b129a3f6ac3ea53f5ccac2b419895fc5ecb63132367ccbafd4803bd6ef8231bb\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				},
				"WethioValidator": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "_candidate",
									"type": "address"
								}
							],
							"name": "propose",
							"outputs": [],
							"payable": true,
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_candidate",
									"type": "address"
								},
								{
									"name": "_cap",
									"type": "uint256"
								}
							],
							"name": "unvote",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getCandidates",
							"outputs": [
								{
									"name": "",
									"type": "address[]"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_blockNumber",
									"type": "uint256"
								}
							],
							"name": "getWithdrawCap",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_candidate",
									"type": "address"
								}
							],
							"name": "getVoters",
							"outputs": [
								{
									"name": "",
									"type": "address[]"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getWithdrawBlockNumbers",
							"outputs": [
								{
									"name": "",
									"type": "uint256[]"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_candidate",
									"type": "address"
								},
								{
									"name": "_voter",
									"type": "address"
								}
							],
							"name": "getVoterCap",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"name": "candidates",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_blockNumber",
									"type": "uint256"
								},
								{
									"name": "_index",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_candidate",
									"type": "address"
								}
							],
							"name": "getCandidateCap",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_candidate",
									"type": "address"
								}
							],
							"name": "vote",
							"outputs": [],
							"payable": true,
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "candidateCount",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "voterWithdrawDelay",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_candidate",
									"type": "address"
								}
							],
							"name": "resign",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_candidate",
									"type": "address"
								}
							],
							"name": "getCandidateOwner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "maxValidatorNumber",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "candidateWithdrawDelay",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_candidate",
									"type": "address"
								}
							],
							"name": "isCandidate",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "minCandidateCap",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "minVoterCap",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"name": "_candidates",
									"type": "address[]"
								},
								{
									"name": "_caps",
									"type": "uint256[]"
								},
								{
									"name": "_firstOwner",
									"type": "address"
								},
								{
									"name": "_minCandidateCap",
									"type": "uint256"
								},
								{
									"name": "_minVoterCap",
									"type": "uint256"
								},
								{
									"name": "_maxValidatorNumber",
									"type": "uint256"
								},
								{
									"name": "_candidateWithdrawDelay",
									"type": "uint256"
								},
								{
									"name": "_voterWithdrawDelay",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "_voter",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "_candidate",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "_cap",
									"type": "uint256"
								}
							],
							"name": "Vote",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "_voter",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "_candidate",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "_cap",
									"type": "uint256"
								}
							],
							"name": "Unvote",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "_candidate",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "_cap",
									"type": "uint256"
								}
							],
							"name": "Propose",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "_candidate",
									"type": "address"
								}
							],
							"name": "Resign",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "_blockNumber",
									"type": "uint256"
								},
								{
									"indexed": false,
									"name": "_cap",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/ss.sol\":1147:8922  contract WethioValidator {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/ss.sol\":2013:2014  0 */\n  0x0\n    /* \"contracts/ss.sol\":1981:2014  uint256 public candidateCount = 0 */\n  0x4\n  sstore\n    /* \"contracts/ss.sol\":3627:4652  function WethioValidator (... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/ss.sol\":3627:4652  function WethioValidator (... */\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  dup1\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  dup3\n  add\n  swap3\n  swap2\n  swap1\n  0x20\n  add\n  dup1\n  mload\n  dup3\n  add\n  swap3\n  swap2\n  swap1\n  0x20\n  add\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"contracts/ss.sol\":4229:4238  uint256 i */\n  0x0\n    /* \"contracts/ss.sol\":3958:3974  _minCandidateCap */\n  dup6\n    /* \"contracts/ss.sol\":3940:3955  minCandidateCap */\n  0x5\n    /* \"contracts/ss.sol\":3940:3974  minCandidateCap = _minCandidateCap */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/ss.sol\":3998:4010  _minVoterCap */\n  dup5\n    /* \"contracts/ss.sol\":3984:3995  minVoterCap */\n  0x6\n    /* \"contracts/ss.sol\":3984:4010  minVoterCap = _minVoterCap */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/ss.sol\":4041:4060  _maxValidatorNumber */\n  dup4\n    /* \"contracts/ss.sol\":4020:4038  maxValidatorNumber */\n  0x7\n    /* \"contracts/ss.sol\":4020:4060  maxValidatorNumber = _maxValidatorNumber */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/ss.sol\":4095:4118  _candidateWithdrawDelay */\n  dup3\n    /* \"contracts/ss.sol\":4070:4092  candidateWithdrawDelay */\n  0x8\n    /* \"contracts/ss.sol\":4070:4118  candidateWithdrawDelay = _candidateWithdrawDelay */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/ss.sol\":4149:4168  _voterWithdrawDelay */\n  dup2\n    /* \"contracts/ss.sol\":4128:4146  voterWithdrawDelay */\n  0x9\n    /* \"contracts/ss.sol\":4128:4168  voterWithdrawDelay = _voterWithdrawDelay */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/ss.sol\":4195:4206  _candidates */\n  dup9\n    /* \"contracts/ss.sol\":4195:4213  _candidates.length */\n  mload\n    /* \"contracts/ss.sol\":4178:4192  candidateCount */\n  0x4\n    /* \"contracts/ss.sol\":4178:4213  candidateCount = _candidates.length */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/ss.sol\":4241:4242  0 */\n  0x0\n    /* \"contracts/ss.sol\":4229:4242  uint256 i = 0 */\n  swap1\n  pop\n    /* \"contracts/ss.sol\":4224:4646  for (uint256 i = 0; i < _candidates.length; i++) {... */\ntag_4:\n    /* \"contracts/ss.sol\":4248:4259  _candidates */\n  dup9\n    /* \"contracts/ss.sol\":4248:4266  _candidates.length */\n  mload\n    /* \"contracts/ss.sol\":4244:4245  i */\n  dup2\n    /* \"contracts/ss.sol\":4244:4266  i < _candidates.length */\n  lt\n    /* \"contracts/ss.sol\":4224:4646  for (uint256 i = 0; i < _candidates.length; i++) {... */\n  iszero\n  tag_5\n  jumpi\n    /* \"contracts/ss.sol\":4287:4297  candidates */\n  0x3\n    /* \"contracts/ss.sol\":4303:4314  _candidates */\n  dup10\n    /* \"contracts/ss.sol\":4315:4316  i */\n  dup3\n    /* \"contracts/ss.sol\":4303:4317  _candidates[i] */\n  dup2\n  mload\n  dup2\n  lt\n  iszero\n  iszero\n  tag_7\n  jumpi\n  invalid\ntag_7:\n  swap1\n  0x20\n  add\n  swap1\n  0x20\n  mul\n  add\n  mload\n    /* \"contracts/ss.sol\":4287:4318  candidates.push(_candidates[i]) */\n  swap1\n  dup1\n    /* \"--CODEGEN--\":39:40   */\n  0x1\n    /* \"--CODEGEN--\":33:36   */\n  dup2\n    /* \"--CODEGEN--\":27:37   */\n  sload\n    /* \"--CODEGEN--\":23:41   */\n  add\n    /* \"--CODEGEN--\":57:67   */\n  dup1\n    /* \"--CODEGEN--\":52:55   */\n  dup3\n    /* \"--CODEGEN--\":45:68   */\n  sstore\n    /* \"--CODEGEN--\":79:89   */\n  dup1\n    /* \"--CODEGEN--\":72:89   */\n  swap2\n  pop\n    /* \"--CODEGEN--\":0:93   */\n  pop\n    /* \"contracts/ss.sol\":4287:4318  candidates.push(_candidates[i]) */\n  swap1\n  0x1\n  dup3\n  sub\n  swap1\n  0x0\n  mstore\n  keccak256(0x0, 0x20)\n  add\n  0x0\n  swap1\n  swap2\n  swap3\n  swap1\n  swap2\n  swap1\n  swap2\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n  pop\n    /* \"contracts/ss.sol\":4366:4498  ValidatorState({... */\n  0x60\n  mload(0x40)\n  swap1\n  dup2\n  add\n  0x40\n  mstore\n  dup1\n    /* \"contracts/ss.sol\":4406:4417  _firstOwner */\n  dup9\n    /* \"contracts/ss.sol\":4366:4498  ValidatorState({... */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n    /* \"contracts/ss.sol\":4448:4452  true */\n  0x1\n    /* \"contracts/ss.sol\":4366:4498  ValidatorState({... */\n  iszero\n  iszero\n  dup2\n  mstore\n  0x20\n  add\n    /* \"contracts/ss.sol\":4475:4480  _caps */\n  dup10\n    /* \"contracts/ss.sol\":4481:4482  i */\n  dup4\n    /* \"contracts/ss.sol\":4475:4483  _caps[i] */\n  dup2\n  mload\n  dup2\n  lt\n  iszero\n  iszero\n  tag_9\n  jumpi\n  invalid\ntag_9:\n  swap1\n  0x20\n  add\n  swap1\n  0x20\n  mul\n  add\n  mload\n    /* \"contracts/ss.sol\":4366:4498  ValidatorState({... */\n  dup2\n  mstore\n  pop\n    /* \"contracts/ss.sol\":4332:4347  validatorsState */\n  0x1\n    /* \"contracts/ss.sol\":4332:4363  validatorsState[_candidates[i]] */\n  0x0\n    /* \"contracts/ss.sol\":4348:4359  _candidates */\n  dup12\n    /* \"contracts/ss.sol\":4360:4361  i */\n  dup5\n    /* \"contracts/ss.sol\":4348:4362  _candidates[i] */\n  dup2\n  mload\n  dup2\n  lt\n  iszero\n  iszero\n  tag_10\n  jumpi\n  invalid\ntag_10:\n  swap1\n  0x20\n  add\n  swap1\n  0x20\n  mul\n  add\n  mload\n    /* \"contracts/ss.sol\":4332:4363  validatorsState[_candidates[i]] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x0\n  keccak256\n    /* \"contracts/ss.sol\":4332:4498  validatorsState[_candidates[i]] = ValidatorState({... */\n  0x0\n  dup3\n  add\n  mload\n  dup2\n  0x0\n  add\n  exp(0x100, 0x0)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n  0x20\n  dup3\n  add\n  mload\n  dup2\n  0x0\n  add\n  exp(0x100, 0x14)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n  0x40\n  dup3\n  add\n  mload\n  dup2\n  0x1\n  add\n  sstore\n  swap1\n  pop\n  pop\n    /* \"contracts/ss.sol\":4512:4518  voters */\n  0x2\n    /* \"contracts/ss.sol\":4512:4534  voters[_candidates[i]] */\n  0x0\n    /* \"contracts/ss.sol\":4519:4530  _candidates */\n  dup11\n    /* \"contracts/ss.sol\":4531:4532  i */\n  dup4\n    /* \"contracts/ss.sol\":4519:4533  _candidates[i] */\n  dup2\n  mload\n  dup2\n  lt\n  iszero\n  iszero\n  tag_11\n  jumpi\n  invalid\ntag_11:\n  swap1\n  0x20\n  add\n  swap1\n  0x20\n  mul\n  add\n  mload\n    /* \"contracts/ss.sol\":4512:4534  voters[_candidates[i]] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x0\n  keccak256\n    /* \"contracts/ss.sol\":4540:4551  _firstOwner */\n  dup8\n    /* \"contracts/ss.sol\":4512:4552  voters[_candidates[i]].push(_firstOwner) */\n  swap1\n  dup1\n    /* \"--CODEGEN--\":39:40   */\n  0x1\n    /* \"--CODEGEN--\":33:36   */\n  dup2\n    /* \"--CODEGEN--\":27:37   */\n  sload\n    /* \"--CODEGEN--\":23:41   */\n  add\n    /* \"--CODEGEN--\":57:67   */\n  dup1\n    /* \"--CODEGEN--\":52:55   */\n  dup3\n    /* \"--CODEGEN--\":45:68   */\n  sstore\n    /* \"--CODEGEN--\":79:89   */\n  dup1\n    /* \"--CODEGEN--\":72:89   */\n  swap2\n  pop\n    /* \"--CODEGEN--\":0:93   */\n  pop\n    /* \"contracts/ss.sol\":4512:4552  voters[_candidates[i]].push(_firstOwner) */\n  swap1\n  0x1\n  dup3\n  sub\n  swap1\n  0x0\n  mstore\n  keccak256(0x0, 0x20)\n  add\n  0x0\n  swap1\n  swap2\n  swap3\n  swap1\n  swap2\n  swap1\n  swap2\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n  pop\n    /* \"contracts/ss.sol\":4620:4635  minCandidateCap */\n  sload(0x5)\n    /* \"contracts/ss.sol\":4566:4581  validatorsState */\n  0x1\n    /* \"contracts/ss.sol\":4566:4597  validatorsState[_candidates[i]] */\n  0x0\n    /* \"contracts/ss.sol\":4582:4593  _candidates */\n  dup12\n    /* \"contracts/ss.sol\":4594:4595  i */\n  dup5\n    /* \"contracts/ss.sol\":4582:4596  _candidates[i] */\n  dup2\n  mload\n  dup2\n  lt\n  iszero\n  iszero\n  tag_13\n  jumpi\n  invalid\ntag_13:\n  swap1\n  0x20\n  add\n  swap1\n  0x20\n  mul\n  add\n  mload\n    /* \"contracts/ss.sol\":4566:4597  validatorsState[_candidates[i]] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x0\n  keccak256\n    /* \"contracts/ss.sol\":4566:4604  validatorsState[_candidates[i]].voters */\n  0x2\n  add\n    /* \"contracts/ss.sol\":4566:4617  validatorsState[_candidates[i]].voters[_firstOwner] */\n  0x0\n    /* \"contracts/ss.sol\":4605:4616  _firstOwner */\n  dup10\n    /* \"contracts/ss.sol\":4566:4617  validatorsState[_candidates[i]].voters[_firstOwner] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x0\n  keccak256\n    /* \"contracts/ss.sol\":4566:4635  validatorsState[_candidates[i]].voters[_firstOwner] = minCandidateCap */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/ss.sol\":4268:4271  i++ */\n  dup1\n  dup1\n  0x1\n  add\n  swap2\n  pop\n  pop\n    /* \"contracts/ss.sol\":4224:4646  for (uint256 i = 0; i < _candidates.length; i++) {... */\n  jump(tag_4)\ntag_5:\n    /* \"contracts/ss.sol\":3627:4652  function WethioValidator (... */\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/ss.sol\":1147:8922  contract WethioValidator {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ss.sol\":1147:8922  contract WethioValidator {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x1267951\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x2aa9be2\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x6a49fce\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x15febd68\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2d15cc04\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x2f9c4bba\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x302b6872\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x3477ee2e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x441a3e70\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x58e7525f\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x6dd7d8ea\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa9a981a3\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa9ff959e\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xae6e43f5\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xb642facd\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xd09f1ab4\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xd161c767\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xd51b9e93\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xd55b7dff\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xf8ac9dd5\n      eq\n      tag_21\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"contracts/ss.sol\":4658:5297  function propose(address _candidate) external payable onlyValidCandidateCap onlyNotCandidate(_candidate) {... */\n    tag_2:\n      tag_22\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_23)\n    tag_22:\n      stop\n        /* \"contracts/ss.sol\":6873:7539  function unvote(address _candidate, uint256 _cap) public onlyValidVote(_candidate, _cap) {... */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_24\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_24:\n        /* \"contracts/ss.sol\":6873:7539  function unvote(address _candidate, uint256 _cap) public onlyValidVote(_candidate, _cap) {... */\n      pop\n      tag_25\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_26)\n    tag_25:\n      stop\n        /* \"contracts/ss.sol\":5806:5896  function getCandidates() public view returns(address[]) {... */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_27\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_27:\n        /* \"contracts/ss.sol\":5806:5896  function getCandidates() public view returns(address[]) {... */\n      pop\n      tag_28\n      jump(tag_29)\n    tag_28:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x0\n        /* \"--CODEGEN--\":8:108   */\n    tag_30:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_31\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_30)\n    tag_31:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/ss.sol\":5806:5896  function getCandidates() public view returns(address[]) {... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ss.sol\":6723:6867  function getWithdrawCap(uint256 _blockNumber) public view returns(uint256) {... */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_33\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_33:\n        /* \"contracts/ss.sol\":6723:6867  function getWithdrawCap(uint256 _blockNumber) public view returns(uint256) {... */\n      pop\n      tag_34\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_35)\n    tag_34:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ss.sol\":6334:6446  function getVoters(address _candidate) public view returns(address[]) {... */\n    tag_6:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_36\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_36:\n        /* \"contracts/ss.sol\":6334:6446  function getVoters(address _candidate) public view returns(address[]) {... */\n      pop\n      tag_37\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_38)\n    tag_37:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x0\n        /* \"--CODEGEN--\":8:108   */\n    tag_39:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_40\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_39)\n    tag_40:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/ss.sol\":6334:6446  function getVoters(address _candidate) public view returns(address[]) {... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ss.sol\":6588:6717  function getWithdrawBlockNumbers() public view returns(uint256[]) {... */\n    tag_7:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_42\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_42:\n        /* \"contracts/ss.sol\":6588:6717  function getWithdrawBlockNumbers() public view returns(uint256[]) {... */\n      pop\n      tag_43\n      jump(tag_44)\n    tag_43:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x0\n        /* \"--CODEGEN--\":8:108   */\n    tag_45:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_46\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_45)\n    tag_46:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/ss.sol\":6588:6717  function getWithdrawBlockNumbers() public view returns(uint256[]) {... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ss.sol\":6176:6328  function getVoterCap(address _candidate, address _voter) public view returns(uint256) {... */\n    tag_8:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_48\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_48:\n        /* \"contracts/ss.sol\":6176:6328  function getVoterCap(address _candidate, address _voter) public view returns(uint256) {... */\n      pop\n      tag_49\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_50)\n    tag_49:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ss.sol\":1947:1974  address[] public candidates */\n    tag_9:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_51\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_51:\n        /* \"contracts/ss.sol\":1947:1974  address[] public candidates */\n      pop\n      tag_52\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_53)\n    tag_52:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ss.sol\":8530:8920  function withdraw(uint256 _blockNumber, uint _index) public onlyValidWithdraw(_blockNumber, _index) {... */\n    tag_10:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_54\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_54:\n        /* \"contracts/ss.sol\":8530:8920  function withdraw(uint256 _blockNumber, uint _index) public onlyValidWithdraw(_blockNumber, _index) {... */\n      pop\n      tag_55\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_56)\n    tag_55:\n      stop\n        /* \"contracts/ss.sol\":5902:6031  function getCandidateCap(address _candidate) public view returns(uint256) {... */\n    tag_11:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_57\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_57:\n        /* \"contracts/ss.sol\":5902:6031  function getCandidateCap(address _candidate) public view returns(uint256) {... */\n      pop\n      tag_58\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_59)\n    tag_58:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ss.sol\":5303:5800  function vote(address _candidate) external payable onlyValidVoterCap onlyValidCandidate(_candidate) {... */\n    tag_12:\n      tag_60\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_61)\n    tag_60:\n      stop\n        /* \"contracts/ss.sol\":1981:2014  uint256 public candidateCount = 0 */\n    tag_13:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_62\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_62:\n        /* \"contracts/ss.sol\":1981:2014  uint256 public candidateCount = 0 */\n      pop\n      tag_63\n      jump(tag_64)\n    tag_63:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ss.sol\":2170:2203  uint256 public voterWithdrawDelay */\n    tag_14:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_65\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_65:\n        /* \"contracts/ss.sol\":2170:2203  uint256 public voterWithdrawDelay */\n      pop\n      tag_66\n      jump(tag_67)\n    tag_66:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ss.sol\":7545:8524  function resign(address _candidate) public onlyOwner(_candidate) onlyCandidate(_candidate) {... */\n    tag_15:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_68\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_68:\n        /* \"contracts/ss.sol\":7545:8524  function resign(address _candidate) public onlyOwner(_candidate) onlyCandidate(_candidate) {... */\n      pop\n      tag_69\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_70)\n    tag_69:\n      stop\n        /* \"contracts/ss.sol\":6037:6170  function getCandidateOwner(address _candidate) public view returns(address) {... */\n    tag_16:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_71\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_71:\n        /* \"contracts/ss.sol\":6037:6170  function getCandidateOwner(address _candidate) public view returns(address) {... */\n      pop\n      tag_72\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_73)\n    tag_72:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ss.sol\":2088:2121  uint256 public maxValidatorNumber */\n    tag_17:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_74\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_74:\n        /* \"contracts/ss.sol\":2088:2121  uint256 public maxValidatorNumber */\n      pop\n      tag_75\n      jump(tag_76)\n    tag_75:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ss.sol\":2127:2164  uint256 public candidateWithdrawDelay */\n    tag_18:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_77\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_77:\n        /* \"contracts/ss.sol\":2127:2164  uint256 public candidateWithdrawDelay */\n      pop\n      tag_78\n      jump(tag_79)\n    tag_78:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ss.sol\":6452:6582  function isCandidate(address _candidate) public view returns(bool) {... */\n    tag_19:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_80\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_80:\n        /* \"contracts/ss.sol\":6452:6582  function isCandidate(address _candidate) public view returns(bool) {... */\n      pop\n      tag_81\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_82)\n    tag_81:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ss.sol\":2020:2050  uint256 public minCandidateCap */\n    tag_20:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_83\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_83:\n        /* \"contracts/ss.sol\":2020:2050  uint256 public minCandidateCap */\n      pop\n      tag_84\n      jump(tag_85)\n    tag_84:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ss.sol\":2056:2082  uint256 public minVoterCap */\n    tag_21:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_86\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_86:\n        /* \"contracts/ss.sol\":2056:2082  uint256 public minVoterCap */\n      pop\n      tag_87\n      jump(tag_88)\n    tag_87:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ss.sol\":4658:5297  function propose(address _candidate) external payable onlyValidCandidateCap onlyNotCandidate(_candidate) {... */\n    tag_23:\n        /* \"contracts/ss.sol\":4773:4784  uint256 cap */\n      0x0\n        /* \"contracts/ss.sol\":2333:2348  minCandidateCap */\n      sload(0x5)\n        /* \"contracts/ss.sol\":2320:2329  msg.value */\n      callvalue\n        /* \"contracts/ss.sol\":2320:2348  msg.value >= minCandidateCap */\n      lt\n      iszero\n        /* \"contracts/ss.sol\":2312:2349  require(msg.value >= minCandidateCap) */\n      iszero\n      iszero\n      tag_90\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_90:\n        /* \"contracts/ss.sol\":4751:4761  _candidate */\n      dup2\n        /* \"contracts/ss.sol\":2918:2933  validatorsState */\n      0x1\n        /* \"contracts/ss.sol\":2918:2945  validatorsState[_candidate] */\n      0x0\n        /* \"contracts/ss.sol\":2934:2944  _candidate */\n      dup3\n        /* \"contracts/ss.sol\":2918:2945  validatorsState[_candidate] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/ss.sol\":2918:2957  validatorsState[_candidate].isCandidate */\n      0x0\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/ss.sol\":2917:2957  !validatorsState[_candidate].isCandidate */\n      iszero\n        /* \"contracts/ss.sol\":2909:2958  require(!validatorsState[_candidate].isCandidate) */\n      iszero\n      iszero\n      tag_92\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_92:\n        /* \"contracts/ss.sol\":4787:4833  validatorsState[_candidate].cap.add(msg.value) */\n      tag_94\n        /* \"contracts/ss.sol\":4823:4832  msg.value */\n      callvalue\n        /* \"contracts/ss.sol\":4787:4802  validatorsState */\n      0x1\n        /* \"contracts/ss.sol\":4787:4814  validatorsState[_candidate] */\n      0x0\n        /* \"contracts/ss.sol\":4803:4813  _candidate */\n      dup7\n        /* \"contracts/ss.sol\":4787:4814  validatorsState[_candidate] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/ss.sol\":4787:4818  validatorsState[_candidate].cap */\n      0x1\n      add\n      sload\n        /* \"contracts/ss.sol\":4787:4822  validatorsState[_candidate].cap.add */\n      tag_95\n      swap1\n        /* \"contracts/ss.sol\":4787:4833  validatorsState[_candidate].cap.add(msg.value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_94:\n        /* \"contracts/ss.sol\":4773:4833  uint256 cap = validatorsState[_candidate].cap.add(msg.value) */\n      swap2\n      pop\n        /* \"contracts/ss.sol\":4843:4853  candidates */\n      0x3\n        /* \"contracts/ss.sol\":4859:4869  _candidate */\n      dup4\n        /* \"contracts/ss.sol\":4843:4870  candidates.push(_candidate) */\n      swap1\n      dup1\n        /* \"--CODEGEN--\":39:40   */\n      0x1\n        /* \"--CODEGEN--\":33:36   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      sload\n        /* \"--CODEGEN--\":23:41   */\n      add\n        /* \"--CODEGEN--\":57:67   */\n      dup1\n        /* \"--CODEGEN--\":52:55   */\n      dup3\n        /* \"--CODEGEN--\":45:68   */\n      sstore\n        /* \"--CODEGEN--\":79:89   */\n      dup1\n        /* \"--CODEGEN--\":72:89   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":0:93   */\n      pop\n        /* \"contracts/ss.sol\":4843:4870  candidates.push(_candidate) */\n      swap1\n      0x1\n      dup3\n      sub\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      add\n      0x0\n      swap1\n      swap2\n      swap3\n      swap1\n      swap2\n      swap1\n      swap2\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      pop\n        /* \"contracts/ss.sol\":4910:5020  ValidatorState({... */\n      0x60\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/ss.sol\":4946:4956  msg.sender */\n      caller\n        /* \"contracts/ss.sol\":4910:5020  ValidatorState({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/ss.sol\":4983:4987  true */\n      0x1\n        /* \"contracts/ss.sol\":4910:5020  ValidatorState({... */\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/ss.sol\":5006:5009  cap */\n      dup4\n        /* \"contracts/ss.sol\":4910:5020  ValidatorState({... */\n      dup2\n      mstore\n      pop\n        /* \"contracts/ss.sol\":4880:4895  validatorsState */\n      0x1\n        /* \"contracts/ss.sol\":4880:4907  validatorsState[_candidate] */\n      0x0\n        /* \"contracts/ss.sol\":4896:4906  _candidate */\n      dup6\n        /* \"contracts/ss.sol\":4880:4907  validatorsState[_candidate] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/ss.sol\":4880:5020  validatorsState[_candidate] = ValidatorState({... */\n      0x0\n      dup3\n      add\n      mload\n      dup2\n      0x0\n      add\n      exp(0x100, 0x0)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x0\n      add\n      exp(0x100, 0x14)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x1\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"contracts/ss.sol\":5079:5140  validatorsState[_candidate].voters[msg.sender].add(msg.value) */\n      tag_97\n        /* \"contracts/ss.sol\":5130:5139  msg.value */\n      callvalue\n        /* \"contracts/ss.sol\":5079:5094  validatorsState */\n      0x1\n        /* \"contracts/ss.sol\":5079:5106  validatorsState[_candidate] */\n      0x0\n        /* \"contracts/ss.sol\":5095:5105  _candidate */\n      dup7\n        /* \"contracts/ss.sol\":5079:5106  validatorsState[_candidate] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/ss.sol\":5079:5113  validatorsState[_candidate].voters */\n      0x2\n      add\n        /* \"contracts/ss.sol\":5079:5125  validatorsState[_candidate].voters[msg.sender] */\n      0x0\n        /* \"contracts/ss.sol\":5114:5124  msg.sender */\n      caller\n        /* \"contracts/ss.sol\":5079:5125  validatorsState[_candidate].voters[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/ss.sol\":5079:5129  validatorsState[_candidate].voters[msg.sender].add */\n      tag_95\n      swap1\n        /* \"contracts/ss.sol\":5079:5140  validatorsState[_candidate].voters[msg.sender].add(msg.value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_97:\n        /* \"contracts/ss.sol\":5030:5045  validatorsState */\n      0x1\n        /* \"contracts/ss.sol\":5030:5057  validatorsState[_candidate] */\n      0x0\n        /* \"contracts/ss.sol\":5046:5056  _candidate */\n      dup6\n        /* \"contracts/ss.sol\":5030:5057  validatorsState[_candidate] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/ss.sol\":5030:5064  validatorsState[_candidate].voters */\n      0x2\n      add\n        /* \"contracts/ss.sol\":5030:5076  validatorsState[_candidate].voters[msg.sender] */\n      0x0\n        /* \"contracts/ss.sol\":5065:5075  msg.sender */\n      caller\n        /* \"contracts/ss.sol\":5030:5076  validatorsState[_candidate].voters[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/ss.sol\":5030:5140  validatorsState[_candidate].voters[msg.sender] = validatorsState[_candidate].voters[msg.sender].add(msg.value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ss.sol\":5167:5188  candidateCount.add(1) */\n      tag_98\n        /* \"contracts/ss.sol\":5186:5187  1 */\n      0x1\n        /* \"contracts/ss.sol\":5167:5181  candidateCount */\n      sload(0x4)\n        /* \"contracts/ss.sol\":5167:5185  candidateCount.add */\n      tag_95\n      swap1\n        /* \"contracts/ss.sol\":5167:5188  candidateCount.add(1) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_98:\n        /* \"contracts/ss.sol\":5150:5164  candidateCount */\n      0x4\n        /* \"contracts/ss.sol\":5150:5188  candidateCount = candidateCount.add(1) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ss.sol\":5198:5204  voters */\n      0x2\n        /* \"contracts/ss.sol\":5198:5216  voters[_candidate] */\n      0x0\n        /* \"contracts/ss.sol\":5205:5215  _candidate */\n      dup5\n        /* \"contracts/ss.sol\":5198:5216  voters[_candidate] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/ss.sol\":5222:5232  msg.sender */\n      caller\n        /* \"contracts/ss.sol\":5198:5233  voters[_candidate].push(msg.sender) */\n      swap1\n      dup1\n        /* \"--CODEGEN--\":39:40   */\n      0x1\n        /* \"--CODEGEN--\":33:36   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      sload\n        /* \"--CODEGEN--\":23:41   */\n      add\n        /* \"--CODEGEN--\":57:67   */\n      dup1\n        /* \"--CODEGEN--\":52:55   */\n      dup3\n        /* \"--CODEGEN--\":45:68   */\n      sstore\n        /* \"--CODEGEN--\":79:89   */\n      dup1\n        /* \"--CODEGEN--\":72:89   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":0:93   */\n      pop\n        /* \"contracts/ss.sol\":5198:5233  voters[_candidate].push(msg.sender) */\n      swap1\n      0x1\n      dup3\n      sub\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      add\n      0x0\n      swap1\n      swap2\n      swap3\n      swap1\n      swap2\n      swap1\n      swap2\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      pop\n        /* \"contracts/ss.sol\":5248:5290  Propose(msg.sender, _candidate, msg.value) */\n      0x7635f1d87b47fba9f2b09e56eb4be75cca030e0cb179c1602ac9261d39a8f5c1\n        /* \"contracts/ss.sol\":5256:5266  msg.sender */\n      caller\n        /* \"contracts/ss.sol\":5268:5278  _candidate */\n      dup5\n        /* \"contracts/ss.sol\":5280:5289  msg.value */\n      callvalue\n        /* \"contracts/ss.sol\":5248:5290  Propose(msg.sender, _candidate, msg.value) */\n      mload(0x40)\n      dup1\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/ss.sol\":2359:2360  _ */\n      pop\n        /* \"contracts/ss.sol\":4658:5297  function propose(address _candidate) external payable onlyValidCandidateCap onlyNotCandidate(_candidate) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ss.sol\":6873:7539  function unvote(address _candidate, uint256 _cap) public onlyValidVote(_candidate, _cap) {... */\n    tag_26:\n        /* \"contracts/ss.sol\":7212:7239  uint256 withdrawBlockNumber */\n      0x0\n        /* \"contracts/ss.sol\":6944:6954  _candidate */\n      dup3\n        /* \"contracts/ss.sol\":6956:6960  _cap */\n      dup3\n        /* \"contracts/ss.sol\":3108:3112  _cap */\n      dup1\n        /* \"contracts/ss.sol\":3058:3073  validatorsState */\n      0x1\n        /* \"contracts/ss.sol\":3058:3085  validatorsState[_candidate] */\n      0x0\n        /* \"contracts/ss.sol\":3074:3084  _candidate */\n      dup5\n        /* \"contracts/ss.sol\":3058:3085  validatorsState[_candidate] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/ss.sol\":3058:3092  validatorsState[_candidate].voters */\n      0x2\n      add\n        /* \"contracts/ss.sol\":3058:3104  validatorsState[_candidate].voters[msg.sender] */\n      0x0\n        /* \"contracts/ss.sol\":3093:3103  msg.sender */\n      caller\n        /* \"contracts/ss.sol\":3058:3104  validatorsState[_candidate].voters[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/ss.sol\":3058:3112  validatorsState[_candidate].voters[msg.sender] >= _cap */\n      lt\n      iszero\n        /* \"contracts/ss.sol\":3050:3113  require(validatorsState[_candidate].voters[msg.sender] >= _cap) */\n      iszero\n      iszero\n      tag_101\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_101:\n        /* \"contracts/ss.sol\":3164:3174  msg.sender */\n      caller\n        /* \"contracts/ss.sol\":3127:3174  validatorsState[_candidate].owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ss.sol\":3127:3142  validatorsState */\n      0x1\n        /* \"contracts/ss.sol\":3127:3154  validatorsState[_candidate] */\n      0x0\n        /* \"contracts/ss.sol\":3143:3153  _candidate */\n      dup5\n        /* \"contracts/ss.sol\":3127:3154  validatorsState[_candidate] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/ss.sol\":3127:3160  validatorsState[_candidate].owner */\n      0x0\n      add\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ss.sol\":3127:3174  validatorsState[_candidate].owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ss.sol\":3123:3285  if (validatorsState[_candidate].owner == msg.sender) {... */\n      iszero\n      tag_102\n      jumpi\n        /* \"contracts/ss.sol\":3258:3273  minCandidateCap */\n      sload(0x5)\n        /* \"contracts/ss.sol\":3198:3254  validatorsState[_candidate].voters[msg.sender].sub(_cap) */\n      tag_103\n        /* \"contracts/ss.sol\":3249:3253  _cap */\n      dup3\n        /* \"contracts/ss.sol\":3198:3213  validatorsState */\n      0x1\n        /* \"contracts/ss.sol\":3198:3225  validatorsState[_candidate] */\n      0x0\n        /* \"contracts/ss.sol\":3214:3224  _candidate */\n      dup7\n        /* \"contracts/ss.sol\":3198:3225  validatorsState[_candidate] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/ss.sol\":3198:3232  validatorsState[_candidate].voters */\n      0x2\n      add\n        /* \"contracts/ss.sol\":3198:3244  validatorsState[_candidate].voters[msg.sender] */\n      0x0\n        /* \"contracts/ss.sol\":3233:3243  msg.sender */\n      caller\n        /* \"contracts/ss.sol\":3198:3244  validatorsState[_candidate].voters[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/ss.sol\":3198:3248  validatorsState[_candidate].voters[msg.sender].sub */\n      tag_104\n      swap1\n        /* \"contracts/ss.sol\":3198:3254  validatorsState[_candidate].voters[msg.sender].sub(_cap) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_103:\n        /* \"contracts/ss.sol\":3198:3273  validatorsState[_candidate].voters[msg.sender].sub(_cap) >= minCandidateCap */\n      lt\n      iszero\n        /* \"contracts/ss.sol\":3190:3274  require(validatorsState[_candidate].voters[msg.sender].sub(_cap) >= minCandidateCap) */\n      iszero\n      iszero\n      tag_105\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_105:\n        /* \"contracts/ss.sol\":3123:3285  if (validatorsState[_candidate].owner == msg.sender) {... */\n    tag_102:\n        /* \"contracts/ss.sol\":7006:7047  validatorsState[_candidate].cap.sub(_cap) */\n      tag_107\n        /* \"contracts/ss.sol\":7042:7046  _cap */\n      dup5\n        /* \"contracts/ss.sol\":7006:7021  validatorsState */\n      0x1\n        /* \"contracts/ss.sol\":7006:7033  validatorsState[_candidate] */\n      0x0\n        /* \"contracts/ss.sol\":7022:7032  _candidate */\n      dup9\n        /* \"contracts/ss.sol\":7006:7033  validatorsState[_candidate] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/ss.sol\":7006:7037  validatorsState[_candidate].cap */\n      0x1\n      add\n      sload\n        /* \"contracts/ss.sol\":7006:7041  validatorsState[_candidate].cap.sub */\n      tag_104\n      swap1\n        /* \"contracts/ss.sol\":7006:7047  validatorsState[_candidate].cap.sub(_cap) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_107:\n        /* \"contracts/ss.sol\":6972:6987  validatorsState */\n      0x1\n        /* \"contracts/ss.sol\":6972:6999  validatorsState[_candidate] */\n      0x0\n        /* \"contracts/ss.sol\":6988:6998  _candidate */\n      dup8\n        /* \"contracts/ss.sol\":6972:6999  validatorsState[_candidate] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/ss.sol\":6972:7003  validatorsState[_candidate].cap */\n      0x1\n      add\n        /* \"contracts/ss.sol\":6972:7047  validatorsState[_candidate].cap = validatorsState[_candidate].cap.sub(_cap) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ss.sol\":7106:7162  validatorsState[_candidate].voters[msg.sender].sub(_cap) */\n      tag_108\n        /* \"contracts/ss.sol\":7157:7161  _cap */\n      dup5\n        /* \"contracts/ss.sol\":7106:7121  validatorsState */\n      0x1\n        /* \"contracts/ss.sol\":7106:7133  validatorsState[_candidate] */\n      0x0\n        /* \"contracts/ss.sol\":7122:7132  _candidate */\n      dup9\n        /* \"contracts/ss.sol\":7106:7133  validatorsState[_candidate] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/ss.sol\":7106:7140  validatorsState[_candidate].voters */\n      0x2\n      add\n        /* \"contracts/ss.sol\":7106:7152  validatorsState[_candidate].voters[msg.sender] */\n      0x0\n        /* \"contracts/ss.sol\":7141:7151  msg.sender */\n      caller\n        /* \"contracts/ss.sol\":7106:7152  validatorsState[_candidate].voters[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/ss.sol\":7106:7156  validatorsState[_candidate].voters[msg.sender].sub */\n      tag_104\n      swap1\n        /* \"contracts/ss.sol\":7106:7162  validatorsState[_candidate].voters[msg.sender].sub(_cap) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_108:\n        /* \"contracts/ss.sol\":7057:7072  validatorsState */\n      0x1\n        /* \"contracts/ss.sol\":7057:7084  validatorsState[_candidate] */\n      0x0\n        /* \"contracts/ss.sol\":7073:7083  _candidate */\n      dup8\n        /* \"contracts/ss.sol\":7057:7084  validatorsState[_candidate] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/ss.sol\":7057:7091  validatorsState[_candidate].voters */\n      0x2\n      add\n        /* \"contracts/ss.sol\":7057:7103  validatorsState[_candidate].voters[msg.sender] */\n      0x0\n        /* \"contracts/ss.sol\":7092:7102  msg.sender */\n      caller\n        /* \"contracts/ss.sol\":7057:7103  validatorsState[_candidate].voters[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/ss.sol\":7057:7162  validatorsState[_candidate].voters[msg.sender] = validatorsState[_candidate].voters[msg.sender].sub(_cap) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ss.sol\":7242:7278  voterWithdrawDelay.add(block.number) */\n      tag_109\n        /* \"contracts/ss.sol\":7265:7277  block.number */\n      number\n        /* \"contracts/ss.sol\":7242:7260  voterWithdrawDelay */\n      sload(0x9)\n        /* \"contracts/ss.sol\":7242:7264  voterWithdrawDelay.add */\n      tag_95\n      swap1\n        /* \"contracts/ss.sol\":7242:7278  voterWithdrawDelay.add(block.number) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_109:\n        /* \"contracts/ss.sol\":7212:7278  uint256 withdrawBlockNumber = voterWithdrawDelay.add(block.number) */\n      swap3\n      pop\n        /* \"contracts/ss.sol\":7343:7405  withdrawsState[msg.sender].caps[withdrawBlockNumber].add(_cap) */\n      tag_110\n        /* \"contracts/ss.sol\":7400:7404  _cap */\n      dup5\n        /* \"contracts/ss.sol\":7343:7357  withdrawsState */\n      0x0\n        /* \"contracts/ss.sol\":7343:7369  withdrawsState[msg.sender] */\n      dup1\n        /* \"contracts/ss.sol\":7358:7368  msg.sender */\n      caller\n        /* \"contracts/ss.sol\":7343:7369  withdrawsState[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/ss.sol\":7343:7374  withdrawsState[msg.sender].caps */\n      0x0\n      add\n        /* \"contracts/ss.sol\":7343:7395  withdrawsState[msg.sender].caps[withdrawBlockNumber] */\n      0x0\n        /* \"contracts/ss.sol\":7375:7394  withdrawBlockNumber */\n      dup7\n        /* \"contracts/ss.sol\":7343:7395  withdrawsState[msg.sender].caps[withdrawBlockNumber] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/ss.sol\":7343:7399  withdrawsState[msg.sender].caps[withdrawBlockNumber].add */\n      tag_95\n      swap1\n        /* \"contracts/ss.sol\":7343:7405  withdrawsState[msg.sender].caps[withdrawBlockNumber].add(_cap) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_110:\n        /* \"contracts/ss.sol\":7288:7302  withdrawsState */\n      0x0\n        /* \"contracts/ss.sol\":7288:7314  withdrawsState[msg.sender] */\n      dup1\n        /* \"contracts/ss.sol\":7303:7313  msg.sender */\n      caller\n        /* \"contracts/ss.sol\":7288:7314  withdrawsState[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/ss.sol\":7288:7319  withdrawsState[msg.sender].caps */\n      0x0\n      add\n        /* \"contracts/ss.sol\":7288:7340  withdrawsState[msg.sender].caps[withdrawBlockNumber] */\n      0x0\n        /* \"contracts/ss.sol\":7320:7339  withdrawBlockNumber */\n      dup6\n        /* \"contracts/ss.sol\":7288:7340  withdrawsState[msg.sender].caps[withdrawBlockNumber] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/ss.sol\":7288:7405  withdrawsState[msg.sender].caps[withdrawBlockNumber] = withdrawsState[msg.sender].caps[withdrawBlockNumber].add(_cap) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ss.sol\":7415:7429  withdrawsState */\n      0x0\n        /* \"contracts/ss.sol\":7415:7441  withdrawsState[msg.sender] */\n      dup1\n        /* \"contracts/ss.sol\":7430:7440  msg.sender */\n      caller\n        /* \"contracts/ss.sol\":7415:7441  withdrawsState[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/ss.sol\":7415:7454  withdrawsState[msg.sender].blockNumbers */\n      0x1\n      add\n        /* \"contracts/ss.sol\":7460:7479  withdrawBlockNumber */\n      dup4\n        /* \"contracts/ss.sol\":7415:7480  withdrawsState[msg.sender].blockNumbers.push(withdrawBlockNumber) */\n      swap1\n      dup1\n        /* \"--CODEGEN--\":39:40   */\n      0x1\n        /* \"--CODEGEN--\":33:36   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      sload\n        /* \"--CODEGEN--\":23:41   */\n      add\n        /* \"--CODEGEN--\":57:67   */\n      dup1\n        /* \"--CODEGEN--\":52:55   */\n      dup3\n        /* \"--CODEGEN--\":45:68   */\n      sstore\n        /* \"--CODEGEN--\":79:89   */\n      dup1\n        /* \"--CODEGEN--\":72:89   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":0:93   */\n      pop\n        /* \"contracts/ss.sol\":7415:7480  withdrawsState[msg.sender].blockNumbers.push(withdrawBlockNumber) */\n      swap1\n      0x1\n      dup3\n      sub\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      add\n      0x0\n      swap1\n      swap2\n      swap3\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      sstore\n      pop\n        /* \"contracts/ss.sol\":7496:7532  Unvote(msg.sender, _candidate, _cap) */\n      0xaa0e554f781c3c3b2be110a0557f260f11af9a8aa2c64bc1e7a31dbb21e32fa2\n        /* \"contracts/ss.sol\":7503:7513  msg.sender */\n      caller\n        /* \"contracts/ss.sol\":7515:7525  _candidate */\n      dup7\n        /* \"contracts/ss.sol\":7527:7531  _cap */\n      dup7\n        /* \"contracts/ss.sol\":7496:7532  Unvote(msg.sender, _candidate, _cap) */\n      mload(0x40)\n      dup1\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/ss.sol\":6873:7539  function unvote(address _candidate, uint256 _cap) public onlyValidVote(_candidate, _cap) {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ss.sol\":5806:5896  function getCandidates() public view returns(address[]) {... */\n    tag_29:\n        /* \"contracts/ss.sol\":5851:5860  address[] */\n      0x60\n        /* \"contracts/ss.sol\":5879:5889  candidates */\n      0x3\n        /* \"contracts/ss.sol\":5872:5889  return candidates */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_113\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      swap1\n    tag_114:\n      dup2\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x1\n      add\n      swap1\n      dup1\n      dup4\n      gt\n      tag_114\n      jumpi\n    tag_113:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/ss.sol\":5806:5896  function getCandidates() public view returns(address[]) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ss.sol\":6723:6867  function getWithdrawCap(uint256 _blockNumber) public view returns(uint256) {... */\n    tag_35:\n        /* \"contracts/ss.sol\":6789:6796  uint256 */\n      0x0\n        /* \"contracts/ss.sol\":6815:6829  withdrawsState */\n      dup1\n        /* \"contracts/ss.sol\":6815:6841  withdrawsState[msg.sender] */\n      0x0\n        /* \"contracts/ss.sol\":6830:6840  msg.sender */\n      caller\n        /* \"contracts/ss.sol\":6815:6841  withdrawsState[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/ss.sol\":6815:6846  withdrawsState[msg.sender].caps */\n      0x0\n      add\n        /* \"contracts/ss.sol\":6815:6860  withdrawsState[msg.sender].caps[_blockNumber] */\n      0x0\n        /* \"contracts/ss.sol\":6847:6859  _blockNumber */\n      dup4\n        /* \"contracts/ss.sol\":6815:6860  withdrawsState[msg.sender].caps[_blockNumber] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/ss.sol\":6808:6860  return withdrawsState[msg.sender].caps[_blockNumber] */\n      swap1\n      pop\n        /* \"contracts/ss.sol\":6723:6867  function getWithdrawCap(uint256 _blockNumber) public view returns(uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ss.sol\":6334:6446  function getVoters(address _candidate) public view returns(address[]) {... */\n    tag_38:\n        /* \"contracts/ss.sol\":6393:6402  address[] */\n      0x60\n        /* \"contracts/ss.sol\":6421:6427  voters */\n      0x2\n        /* \"contracts/ss.sol\":6421:6439  voters[_candidate] */\n      0x0\n        /* \"contracts/ss.sol\":6428:6438  _candidate */\n      dup4\n        /* \"contracts/ss.sol\":6421:6439  voters[_candidate] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/ss.sol\":6414:6439  return voters[_candidate] */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_117\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      swap1\n    tag_118:\n      dup2\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x1\n      add\n      swap1\n      dup1\n      dup4\n      gt\n      tag_118\n      jumpi\n    tag_117:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/ss.sol\":6334:6446  function getVoters(address _candidate) public view returns(address[]) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ss.sol\":6588:6717  function getWithdrawBlockNumbers() public view returns(uint256[]) {... */\n    tag_44:\n        /* \"contracts/ss.sol\":6643:6652  uint256[] */\n      0x60\n        /* \"contracts/ss.sol\":6671:6685  withdrawsState */\n      0x0\n        /* \"contracts/ss.sol\":6671:6697  withdrawsState[msg.sender] */\n      dup1\n        /* \"contracts/ss.sol\":6686:6696  msg.sender */\n      caller\n        /* \"contracts/ss.sol\":6671:6697  withdrawsState[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/ss.sol\":6671:6710  withdrawsState[msg.sender].blockNumbers */\n      0x1\n      add\n        /* \"contracts/ss.sol\":6664:6710  return withdrawsState[msg.sender].blockNumbers */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_120\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      swap1\n    tag_121:\n      dup2\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x1\n      add\n      swap1\n      dup1\n      dup4\n      gt\n      tag_121\n      jumpi\n    tag_120:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/ss.sol\":6588:6717  function getWithdrawBlockNumbers() public view returns(uint256[]) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ss.sol\":6176:6328  function getVoterCap(address _candidate, address _voter) public view returns(uint256) {... */\n    tag_50:\n        /* \"contracts/ss.sol\":6253:6260  uint256 */\n      0x0\n        /* \"contracts/ss.sol\":6279:6294  validatorsState */\n      0x1\n        /* \"contracts/ss.sol\":6279:6306  validatorsState[_candidate] */\n      0x0\n        /* \"contracts/ss.sol\":6295:6305  _candidate */\n      dup5\n        /* \"contracts/ss.sol\":6279:6306  validatorsState[_candidate] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/ss.sol\":6279:6313  validatorsState[_candidate].voters */\n      0x2\n      add\n        /* \"contracts/ss.sol\":6279:6321  validatorsState[_candidate].voters[_voter] */\n      0x0\n        /* \"contracts/ss.sol\":6314:6320  _voter */\n      dup4\n        /* \"contracts/ss.sol\":6279:6321  validatorsState[_candidate].voters[_voter] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/ss.sol\":6272:6321  return validatorsState[_candidate].voters[_voter] */\n      swap1\n      pop\n        /* \"contracts/ss.sol\":6176:6328  function getVoterCap(address _candidate, address _voter) public view returns(uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ss.sol\":1947:1974  address[] public candidates */\n    tag_53:\n      0x3\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_123\n      jumpi\n      invalid\n    tag_123:\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      add\n      0x0\n      swap2\n      pop\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/ss.sol\":8530:8920  function withdraw(uint256 _blockNumber, uint _index) public onlyValidWithdraw(_blockNumber, _index) {... */\n    tag_56:\n        /* \"contracts/ss.sol\":8640:8651  uint256 cap */\n      0x0\n        /* \"contracts/ss.sol\":8608:8620  _blockNumber */\n      dup3\n        /* \"contracts/ss.sol\":8622:8628  _index */\n      dup3\n        /* \"contracts/ss.sol\":3404:3405  0 */\n      0x0\n        /* \"contracts/ss.sol\":3389:3401  _blockNumber */\n      dup3\n        /* \"contracts/ss.sol\":3389:3405  _blockNumber > 0 */\n      gt\n        /* \"contracts/ss.sol\":3381:3406  require(_blockNumber > 0) */\n      iszero\n      iszero\n      tag_126\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_126:\n        /* \"contracts/ss.sol\":3440:3452  _blockNumber */\n      dup2\n        /* \"contracts/ss.sol\":3424:3436  block.number */\n      number\n        /* \"contracts/ss.sol\":3424:3452  block.number >= _blockNumber */\n      lt\n      iszero\n        /* \"contracts/ss.sol\":3416:3453  require(block.number >= _blockNumber) */\n      iszero\n      iszero\n      tag_127\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_127:\n        /* \"contracts/ss.sol\":3519:3520  0 */\n      0x0\n        /* \"contracts/ss.sol\":3471:3485  withdrawsState */\n      dup1\n        /* \"contracts/ss.sol\":3471:3497  withdrawsState[msg.sender] */\n      0x0\n        /* \"contracts/ss.sol\":3486:3496  msg.sender */\n      caller\n        /* \"contracts/ss.sol\":3471:3497  withdrawsState[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/ss.sol\":3471:3502  withdrawsState[msg.sender].caps */\n      0x0\n      add\n        /* \"contracts/ss.sol\":3471:3516  withdrawsState[msg.sender].caps[_blockNumber] */\n      0x0\n        /* \"contracts/ss.sol\":3503:3515  _blockNumber */\n      dup5\n        /* \"contracts/ss.sol\":3471:3516  withdrawsState[msg.sender].caps[_blockNumber] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/ss.sol\":3471:3520  withdrawsState[msg.sender].caps[_blockNumber] > 0 */\n      gt\n        /* \"contracts/ss.sol\":3463:3521  require(withdrawsState[msg.sender].caps[_blockNumber] > 0) */\n      iszero\n      iszero\n      tag_128\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_128:\n        /* \"contracts/ss.sol\":3590:3602  _blockNumber */\n      dup2\n        /* \"contracts/ss.sol\":3539:3553  withdrawsState */\n      0x0\n        /* \"contracts/ss.sol\":3539:3565  withdrawsState[msg.sender] */\n      dup1\n        /* \"contracts/ss.sol\":3554:3564  msg.sender */\n      caller\n        /* \"contracts/ss.sol\":3539:3565  withdrawsState[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/ss.sol\":3539:3578  withdrawsState[msg.sender].blockNumbers */\n      0x1\n      add\n        /* \"contracts/ss.sol\":3579:3585  _index */\n      dup3\n        /* \"contracts/ss.sol\":3539:3586  withdrawsState[msg.sender].blockNumbers[_index] */\n      dup2\n      sload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_129\n      jumpi\n      invalid\n    tag_129:\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      add\n      sload\n        /* \"contracts/ss.sol\":3539:3602  withdrawsState[msg.sender].blockNumbers[_index] == _blockNumber */\n      eq\n        /* \"contracts/ss.sol\":3531:3603  require(withdrawsState[msg.sender].blockNumbers[_index] == _blockNumber) */\n      iszero\n      iszero\n      tag_131\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_131:\n        /* \"contracts/ss.sol\":8654:8668  withdrawsState */\n      0x0\n        /* \"contracts/ss.sol\":8654:8680  withdrawsState[msg.sender] */\n      dup1\n        /* \"contracts/ss.sol\":8669:8679  msg.sender */\n      caller\n        /* \"contracts/ss.sol\":8654:8680  withdrawsState[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/ss.sol\":8654:8685  withdrawsState[msg.sender].caps */\n      0x0\n      add\n        /* \"contracts/ss.sol\":8654:8699  withdrawsState[msg.sender].caps[_blockNumber] */\n      0x0\n        /* \"contracts/ss.sol\":8686:8698  _blockNumber */\n      dup7\n        /* \"contracts/ss.sol\":8654:8699  withdrawsState[msg.sender].caps[_blockNumber] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/ss.sol\":8640:8699  uint256 cap = withdrawsState[msg.sender].caps[_blockNumber] */\n      swap3\n      pop\n        /* \"contracts/ss.sol\":8716:8730  withdrawsState */\n      0x0\n        /* \"contracts/ss.sol\":8716:8742  withdrawsState[msg.sender] */\n      dup1\n        /* \"contracts/ss.sol\":8731:8741  msg.sender */\n      caller\n        /* \"contracts/ss.sol\":8716:8742  withdrawsState[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/ss.sol\":8716:8747  withdrawsState[msg.sender].caps */\n      0x0\n      add\n        /* \"contracts/ss.sol\":8716:8761  withdrawsState[msg.sender].caps[_blockNumber] */\n      0x0\n        /* \"contracts/ss.sol\":8748:8760  _blockNumber */\n      dup7\n        /* \"contracts/ss.sol\":8716:8761  withdrawsState[msg.sender].caps[_blockNumber] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/ss.sol\":8709:8761  delete withdrawsState[msg.sender].caps[_blockNumber] */\n      0x0\n      swap1\n      sstore\n        /* \"contracts/ss.sol\":8778:8792  withdrawsState */\n      0x0\n        /* \"contracts/ss.sol\":8778:8804  withdrawsState[msg.sender] */\n      dup1\n        /* \"contracts/ss.sol\":8793:8803  msg.sender */\n      caller\n        /* \"contracts/ss.sol\":8778:8804  withdrawsState[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/ss.sol\":8778:8817  withdrawsState[msg.sender].blockNumbers */\n      0x1\n      add\n        /* \"contracts/ss.sol\":8818:8824  _index */\n      dup5\n        /* \"contracts/ss.sol\":8778:8825  withdrawsState[msg.sender].blockNumbers[_index] */\n      dup2\n      sload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_133\n      jumpi\n      invalid\n    tag_133:\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      add\n        /* \"contracts/ss.sol\":8771:8825  delete withdrawsState[msg.sender].blockNumbers[_index] */\n      0x0\n      swap1\n      sstore\n        /* \"contracts/ss.sol\":8835:8845  msg.sender */\n      caller\n        /* \"contracts/ss.sol\":8835:8854  msg.sender.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ss.sol\":8835:8859  msg.sender.transfer(cap) */\n      0x8fc\n        /* \"contracts/ss.sol\":8855:8858  cap */\n      dup5\n        /* \"contracts/ss.sol\":8835:8859  msg.sender.transfer(cap) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_135\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_135:\n        /* \"contracts/ss.sol\":8835:8859  msg.sender.transfer(cap) */\n      pop\n        /* \"contracts/ss.sol\":8874:8913  Withdraw(msg.sender, _blockNumber, cap) */\n      0xf279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568\n        /* \"contracts/ss.sol\":8883:8893  msg.sender */\n      caller\n        /* \"contracts/ss.sol\":8895:8907  _blockNumber */\n      dup7\n        /* \"contracts/ss.sol\":8909:8912  cap */\n      dup6\n        /* \"contracts/ss.sol\":8874:8913  Withdraw(msg.sender, _blockNumber, cap) */\n      mload(0x40)\n      dup1\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/ss.sol\":8530:8920  function withdraw(uint256 _blockNumber, uint _index) public onlyValidWithdraw(_blockNumber, _index) {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ss.sol\":5902:6031  function getCandidateCap(address _candidate) public view returns(uint256) {... */\n    tag_59:\n        /* \"contracts/ss.sol\":5967:5974  uint256 */\n      0x0\n        /* \"contracts/ss.sol\":5993:6008  validatorsState */\n      0x1\n        /* \"contracts/ss.sol\":5993:6020  validatorsState[_candidate] */\n      0x0\n        /* \"contracts/ss.sol\":6009:6019  _candidate */\n      dup4\n        /* \"contracts/ss.sol\":5993:6020  validatorsState[_candidate] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/ss.sol\":5993:6024  validatorsState[_candidate].cap */\n      0x1\n      add\n      sload\n        /* \"contracts/ss.sol\":5986:6024  return validatorsState[_candidate].cap */\n      swap1\n      pop\n        /* \"contracts/ss.sol\":5902:6031  function getCandidateCap(address _candidate) public view returns(uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ss.sol\":5303:5800  function vote(address _candidate) external payable onlyValidVoterCap onlyValidCandidate(_candidate) {... */\n    tag_61:\n        /* \"contracts/ss.sol\":2431:2442  minVoterCap */\n      sload(0x6)\n        /* \"contracts/ss.sol\":2418:2427  msg.value */\n      callvalue\n        /* \"contracts/ss.sol\":2418:2442  msg.value >= minVoterCap */\n      lt\n      iszero\n        /* \"contracts/ss.sol\":2410:2443  require(msg.value >= minVoterCap) */\n      iszero\n      iszero\n      tag_138\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_138:\n        /* \"contracts/ss.sol\":5391:5401  _candidate */\n      dup1\n        /* \"contracts/ss.sol\":2788:2803  validatorsState */\n      0x1\n        /* \"contracts/ss.sol\":2788:2815  validatorsState[_candidate] */\n      0x0\n        /* \"contracts/ss.sol\":2804:2814  _candidate */\n      dup3\n        /* \"contracts/ss.sol\":2788:2815  validatorsState[_candidate] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/ss.sol\":2788:2827  validatorsState[_candidate].isCandidate */\n      0x0\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/ss.sol\":2780:2828  require(validatorsState[_candidate].isCandidate) */\n      iszero\n      iszero\n      tag_140\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_140:\n        /* \"contracts/ss.sol\":5447:5493  validatorsState[_candidate].cap.add(msg.value) */\n      tag_142\n        /* \"contracts/ss.sol\":5483:5492  msg.value */\n      callvalue\n        /* \"contracts/ss.sol\":5447:5462  validatorsState */\n      0x1\n        /* \"contracts/ss.sol\":5447:5474  validatorsState[_candidate] */\n      0x0\n        /* \"contracts/ss.sol\":5463:5473  _candidate */\n      dup6\n        /* \"contracts/ss.sol\":5447:5474  validatorsState[_candidate] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/ss.sol\":5447:5478  validatorsState[_candidate].cap */\n      0x1\n      add\n      sload\n        /* \"contracts/ss.sol\":5447:5482  validatorsState[_candidate].cap.add */\n      tag_95\n      swap1\n        /* \"contracts/ss.sol\":5447:5493  validatorsState[_candidate].cap.add(msg.value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_142:\n        /* \"contracts/ss.sol\":5413:5428  validatorsState */\n      0x1\n        /* \"contracts/ss.sol\":5413:5440  validatorsState[_candidate] */\n      0x0\n        /* \"contracts/ss.sol\":5429:5439  _candidate */\n      dup5\n        /* \"contracts/ss.sol\":5413:5440  validatorsState[_candidate] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/ss.sol\":5413:5444  validatorsState[_candidate].cap */\n      0x1\n      add\n        /* \"contracts/ss.sol\":5413:5493  validatorsState[_candidate].cap = validatorsState[_candidate].cap.add(msg.value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ss.sol\":5557:5558  0 */\n      0x0\n        /* \"contracts/ss.sol\":5507:5522  validatorsState */\n      0x1\n        /* \"contracts/ss.sol\":5507:5534  validatorsState[_candidate] */\n      0x0\n        /* \"contracts/ss.sol\":5523:5533  _candidate */\n      dup5\n        /* \"contracts/ss.sol\":5507:5534  validatorsState[_candidate] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/ss.sol\":5507:5541  validatorsState[_candidate].voters */\n      0x2\n      add\n        /* \"contracts/ss.sol\":5507:5553  validatorsState[_candidate].voters[msg.sender] */\n      0x0\n        /* \"contracts/ss.sol\":5542:5552  msg.sender */\n      caller\n        /* \"contracts/ss.sol\":5507:5553  validatorsState[_candidate].voters[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/ss.sol\":5507:5558  validatorsState[_candidate].voters[msg.sender] == 0 */\n      eq\n        /* \"contracts/ss.sol\":5503:5620  if (validatorsState[_candidate].voters[msg.sender] == 0) {... */\n      iszero\n      tag_143\n      jumpi\n        /* \"contracts/ss.sol\":5574:5580  voters */\n      0x2\n        /* \"contracts/ss.sol\":5574:5592  voters[_candidate] */\n      0x0\n        /* \"contracts/ss.sol\":5581:5591  _candidate */\n      dup4\n        /* \"contracts/ss.sol\":5574:5592  voters[_candidate] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/ss.sol\":5598:5608  msg.sender */\n      caller\n        /* \"contracts/ss.sol\":5574:5609  voters[_candidate].push(msg.sender) */\n      swap1\n      dup1\n        /* \"--CODEGEN--\":39:40   */\n      0x1\n        /* \"--CODEGEN--\":33:36   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      sload\n        /* \"--CODEGEN--\":23:41   */\n      add\n        /* \"--CODEGEN--\":57:67   */\n      dup1\n        /* \"--CODEGEN--\":52:55   */\n      dup3\n        /* \"--CODEGEN--\":45:68   */\n      sstore\n        /* \"--CODEGEN--\":79:89   */\n      dup1\n        /* \"--CODEGEN--\":72:89   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":0:93   */\n      pop\n        /* \"contracts/ss.sol\":5574:5609  voters[_candidate].push(msg.sender) */\n      swap1\n      0x1\n      dup3\n      sub\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      add\n      0x0\n      swap1\n      swap2\n      swap3\n      swap1\n      swap2\n      swap1\n      swap2\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      pop\n        /* \"contracts/ss.sol\":5503:5620  if (validatorsState[_candidate].voters[msg.sender] == 0) {... */\n    tag_143:\n        /* \"contracts/ss.sol\":5678:5739  validatorsState[_candidate].voters[msg.sender].add(msg.value) */\n      tag_145\n        /* \"contracts/ss.sol\":5729:5738  msg.value */\n      callvalue\n        /* \"contracts/ss.sol\":5678:5693  validatorsState */\n      0x1\n        /* \"contracts/ss.sol\":5678:5705  validatorsState[_candidate] */\n      0x0\n        /* \"contracts/ss.sol\":5694:5704  _candidate */\n      dup6\n        /* \"contracts/ss.sol\":5678:5705  validatorsState[_candidate] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/ss.sol\":5678:5712  validatorsState[_candidate].voters */\n      0x2\n      add\n        /* \"contracts/ss.sol\":5678:5724  validatorsState[_candidate].voters[msg.sender] */\n      0x0\n        /* \"contracts/ss.sol\":5713:5723  msg.sender */\n      caller\n        /* \"contracts/ss.sol\":5678:5724  validatorsState[_candidate].voters[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/ss.sol\":5678:5728  validatorsState[_candidate].voters[msg.sender].add */\n      tag_95\n      swap1\n        /* \"contracts/ss.sol\":5678:5739  validatorsState[_candidate].voters[msg.sender].add(msg.value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_145:\n        /* \"contracts/ss.sol\":5629:5644  validatorsState */\n      0x1\n        /* \"contracts/ss.sol\":5629:5656  validatorsState[_candidate] */\n      0x0\n        /* \"contracts/ss.sol\":5645:5655  _candidate */\n      dup5\n        /* \"contracts/ss.sol\":5629:5656  validatorsState[_candidate] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/ss.sol\":5629:5663  validatorsState[_candidate].voters */\n      0x2\n      add\n        /* \"contracts/ss.sol\":5629:5675  validatorsState[_candidate].voters[msg.sender] */\n      0x0\n        /* \"contracts/ss.sol\":5664:5674  msg.sender */\n      caller\n        /* \"contracts/ss.sol\":5629:5675  validatorsState[_candidate].voters[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/ss.sol\":5629:5739  validatorsState[_candidate].voters[msg.sender] = validatorsState[_candidate].voters[msg.sender].add(msg.value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ss.sol\":5754:5793  Vote(msg.sender, _candidate, msg.value) */\n      0x66a9138482c99e9baf08860110ef332cc0c23b4a199a53593d8db0fc8f96fbfc\n        /* \"contracts/ss.sol\":5759:5769  msg.sender */\n      caller\n        /* \"contracts/ss.sol\":5771:5781  _candidate */\n      dup4\n        /* \"contracts/ss.sol\":5783:5792  msg.value */\n      callvalue\n        /* \"contracts/ss.sol\":5754:5793  Vote(msg.sender, _candidate, msg.value) */\n      mload(0x40)\n      dup1\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/ss.sol\":2453:2454  _ */\n      pop\n        /* \"contracts/ss.sol\":5303:5800  function vote(address _candidate) external payable onlyValidVoterCap onlyValidCandidate(_candidate) {... */\n      pop\n      jump\t// out\n        /* \"contracts/ss.sol\":1981:2014  uint256 public candidateCount = 0 */\n    tag_64:\n      sload(0x4)\n      dup2\n      jump\t// out\n        /* \"contracts/ss.sol\":2170:2203  uint256 public voterWithdrawDelay */\n    tag_67:\n      sload(0x9)\n      dup2\n      jump\t// out\n        /* \"contracts/ss.sol\":7545:8524  function resign(address _candidate) public onlyOwner(_candidate) onlyCandidate(_candidate) {... */\n    tag_70:\n        /* \"contracts/ss.sol\":7756:7765  uint256 i */\n      0x0\n        /* \"contracts/ss.sol\":7941:7952  uint256 cap */\n      dup1\n        /* \"contracts/ss.sol\":8201:8228  uint256 withdrawBlockNumber */\n      0x0\n        /* \"contracts/ss.sol\":7598:7608  _candidate */\n      dup4\n        /* \"contracts/ss.sol\":2561:2571  msg.sender */\n      caller\n        /* \"contracts/ss.sol\":2524:2571  validatorsState[_candidate].owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ss.sol\":2524:2539  validatorsState */\n      0x1\n        /* \"contracts/ss.sol\":2524:2551  validatorsState[_candidate] */\n      0x0\n        /* \"contracts/ss.sol\":2540:2550  _candidate */\n      dup4\n        /* \"contracts/ss.sol\":2524:2551  validatorsState[_candidate] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/ss.sol\":2524:2557  validatorsState[_candidate].owner */\n      0x0\n      add\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ss.sol\":2524:2571  validatorsState[_candidate].owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ss.sol\":2516:2572  require(validatorsState[_candidate].owner == msg.sender) */\n      iszero\n      iszero\n      tag_147\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_147:\n        /* \"contracts/ss.sol\":7624:7634  _candidate */\n      dup5\n        /* \"contracts/ss.sol\":2657:2672  validatorsState */\n      0x1\n        /* \"contracts/ss.sol\":2657:2684  validatorsState[_candidate] */\n      0x0\n        /* \"contracts/ss.sol\":2673:2683  _candidate */\n      dup3\n        /* \"contracts/ss.sol\":2657:2684  validatorsState[_candidate] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/ss.sol\":2657:2696  validatorsState[_candidate].isCandidate */\n      0x0\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/ss.sol\":2649:2697  require(validatorsState[_candidate].isCandidate) */\n      iszero\n      iszero\n      tag_149\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_149:\n        /* \"contracts/ss.sol\":7688:7693  false */\n      0x0\n        /* \"contracts/ss.sol\":7646:7661  validatorsState */\n      0x1\n        /* \"contracts/ss.sol\":7646:7673  validatorsState[_candidate] */\n      0x0\n        /* \"contracts/ss.sol\":7662:7672  _candidate */\n      dup9\n        /* \"contracts/ss.sol\":7646:7673  validatorsState[_candidate] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/ss.sol\":7646:7685  validatorsState[_candidate].isCandidate */\n      0x0\n      add\n      0x14\n        /* \"contracts/ss.sol\":7646:7693  validatorsState[_candidate].isCandidate = false */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/ss.sol\":7720:7741  candidateCount.sub(1) */\n      tag_151\n        /* \"contracts/ss.sol\":7739:7740  1 */\n      0x1\n        /* \"contracts/ss.sol\":7720:7734  candidateCount */\n      sload(0x4)\n        /* \"contracts/ss.sol\":7720:7738  candidateCount.sub */\n      tag_104\n      swap1\n        /* \"contracts/ss.sol\":7720:7741  candidateCount.sub(1) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_151:\n        /* \"contracts/ss.sol\":7703:7717  candidateCount */\n      0x4\n        /* \"contracts/ss.sol\":7703:7741  candidateCount = candidateCount.sub(1) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ss.sol\":7768:7769  0 */\n      0x0\n        /* \"contracts/ss.sol\":7756:7769  uint256 i = 0 */\n      swap5\n      pop\n        /* \"contracts/ss.sol\":7751:7932  for (uint256 i = 0; i < candidates.length; i++) {... */\n    tag_152:\n        /* \"contracts/ss.sol\":7775:7785  candidates */\n      0x3\n        /* \"contracts/ss.sol\":7775:7792  candidates.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/ss.sol\":7771:7772  i */\n      dup6\n        /* \"contracts/ss.sol\":7771:7792  i < candidates.length */\n      lt\n        /* \"contracts/ss.sol\":7751:7932  for (uint256 i = 0; i < candidates.length; i++) {... */\n      iszero\n      tag_153\n      jumpi\n        /* \"contracts/ss.sol\":7834:7844  _candidate */\n      dup6\n        /* \"contracts/ss.sol\":7817:7844  candidates[i] == _candidate */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ss.sol\":7817:7827  candidates */\n      0x3\n        /* \"contracts/ss.sol\":7828:7829  i */\n      dup7\n        /* \"contracts/ss.sol\":7817:7830  candidates[i] */\n      dup2\n      sload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_155\n      jumpi\n      invalid\n    tag_155:\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      add\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ss.sol\":7817:7844  candidates[i] == _candidate */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ss.sol\":7813:7922  if (candidates[i] == _candidate) {... */\n      iszero\n      tag_157\n      jumpi\n        /* \"contracts/ss.sol\":7871:7881  candidates */\n      0x3\n        /* \"contracts/ss.sol\":7882:7883  i */\n      dup6\n        /* \"contracts/ss.sol\":7871:7884  candidates[i] */\n      dup2\n      sload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_158\n      jumpi\n      invalid\n    tag_158:\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      add\n      0x0\n        /* \"contracts/ss.sol\":7864:7884  delete candidates[i] */\n      0x100\n      exp\n      dup2\n      sload\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n        /* \"contracts/ss.sol\":7902:7907  break */\n      jump(tag_153)\n        /* \"contracts/ss.sol\":7813:7922  if (candidates[i] == _candidate) {... */\n    tag_157:\n        /* \"contracts/ss.sol\":7794:7797  i++ */\n      dup5\n      dup1\n      0x1\n      add\n      swap6\n      pop\n      pop\n        /* \"contracts/ss.sol\":7751:7932  for (uint256 i = 0; i < candidates.length; i++) {... */\n      jump(tag_152)\n    tag_153:\n        /* \"contracts/ss.sol\":7955:7970  validatorsState */\n      0x1\n        /* \"contracts/ss.sol\":7955:7982  validatorsState[_candidate] */\n      0x0\n        /* \"contracts/ss.sol\":7971:7981  _candidate */\n      dup8\n        /* \"contracts/ss.sol\":7955:7982  validatorsState[_candidate] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/ss.sol\":7955:7989  validatorsState[_candidate].voters */\n      0x2\n      add\n        /* \"contracts/ss.sol\":7955:8001  validatorsState[_candidate].voters[msg.sender] */\n      0x0\n        /* \"contracts/ss.sol\":7990:8000  msg.sender */\n      caller\n        /* \"contracts/ss.sol\":7955:8001  validatorsState[_candidate].voters[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/ss.sol\":7941:8001  uint256 cap = validatorsState[_candidate].voters[msg.sender] */\n      swap4\n      pop\n        /* \"contracts/ss.sol\":8045:8085  validatorsState[_candidate].cap.sub(cap) */\n      tag_160\n        /* \"contracts/ss.sol\":8081:8084  cap */\n      dup5\n        /* \"contracts/ss.sol\":8045:8060  validatorsState */\n      0x1\n        /* \"contracts/ss.sol\":8045:8072  validatorsState[_candidate] */\n      0x0\n        /* \"contracts/ss.sol\":8061:8071  _candidate */\n      dup10\n        /* \"contracts/ss.sol\":8045:8072  validatorsState[_candidate] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/ss.sol\":8045:8076  validatorsState[_candidate].cap */\n      0x1\n      add\n      sload\n        /* \"contracts/ss.sol\":8045:8080  validatorsState[_candidate].cap.sub */\n      tag_104\n      swap1\n        /* \"contracts/ss.sol\":8045:8085  validatorsState[_candidate].cap.sub(cap) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_160:\n        /* \"contracts/ss.sol\":8011:8026  validatorsState */\n      0x1\n        /* \"contracts/ss.sol\":8011:8038  validatorsState[_candidate] */\n      0x0\n        /* \"contracts/ss.sol\":8027:8037  _candidate */\n      dup9\n        /* \"contracts/ss.sol\":8011:8038  validatorsState[_candidate] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/ss.sol\":8011:8042  validatorsState[_candidate].cap */\n      0x1\n      add\n        /* \"contracts/ss.sol\":8011:8085  validatorsState[_candidate].cap = validatorsState[_candidate].cap.sub(cap) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ss.sol\":8144:8145  0 */\n      0x0\n        /* \"contracts/ss.sol\":8095:8110  validatorsState */\n      0x1\n        /* \"contracts/ss.sol\":8095:8122  validatorsState[_candidate] */\n      0x0\n        /* \"contracts/ss.sol\":8111:8121  _candidate */\n      dup9\n        /* \"contracts/ss.sol\":8095:8122  validatorsState[_candidate] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/ss.sol\":8095:8129  validatorsState[_candidate].voters */\n      0x2\n      add\n        /* \"contracts/ss.sol\":8095:8141  validatorsState[_candidate].voters[msg.sender] */\n      0x0\n        /* \"contracts/ss.sol\":8130:8140  msg.sender */\n      caller\n        /* \"contracts/ss.sol\":8095:8141  validatorsState[_candidate].voters[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/ss.sol\":8095:8145  validatorsState[_candidate].voters[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ss.sol\":8231:8271  candidateWithdrawDelay.add(block.number) */\n      tag_161\n        /* \"contracts/ss.sol\":8258:8270  block.number */\n      number\n        /* \"contracts/ss.sol\":8231:8253  candidateWithdrawDelay */\n      sload(0x8)\n        /* \"contracts/ss.sol\":8231:8257  candidateWithdrawDelay.add */\n      tag_95\n      swap1\n        /* \"contracts/ss.sol\":8231:8271  candidateWithdrawDelay.add(block.number) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_161:\n        /* \"contracts/ss.sol\":8201:8271  uint256 withdrawBlockNumber = candidateWithdrawDelay.add(block.number) */\n      swap3\n      pop\n        /* \"contracts/ss.sol\":8336:8397  withdrawsState[msg.sender].caps[withdrawBlockNumber].add(cap) */\n      tag_162\n        /* \"contracts/ss.sol\":8393:8396  cap */\n      dup5\n        /* \"contracts/ss.sol\":8336:8350  withdrawsState */\n      0x0\n        /* \"contracts/ss.sol\":8336:8362  withdrawsState[msg.sender] */\n      dup1\n        /* \"contracts/ss.sol\":8351:8361  msg.sender */\n      caller\n        /* \"contracts/ss.sol\":8336:8362  withdrawsState[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/ss.sol\":8336:8367  withdrawsState[msg.sender].caps */\n      0x0\n      add\n        /* \"contracts/ss.sol\":8336:8388  withdrawsState[msg.sender].caps[withdrawBlockNumber] */\n      0x0\n        /* \"contracts/ss.sol\":8368:8387  withdrawBlockNumber */\n      dup7\n        /* \"contracts/ss.sol\":8336:8388  withdrawsState[msg.sender].caps[withdrawBlockNumber] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/ss.sol\":8336:8392  withdrawsState[msg.sender].caps[withdrawBlockNumber].add */\n      tag_95\n      swap1\n        /* \"contracts/ss.sol\":8336:8397  withdrawsState[msg.sender].caps[withdrawBlockNumber].add(cap) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_162:\n        /* \"contracts/ss.sol\":8281:8295  withdrawsState */\n      0x0\n        /* \"contracts/ss.sol\":8281:8307  withdrawsState[msg.sender] */\n      dup1\n        /* \"contracts/ss.sol\":8296:8306  msg.sender */\n      caller\n        /* \"contracts/ss.sol\":8281:8307  withdrawsState[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/ss.sol\":8281:8312  withdrawsState[msg.sender].caps */\n      0x0\n      add\n        /* \"contracts/ss.sol\":8281:8333  withdrawsState[msg.sender].caps[withdrawBlockNumber] */\n      0x0\n        /* \"contracts/ss.sol\":8313:8332  withdrawBlockNumber */\n      dup6\n        /* \"contracts/ss.sol\":8281:8333  withdrawsState[msg.sender].caps[withdrawBlockNumber] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/ss.sol\":8281:8397  withdrawsState[msg.sender].caps[withdrawBlockNumber] = withdrawsState[msg.sender].caps[withdrawBlockNumber].add(cap) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ss.sol\":8407:8421  withdrawsState */\n      0x0\n        /* \"contracts/ss.sol\":8407:8433  withdrawsState[msg.sender] */\n      dup1\n        /* \"contracts/ss.sol\":8422:8432  msg.sender */\n      caller\n        /* \"contracts/ss.sol\":8407:8433  withdrawsState[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/ss.sol\":8407:8446  withdrawsState[msg.sender].blockNumbers */\n      0x1\n      add\n        /* \"contracts/ss.sol\":8452:8471  withdrawBlockNumber */\n      dup4\n        /* \"contracts/ss.sol\":8407:8472  withdrawsState[msg.sender].blockNumbers.push(withdrawBlockNumber) */\n      swap1\n      dup1\n        /* \"--CODEGEN--\":39:40   */\n      0x1\n        /* \"--CODEGEN--\":33:36   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      sload\n        /* \"--CODEGEN--\":23:41   */\n      add\n        /* \"--CODEGEN--\":57:67   */\n      dup1\n        /* \"--CODEGEN--\":52:55   */\n      dup3\n        /* \"--CODEGEN--\":45:68   */\n      sstore\n        /* \"--CODEGEN--\":79:89   */\n      dup1\n        /* \"--CODEGEN--\":72:89   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":0:93   */\n      pop\n        /* \"contracts/ss.sol\":8407:8472  withdrawsState[msg.sender].blockNumbers.push(withdrawBlockNumber) */\n      swap1\n      0x1\n      dup3\n      sub\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      add\n      0x0\n      swap1\n      swap2\n      swap3\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      sstore\n      pop\n        /* \"contracts/ss.sol\":8487:8517  Resign(msg.sender, _candidate) */\n      0x4edf3e325d0063213a39f9085522994a1c44bea5f39e7d63ef61260a1e58c6d3\n        /* \"contracts/ss.sol\":8494:8504  msg.sender */\n      caller\n        /* \"contracts/ss.sol\":8506:8516  _candidate */\n      dup8\n        /* \"contracts/ss.sol\":8487:8517  Resign(msg.sender, _candidate) */\n      mload(0x40)\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/ss.sol\":2582:2583  _ */\n      pop\n        /* \"contracts/ss.sol\":7545:8524  function resign(address _candidate) public onlyOwner(_candidate) onlyCandidate(_candidate) {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ss.sol\":6037:6170  function getCandidateOwner(address _candidate) public view returns(address) {... */\n    tag_73:\n        /* \"contracts/ss.sol\":6104:6111  address */\n      0x0\n        /* \"contracts/ss.sol\":6130:6145  validatorsState */\n      0x1\n        /* \"contracts/ss.sol\":6130:6157  validatorsState[_candidate] */\n      0x0\n        /* \"contracts/ss.sol\":6146:6156  _candidate */\n      dup4\n        /* \"contracts/ss.sol\":6130:6157  validatorsState[_candidate] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/ss.sol\":6130:6163  validatorsState[_candidate].owner */\n      0x0\n      add\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ss.sol\":6123:6163  return validatorsState[_candidate].owner */\n      swap1\n      pop\n        /* \"contracts/ss.sol\":6037:6170  function getCandidateOwner(address _candidate) public view returns(address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ss.sol\":2088:2121  uint256 public maxValidatorNumber */\n    tag_76:\n      sload(0x7)\n      dup2\n      jump\t// out\n        /* \"contracts/ss.sol\":2127:2164  uint256 public candidateWithdrawDelay */\n    tag_79:\n      sload(0x8)\n      dup2\n      jump\t// out\n        /* \"contracts/ss.sol\":6452:6582  function isCandidate(address _candidate) public view returns(bool) {... */\n    tag_82:\n        /* \"contracts/ss.sol\":6513:6517  bool */\n      0x0\n        /* \"contracts/ss.sol\":6536:6551  validatorsState */\n      0x1\n        /* \"contracts/ss.sol\":6536:6563  validatorsState[_candidate] */\n      0x0\n        /* \"contracts/ss.sol\":6552:6562  _candidate */\n      dup4\n        /* \"contracts/ss.sol\":6536:6563  validatorsState[_candidate] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/ss.sol\":6536:6575  validatorsState[_candidate].isCandidate */\n      0x0\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/ss.sol\":6529:6575  return validatorsState[_candidate].isCandidate */\n      swap1\n      pop\n        /* \"contracts/ss.sol\":6452:6582  function isCandidate(address _candidate) public view returns(bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ss.sol\":2020:2050  uint256 public minCandidateCap */\n    tag_85:\n      sload(0x5)\n      dup2\n      jump\t// out\n        /* \"contracts/ss.sol\":2056:2082  uint256 public minVoterCap */\n    tag_88:\n      sload(0x6)\n      dup2\n      jump\t// out\n        /* \"contracts/ss.sol\":1014:1143  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_95:\n        /* \"contracts/ss.sol\":1072:1079  uint256 */\n      0x0\n        /* \"contracts/ss.sol\":1087:1096  uint256 c */\n      dup1\n        /* \"contracts/ss.sol\":1103:1104  b */\n      dup3\n        /* \"contracts/ss.sol\":1099:1100  a */\n      dup5\n        /* \"contracts/ss.sol\":1099:1104  a + b */\n      add\n        /* \"contracts/ss.sol\":1087:1104  uint256 c = a + b */\n      swap1\n      pop\n        /* \"contracts/ss.sol\":1122:1123  a */\n      dup4\n        /* \"contracts/ss.sol\":1117:1118  c */\n      dup2\n        /* \"contracts/ss.sol\":1117:1123  c >= a */\n      lt\n      iszero\n        /* \"contracts/ss.sol\":1110:1124  assert(c >= a) */\n      iszero\n      iszero\n      tag_167\n      jumpi\n      invalid\n    tag_167:\n        /* \"contracts/ss.sol\":1137:1138  c */\n      dup1\n        /* \"contracts/ss.sol\":1130:1138  return c */\n      swap2\n      pop\n        /* \"contracts/ss.sol\":1014:1143  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ss.sol\":842:952  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_104:\n        /* \"contracts/ss.sol\":900:907  uint256 */\n      0x0\n        /* \"contracts/ss.sol\":927:928  a */\n      dup3\n        /* \"contracts/ss.sol\":922:923  b */\n      dup3\n        /* \"contracts/ss.sol\":922:928  b <= a */\n      gt\n      iszero\n        /* \"contracts/ss.sol\":915:929  assert(b <= a) */\n      iszero\n      iszero\n      tag_169\n      jumpi\n      invalid\n    tag_169:\n        /* \"contracts/ss.sol\":946:947  b */\n      dup2\n        /* \"contracts/ss.sol\":942:943  a */\n      dup4\n        /* \"contracts/ss.sol\":942:947  a - b */\n      sub\n        /* \"contracts/ss.sol\":935:947  return a - b */\n      swap1\n      pop\n        /* \"contracts/ss.sol\":842:952  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a7230582084c5528f08b22368d3db09a2ff23aa22cff706342a7487c44eb06df2b4fae0910029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x4 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x25E2 CODESIZE SUB DUP1 PUSH3 0x25E2 DUP4 CODECOPY DUP2 ADD DUP1 PUSH1 0x40 MSTORE DUP2 ADD SWAP1 DUP1 DUP1 MLOAD DUP3 ADD SWAP3 SWAP2 SWAP1 PUSH1 0x20 ADD DUP1 MLOAD DUP3 ADD SWAP3 SWAP2 SWAP1 PUSH1 0x20 ADD DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x0 DUP6 PUSH1 0x5 DUP2 SWAP1 SSTORE POP DUP5 PUSH1 0x6 DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x7 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x8 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x9 DUP2 SWAP1 SSTORE POP DUP9 MLOAD PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH1 0x0 SWAP1 POP JUMPDEST DUP9 MLOAD DUP2 LT ISZERO PUSH3 0x3BD JUMPI PUSH1 0x3 DUP10 DUP3 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH3 0xD1 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP SWAP1 PUSH1 0x1 DUP3 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH1 0x60 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP4 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH3 0x17E JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP2 MSTORE POP PUSH1 0x1 PUSH1 0x0 DUP12 DUP5 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH3 0x19E JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP PUSH1 0x2 PUSH1 0x0 DUP11 DUP4 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH3 0x269 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP8 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP SWAP1 PUSH1 0x1 DUP3 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x0 DUP12 DUP5 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH3 0x327 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH3 0xB6 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP PUSH2 0x220C DUP1 PUSH3 0x3D6 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x112 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x1267951 EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x2AA9BE2 EQ PUSH2 0x14D JUMPI DUP1 PUSH4 0x6A49FCE EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0x15FEBD68 EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x2D15CC04 EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x2F9C4BBA EQ PUSH2 0x2DF JUMPI DUP1 PUSH4 0x302B6872 EQ PUSH2 0x34B JUMPI DUP1 PUSH4 0x3477EE2E EQ PUSH2 0x3C2 JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x42F JUMPI DUP1 PUSH4 0x58E7525F EQ PUSH2 0x466 JUMPI DUP1 PUSH4 0x6DD7D8EA EQ PUSH2 0x4BD JUMPI DUP1 PUSH4 0xA9A981A3 EQ PUSH2 0x4F3 JUMPI DUP1 PUSH4 0xA9FF959E EQ PUSH2 0x51E JUMPI DUP1 PUSH4 0xAE6E43F5 EQ PUSH2 0x549 JUMPI DUP1 PUSH4 0xB642FACD EQ PUSH2 0x58C JUMPI DUP1 PUSH4 0xD09F1AB4 EQ PUSH2 0x60F JUMPI DUP1 PUSH4 0xD161C767 EQ PUSH2 0x63A JUMPI DUP1 PUSH4 0xD51B9E93 EQ PUSH2 0x665 JUMPI DUP1 PUSH4 0xD55B7DFF EQ PUSH2 0x6C0 JUMPI DUP1 PUSH4 0xF8AC9DD5 EQ PUSH2 0x6EB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x716 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x159 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x198 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xBA3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AF PUSH2 0x1101 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1F2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1D7 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x212 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x231 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x118F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x253 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x288 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x11EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2CB JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2B0 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F4 PUSH2 0x12B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x337 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x31C JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x357 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x134F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3ED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x13D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x464 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1417 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x472 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x16C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1714 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x508 PUSH2 0x1B00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x533 PUSH2 0x1B06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x555 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x58A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1B0C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x598 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5CD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x20CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x61B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x624 PUSH2 0x2138 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x646 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x64F PUSH2 0x213E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x671 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2144 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6D5 PUSH2 0x219D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x700 PUSH2 0x21A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x5 SLOAD CALLVALUE LT ISZERO ISZERO ISZERO PUSH2 0x729 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0x786 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7DB CALLVALUE PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x21A9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH1 0x3 DUP4 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP SWAP1 PUSH1 0x1 DUP3 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH1 0x60 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP PUSH2 0x9BD CALLVALUE PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x21A9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xA56 PUSH1 0x1 PUSH1 0x4 SLOAD PUSH2 0x21A9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 CALLER SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP SWAP1 PUSH1 0x1 DUP3 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH32 0x7635F1D87B47FBA9F2B09E56EB4BE75CCA030E0CB179C1602AC9261D39A8F5C1 CALLER DUP5 CALLVALUE PUSH1 0x40 MLOAD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 DUP1 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO ISZERO ISZERO PUSH2 0xC35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xD6E JUMPI PUSH1 0x5 SLOAD PUSH2 0xD60 DUP3 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x21C7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST LT ISZERO ISZERO ISZERO PUSH2 0xD6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST JUMPDEST PUSH2 0xDC3 DUP5 PUSH1 0x1 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x21C7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0xE9B DUP5 PUSH1 0x1 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x21C7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xF33 NUMBER PUSH1 0x9 SLOAD PUSH2 0x21A9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP PUSH2 0xF9A DUP5 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x21A9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP4 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP SWAP1 PUSH1 0x1 DUP3 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE POP PUSH32 0xAA0E554F781C3C3B2BE110A0557F260F11AF9A8AA2C64BC1E7A31DBB21E32FA2 CALLER DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x1185 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x113B JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x12AC JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x1262 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x1345 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x1331 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 DUP2 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x13E8 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 PUSH1 0x0 DUP3 GT ISZERO ISZERO PUSH2 0x142A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 NUMBER LT ISZERO ISZERO ISZERO PUSH2 0x1439 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT ISZERO ISZERO PUSH2 0x149A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP3 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x14E9 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD EQ ISZERO ISZERO PUSH2 0x1500 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP3 POP PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP5 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x15F9 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP5 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x164D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 CALLER DUP7 DUP6 PUSH1 0x40 MLOAD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x6 SLOAD CALLVALUE LT ISZERO ISZERO ISZERO PUSH2 0x1725 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x1781 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x17D6 CALLVALUE PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x21A9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO PUSH2 0x1948 JUMPI PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 CALLER SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP SWAP1 PUSH1 0x1 DUP3 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMPDEST PUSH2 0x19DA CALLVALUE PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x21A9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH32 0x66A9138482C99E9BAF08860110EF332CC0C23B4A199A53593D8DB0FC8F96FBFC CALLER DUP4 CALLVALUE PUSH1 0x40 MLOAD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1BAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x1C0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1C7B PUSH1 0x1 PUSH1 0x4 SLOAD PUSH2 0x21C7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH1 0x0 SWAP5 POP JUMPDEST PUSH1 0x3 DUP1 SLOAD SWAP1 POP DUP6 LT ISZERO PUSH2 0x1D4E JUMPI DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 DUP7 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x1CB9 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1D41 JUMPI PUSH1 0x3 DUP6 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x1D0F JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH2 0x1D4E JUMP JUMPDEST DUP5 DUP1 PUSH1 0x1 ADD SWAP6 POP POP PUSH2 0x1C86 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP4 POP PUSH2 0x1E25 DUP5 PUSH1 0x1 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x21C7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1F05 NUMBER PUSH1 0x8 SLOAD PUSH2 0x21A9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP PUSH2 0x1F6C DUP5 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x21A9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP4 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP SWAP1 PUSH1 0x1 DUP3 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE POP PUSH32 0x4EDF3E325D0063213A39F9085522994A1C44BEA5F39E7D63EF61260A1E58C6D3 CALLER DUP8 PUSH1 0x40 MLOAD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO ISZERO ISZERO PUSH2 0x21BD JUMPI INVALID JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO ISZERO ISZERO PUSH2 0x21D5 JUMPI INVALID JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 DUP5 0xc5 MSTORE DUP16 ADDMOD 0xb2 0x23 PUSH9 0xD3DB09A2FF23AA22CF 0xf7 MOD CALLVALUE 0x2a PUSH21 0x87C44EB06DF2B4FAE0910029000000000000000000 ",
							"sourceMap": "1147:7775:0:-;;;2013:1;1981:33;;3627:1025;8:9:-1;5:2;;;30:1;27;20:12;5:2;3627:1025:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4229:9;3958:16;3940:15;:34;;;;3998:12;3984:11;:26;;;;4041:19;4020:18;:40;;;;4095:23;4070:22;:48;;;;4149:19;4128:18;:40;;;;4195:11;:18;4178:14;:35;;;;4241:1;4229:13;;4224:422;4248:11;:18;4244:1;:22;4224:422;;;4287:10;4303:11;4315:1;4303:14;;;;;;;;;;;;;;;;;;4287:31;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;4287:31:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4366:132;;;;;;;;;4406:11;4366:132;;;;;;4448:4;4366:132;;;;;;4475:5;4481:1;4475:8;;;;;;;;;;;;;;;;;;4366:132;;;4332:15;:31;4348:11;4360:1;4348:14;;;;;;;;;;;;;;;;;;4332:31;;;;;;;;;;;;;;;:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4512:6;:22;4519:11;4531:1;4519:14;;;;;;;;;;;;;;;;;;4512:22;;;;;;;;;;;;;;;4540:11;4512:40;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;4512:40:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4620:15;;4566;:31;4582:11;4594:1;4582:14;;;;;;;;;;;;;;;;;;4566:31;;;;;;;;;;;;;;;:38;;:51;4605:11;4566:51;;;;;;;;;;;;;;;:69;;;;4268:3;;;;;;;4224:422;;;3627:1025;;;;;;;;;1147:7775;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405260043610610112576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063012679511461011757806302aa9be21461014d57806306a49fce1461019a57806315febd68146102065780632d15cc04146102475780632f9c4bba146102df578063302b68721461034b5780633477ee2e146103c2578063441a3e701461042f57806358e7525f146104665780636dd7d8ea146104bd578063a9a981a3146104f3578063a9ff959e1461051e578063ae6e43f514610549578063b642facd1461058c578063d09f1ab41461060f578063d161c7671461063a578063d51b9e9314610665578063d55b7dff146106c0578063f8ac9dd5146106eb575b600080fd5b61014b600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610716565b005b34801561015957600080fd5b50610198600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610ba3565b005b3480156101a657600080fd5b506101af611101565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156101f25780820151818401526020810190506101d7565b505050509050019250505060405180910390f35b34801561021257600080fd5b506102316004803603810190808035906020019092919050505061118f565b6040518082815260200191505060405180910390f35b34801561025357600080fd5b50610288600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506111eb565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156102cb5780820151818401526020810190506102b0565b505050509050019250505060405180910390f35b3480156102eb57600080fd5b506102f46112b8565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561033757808201518184015260208101905061031c565b505050509050019250505060405180910390f35b34801561035757600080fd5b506103ac600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061134f565b6040518082815260200191505060405180910390f35b3480156103ce57600080fd5b506103ed600480360381019080803590602001909291905050506113d9565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561043b57600080fd5b506104646004803603810190808035906020019092919080359060200190929190505050611417565b005b34801561047257600080fd5b506104a7600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506116c8565b6040518082815260200191505060405180910390f35b6104f1600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611714565b005b3480156104ff57600080fd5b50610508611b00565b6040518082815260200191505060405180910390f35b34801561052a57600080fd5b50610533611b06565b6040518082815260200191505060405180910390f35b34801561055557600080fd5b5061058a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b0c565b005b34801561059857600080fd5b506105cd600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506120cc565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561061b57600080fd5b50610624612138565b6040518082815260200191505060405180910390f35b34801561064657600080fd5b5061064f61213e565b6040518082815260200191505060405180910390f35b34801561067157600080fd5b506106a6600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612144565b604051808215151515815260200191505060405180910390f35b3480156106cc57600080fd5b506106d561219d565b6040518082815260200191505060405180910390f35b3480156106f757600080fd5b506107006121a3565b6040518082815260200191505060405180910390f35b6000600554341015151561072957600080fd5b81600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160149054906101000a900460ff1615151561078657600080fd5b6107db34600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101546121a990919063ffffffff16565b915060038390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506060604051908101604052803373ffffffffffffffffffffffffffffffffffffffff16815260200160011515815260200183815250600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548160ff021916908315150217905550604082015181600101559050506109bd34600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546121a990919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610a5660016004546121a990919063ffffffff16565b600481905550600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000203390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550507f7635f1d87b47fba9f2b09e56eb4be75cca030e0cb179c1602ac9261d39a8f5c1338434604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a1505050565b6000828280600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410151515610c3557600080fd5b3373ffffffffffffffffffffffffffffffffffffffff16600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610d6e57600554610d6082600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546121c790919063ffffffff16565b10151515610d6d57600080fd5b5b610dc384600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101546121c790919063ffffffff16565b600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010181905550610e9b84600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546121c790919063ffffffff16565b600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610f33436009546121a990919063ffffffff16565b9250610f9a846000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000016000868152602001908152602001600020546121a990919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000016000858152602001908152602001600020819055506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018390806001815401808255809150509060018203906000526020600020016000909192909190915055507faa0e554f781c3c3b2be110a0557f260f11af9a8aa2c64bc1e7a31dbb21e32fa2338686604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a15050505050565b6060600380548060200260200160405190810160405280929190818152602001828054801561118557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161113b575b5050505050905090565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000016000838152602001908152602001600020549050919050565b6060600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156112ac57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611262575b50505050509050919050565b60606000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010180548060200260200160405190810160405280929190818152602001828054801561134557602002820191906000526020600020905b815481526020019060010190808311611331575b5050505050905090565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6003818154811015156113e857fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000828260008211151561142a57600080fd5b81431015151561143957600080fd5b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008481526020019081526020016000205411151561149a57600080fd5b816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101828154811015156114e957fe5b906000526020600020015414151561150057600080fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008681526020019081526020016000205492506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000016000868152602001908152602001600020600090556000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101848154811015156115f957fe5b90600052602060002001600090553373ffffffffffffffffffffffffffffffffffffffff166108fc849081150290604051600060405180830381858888f1935050505015801561164d573d6000803e3d6000fd5b507ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568338685604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a15050505050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549050919050565b600654341015151561172557600080fd5b80600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160149054906101000a900460ff16151561178157600080fd5b6117d634600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101546121a990919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055506000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054141561194857600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000203390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505b6119da34600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546121a990919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f66a9138482c99e9baf08860110ef332cc0c23b4a199a53593d8db0fc8f96fbfc338334604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a15050565b60045481565b60095481565b6000806000833373ffffffffffffffffffffffffffffffffffffffff16600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515611bae57600080fd5b84600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160149054906101000a900460ff161515611c0a57600080fd5b6000600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160146101000a81548160ff021916908315150217905550611c7b60016004546121c790919063ffffffff16565b600481905550600094505b600380549050851015611d4e578573ffffffffffffffffffffffffffffffffffffffff16600386815481101515611cb957fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611d4157600385815481101515611d0f57fe5b9060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055611d4e565b8480600101955050611c86565b600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549350611e2584600160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101546121c790919063ffffffff16565b600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055506000600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611f05436008546121a990919063ffffffff16565b9250611f6c846000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000016000868152602001908152602001600020546121a990919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000016000858152602001908152602001600020819055506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018390806001815401808255809150509060018203906000526020600020016000909192909190915055507f4edf3e325d0063213a39f9085522994a1c44bea5f39e7d63ef61260a1e58c6d33387604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a1505050505050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60075481565b60085481565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160149054906101000a900460ff169050919050565b60055481565b60065481565b60008082840190508381101515156121bd57fe5b8091505092915050565b60008282111515156121d557fe5b8183039050929150505600a165627a7a7230582084c5528f08b22368d3db09a2ff23aa22cff706342a7487c44eb06df2b4fae0910029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x112 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x1267951 EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x2AA9BE2 EQ PUSH2 0x14D JUMPI DUP1 PUSH4 0x6A49FCE EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0x15FEBD68 EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x2D15CC04 EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x2F9C4BBA EQ PUSH2 0x2DF JUMPI DUP1 PUSH4 0x302B6872 EQ PUSH2 0x34B JUMPI DUP1 PUSH4 0x3477EE2E EQ PUSH2 0x3C2 JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x42F JUMPI DUP1 PUSH4 0x58E7525F EQ PUSH2 0x466 JUMPI DUP1 PUSH4 0x6DD7D8EA EQ PUSH2 0x4BD JUMPI DUP1 PUSH4 0xA9A981A3 EQ PUSH2 0x4F3 JUMPI DUP1 PUSH4 0xA9FF959E EQ PUSH2 0x51E JUMPI DUP1 PUSH4 0xAE6E43F5 EQ PUSH2 0x549 JUMPI DUP1 PUSH4 0xB642FACD EQ PUSH2 0x58C JUMPI DUP1 PUSH4 0xD09F1AB4 EQ PUSH2 0x60F JUMPI DUP1 PUSH4 0xD161C767 EQ PUSH2 0x63A JUMPI DUP1 PUSH4 0xD51B9E93 EQ PUSH2 0x665 JUMPI DUP1 PUSH4 0xD55B7DFF EQ PUSH2 0x6C0 JUMPI DUP1 PUSH4 0xF8AC9DD5 EQ PUSH2 0x6EB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x716 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x159 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x198 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xBA3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AF PUSH2 0x1101 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1F2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1D7 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x212 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x231 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x118F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x253 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x288 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x11EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2CB JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2B0 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F4 PUSH2 0x12B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x337 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x31C JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x357 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x134F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3ED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x13D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x464 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1417 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x472 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x16C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1714 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x508 PUSH2 0x1B00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x533 PUSH2 0x1B06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x555 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x58A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1B0C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x598 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5CD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x20CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x61B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x624 PUSH2 0x2138 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x646 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x64F PUSH2 0x213E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x671 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2144 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6D5 PUSH2 0x219D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x700 PUSH2 0x21A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x5 SLOAD CALLVALUE LT ISZERO ISZERO ISZERO PUSH2 0x729 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0x786 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7DB CALLVALUE PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x21A9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH1 0x3 DUP4 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP SWAP1 PUSH1 0x1 DUP3 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH1 0x60 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP PUSH2 0x9BD CALLVALUE PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x21A9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xA56 PUSH1 0x1 PUSH1 0x4 SLOAD PUSH2 0x21A9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 CALLER SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP SWAP1 PUSH1 0x1 DUP3 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH32 0x7635F1D87B47FBA9F2B09E56EB4BE75CCA030E0CB179C1602AC9261D39A8F5C1 CALLER DUP5 CALLVALUE PUSH1 0x40 MLOAD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 DUP1 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO ISZERO ISZERO PUSH2 0xC35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xD6E JUMPI PUSH1 0x5 SLOAD PUSH2 0xD60 DUP3 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x21C7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST LT ISZERO ISZERO ISZERO PUSH2 0xD6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST JUMPDEST PUSH2 0xDC3 DUP5 PUSH1 0x1 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x21C7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0xE9B DUP5 PUSH1 0x1 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x21C7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xF33 NUMBER PUSH1 0x9 SLOAD PUSH2 0x21A9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP PUSH2 0xF9A DUP5 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x21A9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP4 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP SWAP1 PUSH1 0x1 DUP3 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE POP PUSH32 0xAA0E554F781C3C3B2BE110A0557F260F11AF9A8AA2C64BC1E7A31DBB21E32FA2 CALLER DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x1185 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x113B JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x12AC JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x1262 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x1345 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x1331 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 DUP2 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x13E8 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 PUSH1 0x0 DUP3 GT ISZERO ISZERO PUSH2 0x142A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 NUMBER LT ISZERO ISZERO ISZERO PUSH2 0x1439 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT ISZERO ISZERO PUSH2 0x149A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP3 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x14E9 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD EQ ISZERO ISZERO PUSH2 0x1500 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP3 POP PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP5 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x15F9 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP5 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x164D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 CALLER DUP7 DUP6 PUSH1 0x40 MLOAD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x6 SLOAD CALLVALUE LT ISZERO ISZERO ISZERO PUSH2 0x1725 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x1781 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x17D6 CALLVALUE PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x21A9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO PUSH2 0x1948 JUMPI PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 CALLER SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP SWAP1 PUSH1 0x1 DUP3 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMPDEST PUSH2 0x19DA CALLVALUE PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x21A9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH32 0x66A9138482C99E9BAF08860110EF332CC0C23B4A199A53593D8DB0FC8F96FBFC CALLER DUP4 CALLVALUE PUSH1 0x40 MLOAD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1BAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x1C0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1C7B PUSH1 0x1 PUSH1 0x4 SLOAD PUSH2 0x21C7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH1 0x0 SWAP5 POP JUMPDEST PUSH1 0x3 DUP1 SLOAD SWAP1 POP DUP6 LT ISZERO PUSH2 0x1D4E JUMPI DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 DUP7 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x1CB9 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1D41 JUMPI PUSH1 0x3 DUP6 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x1D0F JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH2 0x1D4E JUMP JUMPDEST DUP5 DUP1 PUSH1 0x1 ADD SWAP6 POP POP PUSH2 0x1C86 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP4 POP PUSH2 0x1E25 DUP5 PUSH1 0x1 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x21C7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1F05 NUMBER PUSH1 0x8 SLOAD PUSH2 0x21A9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP PUSH2 0x1F6C DUP5 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x21A9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP4 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP SWAP1 PUSH1 0x1 DUP3 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE POP PUSH32 0x4EDF3E325D0063213A39F9085522994A1C44BEA5F39E7D63EF61260A1E58C6D3 CALLER DUP8 PUSH1 0x40 MLOAD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO ISZERO ISZERO PUSH2 0x21BD JUMPI INVALID JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO ISZERO ISZERO PUSH2 0x21D5 JUMPI INVALID JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 DUP5 0xc5 MSTORE DUP16 ADDMOD 0xb2 0x23 PUSH9 0xD3DB09A2FF23AA22CF 0xf7 MOD CALLVALUE 0x2a PUSH21 0x87C44EB06DF2B4FAE0910029000000000000000000 ",
							"sourceMap": "1147:7775:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4658:639;;;;;;;;;;;;;;;;;;;;;;;;;;;;6873:666;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6873:666:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5806:90;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5806:90:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5806:90:0;;;;;;;;;;;;;;;;;6723:144;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6723:144:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6334:112;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6334:112:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6334:112:0;;;;;;;;;;;;;;;;;6588:129;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6588:129:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6588:129:0;;;;;;;;;;;;;;;;;6176:152;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6176:152:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1947:27;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1947:27:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8530:390;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8530:390:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5902:129;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5902:129:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5303:497;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:33;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1981:33:0;;;;;;;;;;;;;;;;;;;;;;;2170;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2170:33:0;;;;;;;;;;;;;;;;;;;;;;;7545:979;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7545:979:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;6037:133;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6037:133:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2088:33;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2088:33:0;;;;;;;;;;;;;;;;;;;;;;;2127:37;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2127:37:0;;;;;;;;;;;;;;;;;;;;;;;6452:130;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6452:130:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:30;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2020:30:0;;;;;;;;;;;;;;;;;;;;;;;2056:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2056:26:0;;;;;;;;;;;;;;;;;;;;;;;4658:639;4773:11;2333:15;;2320:9;:28;;2312:37;;;;;;;;4751:10;2918:15;:27;2934:10;2918:27;;;;;;;;;;;;;;;:39;;;;;;;;;;;;2917:40;2909:49;;;;;;;;4787:46;4823:9;4787:15;:27;4803:10;4787:27;;;;;;;;;;;;;;;:31;;;:35;;:46;;;;:::i;:::-;4773:60;;4843:10;4859;4843:27;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;4843:27:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4910:110;;;;;;;;;4946:10;4910:110;;;;;;4983:4;4910:110;;;;;;5006:3;4910:110;;;4880:15;:27;4896:10;4880:27;;;;;;;;;;;;;;;:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5079:61;5130:9;5079:15;:27;5095:10;5079:27;;;;;;;;;;;;;;;:34;;:46;5114:10;5079:46;;;;;;;;;;;;;;;;:50;;:61;;;;:::i;:::-;5030:15;:27;5046:10;5030:27;;;;;;;;;;;;;;;:34;;:46;5065:10;5030:46;;;;;;;;;;;;;;;:110;;;;5167:21;5186:1;5167:14;;:18;;:21;;;;:::i;:::-;5150:14;:38;;;;5198:6;:18;5205:10;5198:18;;;;;;;;;;;;;;;5222:10;5198:35;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;5198:35:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5248:42;5256:10;5268;5280:9;5248:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2359:1;4658:639;;:::o;6873:666::-;7212:27;6944:10;6956:4;3108;3058:15;:27;3074:10;3058:27;;;;;;;;;;;;;;;:34;;:46;3093:10;3058:46;;;;;;;;;;;;;;;;:54;;3050:63;;;;;;;;3164:10;3127:47;;:15;:27;3143:10;3127:27;;;;;;;;;;;;;;;:33;;;;;;;;;;;;:47;;;3123:162;;;3258:15;;3198:56;3249:4;3198:15;:27;3214:10;3198:27;;;;;;;;;;;;;;;:34;;:46;3233:10;3198:46;;;;;;;;;;;;;;;;:50;;:56;;;;:::i;:::-;:75;;3190:84;;;;;;;;3123:162;7006:41;7042:4;7006:15;:27;7022:10;7006:27;;;;;;;;;;;;;;;:31;;;:35;;:41;;;;:::i;:::-;6972:15;:27;6988:10;6972:27;;;;;;;;;;;;;;;:31;;:75;;;;7106:56;7157:4;7106:15;:27;7122:10;7106:27;;;;;;;;;;;;;;;:34;;:46;7141:10;7106:46;;;;;;;;;;;;;;;;:50;;:56;;;;:::i;:::-;7057:15;:27;7073:10;7057:27;;;;;;;;;;;;;;;:34;;:46;7092:10;7057:46;;;;;;;;;;;;;;;:105;;;;7242:36;7265:12;7242:18;;:22;;:36;;;;:::i;:::-;7212:66;;7343:62;7400:4;7343:14;:26;7358:10;7343:26;;;;;;;;;;;;;;;:31;;:52;7375:19;7343:52;;;;;;;;;;;;:56;;:62;;;;:::i;:::-;7288:14;:26;7303:10;7288:26;;;;;;;;;;;;;;;:31;;:52;7320:19;7288:52;;;;;;;;;;;:117;;;;7415:14;:26;7430:10;7415:26;;;;;;;;;;;;;;;:39;;7460:19;7415:65;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;7415:65:0;;;;;;;;;;;;;;;;;;;;;;7496:36;7503:10;7515;7527:4;7496:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6873:666;;;;;:::o;5806:90::-;5851:9;5879:10;5872:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5806:90;:::o;6723:144::-;6789:7;6815:14;:26;6830:10;6815:26;;;;;;;;;;;;;;;:31;;:45;6847:12;6815:45;;;;;;;;;;;;6808:52;;6723:144;;;:::o;6334:112::-;6393:9;6421:6;:18;6428:10;6421:18;;;;;;;;;;;;;;;6414:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6334:112;;;:::o;6588:129::-;6643:9;6671:14;:26;6686:10;6671:26;;;;;;;;;;;;;;;:39;;6664:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6588:129;:::o;6176:152::-;6253:7;6279:15;:27;6295:10;6279:27;;;;;;;;;;;;;;;:34;;:42;6314:6;6279:42;;;;;;;;;;;;;;;;6272:49;;6176:152;;;;:::o;1947:27::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;8530:390::-;8640:11;8608:12;8622:6;3404:1;3389:12;:16;3381:25;;;;;;;;3440:12;3424;:28;;3416:37;;;;;;;;3519:1;3471:14;:26;3486:10;3471:26;;;;;;;;;;;;;;;:31;;:45;3503:12;3471:45;;;;;;;;;;;;:49;3463:58;;;;;;;;3590:12;3539:14;:26;3554:10;3539:26;;;;;;;;;;;;;;;:39;;3579:6;3539:47;;;;;;;;;;;;;;;;;;:63;3531:72;;;;;;;;8654:14;:26;8669:10;8654:26;;;;;;;;;;;;;;;:31;;:45;8686:12;8654:45;;;;;;;;;;;;8640:59;;8716:14;:26;8731:10;8716:26;;;;;;;;;;;;;;;:31;;:45;8748:12;8716:45;;;;;;;;;;;8709:52;;;8778:14;:26;8793:10;8778:26;;;;;;;;;;;;;;;:39;;8818:6;8778:47;;;;;;;;;;;;;;;;;8771:54;;;8835:10;:19;;:24;8855:3;8835:24;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8835:24:0;8874:39;8883:10;8895:12;8909:3;8874:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8530:390;;;;;:::o;5902:129::-;5967:7;5993:15;:27;6009:10;5993:27;;;;;;;;;;;;;;;:31;;;5986:38;;5902:129;;;:::o;5303:497::-;2431:11;;2418:9;:24;;2410:33;;;;;;;;5391:10;2788:15;:27;2804:10;2788:27;;;;;;;;;;;;;;;:39;;;;;;;;;;;;2780:48;;;;;;;;5447:46;5483:9;5447:15;:27;5463:10;5447:27;;;;;;;;;;;;;;;:31;;;:35;;:46;;;;:::i;:::-;5413:15;:27;5429:10;5413:27;;;;;;;;;;;;;;;:31;;:80;;;;5557:1;5507:15;:27;5523:10;5507:27;;;;;;;;;;;;;;;:34;;:46;5542:10;5507:46;;;;;;;;;;;;;;;;:51;5503:117;;;5574:6;:18;5581:10;5574:18;;;;;;;;;;;;;;;5598:10;5574:35;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;5574:35:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5503:117;5678:61;5729:9;5678:15;:27;5694:10;5678:27;;;;;;;;;;;;;;;:34;;:46;5713:10;5678:46;;;;;;;;;;;;;;;;:50;;:61;;;;:::i;:::-;5629:15;:27;5645:10;5629:27;;;;;;;;;;;;;;;:34;;:46;5664:10;5629:46;;;;;;;;;;;;;;;:110;;;;5754:39;5759:10;5771;5783:9;5754:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2453:1;5303:497;:::o;1981:33::-;;;;:::o;2170:::-;;;;:::o;7545:979::-;7756:9;7941:11;8201:27;7598:10;2561;2524:47;;:15;:27;2540:10;2524:27;;;;;;;;;;;;;;;:33;;;;;;;;;;;;:47;;;2516:56;;;;;;;;7624:10;2657:15;:27;2673:10;2657:27;;;;;;;;;;;;;;;:39;;;;;;;;;;;;2649:48;;;;;;;;7688:5;7646:15;:27;7662:10;7646:27;;;;;;;;;;;;;;;:39;;;:47;;;;;;;;;;;;;;;;;;7720:21;7739:1;7720:14;;:18;;:21;;;;:::i;:::-;7703:14;:38;;;;7768:1;7756:13;;7751:181;7775:10;:17;;;;7771:1;:21;7751:181;;;7834:10;7817:27;;:10;7828:1;7817:13;;;;;;;;;;;;;;;;;;;;;;;;;;;:27;;;7813:109;;;7871:10;7882:1;7871:13;;;;;;;;;;;;;;;;;;7864:20;;;;;;;;;;;7902:5;;7813:109;7794:3;;;;;;;7751:181;;;7955:15;:27;7971:10;7955:27;;;;;;;;;;;;;;;:34;;:46;7990:10;7955:46;;;;;;;;;;;;;;;;7941:60;;8045:40;8081:3;8045:15;:27;8061:10;8045:27;;;;;;;;;;;;;;;:31;;;:35;;:40;;;;:::i;:::-;8011:15;:27;8027:10;8011:27;;;;;;;;;;;;;;;:31;;:74;;;;8144:1;8095:15;:27;8111:10;8095:27;;;;;;;;;;;;;;;:34;;:46;8130:10;8095:46;;;;;;;;;;;;;;;:50;;;;8231:40;8258:12;8231:22;;:26;;:40;;;;:::i;:::-;8201:70;;8336:61;8393:3;8336:14;:26;8351:10;8336:26;;;;;;;;;;;;;;;:31;;:52;8368:19;8336:52;;;;;;;;;;;;:56;;:61;;;;:::i;:::-;8281:14;:26;8296:10;8281:26;;;;;;;;;;;;;;;:31;;:52;8313:19;8281:52;;;;;;;;;;;:116;;;;8407:14;:26;8422:10;8407:26;;;;;;;;;;;;;;;:39;;8452:19;8407:65;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;8407:65:0;;;;;;;;;;;;;;;;;;;;;;8487:30;8494:10;8506;8487:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2582:1;7545:979;;;;;:::o;6037:133::-;6104:7;6130:15;:27;6146:10;6130:27;;;;;;;;;;;;;;;:33;;;;;;;;;;;;6123:40;;6037:133;;;:::o;2088:33::-;;;;:::o;2127:37::-;;;;:::o;6452:130::-;6513:4;6536:15;:27;6552:10;6536:27;;;;;;;;;;;;;;;:39;;;;;;;;;;;;6529:46;;6452:130;;;:::o;2020:30::-;;;;:::o;2056:26::-;;;;:::o;1014:129::-;1072:7;1087:9;1103:1;1099;:5;1087:17;;1122:1;1117;:6;;1110:14;;;;;;1137:1;1130:8;;1014:129;;;;;:::o;842:110::-;900:7;927:1;922;:6;;915:14;;;;;;946:1;942;:5;935:12;;842:110;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1743200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"candidateCount()": "636",
								"candidateWithdrawDelay()": "746",
								"candidates(uint256)": "940",
								"getCandidateCap(address)": "763",
								"getCandidateOwner(address)": "921",
								"getCandidates()": "infinite",
								"getVoterCap(address,address)": "822",
								"getVoters(address)": "infinite",
								"getWithdrawBlockNumbers()": "infinite",
								"getWithdrawCap(uint256)": "702",
								"isCandidate(address)": "1037",
								"maxValidatorNumber()": "724",
								"minCandidateCap()": "790",
								"minVoterCap()": "812",
								"propose(address)": "infinite",
								"resign(address)": "infinite",
								"unvote(address,uint256)": "infinite",
								"vote(address)": "infinite",
								"voterWithdrawDelay()": "658",
								"withdraw(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1147,
									"end": 8922,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 1147,
									"end": 8922,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1147,
									"end": 8922,
									"name": "MSTORE"
								},
								{
									"begin": 2013,
									"end": 2014,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1981,
									"end": 2014,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 1981,
									"end": 2014,
									"name": "SSTORE"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "POP"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "MLOAD"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "PUSHSIZE"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "CODESIZE"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "SUB"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "DUP1"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "PUSHSIZE"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "DUP4"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "CODECOPY"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "DUP2"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "ADD"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "DUP1"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "MSTORE"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "DUP2"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "ADD"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "SWAP1"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "DUP1"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "DUP1"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "MLOAD"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "DUP3"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "ADD"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "SWAP3"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "SWAP2"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "SWAP1"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "ADD"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "DUP1"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "MLOAD"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "DUP3"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "ADD"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "SWAP3"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "SWAP2"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "SWAP1"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "ADD"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "DUP1"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "MLOAD"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "SWAP1"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "ADD"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "SWAP1"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "SWAP3"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "SWAP2"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "SWAP1"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "DUP1"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "MLOAD"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "SWAP1"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "ADD"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "SWAP1"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "SWAP3"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "SWAP2"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "SWAP1"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "DUP1"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "MLOAD"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "SWAP1"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "ADD"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "SWAP1"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "SWAP3"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "SWAP2"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "SWAP1"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "DUP1"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "MLOAD"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "SWAP1"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "ADD"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "SWAP1"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "SWAP3"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "SWAP2"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "SWAP1"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "DUP1"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "MLOAD"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "SWAP1"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "ADD"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "SWAP1"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "SWAP3"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "SWAP2"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "SWAP1"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "DUP1"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "MLOAD"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "SWAP1"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "ADD"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "SWAP1"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "SWAP3"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "SWAP2"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "SWAP1"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "POP"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "POP"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "POP"
								},
								{
									"begin": 4229,
									"end": 4238,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 3958,
									"end": 3974,
									"name": "DUP6"
								},
								{
									"begin": 3940,
									"end": 3955,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 3940,
									"end": 3974,
									"name": "DUP2"
								},
								{
									"begin": 3940,
									"end": 3974,
									"name": "SWAP1"
								},
								{
									"begin": 3940,
									"end": 3974,
									"name": "SSTORE"
								},
								{
									"begin": 3940,
									"end": 3974,
									"name": "POP"
								},
								{
									"begin": 3998,
									"end": 4010,
									"name": "DUP5"
								},
								{
									"begin": 3984,
									"end": 3995,
									"name": "PUSH",
									"value": "6"
								},
								{
									"begin": 3984,
									"end": 4010,
									"name": "DUP2"
								},
								{
									"begin": 3984,
									"end": 4010,
									"name": "SWAP1"
								},
								{
									"begin": 3984,
									"end": 4010,
									"name": "SSTORE"
								},
								{
									"begin": 3984,
									"end": 4010,
									"name": "POP"
								},
								{
									"begin": 4041,
									"end": 4060,
									"name": "DUP4"
								},
								{
									"begin": 4020,
									"end": 4038,
									"name": "PUSH",
									"value": "7"
								},
								{
									"begin": 4020,
									"end": 4060,
									"name": "DUP2"
								},
								{
									"begin": 4020,
									"end": 4060,
									"name": "SWAP1"
								},
								{
									"begin": 4020,
									"end": 4060,
									"name": "SSTORE"
								},
								{
									"begin": 4020,
									"end": 4060,
									"name": "POP"
								},
								{
									"begin": 4095,
									"end": 4118,
									"name": "DUP3"
								},
								{
									"begin": 4070,
									"end": 4092,
									"name": "PUSH",
									"value": "8"
								},
								{
									"begin": 4070,
									"end": 4118,
									"name": "DUP2"
								},
								{
									"begin": 4070,
									"end": 4118,
									"name": "SWAP1"
								},
								{
									"begin": 4070,
									"end": 4118,
									"name": "SSTORE"
								},
								{
									"begin": 4070,
									"end": 4118,
									"name": "POP"
								},
								{
									"begin": 4149,
									"end": 4168,
									"name": "DUP2"
								},
								{
									"begin": 4128,
									"end": 4146,
									"name": "PUSH",
									"value": "9"
								},
								{
									"begin": 4128,
									"end": 4168,
									"name": "DUP2"
								},
								{
									"begin": 4128,
									"end": 4168,
									"name": "SWAP1"
								},
								{
									"begin": 4128,
									"end": 4168,
									"name": "SSTORE"
								},
								{
									"begin": 4128,
									"end": 4168,
									"name": "POP"
								},
								{
									"begin": 4195,
									"end": 4206,
									"name": "DUP9"
								},
								{
									"begin": 4195,
									"end": 4213,
									"name": "MLOAD"
								},
								{
									"begin": 4178,
									"end": 4192,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 4178,
									"end": 4213,
									"name": "DUP2"
								},
								{
									"begin": 4178,
									"end": 4213,
									"name": "SWAP1"
								},
								{
									"begin": 4178,
									"end": 4213,
									"name": "SSTORE"
								},
								{
									"begin": 4178,
									"end": 4213,
									"name": "POP"
								},
								{
									"begin": 4241,
									"end": 4242,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 4229,
									"end": 4242,
									"name": "SWAP1"
								},
								{
									"begin": 4229,
									"end": 4242,
									"name": "POP"
								},
								{
									"begin": 4224,
									"end": 4646,
									"name": "tag",
									"value": "4"
								},
								{
									"begin": 4224,
									"end": 4646,
									"name": "JUMPDEST"
								},
								{
									"begin": 4248,
									"end": 4259,
									"name": "DUP9"
								},
								{
									"begin": 4248,
									"end": 4266,
									"name": "MLOAD"
								},
								{
									"begin": 4244,
									"end": 4245,
									"name": "DUP2"
								},
								{
									"begin": 4244,
									"end": 4266,
									"name": "LT"
								},
								{
									"begin": 4224,
									"end": 4646,
									"name": "ISZERO"
								},
								{
									"begin": 4224,
									"end": 4646,
									"name": "PUSH [tag]",
									"value": "5"
								},
								{
									"begin": 4224,
									"end": 4646,
									"name": "JUMPI"
								},
								{
									"begin": 4287,
									"end": 4297,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 4303,
									"end": 4314,
									"name": "DUP10"
								},
								{
									"begin": 4315,
									"end": 4316,
									"name": "DUP3"
								},
								{
									"begin": 4303,
									"end": 4317,
									"name": "DUP2"
								},
								{
									"begin": 4303,
									"end": 4317,
									"name": "MLOAD"
								},
								{
									"begin": 4303,
									"end": 4317,
									"name": "DUP2"
								},
								{
									"begin": 4303,
									"end": 4317,
									"name": "LT"
								},
								{
									"begin": 4303,
									"end": 4317,
									"name": "ISZERO"
								},
								{
									"begin": 4303,
									"end": 4317,
									"name": "ISZERO"
								},
								{
									"begin": 4303,
									"end": 4317,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": 4303,
									"end": 4317,
									"name": "JUMPI"
								},
								{
									"begin": 4303,
									"end": 4317,
									"name": "INVALID"
								},
								{
									"begin": 4303,
									"end": 4317,
									"name": "tag",
									"value": "7"
								},
								{
									"begin": 4303,
									"end": 4317,
									"name": "JUMPDEST"
								},
								{
									"begin": 4303,
									"end": 4317,
									"name": "SWAP1"
								},
								{
									"begin": 4303,
									"end": 4317,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 4303,
									"end": 4317,
									"name": "ADD"
								},
								{
									"begin": 4303,
									"end": 4317,
									"name": "SWAP1"
								},
								{
									"begin": 4303,
									"end": 4317,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 4303,
									"end": 4317,
									"name": "MUL"
								},
								{
									"begin": 4303,
									"end": 4317,
									"name": "ADD"
								},
								{
									"begin": 4303,
									"end": 4317,
									"name": "MLOAD"
								},
								{
									"begin": 4287,
									"end": 4318,
									"name": "SWAP1"
								},
								{
									"begin": 4287,
									"end": 4318,
									"name": "DUP1"
								},
								{
									"begin": 39,
									"end": 40,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 33,
									"end": 36,
									"name": "DUP2"
								},
								{
									"begin": 27,
									"end": 37,
									"name": "SLOAD"
								},
								{
									"begin": 23,
									"end": 41,
									"name": "ADD"
								},
								{
									"begin": 57,
									"end": 67,
									"name": "DUP1"
								},
								{
									"begin": 52,
									"end": 55,
									"name": "DUP3"
								},
								{
									"begin": 45,
									"end": 68,
									"name": "SSTORE"
								},
								{
									"begin": 79,
									"end": 89,
									"name": "DUP1"
								},
								{
									"begin": 72,
									"end": 89,
									"name": "SWAP2"
								},
								{
									"begin": 72,
									"end": 89,
									"name": "POP"
								},
								{
									"begin": 0,
									"end": 93,
									"name": "POP"
								},
								{
									"begin": 4287,
									"end": 4318,
									"name": "SWAP1"
								},
								{
									"begin": 4287,
									"end": 4318,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 4287,
									"end": 4318,
									"name": "DUP3"
								},
								{
									"begin": 4287,
									"end": 4318,
									"name": "SUB"
								},
								{
									"begin": 4287,
									"end": 4318,
									"name": "SWAP1"
								},
								{
									"begin": 4287,
									"end": 4318,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 4287,
									"end": 4318,
									"name": "MSTORE"
								},
								{
									"begin": 4287,
									"end": 4318,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 4287,
									"end": 4318,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 4287,
									"end": 4318,
									"name": "KECCAK256"
								},
								{
									"begin": 4287,
									"end": 4318,
									"name": "ADD"
								},
								{
									"begin": 4287,
									"end": 4318,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 4287,
									"end": 4318,
									"name": "SWAP1"
								},
								{
									"begin": 4287,
									"end": 4318,
									"name": "SWAP2"
								},
								{
									"begin": 4287,
									"end": 4318,
									"name": "SWAP3"
								},
								{
									"begin": 4287,
									"end": 4318,
									"name": "SWAP1"
								},
								{
									"begin": 4287,
									"end": 4318,
									"name": "SWAP2"
								},
								{
									"begin": 4287,
									"end": 4318,
									"name": "SWAP1"
								},
								{
									"begin": 4287,
									"end": 4318,
									"name": "SWAP2"
								},
								{
									"begin": 4287,
									"end": 4318,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 4287,
									"end": 4318,
									"name": "EXP"
								},
								{
									"begin": 4287,
									"end": 4318,
									"name": "DUP2"
								},
								{
									"begin": 4287,
									"end": 4318,
									"name": "SLOAD"
								},
								{
									"begin": 4287,
									"end": 4318,
									"name": "DUP2"
								},
								{
									"begin": 4287,
									"end": 4318,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4287,
									"end": 4318,
									"name": "MUL"
								},
								{
									"begin": 4287,
									"end": 4318,
									"name": "NOT"
								},
								{
									"begin": 4287,
									"end": 4318,
									"name": "AND"
								},
								{
									"begin": 4287,
									"end": 4318,
									"name": "SWAP1"
								},
								{
									"begin": 4287,
									"end": 4318,
									"name": "DUP4"
								},
								{
									"begin": 4287,
									"end": 4318,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4287,
									"end": 4318,
									"name": "AND"
								},
								{
									"begin": 4287,
									"end": 4318,
									"name": "MUL"
								},
								{
									"begin": 4287,
									"end": 4318,
									"name": "OR"
								},
								{
									"begin": 4287,
									"end": 4318,
									"name": "SWAP1"
								},
								{
									"begin": 4287,
									"end": 4318,
									"name": "SSTORE"
								},
								{
									"begin": 4287,
									"end": 4318,
									"name": "POP"
								},
								{
									"begin": 4287,
									"end": 4318,
									"name": "POP"
								},
								{
									"begin": 4366,
									"end": 4498,
									"name": "PUSH",
									"value": "60"
								},
								{
									"begin": 4366,
									"end": 4498,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 4366,
									"end": 4498,
									"name": "MLOAD"
								},
								{
									"begin": 4366,
									"end": 4498,
									"name": "SWAP1"
								},
								{
									"begin": 4366,
									"end": 4498,
									"name": "DUP2"
								},
								{
									"begin": 4366,
									"end": 4498,
									"name": "ADD"
								},
								{
									"begin": 4366,
									"end": 4498,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 4366,
									"end": 4498,
									"name": "MSTORE"
								},
								{
									"begin": 4366,
									"end": 4498,
									"name": "DUP1"
								},
								{
									"begin": 4406,
									"end": 4417,
									"name": "DUP9"
								},
								{
									"begin": 4366,
									"end": 4498,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4366,
									"end": 4498,
									"name": "AND"
								},
								{
									"begin": 4366,
									"end": 4498,
									"name": "DUP2"
								},
								{
									"begin": 4366,
									"end": 4498,
									"name": "MSTORE"
								},
								{
									"begin": 4366,
									"end": 4498,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 4366,
									"end": 4498,
									"name": "ADD"
								},
								{
									"begin": 4448,
									"end": 4452,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 4366,
									"end": 4498,
									"name": "ISZERO"
								},
								{
									"begin": 4366,
									"end": 4498,
									"name": "ISZERO"
								},
								{
									"begin": 4366,
									"end": 4498,
									"name": "DUP2"
								},
								{
									"begin": 4366,
									"end": 4498,
									"name": "MSTORE"
								},
								{
									"begin": 4366,
									"end": 4498,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 4366,
									"end": 4498,
									"name": "ADD"
								},
								{
									"begin": 4475,
									"end": 4480,
									"name": "DUP10"
								},
								{
									"begin": 4481,
									"end": 4482,
									"name": "DUP4"
								},
								{
									"begin": 4475,
									"end": 4483,
									"name": "DUP2"
								},
								{
									"begin": 4475,
									"end": 4483,
									"name": "MLOAD"
								},
								{
									"begin": 4475,
									"end": 4483,
									"name": "DUP2"
								},
								{
									"begin": 4475,
									"end": 4483,
									"name": "LT"
								},
								{
									"begin": 4475,
									"end": 4483,
									"name": "ISZERO"
								},
								{
									"begin": 4475,
									"end": 4483,
									"name": "ISZERO"
								},
								{
									"begin": 4475,
									"end": 4483,
									"name": "PUSH [tag]",
									"value": "9"
								},
								{
									"begin": 4475,
									"end": 4483,
									"name": "JUMPI"
								},
								{
									"begin": 4475,
									"end": 4483,
									"name": "INVALID"
								},
								{
									"begin": 4475,
									"end": 4483,
									"name": "tag",
									"value": "9"
								},
								{
									"begin": 4475,
									"end": 4483,
									"name": "JUMPDEST"
								},
								{
									"begin": 4475,
									"end": 4483,
									"name": "SWAP1"
								},
								{
									"begin": 4475,
									"end": 4483,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 4475,
									"end": 4483,
									"name": "ADD"
								},
								{
									"begin": 4475,
									"end": 4483,
									"name": "SWAP1"
								},
								{
									"begin": 4475,
									"end": 4483,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 4475,
									"end": 4483,
									"name": "MUL"
								},
								{
									"begin": 4475,
									"end": 4483,
									"name": "ADD"
								},
								{
									"begin": 4475,
									"end": 4483,
									"name": "MLOAD"
								},
								{
									"begin": 4366,
									"end": 4498,
									"name": "DUP2"
								},
								{
									"begin": 4366,
									"end": 4498,
									"name": "MSTORE"
								},
								{
									"begin": 4366,
									"end": 4498,
									"name": "POP"
								},
								{
									"begin": 4332,
									"end": 4347,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 4332,
									"end": 4363,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 4348,
									"end": 4359,
									"name": "DUP12"
								},
								{
									"begin": 4360,
									"end": 4361,
									"name": "DUP5"
								},
								{
									"begin": 4348,
									"end": 4362,
									"name": "DUP2"
								},
								{
									"begin": 4348,
									"end": 4362,
									"name": "MLOAD"
								},
								{
									"begin": 4348,
									"end": 4362,
									"name": "DUP2"
								},
								{
									"begin": 4348,
									"end": 4362,
									"name": "LT"
								},
								{
									"begin": 4348,
									"end": 4362,
									"name": "ISZERO"
								},
								{
									"begin": 4348,
									"end": 4362,
									"name": "ISZERO"
								},
								{
									"begin": 4348,
									"end": 4362,
									"name": "PUSH [tag]",
									"value": "10"
								},
								{
									"begin": 4348,
									"end": 4362,
									"name": "JUMPI"
								},
								{
									"begin": 4348,
									"end": 4362,
									"name": "INVALID"
								},
								{
									"begin": 4348,
									"end": 4362,
									"name": "tag",
									"value": "10"
								},
								{
									"begin": 4348,
									"end": 4362,
									"name": "JUMPDEST"
								},
								{
									"begin": 4348,
									"end": 4362,
									"name": "SWAP1"
								},
								{
									"begin": 4348,
									"end": 4362,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 4348,
									"end": 4362,
									"name": "ADD"
								},
								{
									"begin": 4348,
									"end": 4362,
									"name": "SWAP1"
								},
								{
									"begin": 4348,
									"end": 4362,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 4348,
									"end": 4362,
									"name": "MUL"
								},
								{
									"begin": 4348,
									"end": 4362,
									"name": "ADD"
								},
								{
									"begin": 4348,
									"end": 4362,
									"name": "MLOAD"
								},
								{
									"begin": 4332,
									"end": 4363,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4332,
									"end": 4363,
									"name": "AND"
								},
								{
									"begin": 4332,
									"end": 4363,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4332,
									"end": 4363,
									"name": "AND"
								},
								{
									"begin": 4332,
									"end": 4363,
									"name": "DUP2"
								},
								{
									"begin": 4332,
									"end": 4363,
									"name": "MSTORE"
								},
								{
									"begin": 4332,
									"end": 4363,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 4332,
									"end": 4363,
									"name": "ADD"
								},
								{
									"begin": 4332,
									"end": 4363,
									"name": "SWAP1"
								},
								{
									"begin": 4332,
									"end": 4363,
									"name": "DUP2"
								},
								{
									"begin": 4332,
									"end": 4363,
									"name": "MSTORE"
								},
								{
									"begin": 4332,
									"end": 4363,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 4332,
									"end": 4363,
									"name": "ADD"
								},
								{
									"begin": 4332,
									"end": 4363,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 4332,
									"end": 4363,
									"name": "KECCAK256"
								},
								{
									"begin": 4332,
									"end": 4498,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 4332,
									"end": 4498,
									"name": "DUP3"
								},
								{
									"begin": 4332,
									"end": 4498,
									"name": "ADD"
								},
								{
									"begin": 4332,
									"end": 4498,
									"name": "MLOAD"
								},
								{
									"begin": 4332,
									"end": 4498,
									"name": "DUP2"
								},
								{
									"begin": 4332,
									"end": 4498,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 4332,
									"end": 4498,
									"name": "ADD"
								},
								{
									"begin": 4332,
									"end": 4498,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 4332,
									"end": 4498,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 4332,
									"end": 4498,
									"name": "EXP"
								},
								{
									"begin": 4332,
									"end": 4498,
									"name": "DUP2"
								},
								{
									"begin": 4332,
									"end": 4498,
									"name": "SLOAD"
								},
								{
									"begin": 4332,
									"end": 4498,
									"name": "DUP2"
								},
								{
									"begin": 4332,
									"end": 4498,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4332,
									"end": 4498,
									"name": "MUL"
								},
								{
									"begin": 4332,
									"end": 4498,
									"name": "NOT"
								},
								{
									"begin": 4332,
									"end": 4498,
									"name": "AND"
								},
								{
									"begin": 4332,
									"end": 4498,
									"name": "SWAP1"
								},
								{
									"begin": 4332,
									"end": 4498,
									"name": "DUP4"
								},
								{
									"begin": 4332,
									"end": 4498,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4332,
									"end": 4498,
									"name": "AND"
								},
								{
									"begin": 4332,
									"end": 4498,
									"name": "MUL"
								},
								{
									"begin": 4332,
									"end": 4498,
									"name": "OR"
								},
								{
									"begin": 4332,
									"end": 4498,
									"name": "SWAP1"
								},
								{
									"begin": 4332,
									"end": 4498,
									"name": "SSTORE"
								},
								{
									"begin": 4332,
									"end": 4498,
									"name": "POP"
								},
								{
									"begin": 4332,
									"end": 4498,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 4332,
									"end": 4498,
									"name": "DUP3"
								},
								{
									"begin": 4332,
									"end": 4498,
									"name": "ADD"
								},
								{
									"begin": 4332,
									"end": 4498,
									"name": "MLOAD"
								},
								{
									"begin": 4332,
									"end": 4498,
									"name": "DUP2"
								},
								{
									"begin": 4332,
									"end": 4498,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 4332,
									"end": 4498,
									"name": "ADD"
								},
								{
									"begin": 4332,
									"end": 4498,
									"name": "PUSH",
									"value": "14"
								},
								{
									"begin": 4332,
									"end": 4498,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 4332,
									"end": 4498,
									"name": "EXP"
								},
								{
									"begin": 4332,
									"end": 4498,
									"name": "DUP2"
								},
								{
									"begin": 4332,
									"end": 4498,
									"name": "SLOAD"
								},
								{
									"begin": 4332,
									"end": 4498,
									"name": "DUP2"
								},
								{
									"begin": 4332,
									"end": 4498,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 4332,
									"end": 4498,
									"name": "MUL"
								},
								{
									"begin": 4332,
									"end": 4498,
									"name": "NOT"
								},
								{
									"begin": 4332,
									"end": 4498,
									"name": "AND"
								},
								{
									"begin": 4332,
									"end": 4498,
									"name": "SWAP1"
								},
								{
									"begin": 4332,
									"end": 4498,
									"name": "DUP4"
								},
								{
									"begin": 4332,
									"end": 4498,
									"name": "ISZERO"
								},
								{
									"begin": 4332,
									"end": 4498,
									"name": "ISZERO"
								},
								{
									"begin": 4332,
									"end": 4498,
									"name": "MUL"
								},
								{
									"begin": 4332,
									"end": 4498,
									"name": "OR"
								},
								{
									"begin": 4332,
									"end": 4498,
									"name": "SWAP1"
								},
								{
									"begin": 4332,
									"end": 4498,
									"name": "SSTORE"
								},
								{
									"begin": 4332,
									"end": 4498,
									"name": "POP"
								},
								{
									"begin": 4332,
									"end": 4498,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 4332,
									"end": 4498,
									"name": "DUP3"
								},
								{
									"begin": 4332,
									"end": 4498,
									"name": "ADD"
								},
								{
									"begin": 4332,
									"end": 4498,
									"name": "MLOAD"
								},
								{
									"begin": 4332,
									"end": 4498,
									"name": "DUP2"
								},
								{
									"begin": 4332,
									"end": 4498,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 4332,
									"end": 4498,
									"name": "ADD"
								},
								{
									"begin": 4332,
									"end": 4498,
									"name": "SSTORE"
								},
								{
									"begin": 4332,
									"end": 4498,
									"name": "SWAP1"
								},
								{
									"begin": 4332,
									"end": 4498,
									"name": "POP"
								},
								{
									"begin": 4332,
									"end": 4498,
									"name": "POP"
								},
								{
									"begin": 4512,
									"end": 4518,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 4512,
									"end": 4534,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 4519,
									"end": 4530,
									"name": "DUP11"
								},
								{
									"begin": 4531,
									"end": 4532,
									"name": "DUP4"
								},
								{
									"begin": 4519,
									"end": 4533,
									"name": "DUP2"
								},
								{
									"begin": 4519,
									"end": 4533,
									"name": "MLOAD"
								},
								{
									"begin": 4519,
									"end": 4533,
									"name": "DUP2"
								},
								{
									"begin": 4519,
									"end": 4533,
									"name": "LT"
								},
								{
									"begin": 4519,
									"end": 4533,
									"name": "ISZERO"
								},
								{
									"begin": 4519,
									"end": 4533,
									"name": "ISZERO"
								},
								{
									"begin": 4519,
									"end": 4533,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 4519,
									"end": 4533,
									"name": "JUMPI"
								},
								{
									"begin": 4519,
									"end": 4533,
									"name": "INVALID"
								},
								{
									"begin": 4519,
									"end": 4533,
									"name": "tag",
									"value": "11"
								},
								{
									"begin": 4519,
									"end": 4533,
									"name": "JUMPDEST"
								},
								{
									"begin": 4519,
									"end": 4533,
									"name": "SWAP1"
								},
								{
									"begin": 4519,
									"end": 4533,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 4519,
									"end": 4533,
									"name": "ADD"
								},
								{
									"begin": 4519,
									"end": 4533,
									"name": "SWAP1"
								},
								{
									"begin": 4519,
									"end": 4533,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 4519,
									"end": 4533,
									"name": "MUL"
								},
								{
									"begin": 4519,
									"end": 4533,
									"name": "ADD"
								},
								{
									"begin": 4519,
									"end": 4533,
									"name": "MLOAD"
								},
								{
									"begin": 4512,
									"end": 4534,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4512,
									"end": 4534,
									"name": "AND"
								},
								{
									"begin": 4512,
									"end": 4534,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4512,
									"end": 4534,
									"name": "AND"
								},
								{
									"begin": 4512,
									"end": 4534,
									"name": "DUP2"
								},
								{
									"begin": 4512,
									"end": 4534,
									"name": "MSTORE"
								},
								{
									"begin": 4512,
									"end": 4534,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 4512,
									"end": 4534,
									"name": "ADD"
								},
								{
									"begin": 4512,
									"end": 4534,
									"name": "SWAP1"
								},
								{
									"begin": 4512,
									"end": 4534,
									"name": "DUP2"
								},
								{
									"begin": 4512,
									"end": 4534,
									"name": "MSTORE"
								},
								{
									"begin": 4512,
									"end": 4534,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 4512,
									"end": 4534,
									"name": "ADD"
								},
								{
									"begin": 4512,
									"end": 4534,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 4512,
									"end": 4534,
									"name": "KECCAK256"
								},
								{
									"begin": 4540,
									"end": 4551,
									"name": "DUP8"
								},
								{
									"begin": 4512,
									"end": 4552,
									"name": "SWAP1"
								},
								{
									"begin": 4512,
									"end": 4552,
									"name": "DUP1"
								},
								{
									"begin": 39,
									"end": 40,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 33,
									"end": 36,
									"name": "DUP2"
								},
								{
									"begin": 27,
									"end": 37,
									"name": "SLOAD"
								},
								{
									"begin": 23,
									"end": 41,
									"name": "ADD"
								},
								{
									"begin": 57,
									"end": 67,
									"name": "DUP1"
								},
								{
									"begin": 52,
									"end": 55,
									"name": "DUP3"
								},
								{
									"begin": 45,
									"end": 68,
									"name": "SSTORE"
								},
								{
									"begin": 79,
									"end": 89,
									"name": "DUP1"
								},
								{
									"begin": 72,
									"end": 89,
									"name": "SWAP2"
								},
								{
									"begin": 72,
									"end": 89,
									"name": "POP"
								},
								{
									"begin": 0,
									"end": 93,
									"name": "POP"
								},
								{
									"begin": 4512,
									"end": 4552,
									"name": "SWAP1"
								},
								{
									"begin": 4512,
									"end": 4552,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 4512,
									"end": 4552,
									"name": "DUP3"
								},
								{
									"begin": 4512,
									"end": 4552,
									"name": "SUB"
								},
								{
									"begin": 4512,
									"end": 4552,
									"name": "SWAP1"
								},
								{
									"begin": 4512,
									"end": 4552,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 4512,
									"end": 4552,
									"name": "MSTORE"
								},
								{
									"begin": 4512,
									"end": 4552,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 4512,
									"end": 4552,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 4512,
									"end": 4552,
									"name": "KECCAK256"
								},
								{
									"begin": 4512,
									"end": 4552,
									"name": "ADD"
								},
								{
									"begin": 4512,
									"end": 4552,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 4512,
									"end": 4552,
									"name": "SWAP1"
								},
								{
									"begin": 4512,
									"end": 4552,
									"name": "SWAP2"
								},
								{
									"begin": 4512,
									"end": 4552,
									"name": "SWAP3"
								},
								{
									"begin": 4512,
									"end": 4552,
									"name": "SWAP1"
								},
								{
									"begin": 4512,
									"end": 4552,
									"name": "SWAP2"
								},
								{
									"begin": 4512,
									"end": 4552,
									"name": "SWAP1"
								},
								{
									"begin": 4512,
									"end": 4552,
									"name": "SWAP2"
								},
								{
									"begin": 4512,
									"end": 4552,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 4512,
									"end": 4552,
									"name": "EXP"
								},
								{
									"begin": 4512,
									"end": 4552,
									"name": "DUP2"
								},
								{
									"begin": 4512,
									"end": 4552,
									"name": "SLOAD"
								},
								{
									"begin": 4512,
									"end": 4552,
									"name": "DUP2"
								},
								{
									"begin": 4512,
									"end": 4552,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4512,
									"end": 4552,
									"name": "MUL"
								},
								{
									"begin": 4512,
									"end": 4552,
									"name": "NOT"
								},
								{
									"begin": 4512,
									"end": 4552,
									"name": "AND"
								},
								{
									"begin": 4512,
									"end": 4552,
									"name": "SWAP1"
								},
								{
									"begin": 4512,
									"end": 4552,
									"name": "DUP4"
								},
								{
									"begin": 4512,
									"end": 4552,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4512,
									"end": 4552,
									"name": "AND"
								},
								{
									"begin": 4512,
									"end": 4552,
									"name": "MUL"
								},
								{
									"begin": 4512,
									"end": 4552,
									"name": "OR"
								},
								{
									"begin": 4512,
									"end": 4552,
									"name": "SWAP1"
								},
								{
									"begin": 4512,
									"end": 4552,
									"name": "SSTORE"
								},
								{
									"begin": 4512,
									"end": 4552,
									"name": "POP"
								},
								{
									"begin": 4512,
									"end": 4552,
									"name": "POP"
								},
								{
									"begin": 4620,
									"end": 4635,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 4620,
									"end": 4635,
									"name": "SLOAD"
								},
								{
									"begin": 4566,
									"end": 4581,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 4566,
									"end": 4597,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 4582,
									"end": 4593,
									"name": "DUP12"
								},
								{
									"begin": 4594,
									"end": 4595,
									"name": "DUP5"
								},
								{
									"begin": 4582,
									"end": 4596,
									"name": "DUP2"
								},
								{
									"begin": 4582,
									"end": 4596,
									"name": "MLOAD"
								},
								{
									"begin": 4582,
									"end": 4596,
									"name": "DUP2"
								},
								{
									"begin": 4582,
									"end": 4596,
									"name": "LT"
								},
								{
									"begin": 4582,
									"end": 4596,
									"name": "ISZERO"
								},
								{
									"begin": 4582,
									"end": 4596,
									"name": "ISZERO"
								},
								{
									"begin": 4582,
									"end": 4596,
									"name": "PUSH [tag]",
									"value": "13"
								},
								{
									"begin": 4582,
									"end": 4596,
									"name": "JUMPI"
								},
								{
									"begin": 4582,
									"end": 4596,
									"name": "INVALID"
								},
								{
									"begin": 4582,
									"end": 4596,
									"name": "tag",
									"value": "13"
								},
								{
									"begin": 4582,
									"end": 4596,
									"name": "JUMPDEST"
								},
								{
									"begin": 4582,
									"end": 4596,
									"name": "SWAP1"
								},
								{
									"begin": 4582,
									"end": 4596,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 4582,
									"end": 4596,
									"name": "ADD"
								},
								{
									"begin": 4582,
									"end": 4596,
									"name": "SWAP1"
								},
								{
									"begin": 4582,
									"end": 4596,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 4582,
									"end": 4596,
									"name": "MUL"
								},
								{
									"begin": 4582,
									"end": 4596,
									"name": "ADD"
								},
								{
									"begin": 4582,
									"end": 4596,
									"name": "MLOAD"
								},
								{
									"begin": 4566,
									"end": 4597,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4566,
									"end": 4597,
									"name": "AND"
								},
								{
									"begin": 4566,
									"end": 4597,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4566,
									"end": 4597,
									"name": "AND"
								},
								{
									"begin": 4566,
									"end": 4597,
									"name": "DUP2"
								},
								{
									"begin": 4566,
									"end": 4597,
									"name": "MSTORE"
								},
								{
									"begin": 4566,
									"end": 4597,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 4566,
									"end": 4597,
									"name": "ADD"
								},
								{
									"begin": 4566,
									"end": 4597,
									"name": "SWAP1"
								},
								{
									"begin": 4566,
									"end": 4597,
									"name": "DUP2"
								},
								{
									"begin": 4566,
									"end": 4597,
									"name": "MSTORE"
								},
								{
									"begin": 4566,
									"end": 4597,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 4566,
									"end": 4597,
									"name": "ADD"
								},
								{
									"begin": 4566,
									"end": 4597,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 4566,
									"end": 4597,
									"name": "KECCAK256"
								},
								{
									"begin": 4566,
									"end": 4604,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 4566,
									"end": 4604,
									"name": "ADD"
								},
								{
									"begin": 4566,
									"end": 4617,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 4605,
									"end": 4616,
									"name": "DUP10"
								},
								{
									"begin": 4566,
									"end": 4617,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4566,
									"end": 4617,
									"name": "AND"
								},
								{
									"begin": 4566,
									"end": 4617,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4566,
									"end": 4617,
									"name": "AND"
								},
								{
									"begin": 4566,
									"end": 4617,
									"name": "DUP2"
								},
								{
									"begin": 4566,
									"end": 4617,
									"name": "MSTORE"
								},
								{
									"begin": 4566,
									"end": 4617,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 4566,
									"end": 4617,
									"name": "ADD"
								},
								{
									"begin": 4566,
									"end": 4617,
									"name": "SWAP1"
								},
								{
									"begin": 4566,
									"end": 4617,
									"name": "DUP2"
								},
								{
									"begin": 4566,
									"end": 4617,
									"name": "MSTORE"
								},
								{
									"begin": 4566,
									"end": 4617,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 4566,
									"end": 4617,
									"name": "ADD"
								},
								{
									"begin": 4566,
									"end": 4617,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 4566,
									"end": 4617,
									"name": "KECCAK256"
								},
								{
									"begin": 4566,
									"end": 4635,
									"name": "DUP2"
								},
								{
									"begin": 4566,
									"end": 4635,
									"name": "SWAP1"
								},
								{
									"begin": 4566,
									"end": 4635,
									"name": "SSTORE"
								},
								{
									"begin": 4566,
									"end": 4635,
									"name": "POP"
								},
								{
									"begin": 4268,
									"end": 4271,
									"name": "DUP1"
								},
								{
									"begin": 4268,
									"end": 4271,
									"name": "DUP1"
								},
								{
									"begin": 4268,
									"end": 4271,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 4268,
									"end": 4271,
									"name": "ADD"
								},
								{
									"begin": 4268,
									"end": 4271,
									"name": "SWAP2"
								},
								{
									"begin": 4268,
									"end": 4271,
									"name": "POP"
								},
								{
									"begin": 4268,
									"end": 4271,
									"name": "POP"
								},
								{
									"begin": 4224,
									"end": 4646,
									"name": "PUSH [tag]",
									"value": "4"
								},
								{
									"begin": 4224,
									"end": 4646,
									"name": "JUMP"
								},
								{
									"begin": 4224,
									"end": 4646,
									"name": "tag",
									"value": "5"
								},
								{
									"begin": 4224,
									"end": 4646,
									"name": "JUMPDEST"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "POP"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "POP"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "POP"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "POP"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "POP"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "POP"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "POP"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "POP"
								},
								{
									"begin": 3627,
									"end": 4652,
									"name": "POP"
								},
								{
									"begin": 1147,
									"end": 8922,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1147,
									"end": 8922,
									"name": "DUP1"
								},
								{
									"begin": 1147,
									"end": 8922,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1147,
									"end": 8922,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1147,
									"end": 8922,
									"name": "CODECOPY"
								},
								{
									"begin": 1147,
									"end": 8922,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1147,
									"end": 8922,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a7230582084c5528f08b22368d3db09a2ff23aa22cff706342a7487c44eb06df2b4fae0910029",
									".code": [
										{
											"begin": 1147,
											"end": 8922,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "MSTORE"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "LT"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "JUMPI"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "SWAP1"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "DIV"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "AND"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "DUP1"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "PUSH",
											"value": "1267951"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "EQ"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "JUMPI"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "DUP1"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "PUSH",
											"value": "2AA9BE2"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "EQ"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "JUMPI"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "DUP1"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "PUSH",
											"value": "6A49FCE"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "EQ"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "JUMPI"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "DUP1"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "PUSH",
											"value": "15FEBD68"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "EQ"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "JUMPI"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "DUP1"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "PUSH",
											"value": "2D15CC04"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "EQ"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "JUMPI"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "DUP1"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "PUSH",
											"value": "2F9C4BBA"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "EQ"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "JUMPI"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "DUP1"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "PUSH",
											"value": "302B6872"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "EQ"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "JUMPI"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "DUP1"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "PUSH",
											"value": "3477EE2E"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "EQ"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "JUMPI"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "DUP1"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "PUSH",
											"value": "441A3E70"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "EQ"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "JUMPI"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "DUP1"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "PUSH",
											"value": "58E7525F"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "EQ"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "JUMPI"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "DUP1"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "PUSH",
											"value": "6DD7D8EA"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "EQ"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "JUMPI"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "DUP1"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "PUSH",
											"value": "A9A981A3"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "EQ"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "JUMPI"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "DUP1"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "PUSH",
											"value": "A9FF959E"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "EQ"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "JUMPI"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "DUP1"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "PUSH",
											"value": "AE6E43F5"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "EQ"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "JUMPI"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "DUP1"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "PUSH",
											"value": "B642FACD"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "EQ"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "JUMPI"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "DUP1"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "PUSH",
											"value": "D09F1AB4"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "EQ"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "JUMPI"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "DUP1"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "PUSH",
											"value": "D161C767"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "EQ"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "JUMPI"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "DUP1"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "PUSH",
											"value": "D51B9E93"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "EQ"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "JUMPI"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "DUP1"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "PUSH",
											"value": "D55B7DFF"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "EQ"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "JUMPI"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "DUP1"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "PUSH",
											"value": "F8AC9DD5"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "EQ"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "JUMPI"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "JUMPDEST"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "DUP1"
										},
										{
											"begin": 1147,
											"end": 8922,
											"name": "REVERT"
										},
										{
											"begin": 4658,
											"end": 5297,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 4658,
											"end": 5297,
											"name": "JUMPDEST"
										},
										{
											"begin": 4658,
											"end": 5297,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 4658,
											"end": 5297,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4658,
											"end": 5297,
											"name": "DUP1"
										},
										{
											"begin": 4658,
											"end": 5297,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4658,
											"end": 5297,
											"name": "SUB"
										},
										{
											"begin": 4658,
											"end": 5297,
											"name": "DUP2"
										},
										{
											"begin": 4658,
											"end": 5297,
											"name": "ADD"
										},
										{
											"begin": 4658,
											"end": 5297,
											"name": "SWAP1"
										},
										{
											"begin": 4658,
											"end": 5297,
											"name": "DUP1"
										},
										{
											"begin": 4658,
											"end": 5297,
											"name": "DUP1"
										},
										{
											"begin": 4658,
											"end": 5297,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4658,
											"end": 5297,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4658,
											"end": 5297,
											"name": "AND"
										},
										{
											"begin": 4658,
											"end": 5297,
											"name": "SWAP1"
										},
										{
											"begin": 4658,
											"end": 5297,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4658,
											"end": 5297,
											"name": "ADD"
										},
										{
											"begin": 4658,
											"end": 5297,
											"name": "SWAP1"
										},
										{
											"begin": 4658,
											"end": 5297,
											"name": "SWAP3"
										},
										{
											"begin": 4658,
											"end": 5297,
											"name": "SWAP2"
										},
										{
											"begin": 4658,
											"end": 5297,
											"name": "SWAP1"
										},
										{
											"begin": 4658,
											"end": 5297,
											"name": "POP"
										},
										{
											"begin": 4658,
											"end": 5297,
											"name": "POP"
										},
										{
											"begin": 4658,
											"end": 5297,
											"name": "POP"
										},
										{
											"begin": 4658,
											"end": 5297,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 4658,
											"end": 5297,
											"name": "JUMP"
										},
										{
											"begin": 4658,
											"end": 5297,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 4658,
											"end": 5297,
											"name": "JUMPDEST"
										},
										{
											"begin": 4658,
											"end": 5297,
											"name": "STOP"
										},
										{
											"begin": 6873,
											"end": 7539,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 6873,
											"end": 7539,
											"name": "JUMPDEST"
										},
										{
											"begin": 6873,
											"end": 7539,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6873,
											"end": 7539,
											"name": "POP"
										},
										{
											"begin": 6873,
											"end": 7539,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 6873,
											"end": 7539,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6873,
											"end": 7539,
											"name": "DUP1"
										},
										{
											"begin": 6873,
											"end": 7539,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 6873,
											"end": 7539,
											"name": "SUB"
										},
										{
											"begin": 6873,
											"end": 7539,
											"name": "DUP2"
										},
										{
											"begin": 6873,
											"end": 7539,
											"name": "ADD"
										},
										{
											"begin": 6873,
											"end": 7539,
											"name": "SWAP1"
										},
										{
											"begin": 6873,
											"end": 7539,
											"name": "DUP1"
										},
										{
											"begin": 6873,
											"end": 7539,
											"name": "DUP1"
										},
										{
											"begin": 6873,
											"end": 7539,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 6873,
											"end": 7539,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6873,
											"end": 7539,
											"name": "AND"
										},
										{
											"begin": 6873,
											"end": 7539,
											"name": "SWAP1"
										},
										{
											"begin": 6873,
											"end": 7539,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6873,
											"end": 7539,
											"name": "ADD"
										},
										{
											"begin": 6873,
											"end": 7539,
											"name": "SWAP1"
										},
										{
											"begin": 6873,
											"end": 7539,
											"name": "SWAP3"
										},
										{
											"begin": 6873,
											"end": 7539,
											"name": "SWAP2"
										},
										{
											"begin": 6873,
											"end": 7539,
											"name": "SWAP1"
										},
										{
											"begin": 6873,
											"end": 7539,
											"name": "DUP1"
										},
										{
											"begin": 6873,
											"end": 7539,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 6873,
											"end": 7539,
											"name": "SWAP1"
										},
										{
											"begin": 6873,
											"end": 7539,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6873,
											"end": 7539,
											"name": "ADD"
										},
										{
											"begin": 6873,
											"end": 7539,
											"name": "SWAP1"
										},
										{
											"begin": 6873,
											"end": 7539,
											"name": "SWAP3"
										},
										{
											"begin": 6873,
											"end": 7539,
											"name": "SWAP2"
										},
										{
											"begin": 6873,
											"end": 7539,
											"name": "SWAP1"
										},
										{
											"begin": 6873,
											"end": 7539,
											"name": "POP"
										},
										{
											"begin": 6873,
											"end": 7539,
											"name": "POP"
										},
										{
											"begin": 6873,
											"end": 7539,
											"name": "POP"
										},
										{
											"begin": 6873,
											"end": 7539,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 6873,
											"end": 7539,
											"name": "JUMP"
										},
										{
											"begin": 6873,
											"end": 7539,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 6873,
											"end": 7539,
											"name": "JUMPDEST"
										},
										{
											"begin": 6873,
											"end": 7539,
											"name": "STOP"
										},
										{
											"begin": 5806,
											"end": 5896,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 5806,
											"end": 5896,
											"name": "JUMPDEST"
										},
										{
											"begin": 5806,
											"end": 5896,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 5806,
											"end": 5896,
											"name": "POP"
										},
										{
											"begin": 5806,
											"end": 5896,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 5806,
											"end": 5896,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 5806,
											"end": 5896,
											"name": "JUMP"
										},
										{
											"begin": 5806,
											"end": 5896,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 5806,
											"end": 5896,
											"name": "JUMPDEST"
										},
										{
											"begin": 5806,
											"end": 5896,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5806,
											"end": 5896,
											"name": "MLOAD"
										},
										{
											"begin": 5806,
											"end": 5896,
											"name": "DUP1"
										},
										{
											"begin": 5806,
											"end": 5896,
											"name": "DUP1"
										},
										{
											"begin": 5806,
											"end": 5896,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5806,
											"end": 5896,
											"name": "ADD"
										},
										{
											"begin": 5806,
											"end": 5896,
											"name": "DUP3"
										},
										{
											"begin": 5806,
											"end": 5896,
											"name": "DUP2"
										},
										{
											"begin": 5806,
											"end": 5896,
											"name": "SUB"
										},
										{
											"begin": 5806,
											"end": 5896,
											"name": "DUP3"
										},
										{
											"begin": 5806,
											"end": 5896,
											"name": "MSTORE"
										},
										{
											"begin": 5806,
											"end": 5896,
											"name": "DUP4"
										},
										{
											"begin": 5806,
											"end": 5896,
											"name": "DUP2"
										},
										{
											"begin": 5806,
											"end": 5896,
											"name": "DUP2"
										},
										{
											"begin": 5806,
											"end": 5896,
											"name": "MLOAD"
										},
										{
											"begin": 5806,
											"end": 5896,
											"name": "DUP2"
										},
										{
											"begin": 5806,
											"end": 5896,
											"name": "MSTORE"
										},
										{
											"begin": 5806,
											"end": 5896,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5806,
											"end": 5896,
											"name": "ADD"
										},
										{
											"begin": 5806,
											"end": 5896,
											"name": "SWAP2"
										},
										{
											"begin": 5806,
											"end": 5896,
											"name": "POP"
										},
										{
											"begin": 5806,
											"end": 5896,
											"name": "DUP1"
										},
										{
											"begin": 5806,
											"end": 5896,
											"name": "MLOAD"
										},
										{
											"begin": 5806,
											"end": 5896,
											"name": "SWAP1"
										},
										{
											"begin": 5806,
											"end": 5896,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5806,
											"end": 5896,
											"name": "ADD"
										},
										{
											"begin": 5806,
											"end": 5896,
											"name": "SWAP1"
										},
										{
											"begin": 5806,
											"end": 5896,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5806,
											"end": 5896,
											"name": "MUL"
										},
										{
											"begin": 5806,
											"end": 5896,
											"name": "DUP1"
										},
										{
											"begin": 5806,
											"end": 5896,
											"name": "DUP4"
										},
										{
											"begin": 5806,
											"end": 5896,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 5806,
											"end": 5896,
											"name": "POP"
										},
										{
											"begin": 5806,
											"end": 5896,
											"name": "POP"
										},
										{
											"begin": 5806,
											"end": 5896,
											"name": "POP"
										},
										{
											"begin": 5806,
											"end": 5896,
											"name": "SWAP1"
										},
										{
											"begin": 5806,
											"end": 5896,
											"name": "POP"
										},
										{
											"begin": 5806,
											"end": 5896,
											"name": "ADD"
										},
										{
											"begin": 5806,
											"end": 5896,
											"name": "SWAP3"
										},
										{
											"begin": 5806,
											"end": 5896,
											"name": "POP"
										},
										{
											"begin": 5806,
											"end": 5896,
											"name": "POP"
										},
										{
											"begin": 5806,
											"end": 5896,
											"name": "POP"
										},
										{
											"begin": 5806,
											"end": 5896,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5806,
											"end": 5896,
											"name": "MLOAD"
										},
										{
											"begin": 5806,
											"end": 5896,
											"name": "DUP1"
										},
										{
											"begin": 5806,
											"end": 5896,
											"name": "SWAP2"
										},
										{
											"begin": 5806,
											"end": 5896,
											"name": "SUB"
										},
										{
											"begin": 5806,
											"end": 5896,
											"name": "SWAP1"
										},
										{
											"begin": 5806,
											"end": 5896,
											"name": "RETURN"
										},
										{
											"begin": 6723,
											"end": 6867,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 6723,
											"end": 6867,
											"name": "JUMPDEST"
										},
										{
											"begin": 6723,
											"end": 6867,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6723,
											"end": 6867,
											"name": "POP"
										},
										{
											"begin": 6723,
											"end": 6867,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 6723,
											"end": 6867,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6723,
											"end": 6867,
											"name": "DUP1"
										},
										{
											"begin": 6723,
											"end": 6867,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 6723,
											"end": 6867,
											"name": "SUB"
										},
										{
											"begin": 6723,
											"end": 6867,
											"name": "DUP2"
										},
										{
											"begin": 6723,
											"end": 6867,
											"name": "ADD"
										},
										{
											"begin": 6723,
											"end": 6867,
											"name": "SWAP1"
										},
										{
											"begin": 6723,
											"end": 6867,
											"name": "DUP1"
										},
										{
											"begin": 6723,
											"end": 6867,
											"name": "DUP1"
										},
										{
											"begin": 6723,
											"end": 6867,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 6723,
											"end": 6867,
											"name": "SWAP1"
										},
										{
											"begin": 6723,
											"end": 6867,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6723,
											"end": 6867,
											"name": "ADD"
										},
										{
											"begin": 6723,
											"end": 6867,
											"name": "SWAP1"
										},
										{
											"begin": 6723,
											"end": 6867,
											"name": "SWAP3"
										},
										{
											"begin": 6723,
											"end": 6867,
											"name": "SWAP2"
										},
										{
											"begin": 6723,
											"end": 6867,
											"name": "SWAP1"
										},
										{
											"begin": 6723,
											"end": 6867,
											"name": "POP"
										},
										{
											"begin": 6723,
											"end": 6867,
											"name": "POP"
										},
										{
											"begin": 6723,
											"end": 6867,
											"name": "POP"
										},
										{
											"begin": 6723,
											"end": 6867,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 6723,
											"end": 6867,
											"name": "JUMP"
										},
										{
											"begin": 6723,
											"end": 6867,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 6723,
											"end": 6867,
											"name": "JUMPDEST"
										},
										{
											"begin": 6723,
											"end": 6867,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6723,
											"end": 6867,
											"name": "MLOAD"
										},
										{
											"begin": 6723,
											"end": 6867,
											"name": "DUP1"
										},
										{
											"begin": 6723,
											"end": 6867,
											"name": "DUP3"
										},
										{
											"begin": 6723,
											"end": 6867,
											"name": "DUP2"
										},
										{
											"begin": 6723,
											"end": 6867,
											"name": "MSTORE"
										},
										{
											"begin": 6723,
											"end": 6867,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6723,
											"end": 6867,
											"name": "ADD"
										},
										{
											"begin": 6723,
											"end": 6867,
											"name": "SWAP2"
										},
										{
											"begin": 6723,
											"end": 6867,
											"name": "POP"
										},
										{
											"begin": 6723,
											"end": 6867,
											"name": "POP"
										},
										{
											"begin": 6723,
											"end": 6867,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6723,
											"end": 6867,
											"name": "MLOAD"
										},
										{
											"begin": 6723,
											"end": 6867,
											"name": "DUP1"
										},
										{
											"begin": 6723,
											"end": 6867,
											"name": "SWAP2"
										},
										{
											"begin": 6723,
											"end": 6867,
											"name": "SUB"
										},
										{
											"begin": 6723,
											"end": 6867,
											"name": "SWAP1"
										},
										{
											"begin": 6723,
											"end": 6867,
											"name": "RETURN"
										},
										{
											"begin": 6334,
											"end": 6446,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 6334,
											"end": 6446,
											"name": "JUMPDEST"
										},
										{
											"begin": 6334,
											"end": 6446,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6334,
											"end": 6446,
											"name": "POP"
										},
										{
											"begin": 6334,
											"end": 6446,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 6334,
											"end": 6446,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6334,
											"end": 6446,
											"name": "DUP1"
										},
										{
											"begin": 6334,
											"end": 6446,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 6334,
											"end": 6446,
											"name": "SUB"
										},
										{
											"begin": 6334,
											"end": 6446,
											"name": "DUP2"
										},
										{
											"begin": 6334,
											"end": 6446,
											"name": "ADD"
										},
										{
											"begin": 6334,
											"end": 6446,
											"name": "SWAP1"
										},
										{
											"begin": 6334,
											"end": 6446,
											"name": "DUP1"
										},
										{
											"begin": 6334,
											"end": 6446,
											"name": "DUP1"
										},
										{
											"begin": 6334,
											"end": 6446,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 6334,
											"end": 6446,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6334,
											"end": 6446,
											"name": "AND"
										},
										{
											"begin": 6334,
											"end": 6446,
											"name": "SWAP1"
										},
										{
											"begin": 6334,
											"end": 6446,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6334,
											"end": 6446,
											"name": "ADD"
										},
										{
											"begin": 6334,
											"end": 6446,
											"name": "SWAP1"
										},
										{
											"begin": 6334,
											"end": 6446,
											"name": "SWAP3"
										},
										{
											"begin": 6334,
											"end": 6446,
											"name": "SWAP2"
										},
										{
											"begin": 6334,
											"end": 6446,
											"name": "SWAP1"
										},
										{
											"begin": 6334,
											"end": 6446,
											"name": "POP"
										},
										{
											"begin": 6334,
											"end": 6446,
											"name": "POP"
										},
										{
											"begin": 6334,
											"end": 6446,
											"name": "POP"
										},
										{
											"begin": 6334,
											"end": 6446,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 6334,
											"end": 6446,
											"name": "JUMP"
										},
										{
											"begin": 6334,
											"end": 6446,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 6334,
											"end": 6446,
											"name": "JUMPDEST"
										},
										{
											"begin": 6334,
											"end": 6446,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6334,
											"end": 6446,
											"name": "MLOAD"
										},
										{
											"begin": 6334,
											"end": 6446,
											"name": "DUP1"
										},
										{
											"begin": 6334,
											"end": 6446,
											"name": "DUP1"
										},
										{
											"begin": 6334,
											"end": 6446,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6334,
											"end": 6446,
											"name": "ADD"
										},
										{
											"begin": 6334,
											"end": 6446,
											"name": "DUP3"
										},
										{
											"begin": 6334,
											"end": 6446,
											"name": "DUP2"
										},
										{
											"begin": 6334,
											"end": 6446,
											"name": "SUB"
										},
										{
											"begin": 6334,
											"end": 6446,
											"name": "DUP3"
										},
										{
											"begin": 6334,
											"end": 6446,
											"name": "MSTORE"
										},
										{
											"begin": 6334,
											"end": 6446,
											"name": "DUP4"
										},
										{
											"begin": 6334,
											"end": 6446,
											"name": "DUP2"
										},
										{
											"begin": 6334,
											"end": 6446,
											"name": "DUP2"
										},
										{
											"begin": 6334,
											"end": 6446,
											"name": "MLOAD"
										},
										{
											"begin": 6334,
											"end": 6446,
											"name": "DUP2"
										},
										{
											"begin": 6334,
											"end": 6446,
											"name": "MSTORE"
										},
										{
											"begin": 6334,
											"end": 6446,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6334,
											"end": 6446,
											"name": "ADD"
										},
										{
											"begin": 6334,
											"end": 6446,
											"name": "SWAP2"
										},
										{
											"begin": 6334,
											"end": 6446,
											"name": "POP"
										},
										{
											"begin": 6334,
											"end": 6446,
											"name": "DUP1"
										},
										{
											"begin": 6334,
											"end": 6446,
											"name": "MLOAD"
										},
										{
											"begin": 6334,
											"end": 6446,
											"name": "SWAP1"
										},
										{
											"begin": 6334,
											"end": 6446,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6334,
											"end": 6446,
											"name": "ADD"
										},
										{
											"begin": 6334,
											"end": 6446,
											"name": "SWAP1"
										},
										{
											"begin": 6334,
											"end": 6446,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6334,
											"end": 6446,
											"name": "MUL"
										},
										{
											"begin": 6334,
											"end": 6446,
											"name": "DUP1"
										},
										{
											"begin": 6334,
											"end": 6446,
											"name": "DUP4"
										},
										{
											"begin": 6334,
											"end": 6446,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 6334,
											"end": 6446,
											"name": "POP"
										},
										{
											"begin": 6334,
											"end": 6446,
											"name": "POP"
										},
										{
											"begin": 6334,
											"end": 6446,
											"name": "POP"
										},
										{
											"begin": 6334,
											"end": 6446,
											"name": "SWAP1"
										},
										{
											"begin": 6334,
											"end": 6446,
											"name": "POP"
										},
										{
											"begin": 6334,
											"end": 6446,
											"name": "ADD"
										},
										{
											"begin": 6334,
											"end": 6446,
											"name": "SWAP3"
										},
										{
											"begin": 6334,
											"end": 6446,
											"name": "POP"
										},
										{
											"begin": 6334,
											"end": 6446,
											"name": "POP"
										},
										{
											"begin": 6334,
											"end": 6446,
											"name": "POP"
										},
										{
											"begin": 6334,
											"end": 6446,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6334,
											"end": 6446,
											"name": "MLOAD"
										},
										{
											"begin": 6334,
											"end": 6446,
											"name": "DUP1"
										},
										{
											"begin": 6334,
											"end": 6446,
											"name": "SWAP2"
										},
										{
											"begin": 6334,
											"end": 6446,
											"name": "SUB"
										},
										{
											"begin": 6334,
											"end": 6446,
											"name": "SWAP1"
										},
										{
											"begin": 6334,
											"end": 6446,
											"name": "RETURN"
										},
										{
											"begin": 6588,
											"end": 6717,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 6588,
											"end": 6717,
											"name": "JUMPDEST"
										},
										{
											"begin": 6588,
											"end": 6717,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6588,
											"end": 6717,
											"name": "POP"
										},
										{
											"begin": 6588,
											"end": 6717,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 6588,
											"end": 6717,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 6588,
											"end": 6717,
											"name": "JUMP"
										},
										{
											"begin": 6588,
											"end": 6717,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 6588,
											"end": 6717,
											"name": "JUMPDEST"
										},
										{
											"begin": 6588,
											"end": 6717,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6588,
											"end": 6717,
											"name": "MLOAD"
										},
										{
											"begin": 6588,
											"end": 6717,
											"name": "DUP1"
										},
										{
											"begin": 6588,
											"end": 6717,
											"name": "DUP1"
										},
										{
											"begin": 6588,
											"end": 6717,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6588,
											"end": 6717,
											"name": "ADD"
										},
										{
											"begin": 6588,
											"end": 6717,
											"name": "DUP3"
										},
										{
											"begin": 6588,
											"end": 6717,
											"name": "DUP2"
										},
										{
											"begin": 6588,
											"end": 6717,
											"name": "SUB"
										},
										{
											"begin": 6588,
											"end": 6717,
											"name": "DUP3"
										},
										{
											"begin": 6588,
											"end": 6717,
											"name": "MSTORE"
										},
										{
											"begin": 6588,
											"end": 6717,
											"name": "DUP4"
										},
										{
											"begin": 6588,
											"end": 6717,
											"name": "DUP2"
										},
										{
											"begin": 6588,
											"end": 6717,
											"name": "DUP2"
										},
										{
											"begin": 6588,
											"end": 6717,
											"name": "MLOAD"
										},
										{
											"begin": 6588,
											"end": 6717,
											"name": "DUP2"
										},
										{
											"begin": 6588,
											"end": 6717,
											"name": "MSTORE"
										},
										{
											"begin": 6588,
											"end": 6717,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6588,
											"end": 6717,
											"name": "ADD"
										},
										{
											"begin": 6588,
											"end": 6717,
											"name": "SWAP2"
										},
										{
											"begin": 6588,
											"end": 6717,
											"name": "POP"
										},
										{
											"begin": 6588,
											"end": 6717,
											"name": "DUP1"
										},
										{
											"begin": 6588,
											"end": 6717,
											"name": "MLOAD"
										},
										{
											"begin": 6588,
											"end": 6717,
											"name": "SWAP1"
										},
										{
											"begin": 6588,
											"end": 6717,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6588,
											"end": 6717,
											"name": "ADD"
										},
										{
											"begin": 6588,
											"end": 6717,
											"name": "SWAP1"
										},
										{
											"begin": 6588,
											"end": 6717,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6588,
											"end": 6717,
											"name": "MUL"
										},
										{
											"begin": 6588,
											"end": 6717,
											"name": "DUP1"
										},
										{
											"begin": 6588,
											"end": 6717,
											"name": "DUP4"
										},
										{
											"begin": 6588,
											"end": 6717,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 6588,
											"end": 6717,
											"name": "POP"
										},
										{
											"begin": 6588,
											"end": 6717,
											"name": "POP"
										},
										{
											"begin": 6588,
											"end": 6717,
											"name": "POP"
										},
										{
											"begin": 6588,
											"end": 6717,
											"name": "SWAP1"
										},
										{
											"begin": 6588,
											"end": 6717,
											"name": "POP"
										},
										{
											"begin": 6588,
											"end": 6717,
											"name": "ADD"
										},
										{
											"begin": 6588,
											"end": 6717,
											"name": "SWAP3"
										},
										{
											"begin": 6588,
											"end": 6717,
											"name": "POP"
										},
										{
											"begin": 6588,
											"end": 6717,
											"name": "POP"
										},
										{
											"begin": 6588,
											"end": 6717,
											"name": "POP"
										},
										{
											"begin": 6588,
											"end": 6717,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6588,
											"end": 6717,
											"name": "MLOAD"
										},
										{
											"begin": 6588,
											"end": 6717,
											"name": "DUP1"
										},
										{
											"begin": 6588,
											"end": 6717,
											"name": "SWAP2"
										},
										{
											"begin": 6588,
											"end": 6717,
											"name": "SUB"
										},
										{
											"begin": 6588,
											"end": 6717,
											"name": "SWAP1"
										},
										{
											"begin": 6588,
											"end": 6717,
											"name": "RETURN"
										},
										{
											"begin": 6176,
											"end": 6328,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 6176,
											"end": 6328,
											"name": "JUMPDEST"
										},
										{
											"begin": 6176,
											"end": 6328,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6176,
											"end": 6328,
											"name": "POP"
										},
										{
											"begin": 6176,
											"end": 6328,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 6176,
											"end": 6328,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6176,
											"end": 6328,
											"name": "DUP1"
										},
										{
											"begin": 6176,
											"end": 6328,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 6176,
											"end": 6328,
											"name": "SUB"
										},
										{
											"begin": 6176,
											"end": 6328,
											"name": "DUP2"
										},
										{
											"begin": 6176,
											"end": 6328,
											"name": "ADD"
										},
										{
											"begin": 6176,
											"end": 6328,
											"name": "SWAP1"
										},
										{
											"begin": 6176,
											"end": 6328,
											"name": "DUP1"
										},
										{
											"begin": 6176,
											"end": 6328,
											"name": "DUP1"
										},
										{
											"begin": 6176,
											"end": 6328,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 6176,
											"end": 6328,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6176,
											"end": 6328,
											"name": "AND"
										},
										{
											"begin": 6176,
											"end": 6328,
											"name": "SWAP1"
										},
										{
											"begin": 6176,
											"end": 6328,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6176,
											"end": 6328,
											"name": "ADD"
										},
										{
											"begin": 6176,
											"end": 6328,
											"name": "SWAP1"
										},
										{
											"begin": 6176,
											"end": 6328,
											"name": "SWAP3"
										},
										{
											"begin": 6176,
											"end": 6328,
											"name": "SWAP2"
										},
										{
											"begin": 6176,
											"end": 6328,
											"name": "SWAP1"
										},
										{
											"begin": 6176,
											"end": 6328,
											"name": "DUP1"
										},
										{
											"begin": 6176,
											"end": 6328,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 6176,
											"end": 6328,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6176,
											"end": 6328,
											"name": "AND"
										},
										{
											"begin": 6176,
											"end": 6328,
											"name": "SWAP1"
										},
										{
											"begin": 6176,
											"end": 6328,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6176,
											"end": 6328,
											"name": "ADD"
										},
										{
											"begin": 6176,
											"end": 6328,
											"name": "SWAP1"
										},
										{
											"begin": 6176,
											"end": 6328,
											"name": "SWAP3"
										},
										{
											"begin": 6176,
											"end": 6328,
											"name": "SWAP2"
										},
										{
											"begin": 6176,
											"end": 6328,
											"name": "SWAP1"
										},
										{
											"begin": 6176,
											"end": 6328,
											"name": "POP"
										},
										{
											"begin": 6176,
											"end": 6328,
											"name": "POP"
										},
										{
											"begin": 6176,
											"end": 6328,
											"name": "POP"
										},
										{
											"begin": 6176,
											"end": 6328,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 6176,
											"end": 6328,
											"name": "JUMP"
										},
										{
											"begin": 6176,
											"end": 6328,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 6176,
											"end": 6328,
											"name": "JUMPDEST"
										},
										{
											"begin": 6176,
											"end": 6328,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6176,
											"end": 6328,
											"name": "MLOAD"
										},
										{
											"begin": 6176,
											"end": 6328,
											"name": "DUP1"
										},
										{
											"begin": 6176,
											"end": 6328,
											"name": "DUP3"
										},
										{
											"begin": 6176,
											"end": 6328,
											"name": "DUP2"
										},
										{
											"begin": 6176,
											"end": 6328,
											"name": "MSTORE"
										},
										{
											"begin": 6176,
											"end": 6328,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6176,
											"end": 6328,
											"name": "ADD"
										},
										{
											"begin": 6176,
											"end": 6328,
											"name": "SWAP2"
										},
										{
											"begin": 6176,
											"end": 6328,
											"name": "POP"
										},
										{
											"begin": 6176,
											"end": 6328,
											"name": "POP"
										},
										{
											"begin": 6176,
											"end": 6328,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6176,
											"end": 6328,
											"name": "MLOAD"
										},
										{
											"begin": 6176,
											"end": 6328,
											"name": "DUP1"
										},
										{
											"begin": 6176,
											"end": 6328,
											"name": "SWAP2"
										},
										{
											"begin": 6176,
											"end": 6328,
											"name": "SUB"
										},
										{
											"begin": 6176,
											"end": 6328,
											"name": "SWAP1"
										},
										{
											"begin": 6176,
											"end": 6328,
											"name": "RETURN"
										},
										{
											"begin": 1947,
											"end": 1974,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 1947,
											"end": 1974,
											"name": "JUMPDEST"
										},
										{
											"begin": 1947,
											"end": 1974,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1947,
											"end": 1974,
											"name": "POP"
										},
										{
											"begin": 1947,
											"end": 1974,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 1947,
											"end": 1974,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1947,
											"end": 1974,
											"name": "DUP1"
										},
										{
											"begin": 1947,
											"end": 1974,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1947,
											"end": 1974,
											"name": "SUB"
										},
										{
											"begin": 1947,
											"end": 1974,
											"name": "DUP2"
										},
										{
											"begin": 1947,
											"end": 1974,
											"name": "ADD"
										},
										{
											"begin": 1947,
											"end": 1974,
											"name": "SWAP1"
										},
										{
											"begin": 1947,
											"end": 1974,
											"name": "DUP1"
										},
										{
											"begin": 1947,
											"end": 1974,
											"name": "DUP1"
										},
										{
											"begin": 1947,
											"end": 1974,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1947,
											"end": 1974,
											"name": "SWAP1"
										},
										{
											"begin": 1947,
											"end": 1974,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1947,
											"end": 1974,
											"name": "ADD"
										},
										{
											"begin": 1947,
											"end": 1974,
											"name": "SWAP1"
										},
										{
											"begin": 1947,
											"end": 1974,
											"name": "SWAP3"
										},
										{
											"begin": 1947,
											"end": 1974,
											"name": "SWAP2"
										},
										{
											"begin": 1947,
											"end": 1974,
											"name": "SWAP1"
										},
										{
											"begin": 1947,
											"end": 1974,
											"name": "POP"
										},
										{
											"begin": 1947,
											"end": 1974,
											"name": "POP"
										},
										{
											"begin": 1947,
											"end": 1974,
											"name": "POP"
										},
										{
											"begin": 1947,
											"end": 1974,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 1947,
											"end": 1974,
											"name": "JUMP"
										},
										{
											"begin": 1947,
											"end": 1974,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 1947,
											"end": 1974,
											"name": "JUMPDEST"
										},
										{
											"begin": 1947,
											"end": 1974,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1947,
											"end": 1974,
											"name": "MLOAD"
										},
										{
											"begin": 1947,
											"end": 1974,
											"name": "DUP1"
										},
										{
											"begin": 1947,
											"end": 1974,
											"name": "DUP3"
										},
										{
											"begin": 1947,
											"end": 1974,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1947,
											"end": 1974,
											"name": "AND"
										},
										{
											"begin": 1947,
											"end": 1974,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1947,
											"end": 1974,
											"name": "AND"
										},
										{
											"begin": 1947,
											"end": 1974,
											"name": "DUP2"
										},
										{
											"begin": 1947,
											"end": 1974,
											"name": "MSTORE"
										},
										{
											"begin": 1947,
											"end": 1974,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1947,
											"end": 1974,
											"name": "ADD"
										},
										{
											"begin": 1947,
											"end": 1974,
											"name": "SWAP2"
										},
										{
											"begin": 1947,
											"end": 1974,
											"name": "POP"
										},
										{
											"begin": 1947,
											"end": 1974,
											"name": "POP"
										},
										{
											"begin": 1947,
											"end": 1974,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1947,
											"end": 1974,
											"name": "MLOAD"
										},
										{
											"begin": 1947,
											"end": 1974,
											"name": "DUP1"
										},
										{
											"begin": 1947,
											"end": 1974,
											"name": "SWAP2"
										},
										{
											"begin": 1947,
											"end": 1974,
											"name": "SUB"
										},
										{
											"begin": 1947,
											"end": 1974,
											"name": "SWAP1"
										},
										{
											"begin": 1947,
											"end": 1974,
											"name": "RETURN"
										},
										{
											"begin": 8530,
											"end": 8920,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 8530,
											"end": 8920,
											"name": "JUMPDEST"
										},
										{
											"begin": 8530,
											"end": 8920,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 8530,
											"end": 8920,
											"name": "POP"
										},
										{
											"begin": 8530,
											"end": 8920,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 8530,
											"end": 8920,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8530,
											"end": 8920,
											"name": "DUP1"
										},
										{
											"begin": 8530,
											"end": 8920,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 8530,
											"end": 8920,
											"name": "SUB"
										},
										{
											"begin": 8530,
											"end": 8920,
											"name": "DUP2"
										},
										{
											"begin": 8530,
											"end": 8920,
											"name": "ADD"
										},
										{
											"begin": 8530,
											"end": 8920,
											"name": "SWAP1"
										},
										{
											"begin": 8530,
											"end": 8920,
											"name": "DUP1"
										},
										{
											"begin": 8530,
											"end": 8920,
											"name": "DUP1"
										},
										{
											"begin": 8530,
											"end": 8920,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8530,
											"end": 8920,
											"name": "SWAP1"
										},
										{
											"begin": 8530,
											"end": 8920,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8530,
											"end": 8920,
											"name": "ADD"
										},
										{
											"begin": 8530,
											"end": 8920,
											"name": "SWAP1"
										},
										{
											"begin": 8530,
											"end": 8920,
											"name": "SWAP3"
										},
										{
											"begin": 8530,
											"end": 8920,
											"name": "SWAP2"
										},
										{
											"begin": 8530,
											"end": 8920,
											"name": "SWAP1"
										},
										{
											"begin": 8530,
											"end": 8920,
											"name": "DUP1"
										},
										{
											"begin": 8530,
											"end": 8920,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8530,
											"end": 8920,
											"name": "SWAP1"
										},
										{
											"begin": 8530,
											"end": 8920,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8530,
											"end": 8920,
											"name": "ADD"
										},
										{
											"begin": 8530,
											"end": 8920,
											"name": "SWAP1"
										},
										{
											"begin": 8530,
											"end": 8920,
											"name": "SWAP3"
										},
										{
											"begin": 8530,
											"end": 8920,
											"name": "SWAP2"
										},
										{
											"begin": 8530,
											"end": 8920,
											"name": "SWAP1"
										},
										{
											"begin": 8530,
											"end": 8920,
											"name": "POP"
										},
										{
											"begin": 8530,
											"end": 8920,
											"name": "POP"
										},
										{
											"begin": 8530,
											"end": 8920,
											"name": "POP"
										},
										{
											"begin": 8530,
											"end": 8920,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 8530,
											"end": 8920,
											"name": "JUMP"
										},
										{
											"begin": 8530,
											"end": 8920,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 8530,
											"end": 8920,
											"name": "JUMPDEST"
										},
										{
											"begin": 8530,
											"end": 8920,
											"name": "STOP"
										},
										{
											"begin": 5902,
											"end": 6031,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 5902,
											"end": 6031,
											"name": "JUMPDEST"
										},
										{
											"begin": 5902,
											"end": 6031,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 5902,
											"end": 6031,
											"name": "POP"
										},
										{
											"begin": 5902,
											"end": 6031,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 5902,
											"end": 6031,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5902,
											"end": 6031,
											"name": "DUP1"
										},
										{
											"begin": 5902,
											"end": 6031,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 5902,
											"end": 6031,
											"name": "SUB"
										},
										{
											"begin": 5902,
											"end": 6031,
											"name": "DUP2"
										},
										{
											"begin": 5902,
											"end": 6031,
											"name": "ADD"
										},
										{
											"begin": 5902,
											"end": 6031,
											"name": "SWAP1"
										},
										{
											"begin": 5902,
											"end": 6031,
											"name": "DUP1"
										},
										{
											"begin": 5902,
											"end": 6031,
											"name": "DUP1"
										},
										{
											"begin": 5902,
											"end": 6031,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5902,
											"end": 6031,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5902,
											"end": 6031,
											"name": "AND"
										},
										{
											"begin": 5902,
											"end": 6031,
											"name": "SWAP1"
										},
										{
											"begin": 5902,
											"end": 6031,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5902,
											"end": 6031,
											"name": "ADD"
										},
										{
											"begin": 5902,
											"end": 6031,
											"name": "SWAP1"
										},
										{
											"begin": 5902,
											"end": 6031,
											"name": "SWAP3"
										},
										{
											"begin": 5902,
											"end": 6031,
											"name": "SWAP2"
										},
										{
											"begin": 5902,
											"end": 6031,
											"name": "SWAP1"
										},
										{
											"begin": 5902,
											"end": 6031,
											"name": "POP"
										},
										{
											"begin": 5902,
											"end": 6031,
											"name": "POP"
										},
										{
											"begin": 5902,
											"end": 6031,
											"name": "POP"
										},
										{
											"begin": 5902,
											"end": 6031,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 5902,
											"end": 6031,
											"name": "JUMP"
										},
										{
											"begin": 5902,
											"end": 6031,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 5902,
											"end": 6031,
											"name": "JUMPDEST"
										},
										{
											"begin": 5902,
											"end": 6031,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5902,
											"end": 6031,
											"name": "MLOAD"
										},
										{
											"begin": 5902,
											"end": 6031,
											"name": "DUP1"
										},
										{
											"begin": 5902,
											"end": 6031,
											"name": "DUP3"
										},
										{
											"begin": 5902,
											"end": 6031,
											"name": "DUP2"
										},
										{
											"begin": 5902,
											"end": 6031,
											"name": "MSTORE"
										},
										{
											"begin": 5902,
											"end": 6031,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5902,
											"end": 6031,
											"name": "ADD"
										},
										{
											"begin": 5902,
											"end": 6031,
											"name": "SWAP2"
										},
										{
											"begin": 5902,
											"end": 6031,
											"name": "POP"
										},
										{
											"begin": 5902,
											"end": 6031,
											"name": "POP"
										},
										{
											"begin": 5902,
											"end": 6031,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5902,
											"end": 6031,
											"name": "MLOAD"
										},
										{
											"begin": 5902,
											"end": 6031,
											"name": "DUP1"
										},
										{
											"begin": 5902,
											"end": 6031,
											"name": "SWAP2"
										},
										{
											"begin": 5902,
											"end": 6031,
											"name": "SUB"
										},
										{
											"begin": 5902,
											"end": 6031,
											"name": "SWAP1"
										},
										{
											"begin": 5902,
											"end": 6031,
											"name": "RETURN"
										},
										{
											"begin": 5303,
											"end": 5800,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 5303,
											"end": 5800,
											"name": "JUMPDEST"
										},
										{
											"begin": 5303,
											"end": 5800,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 5303,
											"end": 5800,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5303,
											"end": 5800,
											"name": "DUP1"
										},
										{
											"begin": 5303,
											"end": 5800,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 5303,
											"end": 5800,
											"name": "SUB"
										},
										{
											"begin": 5303,
											"end": 5800,
											"name": "DUP2"
										},
										{
											"begin": 5303,
											"end": 5800,
											"name": "ADD"
										},
										{
											"begin": 5303,
											"end": 5800,
											"name": "SWAP1"
										},
										{
											"begin": 5303,
											"end": 5800,
											"name": "DUP1"
										},
										{
											"begin": 5303,
											"end": 5800,
											"name": "DUP1"
										},
										{
											"begin": 5303,
											"end": 5800,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5303,
											"end": 5800,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5303,
											"end": 5800,
											"name": "AND"
										},
										{
											"begin": 5303,
											"end": 5800,
											"name": "SWAP1"
										},
										{
											"begin": 5303,
											"end": 5800,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5303,
											"end": 5800,
											"name": "ADD"
										},
										{
											"begin": 5303,
											"end": 5800,
											"name": "SWAP1"
										},
										{
											"begin": 5303,
											"end": 5800,
											"name": "SWAP3"
										},
										{
											"begin": 5303,
											"end": 5800,
											"name": "SWAP2"
										},
										{
											"begin": 5303,
											"end": 5800,
											"name": "SWAP1"
										},
										{
											"begin": 5303,
											"end": 5800,
											"name": "POP"
										},
										{
											"begin": 5303,
											"end": 5800,
											"name": "POP"
										},
										{
											"begin": 5303,
											"end": 5800,
											"name": "POP"
										},
										{
											"begin": 5303,
											"end": 5800,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 5303,
											"end": 5800,
											"name": "JUMP"
										},
										{
											"begin": 5303,
											"end": 5800,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 5303,
											"end": 5800,
											"name": "JUMPDEST"
										},
										{
											"begin": 5303,
											"end": 5800,
											"name": "STOP"
										},
										{
											"begin": 1981,
											"end": 2014,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 1981,
											"end": 2014,
											"name": "JUMPDEST"
										},
										{
											"begin": 1981,
											"end": 2014,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1981,
											"end": 2014,
											"name": "POP"
										},
										{
											"begin": 1981,
											"end": 2014,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 1981,
											"end": 2014,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 1981,
											"end": 2014,
											"name": "JUMP"
										},
										{
											"begin": 1981,
											"end": 2014,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 1981,
											"end": 2014,
											"name": "JUMPDEST"
										},
										{
											"begin": 1981,
											"end": 2014,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2014,
											"name": "MLOAD"
										},
										{
											"begin": 1981,
											"end": 2014,
											"name": "DUP1"
										},
										{
											"begin": 1981,
											"end": 2014,
											"name": "DUP3"
										},
										{
											"begin": 1981,
											"end": 2014,
											"name": "DUP2"
										},
										{
											"begin": 1981,
											"end": 2014,
											"name": "MSTORE"
										},
										{
											"begin": 1981,
											"end": 2014,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1981,
											"end": 2014,
											"name": "ADD"
										},
										{
											"begin": 1981,
											"end": 2014,
											"name": "SWAP2"
										},
										{
											"begin": 1981,
											"end": 2014,
											"name": "POP"
										},
										{
											"begin": 1981,
											"end": 2014,
											"name": "POP"
										},
										{
											"begin": 1981,
											"end": 2014,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2014,
											"name": "MLOAD"
										},
										{
											"begin": 1981,
											"end": 2014,
											"name": "DUP1"
										},
										{
											"begin": 1981,
											"end": 2014,
											"name": "SWAP2"
										},
										{
											"begin": 1981,
											"end": 2014,
											"name": "SUB"
										},
										{
											"begin": 1981,
											"end": 2014,
											"name": "SWAP1"
										},
										{
											"begin": 1981,
											"end": 2014,
											"name": "RETURN"
										},
										{
											"begin": 2170,
											"end": 2203,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 2170,
											"end": 2203,
											"name": "JUMPDEST"
										},
										{
											"begin": 2170,
											"end": 2203,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2170,
											"end": 2203,
											"name": "POP"
										},
										{
											"begin": 2170,
											"end": 2203,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 2170,
											"end": 2203,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 2170,
											"end": 2203,
											"name": "JUMP"
										},
										{
											"begin": 2170,
											"end": 2203,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 2170,
											"end": 2203,
											"name": "JUMPDEST"
										},
										{
											"begin": 2170,
											"end": 2203,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2170,
											"end": 2203,
											"name": "MLOAD"
										},
										{
											"begin": 2170,
											"end": 2203,
											"name": "DUP1"
										},
										{
											"begin": 2170,
											"end": 2203,
											"name": "DUP3"
										},
										{
											"begin": 2170,
											"end": 2203,
											"name": "DUP2"
										},
										{
											"begin": 2170,
											"end": 2203,
											"name": "MSTORE"
										},
										{
											"begin": 2170,
											"end": 2203,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2170,
											"end": 2203,
											"name": "ADD"
										},
										{
											"begin": 2170,
											"end": 2203,
											"name": "SWAP2"
										},
										{
											"begin": 2170,
											"end": 2203,
											"name": "POP"
										},
										{
											"begin": 2170,
											"end": 2203,
											"name": "POP"
										},
										{
											"begin": 2170,
											"end": 2203,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2170,
											"end": 2203,
											"name": "MLOAD"
										},
										{
											"begin": 2170,
											"end": 2203,
											"name": "DUP1"
										},
										{
											"begin": 2170,
											"end": 2203,
											"name": "SWAP2"
										},
										{
											"begin": 2170,
											"end": 2203,
											"name": "SUB"
										},
										{
											"begin": 2170,
											"end": 2203,
											"name": "SWAP1"
										},
										{
											"begin": 2170,
											"end": 2203,
											"name": "RETURN"
										},
										{
											"begin": 7545,
											"end": 8524,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 7545,
											"end": 8524,
											"name": "JUMPDEST"
										},
										{
											"begin": 7545,
											"end": 8524,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 7545,
											"end": 8524,
											"name": "POP"
										},
										{
											"begin": 7545,
											"end": 8524,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 7545,
											"end": 8524,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7545,
											"end": 8524,
											"name": "DUP1"
										},
										{
											"begin": 7545,
											"end": 8524,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 7545,
											"end": 8524,
											"name": "SUB"
										},
										{
											"begin": 7545,
											"end": 8524,
											"name": "DUP2"
										},
										{
											"begin": 7545,
											"end": 8524,
											"name": "ADD"
										},
										{
											"begin": 7545,
											"end": 8524,
											"name": "SWAP1"
										},
										{
											"begin": 7545,
											"end": 8524,
											"name": "DUP1"
										},
										{
											"begin": 7545,
											"end": 8524,
											"name": "DUP1"
										},
										{
											"begin": 7545,
											"end": 8524,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7545,
											"end": 8524,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7545,
											"end": 8524,
											"name": "AND"
										},
										{
											"begin": 7545,
											"end": 8524,
											"name": "SWAP1"
										},
										{
											"begin": 7545,
											"end": 8524,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7545,
											"end": 8524,
											"name": "ADD"
										},
										{
											"begin": 7545,
											"end": 8524,
											"name": "SWAP1"
										},
										{
											"begin": 7545,
											"end": 8524,
											"name": "SWAP3"
										},
										{
											"begin": 7545,
											"end": 8524,
											"name": "SWAP2"
										},
										{
											"begin": 7545,
											"end": 8524,
											"name": "SWAP1"
										},
										{
											"begin": 7545,
											"end": 8524,
											"name": "POP"
										},
										{
											"begin": 7545,
											"end": 8524,
											"name": "POP"
										},
										{
											"begin": 7545,
											"end": 8524,
											"name": "POP"
										},
										{
											"begin": 7545,
											"end": 8524,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 7545,
											"end": 8524,
											"name": "JUMP"
										},
										{
											"begin": 7545,
											"end": 8524,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 7545,
											"end": 8524,
											"name": "JUMPDEST"
										},
										{
											"begin": 7545,
											"end": 8524,
											"name": "STOP"
										},
										{
											"begin": 6037,
											"end": 6170,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 6037,
											"end": 6170,
											"name": "JUMPDEST"
										},
										{
											"begin": 6037,
											"end": 6170,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6037,
											"end": 6170,
											"name": "POP"
										},
										{
											"begin": 6037,
											"end": 6170,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 6037,
											"end": 6170,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6037,
											"end": 6170,
											"name": "DUP1"
										},
										{
											"begin": 6037,
											"end": 6170,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 6037,
											"end": 6170,
											"name": "SUB"
										},
										{
											"begin": 6037,
											"end": 6170,
											"name": "DUP2"
										},
										{
											"begin": 6037,
											"end": 6170,
											"name": "ADD"
										},
										{
											"begin": 6037,
											"end": 6170,
											"name": "SWAP1"
										},
										{
											"begin": 6037,
											"end": 6170,
											"name": "DUP1"
										},
										{
											"begin": 6037,
											"end": 6170,
											"name": "DUP1"
										},
										{
											"begin": 6037,
											"end": 6170,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 6037,
											"end": 6170,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6037,
											"end": 6170,
											"name": "AND"
										},
										{
											"begin": 6037,
											"end": 6170,
											"name": "SWAP1"
										},
										{
											"begin": 6037,
											"end": 6170,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6037,
											"end": 6170,
											"name": "ADD"
										},
										{
											"begin": 6037,
											"end": 6170,
											"name": "SWAP1"
										},
										{
											"begin": 6037,
											"end": 6170,
											"name": "SWAP3"
										},
										{
											"begin": 6037,
											"end": 6170,
											"name": "SWAP2"
										},
										{
											"begin": 6037,
											"end": 6170,
											"name": "SWAP1"
										},
										{
											"begin": 6037,
											"end": 6170,
											"name": "POP"
										},
										{
											"begin": 6037,
											"end": 6170,
											"name": "POP"
										},
										{
											"begin": 6037,
											"end": 6170,
											"name": "POP"
										},
										{
											"begin": 6037,
											"end": 6170,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 6037,
											"end": 6170,
											"name": "JUMP"
										},
										{
											"begin": 6037,
											"end": 6170,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 6037,
											"end": 6170,
											"name": "JUMPDEST"
										},
										{
											"begin": 6037,
											"end": 6170,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6037,
											"end": 6170,
											"name": "MLOAD"
										},
										{
											"begin": 6037,
											"end": 6170,
											"name": "DUP1"
										},
										{
											"begin": 6037,
											"end": 6170,
											"name": "DUP3"
										},
										{
											"begin": 6037,
											"end": 6170,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6037,
											"end": 6170,
											"name": "AND"
										},
										{
											"begin": 6037,
											"end": 6170,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6037,
											"end": 6170,
											"name": "AND"
										},
										{
											"begin": 6037,
											"end": 6170,
											"name": "DUP2"
										},
										{
											"begin": 6037,
											"end": 6170,
											"name": "MSTORE"
										},
										{
											"begin": 6037,
											"end": 6170,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6037,
											"end": 6170,
											"name": "ADD"
										},
										{
											"begin": 6037,
											"end": 6170,
											"name": "SWAP2"
										},
										{
											"begin": 6037,
											"end": 6170,
											"name": "POP"
										},
										{
											"begin": 6037,
											"end": 6170,
											"name": "POP"
										},
										{
											"begin": 6037,
											"end": 6170,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6037,
											"end": 6170,
											"name": "MLOAD"
										},
										{
											"begin": 6037,
											"end": 6170,
											"name": "DUP1"
										},
										{
											"begin": 6037,
											"end": 6170,
											"name": "SWAP2"
										},
										{
											"begin": 6037,
											"end": 6170,
											"name": "SUB"
										},
										{
											"begin": 6037,
											"end": 6170,
											"name": "SWAP1"
										},
										{
											"begin": 6037,
											"end": 6170,
											"name": "RETURN"
										},
										{
											"begin": 2088,
											"end": 2121,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 2088,
											"end": 2121,
											"name": "JUMPDEST"
										},
										{
											"begin": 2088,
											"end": 2121,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2088,
											"end": 2121,
											"name": "POP"
										},
										{
											"begin": 2088,
											"end": 2121,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 2088,
											"end": 2121,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 2088,
											"end": 2121,
											"name": "JUMP"
										},
										{
											"begin": 2088,
											"end": 2121,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 2088,
											"end": 2121,
											"name": "JUMPDEST"
										},
										{
											"begin": 2088,
											"end": 2121,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2088,
											"end": 2121,
											"name": "MLOAD"
										},
										{
											"begin": 2088,
											"end": 2121,
											"name": "DUP1"
										},
										{
											"begin": 2088,
											"end": 2121,
											"name": "DUP3"
										},
										{
											"begin": 2088,
											"end": 2121,
											"name": "DUP2"
										},
										{
											"begin": 2088,
											"end": 2121,
											"name": "MSTORE"
										},
										{
											"begin": 2088,
											"end": 2121,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2088,
											"end": 2121,
											"name": "ADD"
										},
										{
											"begin": 2088,
											"end": 2121,
											"name": "SWAP2"
										},
										{
											"begin": 2088,
											"end": 2121,
											"name": "POP"
										},
										{
											"begin": 2088,
											"end": 2121,
											"name": "POP"
										},
										{
											"begin": 2088,
											"end": 2121,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2088,
											"end": 2121,
											"name": "MLOAD"
										},
										{
											"begin": 2088,
											"end": 2121,
											"name": "DUP1"
										},
										{
											"begin": 2088,
											"end": 2121,
											"name": "SWAP2"
										},
										{
											"begin": 2088,
											"end": 2121,
											"name": "SUB"
										},
										{
											"begin": 2088,
											"end": 2121,
											"name": "SWAP1"
										},
										{
											"begin": 2088,
											"end": 2121,
											"name": "RETURN"
										},
										{
											"begin": 2127,
											"end": 2164,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 2127,
											"end": 2164,
											"name": "JUMPDEST"
										},
										{
											"begin": 2127,
											"end": 2164,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2127,
											"end": 2164,
											"name": "POP"
										},
										{
											"begin": 2127,
											"end": 2164,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 2127,
											"end": 2164,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 2127,
											"end": 2164,
											"name": "JUMP"
										},
										{
											"begin": 2127,
											"end": 2164,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 2127,
											"end": 2164,
											"name": "JUMPDEST"
										},
										{
											"begin": 2127,
											"end": 2164,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2127,
											"end": 2164,
											"name": "MLOAD"
										},
										{
											"begin": 2127,
											"end": 2164,
											"name": "DUP1"
										},
										{
											"begin": 2127,
											"end": 2164,
											"name": "DUP3"
										},
										{
											"begin": 2127,
											"end": 2164,
											"name": "DUP2"
										},
										{
											"begin": 2127,
											"end": 2164,
											"name": "MSTORE"
										},
										{
											"begin": 2127,
											"end": 2164,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2127,
											"end": 2164,
											"name": "ADD"
										},
										{
											"begin": 2127,
											"end": 2164,
											"name": "SWAP2"
										},
										{
											"begin": 2127,
											"end": 2164,
											"name": "POP"
										},
										{
											"begin": 2127,
											"end": 2164,
											"name": "POP"
										},
										{
											"begin": 2127,
											"end": 2164,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2127,
											"end": 2164,
											"name": "MLOAD"
										},
										{
											"begin": 2127,
											"end": 2164,
											"name": "DUP1"
										},
										{
											"begin": 2127,
											"end": 2164,
											"name": "SWAP2"
										},
										{
											"begin": 2127,
											"end": 2164,
											"name": "SUB"
										},
										{
											"begin": 2127,
											"end": 2164,
											"name": "SWAP1"
										},
										{
											"begin": 2127,
											"end": 2164,
											"name": "RETURN"
										},
										{
											"begin": 6452,
											"end": 6582,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 6452,
											"end": 6582,
											"name": "JUMPDEST"
										},
										{
											"begin": 6452,
											"end": 6582,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6452,
											"end": 6582,
											"name": "POP"
										},
										{
											"begin": 6452,
											"end": 6582,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 6452,
											"end": 6582,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6452,
											"end": 6582,
											"name": "DUP1"
										},
										{
											"begin": 6452,
											"end": 6582,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 6452,
											"end": 6582,
											"name": "SUB"
										},
										{
											"begin": 6452,
											"end": 6582,
											"name": "DUP2"
										},
										{
											"begin": 6452,
											"end": 6582,
											"name": "ADD"
										},
										{
											"begin": 6452,
											"end": 6582,
											"name": "SWAP1"
										},
										{
											"begin": 6452,
											"end": 6582,
											"name": "DUP1"
										},
										{
											"begin": 6452,
											"end": 6582,
											"name": "DUP1"
										},
										{
											"begin": 6452,
											"end": 6582,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 6452,
											"end": 6582,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6452,
											"end": 6582,
											"name": "AND"
										},
										{
											"begin": 6452,
											"end": 6582,
											"name": "SWAP1"
										},
										{
											"begin": 6452,
											"end": 6582,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6452,
											"end": 6582,
											"name": "ADD"
										},
										{
											"begin": 6452,
											"end": 6582,
											"name": "SWAP1"
										},
										{
											"begin": 6452,
											"end": 6582,
											"name": "SWAP3"
										},
										{
											"begin": 6452,
											"end": 6582,
											"name": "SWAP2"
										},
										{
											"begin": 6452,
											"end": 6582,
											"name": "SWAP1"
										},
										{
											"begin": 6452,
											"end": 6582,
											"name": "POP"
										},
										{
											"begin": 6452,
											"end": 6582,
											"name": "POP"
										},
										{
											"begin": 6452,
											"end": 6582,
											"name": "POP"
										},
										{
											"begin": 6452,
											"end": 6582,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 6452,
											"end": 6582,
											"name": "JUMP"
										},
										{
											"begin": 6452,
											"end": 6582,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 6452,
											"end": 6582,
											"name": "JUMPDEST"
										},
										{
											"begin": 6452,
											"end": 6582,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6452,
											"end": 6582,
											"name": "MLOAD"
										},
										{
											"begin": 6452,
											"end": 6582,
											"name": "DUP1"
										},
										{
											"begin": 6452,
											"end": 6582,
											"name": "DUP3"
										},
										{
											"begin": 6452,
											"end": 6582,
											"name": "ISZERO"
										},
										{
											"begin": 6452,
											"end": 6582,
											"name": "ISZERO"
										},
										{
											"begin": 6452,
											"end": 6582,
											"name": "ISZERO"
										},
										{
											"begin": 6452,
											"end": 6582,
											"name": "ISZERO"
										},
										{
											"begin": 6452,
											"end": 6582,
											"name": "DUP2"
										},
										{
											"begin": 6452,
											"end": 6582,
											"name": "MSTORE"
										},
										{
											"begin": 6452,
											"end": 6582,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6452,
											"end": 6582,
											"name": "ADD"
										},
										{
											"begin": 6452,
											"end": 6582,
											"name": "SWAP2"
										},
										{
											"begin": 6452,
											"end": 6582,
											"name": "POP"
										},
										{
											"begin": 6452,
											"end": 6582,
											"name": "POP"
										},
										{
											"begin": 6452,
											"end": 6582,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6452,
											"end": 6582,
											"name": "MLOAD"
										},
										{
											"begin": 6452,
											"end": 6582,
											"name": "DUP1"
										},
										{
											"begin": 6452,
											"end": 6582,
											"name": "SWAP2"
										},
										{
											"begin": 6452,
											"end": 6582,
											"name": "SUB"
										},
										{
											"begin": 6452,
											"end": 6582,
											"name": "SWAP1"
										},
										{
											"begin": 6452,
											"end": 6582,
											"name": "RETURN"
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "JUMPDEST"
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "83"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "POP"
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "JUMP"
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "JUMPDEST"
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "MLOAD"
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "DUP1"
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "DUP3"
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "DUP2"
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "MSTORE"
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "ADD"
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "SWAP2"
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "POP"
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "POP"
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "MLOAD"
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "DUP1"
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "SWAP2"
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "SUB"
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "SWAP1"
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "RETURN"
										},
										{
											"begin": 2056,
											"end": 2082,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 2056,
											"end": 2082,
											"name": "JUMPDEST"
										},
										{
											"begin": 2056,
											"end": 2082,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2056,
											"end": 2082,
											"name": "POP"
										},
										{
											"begin": 2056,
											"end": 2082,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 2056,
											"end": 2082,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 2056,
											"end": 2082,
											"name": "JUMP"
										},
										{
											"begin": 2056,
											"end": 2082,
											"name": "tag",
											"value": "87"
										},
										{
											"begin": 2056,
											"end": 2082,
											"name": "JUMPDEST"
										},
										{
											"begin": 2056,
											"end": 2082,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2056,
											"end": 2082,
											"name": "MLOAD"
										},
										{
											"begin": 2056,
											"end": 2082,
											"name": "DUP1"
										},
										{
											"begin": 2056,
											"end": 2082,
											"name": "DUP3"
										},
										{
											"begin": 2056,
											"end": 2082,
											"name": "DUP2"
										},
										{
											"begin": 2056,
											"end": 2082,
											"name": "MSTORE"
										},
										{
											"begin": 2056,
											"end": 2082,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2056,
											"end": 2082,
											"name": "ADD"
										},
										{
											"begin": 2056,
											"end": 2082,
											"name": "SWAP2"
										},
										{
											"begin": 2056,
											"end": 2082,
											"name": "POP"
										},
										{
											"begin": 2056,
											"end": 2082,
											"name": "POP"
										},
										{
											"begin": 2056,
											"end": 2082,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2056,
											"end": 2082,
											"name": "MLOAD"
										},
										{
											"begin": 2056,
											"end": 2082,
											"name": "DUP1"
										},
										{
											"begin": 2056,
											"end": 2082,
											"name": "SWAP2"
										},
										{
											"begin": 2056,
											"end": 2082,
											"name": "SUB"
										},
										{
											"begin": 2056,
											"end": 2082,
											"name": "SWAP1"
										},
										{
											"begin": 2056,
											"end": 2082,
											"name": "RETURN"
										},
										{
											"begin": 4658,
											"end": 5297,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 4658,
											"end": 5297,
											"name": "JUMPDEST"
										},
										{
											"begin": 4773,
											"end": 4784,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2333,
											"end": 2348,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 2333,
											"end": 2348,
											"name": "SLOAD"
										},
										{
											"begin": 2320,
											"end": 2329,
											"name": "CALLVALUE"
										},
										{
											"begin": 2320,
											"end": 2348,
											"name": "LT"
										},
										{
											"begin": 2320,
											"end": 2348,
											"name": "ISZERO"
										},
										{
											"begin": 2312,
											"end": 2349,
											"name": "ISZERO"
										},
										{
											"begin": 2312,
											"end": 2349,
											"name": "ISZERO"
										},
										{
											"begin": 2312,
											"end": 2349,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 2312,
											"end": 2349,
											"name": "JUMPI"
										},
										{
											"begin": 2312,
											"end": 2349,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2312,
											"end": 2349,
											"name": "DUP1"
										},
										{
											"begin": 2312,
											"end": 2349,
											"name": "REVERT"
										},
										{
											"begin": 2312,
											"end": 2349,
											"name": "tag",
											"value": "90"
										},
										{
											"begin": 2312,
											"end": 2349,
											"name": "JUMPDEST"
										},
										{
											"begin": 4751,
											"end": 4761,
											"name": "DUP2"
										},
										{
											"begin": 2918,
											"end": 2933,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2918,
											"end": 2945,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2934,
											"end": 2944,
											"name": "DUP3"
										},
										{
											"begin": 2918,
											"end": 2945,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2918,
											"end": 2945,
											"name": "AND"
										},
										{
											"begin": 2918,
											"end": 2945,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2918,
											"end": 2945,
											"name": "AND"
										},
										{
											"begin": 2918,
											"end": 2945,
											"name": "DUP2"
										},
										{
											"begin": 2918,
											"end": 2945,
											"name": "MSTORE"
										},
										{
											"begin": 2918,
											"end": 2945,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2918,
											"end": 2945,
											"name": "ADD"
										},
										{
											"begin": 2918,
											"end": 2945,
											"name": "SWAP1"
										},
										{
											"begin": 2918,
											"end": 2945,
											"name": "DUP2"
										},
										{
											"begin": 2918,
											"end": 2945,
											"name": "MSTORE"
										},
										{
											"begin": 2918,
											"end": 2945,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2918,
											"end": 2945,
											"name": "ADD"
										},
										{
											"begin": 2918,
											"end": 2945,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2918,
											"end": 2945,
											"name": "KECCAK256"
										},
										{
											"begin": 2918,
											"end": 2957,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2918,
											"end": 2957,
											"name": "ADD"
										},
										{
											"begin": 2918,
											"end": 2957,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 2918,
											"end": 2957,
											"name": "SWAP1"
										},
										{
											"begin": 2918,
											"end": 2957,
											"name": "SLOAD"
										},
										{
											"begin": 2918,
											"end": 2957,
											"name": "SWAP1"
										},
										{
											"begin": 2918,
											"end": 2957,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2918,
											"end": 2957,
											"name": "EXP"
										},
										{
											"begin": 2918,
											"end": 2957,
											"name": "SWAP1"
										},
										{
											"begin": 2918,
											"end": 2957,
											"name": "DIV"
										},
										{
											"begin": 2918,
											"end": 2957,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 2918,
											"end": 2957,
											"name": "AND"
										},
										{
											"begin": 2917,
											"end": 2957,
											"name": "ISZERO"
										},
										{
											"begin": 2909,
											"end": 2958,
											"name": "ISZERO"
										},
										{
											"begin": 2909,
											"end": 2958,
											"name": "ISZERO"
										},
										{
											"begin": 2909,
											"end": 2958,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 2909,
											"end": 2958,
											"name": "JUMPI"
										},
										{
											"begin": 2909,
											"end": 2958,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2909,
											"end": 2958,
											"name": "DUP1"
										},
										{
											"begin": 2909,
											"end": 2958,
											"name": "REVERT"
										},
										{
											"begin": 2909,
											"end": 2958,
											"name": "tag",
											"value": "92"
										},
										{
											"begin": 2909,
											"end": 2958,
											"name": "JUMPDEST"
										},
										{
											"begin": 4787,
											"end": 4833,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 4823,
											"end": 4832,
											"name": "CALLVALUE"
										},
										{
											"begin": 4787,
											"end": 4802,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4787,
											"end": 4814,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4803,
											"end": 4813,
											"name": "DUP7"
										},
										{
											"begin": 4787,
											"end": 4814,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4787,
											"end": 4814,
											"name": "AND"
										},
										{
											"begin": 4787,
											"end": 4814,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4787,
											"end": 4814,
											"name": "AND"
										},
										{
											"begin": 4787,
											"end": 4814,
											"name": "DUP2"
										},
										{
											"begin": 4787,
											"end": 4814,
											"name": "MSTORE"
										},
										{
											"begin": 4787,
											"end": 4814,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4787,
											"end": 4814,
											"name": "ADD"
										},
										{
											"begin": 4787,
											"end": 4814,
											"name": "SWAP1"
										},
										{
											"begin": 4787,
											"end": 4814,
											"name": "DUP2"
										},
										{
											"begin": 4787,
											"end": 4814,
											"name": "MSTORE"
										},
										{
											"begin": 4787,
											"end": 4814,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4787,
											"end": 4814,
											"name": "ADD"
										},
										{
											"begin": 4787,
											"end": 4814,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4787,
											"end": 4814,
											"name": "KECCAK256"
										},
										{
											"begin": 4787,
											"end": 4818,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4787,
											"end": 4818,
											"name": "ADD"
										},
										{
											"begin": 4787,
											"end": 4818,
											"name": "SLOAD"
										},
										{
											"begin": 4787,
											"end": 4822,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 4787,
											"end": 4822,
											"name": "SWAP1"
										},
										{
											"begin": 4787,
											"end": 4833,
											"name": "SWAP2"
										},
										{
											"begin": 4787,
											"end": 4833,
											"name": "SWAP1"
										},
										{
											"begin": 4787,
											"end": 4833,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4787,
											"end": 4833,
											"name": "AND"
										},
										{
											"begin": 4787,
											"end": 4833,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4787,
											"end": 4833,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 4787,
											"end": 4833,
											"name": "JUMPDEST"
										},
										{
											"begin": 4773,
											"end": 4833,
											"name": "SWAP2"
										},
										{
											"begin": 4773,
											"end": 4833,
											"name": "POP"
										},
										{
											"begin": 4843,
											"end": 4853,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 4859,
											"end": 4869,
											"name": "DUP4"
										},
										{
											"begin": 4843,
											"end": 4870,
											"name": "SWAP1"
										},
										{
											"begin": 4843,
											"end": 4870,
											"name": "DUP1"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "SLOAD"
										},
										{
											"begin": 23,
											"end": 41,
											"name": "ADD"
										},
										{
											"begin": 57,
											"end": 67,
											"name": "DUP1"
										},
										{
											"begin": 52,
											"end": 55,
											"name": "DUP3"
										},
										{
											"begin": 45,
											"end": 68,
											"name": "SSTORE"
										},
										{
											"begin": 79,
											"end": 89,
											"name": "DUP1"
										},
										{
											"begin": 72,
											"end": 89,
											"name": "SWAP2"
										},
										{
											"begin": 72,
											"end": 89,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 93,
											"name": "POP"
										},
										{
											"begin": 4843,
											"end": 4870,
											"name": "SWAP1"
										},
										{
											"begin": 4843,
											"end": 4870,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4843,
											"end": 4870,
											"name": "DUP3"
										},
										{
											"begin": 4843,
											"end": 4870,
											"name": "SUB"
										},
										{
											"begin": 4843,
											"end": 4870,
											"name": "SWAP1"
										},
										{
											"begin": 4843,
											"end": 4870,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4843,
											"end": 4870,
											"name": "MSTORE"
										},
										{
											"begin": 4843,
											"end": 4870,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4843,
											"end": 4870,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4843,
											"end": 4870,
											"name": "KECCAK256"
										},
										{
											"begin": 4843,
											"end": 4870,
											"name": "ADD"
										},
										{
											"begin": 4843,
											"end": 4870,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4843,
											"end": 4870,
											"name": "SWAP1"
										},
										{
											"begin": 4843,
											"end": 4870,
											"name": "SWAP2"
										},
										{
											"begin": 4843,
											"end": 4870,
											"name": "SWAP3"
										},
										{
											"begin": 4843,
											"end": 4870,
											"name": "SWAP1"
										},
										{
											"begin": 4843,
											"end": 4870,
											"name": "SWAP2"
										},
										{
											"begin": 4843,
											"end": 4870,
											"name": "SWAP1"
										},
										{
											"begin": 4843,
											"end": 4870,
											"name": "SWAP2"
										},
										{
											"begin": 4843,
											"end": 4870,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4843,
											"end": 4870,
											"name": "EXP"
										},
										{
											"begin": 4843,
											"end": 4870,
											"name": "DUP2"
										},
										{
											"begin": 4843,
											"end": 4870,
											"name": "SLOAD"
										},
										{
											"begin": 4843,
											"end": 4870,
											"name": "DUP2"
										},
										{
											"begin": 4843,
											"end": 4870,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4843,
											"end": 4870,
											"name": "MUL"
										},
										{
											"begin": 4843,
											"end": 4870,
											"name": "NOT"
										},
										{
											"begin": 4843,
											"end": 4870,
											"name": "AND"
										},
										{
											"begin": 4843,
											"end": 4870,
											"name": "SWAP1"
										},
										{
											"begin": 4843,
											"end": 4870,
											"name": "DUP4"
										},
										{
											"begin": 4843,
											"end": 4870,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4843,
											"end": 4870,
											"name": "AND"
										},
										{
											"begin": 4843,
											"end": 4870,
											"name": "MUL"
										},
										{
											"begin": 4843,
											"end": 4870,
											"name": "OR"
										},
										{
											"begin": 4843,
											"end": 4870,
											"name": "SWAP1"
										},
										{
											"begin": 4843,
											"end": 4870,
											"name": "SSTORE"
										},
										{
											"begin": 4843,
											"end": 4870,
											"name": "POP"
										},
										{
											"begin": 4843,
											"end": 4870,
											"name": "POP"
										},
										{
											"begin": 4910,
											"end": 5020,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 4910,
											"end": 5020,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4910,
											"end": 5020,
											"name": "MLOAD"
										},
										{
											"begin": 4910,
											"end": 5020,
											"name": "SWAP1"
										},
										{
											"begin": 4910,
											"end": 5020,
											"name": "DUP2"
										},
										{
											"begin": 4910,
											"end": 5020,
											"name": "ADD"
										},
										{
											"begin": 4910,
											"end": 5020,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4910,
											"end": 5020,
											"name": "MSTORE"
										},
										{
											"begin": 4910,
											"end": 5020,
											"name": "DUP1"
										},
										{
											"begin": 4946,
											"end": 4956,
											"name": "CALLER"
										},
										{
											"begin": 4910,
											"end": 5020,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4910,
											"end": 5020,
											"name": "AND"
										},
										{
											"begin": 4910,
											"end": 5020,
											"name": "DUP2"
										},
										{
											"begin": 4910,
											"end": 5020,
											"name": "MSTORE"
										},
										{
											"begin": 4910,
											"end": 5020,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4910,
											"end": 5020,
											"name": "ADD"
										},
										{
											"begin": 4983,
											"end": 4987,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4910,
											"end": 5020,
											"name": "ISZERO"
										},
										{
											"begin": 4910,
											"end": 5020,
											"name": "ISZERO"
										},
										{
											"begin": 4910,
											"end": 5020,
											"name": "DUP2"
										},
										{
											"begin": 4910,
											"end": 5020,
											"name": "MSTORE"
										},
										{
											"begin": 4910,
											"end": 5020,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4910,
											"end": 5020,
											"name": "ADD"
										},
										{
											"begin": 5006,
											"end": 5009,
											"name": "DUP4"
										},
										{
											"begin": 4910,
											"end": 5020,
											"name": "DUP2"
										},
										{
											"begin": 4910,
											"end": 5020,
											"name": "MSTORE"
										},
										{
											"begin": 4910,
											"end": 5020,
											"name": "POP"
										},
										{
											"begin": 4880,
											"end": 4895,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4880,
											"end": 4907,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4896,
											"end": 4906,
											"name": "DUP6"
										},
										{
											"begin": 4880,
											"end": 4907,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4880,
											"end": 4907,
											"name": "AND"
										},
										{
											"begin": 4880,
											"end": 4907,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4880,
											"end": 4907,
											"name": "AND"
										},
										{
											"begin": 4880,
											"end": 4907,
											"name": "DUP2"
										},
										{
											"begin": 4880,
											"end": 4907,
											"name": "MSTORE"
										},
										{
											"begin": 4880,
											"end": 4907,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4880,
											"end": 4907,
											"name": "ADD"
										},
										{
											"begin": 4880,
											"end": 4907,
											"name": "SWAP1"
										},
										{
											"begin": 4880,
											"end": 4907,
											"name": "DUP2"
										},
										{
											"begin": 4880,
											"end": 4907,
											"name": "MSTORE"
										},
										{
											"begin": 4880,
											"end": 4907,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4880,
											"end": 4907,
											"name": "ADD"
										},
										{
											"begin": 4880,
											"end": 4907,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4880,
											"end": 4907,
											"name": "KECCAK256"
										},
										{
											"begin": 4880,
											"end": 5020,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4880,
											"end": 5020,
											"name": "DUP3"
										},
										{
											"begin": 4880,
											"end": 5020,
											"name": "ADD"
										},
										{
											"begin": 4880,
											"end": 5020,
											"name": "MLOAD"
										},
										{
											"begin": 4880,
											"end": 5020,
											"name": "DUP2"
										},
										{
											"begin": 4880,
											"end": 5020,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4880,
											"end": 5020,
											"name": "ADD"
										},
										{
											"begin": 4880,
											"end": 5020,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4880,
											"end": 5020,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4880,
											"end": 5020,
											"name": "EXP"
										},
										{
											"begin": 4880,
											"end": 5020,
											"name": "DUP2"
										},
										{
											"begin": 4880,
											"end": 5020,
											"name": "SLOAD"
										},
										{
											"begin": 4880,
											"end": 5020,
											"name": "DUP2"
										},
										{
											"begin": 4880,
											"end": 5020,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4880,
											"end": 5020,
											"name": "MUL"
										},
										{
											"begin": 4880,
											"end": 5020,
											"name": "NOT"
										},
										{
											"begin": 4880,
											"end": 5020,
											"name": "AND"
										},
										{
											"begin": 4880,
											"end": 5020,
											"name": "SWAP1"
										},
										{
											"begin": 4880,
											"end": 5020,
											"name": "DUP4"
										},
										{
											"begin": 4880,
											"end": 5020,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4880,
											"end": 5020,
											"name": "AND"
										},
										{
											"begin": 4880,
											"end": 5020,
											"name": "MUL"
										},
										{
											"begin": 4880,
											"end": 5020,
											"name": "OR"
										},
										{
											"begin": 4880,
											"end": 5020,
											"name": "SWAP1"
										},
										{
											"begin": 4880,
											"end": 5020,
											"name": "SSTORE"
										},
										{
											"begin": 4880,
											"end": 5020,
											"name": "POP"
										},
										{
											"begin": 4880,
											"end": 5020,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4880,
											"end": 5020,
											"name": "DUP3"
										},
										{
											"begin": 4880,
											"end": 5020,
											"name": "ADD"
										},
										{
											"begin": 4880,
											"end": 5020,
											"name": "MLOAD"
										},
										{
											"begin": 4880,
											"end": 5020,
											"name": "DUP2"
										},
										{
											"begin": 4880,
											"end": 5020,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4880,
											"end": 5020,
											"name": "ADD"
										},
										{
											"begin": 4880,
											"end": 5020,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 4880,
											"end": 5020,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4880,
											"end": 5020,
											"name": "EXP"
										},
										{
											"begin": 4880,
											"end": 5020,
											"name": "DUP2"
										},
										{
											"begin": 4880,
											"end": 5020,
											"name": "SLOAD"
										},
										{
											"begin": 4880,
											"end": 5020,
											"name": "DUP2"
										},
										{
											"begin": 4880,
											"end": 5020,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 4880,
											"end": 5020,
											"name": "MUL"
										},
										{
											"begin": 4880,
											"end": 5020,
											"name": "NOT"
										},
										{
											"begin": 4880,
											"end": 5020,
											"name": "AND"
										},
										{
											"begin": 4880,
											"end": 5020,
											"name": "SWAP1"
										},
										{
											"begin": 4880,
											"end": 5020,
											"name": "DUP4"
										},
										{
											"begin": 4880,
											"end": 5020,
											"name": "ISZERO"
										},
										{
											"begin": 4880,
											"end": 5020,
											"name": "ISZERO"
										},
										{
											"begin": 4880,
											"end": 5020,
											"name": "MUL"
										},
										{
											"begin": 4880,
											"end": 5020,
											"name": "OR"
										},
										{
											"begin": 4880,
											"end": 5020,
											"name": "SWAP1"
										},
										{
											"begin": 4880,
											"end": 5020,
											"name": "SSTORE"
										},
										{
											"begin": 4880,
											"end": 5020,
											"name": "POP"
										},
										{
											"begin": 4880,
											"end": 5020,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4880,
											"end": 5020,
											"name": "DUP3"
										},
										{
											"begin": 4880,
											"end": 5020,
											"name": "ADD"
										},
										{
											"begin": 4880,
											"end": 5020,
											"name": "MLOAD"
										},
										{
											"begin": 4880,
											"end": 5020,
											"name": "DUP2"
										},
										{
											"begin": 4880,
											"end": 5020,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4880,
											"end": 5020,
											"name": "ADD"
										},
										{
											"begin": 4880,
											"end": 5020,
											"name": "SSTORE"
										},
										{
											"begin": 4880,
											"end": 5020,
											"name": "SWAP1"
										},
										{
											"begin": 4880,
											"end": 5020,
											"name": "POP"
										},
										{
											"begin": 4880,
											"end": 5020,
											"name": "POP"
										},
										{
											"begin": 5079,
											"end": 5140,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 5130,
											"end": 5139,
											"name": "CALLVALUE"
										},
										{
											"begin": 5079,
											"end": 5094,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5079,
											"end": 5106,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5095,
											"end": 5105,
											"name": "DUP7"
										},
										{
											"begin": 5079,
											"end": 5106,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5079,
											"end": 5106,
											"name": "AND"
										},
										{
											"begin": 5079,
											"end": 5106,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5079,
											"end": 5106,
											"name": "AND"
										},
										{
											"begin": 5079,
											"end": 5106,
											"name": "DUP2"
										},
										{
											"begin": 5079,
											"end": 5106,
											"name": "MSTORE"
										},
										{
											"begin": 5079,
											"end": 5106,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5079,
											"end": 5106,
											"name": "ADD"
										},
										{
											"begin": 5079,
											"end": 5106,
											"name": "SWAP1"
										},
										{
											"begin": 5079,
											"end": 5106,
											"name": "DUP2"
										},
										{
											"begin": 5079,
											"end": 5106,
											"name": "MSTORE"
										},
										{
											"begin": 5079,
											"end": 5106,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5079,
											"end": 5106,
											"name": "ADD"
										},
										{
											"begin": 5079,
											"end": 5106,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5079,
											"end": 5106,
											"name": "KECCAK256"
										},
										{
											"begin": 5079,
											"end": 5113,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5079,
											"end": 5113,
											"name": "ADD"
										},
										{
											"begin": 5079,
											"end": 5125,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5114,
											"end": 5124,
											"name": "CALLER"
										},
										{
											"begin": 5079,
											"end": 5125,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5079,
											"end": 5125,
											"name": "AND"
										},
										{
											"begin": 5079,
											"end": 5125,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5079,
											"end": 5125,
											"name": "AND"
										},
										{
											"begin": 5079,
											"end": 5125,
											"name": "DUP2"
										},
										{
											"begin": 5079,
											"end": 5125,
											"name": "MSTORE"
										},
										{
											"begin": 5079,
											"end": 5125,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5079,
											"end": 5125,
											"name": "ADD"
										},
										{
											"begin": 5079,
											"end": 5125,
											"name": "SWAP1"
										},
										{
											"begin": 5079,
											"end": 5125,
											"name": "DUP2"
										},
										{
											"begin": 5079,
											"end": 5125,
											"name": "MSTORE"
										},
										{
											"begin": 5079,
											"end": 5125,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5079,
											"end": 5125,
											"name": "ADD"
										},
										{
											"begin": 5079,
											"end": 5125,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5079,
											"end": 5125,
											"name": "KECCAK256"
										},
										{
											"begin": 5079,
											"end": 5125,
											"name": "SLOAD"
										},
										{
											"begin": 5079,
											"end": 5129,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 5079,
											"end": 5129,
											"name": "SWAP1"
										},
										{
											"begin": 5079,
											"end": 5140,
											"name": "SWAP2"
										},
										{
											"begin": 5079,
											"end": 5140,
											"name": "SWAP1"
										},
										{
											"begin": 5079,
											"end": 5140,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5079,
											"end": 5140,
											"name": "AND"
										},
										{
											"begin": 5079,
											"end": 5140,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5079,
											"end": 5140,
											"name": "tag",
											"value": "97"
										},
										{
											"begin": 5079,
											"end": 5140,
											"name": "JUMPDEST"
										},
										{
											"begin": 5030,
											"end": 5045,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5030,
											"end": 5057,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5046,
											"end": 5056,
											"name": "DUP6"
										},
										{
											"begin": 5030,
											"end": 5057,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5030,
											"end": 5057,
											"name": "AND"
										},
										{
											"begin": 5030,
											"end": 5057,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5030,
											"end": 5057,
											"name": "AND"
										},
										{
											"begin": 5030,
											"end": 5057,
											"name": "DUP2"
										},
										{
											"begin": 5030,
											"end": 5057,
											"name": "MSTORE"
										},
										{
											"begin": 5030,
											"end": 5057,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5030,
											"end": 5057,
											"name": "ADD"
										},
										{
											"begin": 5030,
											"end": 5057,
											"name": "SWAP1"
										},
										{
											"begin": 5030,
											"end": 5057,
											"name": "DUP2"
										},
										{
											"begin": 5030,
											"end": 5057,
											"name": "MSTORE"
										},
										{
											"begin": 5030,
											"end": 5057,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5030,
											"end": 5057,
											"name": "ADD"
										},
										{
											"begin": 5030,
											"end": 5057,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5030,
											"end": 5057,
											"name": "KECCAK256"
										},
										{
											"begin": 5030,
											"end": 5064,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5030,
											"end": 5064,
											"name": "ADD"
										},
										{
											"begin": 5030,
											"end": 5076,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5065,
											"end": 5075,
											"name": "CALLER"
										},
										{
											"begin": 5030,
											"end": 5076,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5030,
											"end": 5076,
											"name": "AND"
										},
										{
											"begin": 5030,
											"end": 5076,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5030,
											"end": 5076,
											"name": "AND"
										},
										{
											"begin": 5030,
											"end": 5076,
											"name": "DUP2"
										},
										{
											"begin": 5030,
											"end": 5076,
											"name": "MSTORE"
										},
										{
											"begin": 5030,
											"end": 5076,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5030,
											"end": 5076,
											"name": "ADD"
										},
										{
											"begin": 5030,
											"end": 5076,
											"name": "SWAP1"
										},
										{
											"begin": 5030,
											"end": 5076,
											"name": "DUP2"
										},
										{
											"begin": 5030,
											"end": 5076,
											"name": "MSTORE"
										},
										{
											"begin": 5030,
											"end": 5076,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5030,
											"end": 5076,
											"name": "ADD"
										},
										{
											"begin": 5030,
											"end": 5076,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5030,
											"end": 5076,
											"name": "KECCAK256"
										},
										{
											"begin": 5030,
											"end": 5140,
											"name": "DUP2"
										},
										{
											"begin": 5030,
											"end": 5140,
											"name": "SWAP1"
										},
										{
											"begin": 5030,
											"end": 5140,
											"name": "SSTORE"
										},
										{
											"begin": 5030,
											"end": 5140,
											"name": "POP"
										},
										{
											"begin": 5167,
											"end": 5188,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 5186,
											"end": 5187,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5167,
											"end": 5181,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5167,
											"end": 5181,
											"name": "SLOAD"
										},
										{
											"begin": 5167,
											"end": 5185,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 5167,
											"end": 5185,
											"name": "SWAP1"
										},
										{
											"begin": 5167,
											"end": 5188,
											"name": "SWAP2"
										},
										{
											"begin": 5167,
											"end": 5188,
											"name": "SWAP1"
										},
										{
											"begin": 5167,
											"end": 5188,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5167,
											"end": 5188,
											"name": "AND"
										},
										{
											"begin": 5167,
											"end": 5188,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5167,
											"end": 5188,
											"name": "tag",
											"value": "98"
										},
										{
											"begin": 5167,
											"end": 5188,
											"name": "JUMPDEST"
										},
										{
											"begin": 5150,
											"end": 5164,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5150,
											"end": 5188,
											"name": "DUP2"
										},
										{
											"begin": 5150,
											"end": 5188,
											"name": "SWAP1"
										},
										{
											"begin": 5150,
											"end": 5188,
											"name": "SSTORE"
										},
										{
											"begin": 5150,
											"end": 5188,
											"name": "POP"
										},
										{
											"begin": 5198,
											"end": 5204,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5198,
											"end": 5216,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5205,
											"end": 5215,
											"name": "DUP5"
										},
										{
											"begin": 5198,
											"end": 5216,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5198,
											"end": 5216,
											"name": "AND"
										},
										{
											"begin": 5198,
											"end": 5216,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5198,
											"end": 5216,
											"name": "AND"
										},
										{
											"begin": 5198,
											"end": 5216,
											"name": "DUP2"
										},
										{
											"begin": 5198,
											"end": 5216,
											"name": "MSTORE"
										},
										{
											"begin": 5198,
											"end": 5216,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5198,
											"end": 5216,
											"name": "ADD"
										},
										{
											"begin": 5198,
											"end": 5216,
											"name": "SWAP1"
										},
										{
											"begin": 5198,
											"end": 5216,
											"name": "DUP2"
										},
										{
											"begin": 5198,
											"end": 5216,
											"name": "MSTORE"
										},
										{
											"begin": 5198,
											"end": 5216,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5198,
											"end": 5216,
											"name": "ADD"
										},
										{
											"begin": 5198,
											"end": 5216,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5198,
											"end": 5216,
											"name": "KECCAK256"
										},
										{
											"begin": 5222,
											"end": 5232,
											"name": "CALLER"
										},
										{
											"begin": 5198,
											"end": 5233,
											"name": "SWAP1"
										},
										{
											"begin": 5198,
											"end": 5233,
											"name": "DUP1"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "SLOAD"
										},
										{
											"begin": 23,
											"end": 41,
											"name": "ADD"
										},
										{
											"begin": 57,
											"end": 67,
											"name": "DUP1"
										},
										{
											"begin": 52,
											"end": 55,
											"name": "DUP3"
										},
										{
											"begin": 45,
											"end": 68,
											"name": "SSTORE"
										},
										{
											"begin": 79,
											"end": 89,
											"name": "DUP1"
										},
										{
											"begin": 72,
											"end": 89,
											"name": "SWAP2"
										},
										{
											"begin": 72,
											"end": 89,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 93,
											"name": "POP"
										},
										{
											"begin": 5198,
											"end": 5233,
											"name": "SWAP1"
										},
										{
											"begin": 5198,
											"end": 5233,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5198,
											"end": 5233,
											"name": "DUP3"
										},
										{
											"begin": 5198,
											"end": 5233,
											"name": "SUB"
										},
										{
											"begin": 5198,
											"end": 5233,
											"name": "SWAP1"
										},
										{
											"begin": 5198,
											"end": 5233,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5198,
											"end": 5233,
											"name": "MSTORE"
										},
										{
											"begin": 5198,
											"end": 5233,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5198,
											"end": 5233,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5198,
											"end": 5233,
											"name": "KECCAK256"
										},
										{
											"begin": 5198,
											"end": 5233,
											"name": "ADD"
										},
										{
											"begin": 5198,
											"end": 5233,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5198,
											"end": 5233,
											"name": "SWAP1"
										},
										{
											"begin": 5198,
											"end": 5233,
											"name": "SWAP2"
										},
										{
											"begin": 5198,
											"end": 5233,
											"name": "SWAP3"
										},
										{
											"begin": 5198,
											"end": 5233,
											"name": "SWAP1"
										},
										{
											"begin": 5198,
											"end": 5233,
											"name": "SWAP2"
										},
										{
											"begin": 5198,
											"end": 5233,
											"name": "SWAP1"
										},
										{
											"begin": 5198,
											"end": 5233,
											"name": "SWAP2"
										},
										{
											"begin": 5198,
											"end": 5233,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5198,
											"end": 5233,
											"name": "EXP"
										},
										{
											"begin": 5198,
											"end": 5233,
											"name": "DUP2"
										},
										{
											"begin": 5198,
											"end": 5233,
											"name": "SLOAD"
										},
										{
											"begin": 5198,
											"end": 5233,
											"name": "DUP2"
										},
										{
											"begin": 5198,
											"end": 5233,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5198,
											"end": 5233,
											"name": "MUL"
										},
										{
											"begin": 5198,
											"end": 5233,
											"name": "NOT"
										},
										{
											"begin": 5198,
											"end": 5233,
											"name": "AND"
										},
										{
											"begin": 5198,
											"end": 5233,
											"name": "SWAP1"
										},
										{
											"begin": 5198,
											"end": 5233,
											"name": "DUP4"
										},
										{
											"begin": 5198,
											"end": 5233,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5198,
											"end": 5233,
											"name": "AND"
										},
										{
											"begin": 5198,
											"end": 5233,
											"name": "MUL"
										},
										{
											"begin": 5198,
											"end": 5233,
											"name": "OR"
										},
										{
											"begin": 5198,
											"end": 5233,
											"name": "SWAP1"
										},
										{
											"begin": 5198,
											"end": 5233,
											"name": "SSTORE"
										},
										{
											"begin": 5198,
											"end": 5233,
											"name": "POP"
										},
										{
											"begin": 5198,
											"end": 5233,
											"name": "POP"
										},
										{
											"begin": 5248,
											"end": 5290,
											"name": "PUSH",
											"value": "7635F1D87B47FBA9F2B09E56EB4BE75CCA030E0CB179C1602AC9261D39A8F5C1"
										},
										{
											"begin": 5256,
											"end": 5266,
											"name": "CALLER"
										},
										{
											"begin": 5268,
											"end": 5278,
											"name": "DUP5"
										},
										{
											"begin": 5280,
											"end": 5289,
											"name": "CALLVALUE"
										},
										{
											"begin": 5248,
											"end": 5290,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5248,
											"end": 5290,
											"name": "MLOAD"
										},
										{
											"begin": 5248,
											"end": 5290,
											"name": "DUP1"
										},
										{
											"begin": 5248,
											"end": 5290,
											"name": "DUP5"
										},
										{
											"begin": 5248,
											"end": 5290,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5248,
											"end": 5290,
											"name": "AND"
										},
										{
											"begin": 5248,
											"end": 5290,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5248,
											"end": 5290,
											"name": "AND"
										},
										{
											"begin": 5248,
											"end": 5290,
											"name": "DUP2"
										},
										{
											"begin": 5248,
											"end": 5290,
											"name": "MSTORE"
										},
										{
											"begin": 5248,
											"end": 5290,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5248,
											"end": 5290,
											"name": "ADD"
										},
										{
											"begin": 5248,
											"end": 5290,
											"name": "DUP4"
										},
										{
											"begin": 5248,
											"end": 5290,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5248,
											"end": 5290,
											"name": "AND"
										},
										{
											"begin": 5248,
											"end": 5290,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5248,
											"end": 5290,
											"name": "AND"
										},
										{
											"begin": 5248,
											"end": 5290,
											"name": "DUP2"
										},
										{
											"begin": 5248,
											"end": 5290,
											"name": "MSTORE"
										},
										{
											"begin": 5248,
											"end": 5290,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5248,
											"end": 5290,
											"name": "ADD"
										},
										{
											"begin": 5248,
											"end": 5290,
											"name": "DUP3"
										},
										{
											"begin": 5248,
											"end": 5290,
											"name": "DUP2"
										},
										{
											"begin": 5248,
											"end": 5290,
											"name": "MSTORE"
										},
										{
											"begin": 5248,
											"end": 5290,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5248,
											"end": 5290,
											"name": "ADD"
										},
										{
											"begin": 5248,
											"end": 5290,
											"name": "SWAP4"
										},
										{
											"begin": 5248,
											"end": 5290,
											"name": "POP"
										},
										{
											"begin": 5248,
											"end": 5290,
											"name": "POP"
										},
										{
											"begin": 5248,
											"end": 5290,
											"name": "POP"
										},
										{
											"begin": 5248,
											"end": 5290,
											"name": "POP"
										},
										{
											"begin": 5248,
											"end": 5290,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5248,
											"end": 5290,
											"name": "MLOAD"
										},
										{
											"begin": 5248,
											"end": 5290,
											"name": "DUP1"
										},
										{
											"begin": 5248,
											"end": 5290,
											"name": "SWAP2"
										},
										{
											"begin": 5248,
											"end": 5290,
											"name": "SUB"
										},
										{
											"begin": 5248,
											"end": 5290,
											"name": "SWAP1"
										},
										{
											"begin": 5248,
											"end": 5290,
											"name": "LOG1"
										},
										{
											"begin": 2359,
											"end": 2360,
											"name": "POP"
										},
										{
											"begin": 4658,
											"end": 5297,
											"name": "POP"
										},
										{
											"begin": 4658,
											"end": 5297,
											"name": "POP"
										},
										{
											"begin": 4658,
											"end": 5297,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 6873,
											"end": 7539,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 6873,
											"end": 7539,
											"name": "JUMPDEST"
										},
										{
											"begin": 7212,
											"end": 7239,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6944,
											"end": 6954,
											"name": "DUP3"
										},
										{
											"begin": 6956,
											"end": 6960,
											"name": "DUP3"
										},
										{
											"begin": 3108,
											"end": 3112,
											"name": "DUP1"
										},
										{
											"begin": 3058,
											"end": 3073,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3058,
											"end": 3085,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3074,
											"end": 3084,
											"name": "DUP5"
										},
										{
											"begin": 3058,
											"end": 3085,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3058,
											"end": 3085,
											"name": "AND"
										},
										{
											"begin": 3058,
											"end": 3085,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3058,
											"end": 3085,
											"name": "AND"
										},
										{
											"begin": 3058,
											"end": 3085,
											"name": "DUP2"
										},
										{
											"begin": 3058,
											"end": 3085,
											"name": "MSTORE"
										},
										{
											"begin": 3058,
											"end": 3085,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3058,
											"end": 3085,
											"name": "ADD"
										},
										{
											"begin": 3058,
											"end": 3085,
											"name": "SWAP1"
										},
										{
											"begin": 3058,
											"end": 3085,
											"name": "DUP2"
										},
										{
											"begin": 3058,
											"end": 3085,
											"name": "MSTORE"
										},
										{
											"begin": 3058,
											"end": 3085,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3058,
											"end": 3085,
											"name": "ADD"
										},
										{
											"begin": 3058,
											"end": 3085,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3058,
											"end": 3085,
											"name": "KECCAK256"
										},
										{
											"begin": 3058,
											"end": 3092,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3058,
											"end": 3092,
											"name": "ADD"
										},
										{
											"begin": 3058,
											"end": 3104,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3093,
											"end": 3103,
											"name": "CALLER"
										},
										{
											"begin": 3058,
											"end": 3104,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3058,
											"end": 3104,
											"name": "AND"
										},
										{
											"begin": 3058,
											"end": 3104,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3058,
											"end": 3104,
											"name": "AND"
										},
										{
											"begin": 3058,
											"end": 3104,
											"name": "DUP2"
										},
										{
											"begin": 3058,
											"end": 3104,
											"name": "MSTORE"
										},
										{
											"begin": 3058,
											"end": 3104,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3058,
											"end": 3104,
											"name": "ADD"
										},
										{
											"begin": 3058,
											"end": 3104,
											"name": "SWAP1"
										},
										{
											"begin": 3058,
											"end": 3104,
											"name": "DUP2"
										},
										{
											"begin": 3058,
											"end": 3104,
											"name": "MSTORE"
										},
										{
											"begin": 3058,
											"end": 3104,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3058,
											"end": 3104,
											"name": "ADD"
										},
										{
											"begin": 3058,
											"end": 3104,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3058,
											"end": 3104,
											"name": "KECCAK256"
										},
										{
											"begin": 3058,
											"end": 3104,
											"name": "SLOAD"
										},
										{
											"begin": 3058,
											"end": 3112,
											"name": "LT"
										},
										{
											"begin": 3058,
											"end": 3112,
											"name": "ISZERO"
										},
										{
											"begin": 3050,
											"end": 3113,
											"name": "ISZERO"
										},
										{
											"begin": 3050,
											"end": 3113,
											"name": "ISZERO"
										},
										{
											"begin": 3050,
											"end": 3113,
											"name": "PUSH [tag]",
											"value": "101"
										},
										{
											"begin": 3050,
											"end": 3113,
											"name": "JUMPI"
										},
										{
											"begin": 3050,
											"end": 3113,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3050,
											"end": 3113,
											"name": "DUP1"
										},
										{
											"begin": 3050,
											"end": 3113,
											"name": "REVERT"
										},
										{
											"begin": 3050,
											"end": 3113,
											"name": "tag",
											"value": "101"
										},
										{
											"begin": 3050,
											"end": 3113,
											"name": "JUMPDEST"
										},
										{
											"begin": 3164,
											"end": 3174,
											"name": "CALLER"
										},
										{
											"begin": 3127,
											"end": 3174,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3127,
											"end": 3174,
											"name": "AND"
										},
										{
											"begin": 3127,
											"end": 3142,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3127,
											"end": 3154,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3143,
											"end": 3153,
											"name": "DUP5"
										},
										{
											"begin": 3127,
											"end": 3154,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3127,
											"end": 3154,
											"name": "AND"
										},
										{
											"begin": 3127,
											"end": 3154,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3127,
											"end": 3154,
											"name": "AND"
										},
										{
											"begin": 3127,
											"end": 3154,
											"name": "DUP2"
										},
										{
											"begin": 3127,
											"end": 3154,
											"name": "MSTORE"
										},
										{
											"begin": 3127,
											"end": 3154,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3127,
											"end": 3154,
											"name": "ADD"
										},
										{
											"begin": 3127,
											"end": 3154,
											"name": "SWAP1"
										},
										{
											"begin": 3127,
											"end": 3154,
											"name": "DUP2"
										},
										{
											"begin": 3127,
											"end": 3154,
											"name": "MSTORE"
										},
										{
											"begin": 3127,
											"end": 3154,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3127,
											"end": 3154,
											"name": "ADD"
										},
										{
											"begin": 3127,
											"end": 3154,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3127,
											"end": 3154,
											"name": "KECCAK256"
										},
										{
											"begin": 3127,
											"end": 3160,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3127,
											"end": 3160,
											"name": "ADD"
										},
										{
											"begin": 3127,
											"end": 3160,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3127,
											"end": 3160,
											"name": "SWAP1"
										},
										{
											"begin": 3127,
											"end": 3160,
											"name": "SLOAD"
										},
										{
											"begin": 3127,
											"end": 3160,
											"name": "SWAP1"
										},
										{
											"begin": 3127,
											"end": 3160,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3127,
											"end": 3160,
											"name": "EXP"
										},
										{
											"begin": 3127,
											"end": 3160,
											"name": "SWAP1"
										},
										{
											"begin": 3127,
											"end": 3160,
											"name": "DIV"
										},
										{
											"begin": 3127,
											"end": 3160,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3127,
											"end": 3160,
											"name": "AND"
										},
										{
											"begin": 3127,
											"end": 3174,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3127,
											"end": 3174,
											"name": "AND"
										},
										{
											"begin": 3127,
											"end": 3174,
											"name": "EQ"
										},
										{
											"begin": 3123,
											"end": 3285,
											"name": "ISZERO"
										},
										{
											"begin": 3123,
											"end": 3285,
											"name": "PUSH [tag]",
											"value": "102"
										},
										{
											"begin": 3123,
											"end": 3285,
											"name": "JUMPI"
										},
										{
											"begin": 3258,
											"end": 3273,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 3258,
											"end": 3273,
											"name": "SLOAD"
										},
										{
											"begin": 3198,
											"end": 3254,
											"name": "PUSH [tag]",
											"value": "103"
										},
										{
											"begin": 3249,
											"end": 3253,
											"name": "DUP3"
										},
										{
											"begin": 3198,
											"end": 3213,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3198,
											"end": 3225,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3214,
											"end": 3224,
											"name": "DUP7"
										},
										{
											"begin": 3198,
											"end": 3225,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3198,
											"end": 3225,
											"name": "AND"
										},
										{
											"begin": 3198,
											"end": 3225,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3198,
											"end": 3225,
											"name": "AND"
										},
										{
											"begin": 3198,
											"end": 3225,
											"name": "DUP2"
										},
										{
											"begin": 3198,
											"end": 3225,
											"name": "MSTORE"
										},
										{
											"begin": 3198,
											"end": 3225,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3198,
											"end": 3225,
											"name": "ADD"
										},
										{
											"begin": 3198,
											"end": 3225,
											"name": "SWAP1"
										},
										{
											"begin": 3198,
											"end": 3225,
											"name": "DUP2"
										},
										{
											"begin": 3198,
											"end": 3225,
											"name": "MSTORE"
										},
										{
											"begin": 3198,
											"end": 3225,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3198,
											"end": 3225,
											"name": "ADD"
										},
										{
											"begin": 3198,
											"end": 3225,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3198,
											"end": 3225,
											"name": "KECCAK256"
										},
										{
											"begin": 3198,
											"end": 3232,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3198,
											"end": 3232,
											"name": "ADD"
										},
										{
											"begin": 3198,
											"end": 3244,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3233,
											"end": 3243,
											"name": "CALLER"
										},
										{
											"begin": 3198,
											"end": 3244,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3198,
											"end": 3244,
											"name": "AND"
										},
										{
											"begin": 3198,
											"end": 3244,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3198,
											"end": 3244,
											"name": "AND"
										},
										{
											"begin": 3198,
											"end": 3244,
											"name": "DUP2"
										},
										{
											"begin": 3198,
											"end": 3244,
											"name": "MSTORE"
										},
										{
											"begin": 3198,
											"end": 3244,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3198,
											"end": 3244,
											"name": "ADD"
										},
										{
											"begin": 3198,
											"end": 3244,
											"name": "SWAP1"
										},
										{
											"begin": 3198,
											"end": 3244,
											"name": "DUP2"
										},
										{
											"begin": 3198,
											"end": 3244,
											"name": "MSTORE"
										},
										{
											"begin": 3198,
											"end": 3244,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3198,
											"end": 3244,
											"name": "ADD"
										},
										{
											"begin": 3198,
											"end": 3244,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3198,
											"end": 3244,
											"name": "KECCAK256"
										},
										{
											"begin": 3198,
											"end": 3244,
											"name": "SLOAD"
										},
										{
											"begin": 3198,
											"end": 3248,
											"name": "PUSH [tag]",
											"value": "104"
										},
										{
											"begin": 3198,
											"end": 3248,
											"name": "SWAP1"
										},
										{
											"begin": 3198,
											"end": 3254,
											"name": "SWAP2"
										},
										{
											"begin": 3198,
											"end": 3254,
											"name": "SWAP1"
										},
										{
											"begin": 3198,
											"end": 3254,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3198,
											"end": 3254,
											"name": "AND"
										},
										{
											"begin": 3198,
											"end": 3254,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3198,
											"end": 3254,
											"name": "tag",
											"value": "103"
										},
										{
											"begin": 3198,
											"end": 3254,
											"name": "JUMPDEST"
										},
										{
											"begin": 3198,
											"end": 3273,
											"name": "LT"
										},
										{
											"begin": 3198,
											"end": 3273,
											"name": "ISZERO"
										},
										{
											"begin": 3190,
											"end": 3274,
											"name": "ISZERO"
										},
										{
											"begin": 3190,
											"end": 3274,
											"name": "ISZERO"
										},
										{
											"begin": 3190,
											"end": 3274,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 3190,
											"end": 3274,
											"name": "JUMPI"
										},
										{
											"begin": 3190,
											"end": 3274,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3190,
											"end": 3274,
											"name": "DUP1"
										},
										{
											"begin": 3190,
											"end": 3274,
											"name": "REVERT"
										},
										{
											"begin": 3190,
											"end": 3274,
											"name": "tag",
											"value": "105"
										},
										{
											"begin": 3190,
											"end": 3274,
											"name": "JUMPDEST"
										},
										{
											"begin": 3123,
											"end": 3285,
											"name": "tag",
											"value": "102"
										},
										{
											"begin": 3123,
											"end": 3285,
											"name": "JUMPDEST"
										},
										{
											"begin": 7006,
											"end": 7047,
											"name": "PUSH [tag]",
											"value": "107"
										},
										{
											"begin": 7042,
											"end": 7046,
											"name": "DUP5"
										},
										{
											"begin": 7006,
											"end": 7021,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 7006,
											"end": 7033,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7022,
											"end": 7032,
											"name": "DUP9"
										},
										{
											"begin": 7006,
											"end": 7033,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7006,
											"end": 7033,
											"name": "AND"
										},
										{
											"begin": 7006,
											"end": 7033,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7006,
											"end": 7033,
											"name": "AND"
										},
										{
											"begin": 7006,
											"end": 7033,
											"name": "DUP2"
										},
										{
											"begin": 7006,
											"end": 7033,
											"name": "MSTORE"
										},
										{
											"begin": 7006,
											"end": 7033,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7006,
											"end": 7033,
											"name": "ADD"
										},
										{
											"begin": 7006,
											"end": 7033,
											"name": "SWAP1"
										},
										{
											"begin": 7006,
											"end": 7033,
											"name": "DUP2"
										},
										{
											"begin": 7006,
											"end": 7033,
											"name": "MSTORE"
										},
										{
											"begin": 7006,
											"end": 7033,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7006,
											"end": 7033,
											"name": "ADD"
										},
										{
											"begin": 7006,
											"end": 7033,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7006,
											"end": 7033,
											"name": "KECCAK256"
										},
										{
											"begin": 7006,
											"end": 7037,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 7006,
											"end": 7037,
											"name": "ADD"
										},
										{
											"begin": 7006,
											"end": 7037,
											"name": "SLOAD"
										},
										{
											"begin": 7006,
											"end": 7041,
											"name": "PUSH [tag]",
											"value": "104"
										},
										{
											"begin": 7006,
											"end": 7041,
											"name": "SWAP1"
										},
										{
											"begin": 7006,
											"end": 7047,
											"name": "SWAP2"
										},
										{
											"begin": 7006,
											"end": 7047,
											"name": "SWAP1"
										},
										{
											"begin": 7006,
											"end": 7047,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 7006,
											"end": 7047,
											"name": "AND"
										},
										{
											"begin": 7006,
											"end": 7047,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7006,
											"end": 7047,
											"name": "tag",
											"value": "107"
										},
										{
											"begin": 7006,
											"end": 7047,
											"name": "JUMPDEST"
										},
										{
											"begin": 6972,
											"end": 6987,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6972,
											"end": 6999,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6988,
											"end": 6998,
											"name": "DUP8"
										},
										{
											"begin": 6972,
											"end": 6999,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6972,
											"end": 6999,
											"name": "AND"
										},
										{
											"begin": 6972,
											"end": 6999,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6972,
											"end": 6999,
											"name": "AND"
										},
										{
											"begin": 6972,
											"end": 6999,
											"name": "DUP2"
										},
										{
											"begin": 6972,
											"end": 6999,
											"name": "MSTORE"
										},
										{
											"begin": 6972,
											"end": 6999,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6972,
											"end": 6999,
											"name": "ADD"
										},
										{
											"begin": 6972,
											"end": 6999,
											"name": "SWAP1"
										},
										{
											"begin": 6972,
											"end": 6999,
											"name": "DUP2"
										},
										{
											"begin": 6972,
											"end": 6999,
											"name": "MSTORE"
										},
										{
											"begin": 6972,
											"end": 6999,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6972,
											"end": 6999,
											"name": "ADD"
										},
										{
											"begin": 6972,
											"end": 6999,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6972,
											"end": 6999,
											"name": "KECCAK256"
										},
										{
											"begin": 6972,
											"end": 7003,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6972,
											"end": 7003,
											"name": "ADD"
										},
										{
											"begin": 6972,
											"end": 7047,
											"name": "DUP2"
										},
										{
											"begin": 6972,
											"end": 7047,
											"name": "SWAP1"
										},
										{
											"begin": 6972,
											"end": 7047,
											"name": "SSTORE"
										},
										{
											"begin": 6972,
											"end": 7047,
											"name": "POP"
										},
										{
											"begin": 7106,
											"end": 7162,
											"name": "PUSH [tag]",
											"value": "108"
										},
										{
											"begin": 7157,
											"end": 7161,
											"name": "DUP5"
										},
										{
											"begin": 7106,
											"end": 7121,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 7106,
											"end": 7133,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7122,
											"end": 7132,
											"name": "DUP9"
										},
										{
											"begin": 7106,
											"end": 7133,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7106,
											"end": 7133,
											"name": "AND"
										},
										{
											"begin": 7106,
											"end": 7133,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7106,
											"end": 7133,
											"name": "AND"
										},
										{
											"begin": 7106,
											"end": 7133,
											"name": "DUP2"
										},
										{
											"begin": 7106,
											"end": 7133,
											"name": "MSTORE"
										},
										{
											"begin": 7106,
											"end": 7133,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7106,
											"end": 7133,
											"name": "ADD"
										},
										{
											"begin": 7106,
											"end": 7133,
											"name": "SWAP1"
										},
										{
											"begin": 7106,
											"end": 7133,
											"name": "DUP2"
										},
										{
											"begin": 7106,
											"end": 7133,
											"name": "MSTORE"
										},
										{
											"begin": 7106,
											"end": 7133,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7106,
											"end": 7133,
											"name": "ADD"
										},
										{
											"begin": 7106,
											"end": 7133,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7106,
											"end": 7133,
											"name": "KECCAK256"
										},
										{
											"begin": 7106,
											"end": 7140,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 7106,
											"end": 7140,
											"name": "ADD"
										},
										{
											"begin": 7106,
											"end": 7152,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7141,
											"end": 7151,
											"name": "CALLER"
										},
										{
											"begin": 7106,
											"end": 7152,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7106,
											"end": 7152,
											"name": "AND"
										},
										{
											"begin": 7106,
											"end": 7152,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7106,
											"end": 7152,
											"name": "AND"
										},
										{
											"begin": 7106,
											"end": 7152,
											"name": "DUP2"
										},
										{
											"begin": 7106,
											"end": 7152,
											"name": "MSTORE"
										},
										{
											"begin": 7106,
											"end": 7152,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7106,
											"end": 7152,
											"name": "ADD"
										},
										{
											"begin": 7106,
											"end": 7152,
											"name": "SWAP1"
										},
										{
											"begin": 7106,
											"end": 7152,
											"name": "DUP2"
										},
										{
											"begin": 7106,
											"end": 7152,
											"name": "MSTORE"
										},
										{
											"begin": 7106,
											"end": 7152,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7106,
											"end": 7152,
											"name": "ADD"
										},
										{
											"begin": 7106,
											"end": 7152,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7106,
											"end": 7152,
											"name": "KECCAK256"
										},
										{
											"begin": 7106,
											"end": 7152,
											"name": "SLOAD"
										},
										{
											"begin": 7106,
											"end": 7156,
											"name": "PUSH [tag]",
											"value": "104"
										},
										{
											"begin": 7106,
											"end": 7156,
											"name": "SWAP1"
										},
										{
											"begin": 7106,
											"end": 7162,
											"name": "SWAP2"
										},
										{
											"begin": 7106,
											"end": 7162,
											"name": "SWAP1"
										},
										{
											"begin": 7106,
											"end": 7162,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 7106,
											"end": 7162,
											"name": "AND"
										},
										{
											"begin": 7106,
											"end": 7162,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7106,
											"end": 7162,
											"name": "tag",
											"value": "108"
										},
										{
											"begin": 7106,
											"end": 7162,
											"name": "JUMPDEST"
										},
										{
											"begin": 7057,
											"end": 7072,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 7057,
											"end": 7084,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7073,
											"end": 7083,
											"name": "DUP8"
										},
										{
											"begin": 7057,
											"end": 7084,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7057,
											"end": 7084,
											"name": "AND"
										},
										{
											"begin": 7057,
											"end": 7084,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7057,
											"end": 7084,
											"name": "AND"
										},
										{
											"begin": 7057,
											"end": 7084,
											"name": "DUP2"
										},
										{
											"begin": 7057,
											"end": 7084,
											"name": "MSTORE"
										},
										{
											"begin": 7057,
											"end": 7084,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7057,
											"end": 7084,
											"name": "ADD"
										},
										{
											"begin": 7057,
											"end": 7084,
											"name": "SWAP1"
										},
										{
											"begin": 7057,
											"end": 7084,
											"name": "DUP2"
										},
										{
											"begin": 7057,
											"end": 7084,
											"name": "MSTORE"
										},
										{
											"begin": 7057,
											"end": 7084,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7057,
											"end": 7084,
											"name": "ADD"
										},
										{
											"begin": 7057,
											"end": 7084,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7057,
											"end": 7084,
											"name": "KECCAK256"
										},
										{
											"begin": 7057,
											"end": 7091,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 7057,
											"end": 7091,
											"name": "ADD"
										},
										{
											"begin": 7057,
											"end": 7103,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7092,
											"end": 7102,
											"name": "CALLER"
										},
										{
											"begin": 7057,
											"end": 7103,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7057,
											"end": 7103,
											"name": "AND"
										},
										{
											"begin": 7057,
											"end": 7103,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7057,
											"end": 7103,
											"name": "AND"
										},
										{
											"begin": 7057,
											"end": 7103,
											"name": "DUP2"
										},
										{
											"begin": 7057,
											"end": 7103,
											"name": "MSTORE"
										},
										{
											"begin": 7057,
											"end": 7103,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7057,
											"end": 7103,
											"name": "ADD"
										},
										{
											"begin": 7057,
											"end": 7103,
											"name": "SWAP1"
										},
										{
											"begin": 7057,
											"end": 7103,
											"name": "DUP2"
										},
										{
											"begin": 7057,
											"end": 7103,
											"name": "MSTORE"
										},
										{
											"begin": 7057,
											"end": 7103,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7057,
											"end": 7103,
											"name": "ADD"
										},
										{
											"begin": 7057,
											"end": 7103,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7057,
											"end": 7103,
											"name": "KECCAK256"
										},
										{
											"begin": 7057,
											"end": 7162,
											"name": "DUP2"
										},
										{
											"begin": 7057,
											"end": 7162,
											"name": "SWAP1"
										},
										{
											"begin": 7057,
											"end": 7162,
											"name": "SSTORE"
										},
										{
											"begin": 7057,
											"end": 7162,
											"name": "POP"
										},
										{
											"begin": 7242,
											"end": 7278,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 7265,
											"end": 7277,
											"name": "NUMBER"
										},
										{
											"begin": 7242,
											"end": 7260,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 7242,
											"end": 7260,
											"name": "SLOAD"
										},
										{
											"begin": 7242,
											"end": 7264,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 7242,
											"end": 7264,
											"name": "SWAP1"
										},
										{
											"begin": 7242,
											"end": 7278,
											"name": "SWAP2"
										},
										{
											"begin": 7242,
											"end": 7278,
											"name": "SWAP1"
										},
										{
											"begin": 7242,
											"end": 7278,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 7242,
											"end": 7278,
											"name": "AND"
										},
										{
											"begin": 7242,
											"end": 7278,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7242,
											"end": 7278,
											"name": "tag",
											"value": "109"
										},
										{
											"begin": 7242,
											"end": 7278,
											"name": "JUMPDEST"
										},
										{
											"begin": 7212,
											"end": 7278,
											"name": "SWAP3"
										},
										{
											"begin": 7212,
											"end": 7278,
											"name": "POP"
										},
										{
											"begin": 7343,
											"end": 7405,
											"name": "PUSH [tag]",
											"value": "110"
										},
										{
											"begin": 7400,
											"end": 7404,
											"name": "DUP5"
										},
										{
											"begin": 7343,
											"end": 7357,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7343,
											"end": 7369,
											"name": "DUP1"
										},
										{
											"begin": 7358,
											"end": 7368,
											"name": "CALLER"
										},
										{
											"begin": 7343,
											"end": 7369,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7343,
											"end": 7369,
											"name": "AND"
										},
										{
											"begin": 7343,
											"end": 7369,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7343,
											"end": 7369,
											"name": "AND"
										},
										{
											"begin": 7343,
											"end": 7369,
											"name": "DUP2"
										},
										{
											"begin": 7343,
											"end": 7369,
											"name": "MSTORE"
										},
										{
											"begin": 7343,
											"end": 7369,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7343,
											"end": 7369,
											"name": "ADD"
										},
										{
											"begin": 7343,
											"end": 7369,
											"name": "SWAP1"
										},
										{
											"begin": 7343,
											"end": 7369,
											"name": "DUP2"
										},
										{
											"begin": 7343,
											"end": 7369,
											"name": "MSTORE"
										},
										{
											"begin": 7343,
											"end": 7369,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7343,
											"end": 7369,
											"name": "ADD"
										},
										{
											"begin": 7343,
											"end": 7369,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7343,
											"end": 7369,
											"name": "KECCAK256"
										},
										{
											"begin": 7343,
											"end": 7374,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7343,
											"end": 7374,
											"name": "ADD"
										},
										{
											"begin": 7343,
											"end": 7395,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7375,
											"end": 7394,
											"name": "DUP7"
										},
										{
											"begin": 7343,
											"end": 7395,
											"name": "DUP2"
										},
										{
											"begin": 7343,
											"end": 7395,
											"name": "MSTORE"
										},
										{
											"begin": 7343,
											"end": 7395,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7343,
											"end": 7395,
											"name": "ADD"
										},
										{
											"begin": 7343,
											"end": 7395,
											"name": "SWAP1"
										},
										{
											"begin": 7343,
											"end": 7395,
											"name": "DUP2"
										},
										{
											"begin": 7343,
											"end": 7395,
											"name": "MSTORE"
										},
										{
											"begin": 7343,
											"end": 7395,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7343,
											"end": 7395,
											"name": "ADD"
										},
										{
											"begin": 7343,
											"end": 7395,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7343,
											"end": 7395,
											"name": "KECCAK256"
										},
										{
											"begin": 7343,
											"end": 7395,
											"name": "SLOAD"
										},
										{
											"begin": 7343,
											"end": 7399,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 7343,
											"end": 7399,
											"name": "SWAP1"
										},
										{
											"begin": 7343,
											"end": 7405,
											"name": "SWAP2"
										},
										{
											"begin": 7343,
											"end": 7405,
											"name": "SWAP1"
										},
										{
											"begin": 7343,
											"end": 7405,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 7343,
											"end": 7405,
											"name": "AND"
										},
										{
											"begin": 7343,
											"end": 7405,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7343,
											"end": 7405,
											"name": "tag",
											"value": "110"
										},
										{
											"begin": 7343,
											"end": 7405,
											"name": "JUMPDEST"
										},
										{
											"begin": 7288,
											"end": 7302,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7288,
											"end": 7314,
											"name": "DUP1"
										},
										{
											"begin": 7303,
											"end": 7313,
											"name": "CALLER"
										},
										{
											"begin": 7288,
											"end": 7314,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7288,
											"end": 7314,
											"name": "AND"
										},
										{
											"begin": 7288,
											"end": 7314,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7288,
											"end": 7314,
											"name": "AND"
										},
										{
											"begin": 7288,
											"end": 7314,
											"name": "DUP2"
										},
										{
											"begin": 7288,
											"end": 7314,
											"name": "MSTORE"
										},
										{
											"begin": 7288,
											"end": 7314,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7288,
											"end": 7314,
											"name": "ADD"
										},
										{
											"begin": 7288,
											"end": 7314,
											"name": "SWAP1"
										},
										{
											"begin": 7288,
											"end": 7314,
											"name": "DUP2"
										},
										{
											"begin": 7288,
											"end": 7314,
											"name": "MSTORE"
										},
										{
											"begin": 7288,
											"end": 7314,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7288,
											"end": 7314,
											"name": "ADD"
										},
										{
											"begin": 7288,
											"end": 7314,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7288,
											"end": 7314,
											"name": "KECCAK256"
										},
										{
											"begin": 7288,
											"end": 7319,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7288,
											"end": 7319,
											"name": "ADD"
										},
										{
											"begin": 7288,
											"end": 7340,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7320,
											"end": 7339,
											"name": "DUP6"
										},
										{
											"begin": 7288,
											"end": 7340,
											"name": "DUP2"
										},
										{
											"begin": 7288,
											"end": 7340,
											"name": "MSTORE"
										},
										{
											"begin": 7288,
											"end": 7340,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7288,
											"end": 7340,
											"name": "ADD"
										},
										{
											"begin": 7288,
											"end": 7340,
											"name": "SWAP1"
										},
										{
											"begin": 7288,
											"end": 7340,
											"name": "DUP2"
										},
										{
											"begin": 7288,
											"end": 7340,
											"name": "MSTORE"
										},
										{
											"begin": 7288,
											"end": 7340,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7288,
											"end": 7340,
											"name": "ADD"
										},
										{
											"begin": 7288,
											"end": 7340,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7288,
											"end": 7340,
											"name": "KECCAK256"
										},
										{
											"begin": 7288,
											"end": 7405,
											"name": "DUP2"
										},
										{
											"begin": 7288,
											"end": 7405,
											"name": "SWAP1"
										},
										{
											"begin": 7288,
											"end": 7405,
											"name": "SSTORE"
										},
										{
											"begin": 7288,
											"end": 7405,
											"name": "POP"
										},
										{
											"begin": 7415,
											"end": 7429,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7415,
											"end": 7441,
											"name": "DUP1"
										},
										{
											"begin": 7430,
											"end": 7440,
											"name": "CALLER"
										},
										{
											"begin": 7415,
											"end": 7441,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7415,
											"end": 7441,
											"name": "AND"
										},
										{
											"begin": 7415,
											"end": 7441,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7415,
											"end": 7441,
											"name": "AND"
										},
										{
											"begin": 7415,
											"end": 7441,
											"name": "DUP2"
										},
										{
											"begin": 7415,
											"end": 7441,
											"name": "MSTORE"
										},
										{
											"begin": 7415,
											"end": 7441,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7415,
											"end": 7441,
											"name": "ADD"
										},
										{
											"begin": 7415,
											"end": 7441,
											"name": "SWAP1"
										},
										{
											"begin": 7415,
											"end": 7441,
											"name": "DUP2"
										},
										{
											"begin": 7415,
											"end": 7441,
											"name": "MSTORE"
										},
										{
											"begin": 7415,
											"end": 7441,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7415,
											"end": 7441,
											"name": "ADD"
										},
										{
											"begin": 7415,
											"end": 7441,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7415,
											"end": 7441,
											"name": "KECCAK256"
										},
										{
											"begin": 7415,
											"end": 7454,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 7415,
											"end": 7454,
											"name": "ADD"
										},
										{
											"begin": 7460,
											"end": 7479,
											"name": "DUP4"
										},
										{
											"begin": 7415,
											"end": 7480,
											"name": "SWAP1"
										},
										{
											"begin": 7415,
											"end": 7480,
											"name": "DUP1"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "SLOAD"
										},
										{
											"begin": 23,
											"end": 41,
											"name": "ADD"
										},
										{
											"begin": 57,
											"end": 67,
											"name": "DUP1"
										},
										{
											"begin": 52,
											"end": 55,
											"name": "DUP3"
										},
										{
											"begin": 45,
											"end": 68,
											"name": "SSTORE"
										},
										{
											"begin": 79,
											"end": 89,
											"name": "DUP1"
										},
										{
											"begin": 72,
											"end": 89,
											"name": "SWAP2"
										},
										{
											"begin": 72,
											"end": 89,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 93,
											"name": "POP"
										},
										{
											"begin": 7415,
											"end": 7480,
											"name": "SWAP1"
										},
										{
											"begin": 7415,
											"end": 7480,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 7415,
											"end": 7480,
											"name": "DUP3"
										},
										{
											"begin": 7415,
											"end": 7480,
											"name": "SUB"
										},
										{
											"begin": 7415,
											"end": 7480,
											"name": "SWAP1"
										},
										{
											"begin": 7415,
											"end": 7480,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7415,
											"end": 7480,
											"name": "MSTORE"
										},
										{
											"begin": 7415,
											"end": 7480,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7415,
											"end": 7480,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7415,
											"end": 7480,
											"name": "KECCAK256"
										},
										{
											"begin": 7415,
											"end": 7480,
											"name": "ADD"
										},
										{
											"begin": 7415,
											"end": 7480,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7415,
											"end": 7480,
											"name": "SWAP1"
										},
										{
											"begin": 7415,
											"end": 7480,
											"name": "SWAP2"
										},
										{
											"begin": 7415,
											"end": 7480,
											"name": "SWAP3"
										},
										{
											"begin": 7415,
											"end": 7480,
											"name": "SWAP1"
										},
										{
											"begin": 7415,
											"end": 7480,
											"name": "SWAP2"
										},
										{
											"begin": 7415,
											"end": 7480,
											"name": "SWAP1"
										},
										{
											"begin": 7415,
											"end": 7480,
											"name": "SWAP2"
										},
										{
											"begin": 7415,
											"end": 7480,
											"name": "POP"
										},
										{
											"begin": 7415,
											"end": 7480,
											"name": "SSTORE"
										},
										{
											"begin": 7415,
											"end": 7480,
											"name": "POP"
										},
										{
											"begin": 7496,
											"end": 7532,
											"name": "PUSH",
											"value": "AA0E554F781C3C3B2BE110A0557F260F11AF9A8AA2C64BC1E7A31DBB21E32FA2"
										},
										{
											"begin": 7503,
											"end": 7513,
											"name": "CALLER"
										},
										{
											"begin": 7515,
											"end": 7525,
											"name": "DUP7"
										},
										{
											"begin": 7527,
											"end": 7531,
											"name": "DUP7"
										},
										{
											"begin": 7496,
											"end": 7532,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7496,
											"end": 7532,
											"name": "MLOAD"
										},
										{
											"begin": 7496,
											"end": 7532,
											"name": "DUP1"
										},
										{
											"begin": 7496,
											"end": 7532,
											"name": "DUP5"
										},
										{
											"begin": 7496,
											"end": 7532,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7496,
											"end": 7532,
											"name": "AND"
										},
										{
											"begin": 7496,
											"end": 7532,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7496,
											"end": 7532,
											"name": "AND"
										},
										{
											"begin": 7496,
											"end": 7532,
											"name": "DUP2"
										},
										{
											"begin": 7496,
											"end": 7532,
											"name": "MSTORE"
										},
										{
											"begin": 7496,
											"end": 7532,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7496,
											"end": 7532,
											"name": "ADD"
										},
										{
											"begin": 7496,
											"end": 7532,
											"name": "DUP4"
										},
										{
											"begin": 7496,
											"end": 7532,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7496,
											"end": 7532,
											"name": "AND"
										},
										{
											"begin": 7496,
											"end": 7532,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7496,
											"end": 7532,
											"name": "AND"
										},
										{
											"begin": 7496,
											"end": 7532,
											"name": "DUP2"
										},
										{
											"begin": 7496,
											"end": 7532,
											"name": "MSTORE"
										},
										{
											"begin": 7496,
											"end": 7532,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7496,
											"end": 7532,
											"name": "ADD"
										},
										{
											"begin": 7496,
											"end": 7532,
											"name": "DUP3"
										},
										{
											"begin": 7496,
											"end": 7532,
											"name": "DUP2"
										},
										{
											"begin": 7496,
											"end": 7532,
											"name": "MSTORE"
										},
										{
											"begin": 7496,
											"end": 7532,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7496,
											"end": 7532,
											"name": "ADD"
										},
										{
											"begin": 7496,
											"end": 7532,
											"name": "SWAP4"
										},
										{
											"begin": 7496,
											"end": 7532,
											"name": "POP"
										},
										{
											"begin": 7496,
											"end": 7532,
											"name": "POP"
										},
										{
											"begin": 7496,
											"end": 7532,
											"name": "POP"
										},
										{
											"begin": 7496,
											"end": 7532,
											"name": "POP"
										},
										{
											"begin": 7496,
											"end": 7532,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7496,
											"end": 7532,
											"name": "MLOAD"
										},
										{
											"begin": 7496,
											"end": 7532,
											"name": "DUP1"
										},
										{
											"begin": 7496,
											"end": 7532,
											"name": "SWAP2"
										},
										{
											"begin": 7496,
											"end": 7532,
											"name": "SUB"
										},
										{
											"begin": 7496,
											"end": 7532,
											"name": "SWAP1"
										},
										{
											"begin": 7496,
											"end": 7532,
											"name": "LOG1"
										},
										{
											"begin": 6873,
											"end": 7539,
											"name": "POP"
										},
										{
											"begin": 6873,
											"end": 7539,
											"name": "POP"
										},
										{
											"begin": 6873,
											"end": 7539,
											"name": "POP"
										},
										{
											"begin": 6873,
											"end": 7539,
											"name": "POP"
										},
										{
											"begin": 6873,
											"end": 7539,
											"name": "POP"
										},
										{
											"begin": 6873,
											"end": 7539,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5806,
											"end": 5896,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 5806,
											"end": 5896,
											"name": "JUMPDEST"
										},
										{
											"begin": 5851,
											"end": 5860,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 5879,
											"end": 5889,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 5872,
											"end": 5889,
											"name": "DUP1"
										},
										{
											"begin": 5872,
											"end": 5889,
											"name": "SLOAD"
										},
										{
											"begin": 5872,
											"end": 5889,
											"name": "DUP1"
										},
										{
											"begin": 5872,
											"end": 5889,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5872,
											"end": 5889,
											"name": "MUL"
										},
										{
											"begin": 5872,
											"end": 5889,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5872,
											"end": 5889,
											"name": "ADD"
										},
										{
											"begin": 5872,
											"end": 5889,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5872,
											"end": 5889,
											"name": "MLOAD"
										},
										{
											"begin": 5872,
											"end": 5889,
											"name": "SWAP1"
										},
										{
											"begin": 5872,
											"end": 5889,
											"name": "DUP2"
										},
										{
											"begin": 5872,
											"end": 5889,
											"name": "ADD"
										},
										{
											"begin": 5872,
											"end": 5889,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5872,
											"end": 5889,
											"name": "MSTORE"
										},
										{
											"begin": 5872,
											"end": 5889,
											"name": "DUP1"
										},
										{
											"begin": 5872,
											"end": 5889,
											"name": "SWAP3"
										},
										{
											"begin": 5872,
											"end": 5889,
											"name": "SWAP2"
										},
										{
											"begin": 5872,
											"end": 5889,
											"name": "SWAP1"
										},
										{
											"begin": 5872,
											"end": 5889,
											"name": "DUP2"
										},
										{
											"begin": 5872,
											"end": 5889,
											"name": "DUP2"
										},
										{
											"begin": 5872,
											"end": 5889,
											"name": "MSTORE"
										},
										{
											"begin": 5872,
											"end": 5889,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5872,
											"end": 5889,
											"name": "ADD"
										},
										{
											"begin": 5872,
											"end": 5889,
											"name": "DUP3"
										},
										{
											"begin": 5872,
											"end": 5889,
											"name": "DUP1"
										},
										{
											"begin": 5872,
											"end": 5889,
											"name": "SLOAD"
										},
										{
											"begin": 5872,
											"end": 5889,
											"name": "DUP1"
										},
										{
											"begin": 5872,
											"end": 5889,
											"name": "ISZERO"
										},
										{
											"begin": 5872,
											"end": 5889,
											"name": "PUSH [tag]",
											"value": "113"
										},
										{
											"begin": 5872,
											"end": 5889,
											"name": "JUMPI"
										},
										{
											"begin": 5872,
											"end": 5889,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5872,
											"end": 5889,
											"name": "MUL"
										},
										{
											"begin": 5872,
											"end": 5889,
											"name": "DUP3"
										},
										{
											"begin": 5872,
											"end": 5889,
											"name": "ADD"
										},
										{
											"begin": 5872,
											"end": 5889,
											"name": "SWAP2"
										},
										{
											"begin": 5872,
											"end": 5889,
											"name": "SWAP1"
										},
										{
											"begin": 5872,
											"end": 5889,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5872,
											"end": 5889,
											"name": "MSTORE"
										},
										{
											"begin": 5872,
											"end": 5889,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5872,
											"end": 5889,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5872,
											"end": 5889,
											"name": "KECCAK256"
										},
										{
											"begin": 5872,
											"end": 5889,
											"name": "SWAP1"
										},
										{
											"begin": 5872,
											"end": 5889,
											"name": "tag",
											"value": "114"
										},
										{
											"begin": 5872,
											"end": 5889,
											"name": "JUMPDEST"
										},
										{
											"begin": 5872,
											"end": 5889,
											"name": "DUP2"
										},
										{
											"begin": 5872,
											"end": 5889,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5872,
											"end": 5889,
											"name": "SWAP1"
										},
										{
											"begin": 5872,
											"end": 5889,
											"name": "SLOAD"
										},
										{
											"begin": 5872,
											"end": 5889,
											"name": "SWAP1"
										},
										{
											"begin": 5872,
											"end": 5889,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5872,
											"end": 5889,
											"name": "EXP"
										},
										{
											"begin": 5872,
											"end": 5889,
											"name": "SWAP1"
										},
										{
											"begin": 5872,
											"end": 5889,
											"name": "DIV"
										},
										{
											"begin": 5872,
											"end": 5889,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5872,
											"end": 5889,
											"name": "AND"
										},
										{
											"begin": 5872,
											"end": 5889,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5872,
											"end": 5889,
											"name": "AND"
										},
										{
											"begin": 5872,
											"end": 5889,
											"name": "DUP2"
										},
										{
											"begin": 5872,
											"end": 5889,
											"name": "MSTORE"
										},
										{
											"begin": 5872,
											"end": 5889,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5872,
											"end": 5889,
											"name": "ADD"
										},
										{
											"begin": 5872,
											"end": 5889,
											"name": "SWAP1"
										},
										{
											"begin": 5872,
											"end": 5889,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5872,
											"end": 5889,
											"name": "ADD"
										},
										{
											"begin": 5872,
											"end": 5889,
											"name": "SWAP1"
										},
										{
											"begin": 5872,
											"end": 5889,
											"name": "DUP1"
										},
										{
											"begin": 5872,
											"end": 5889,
											"name": "DUP4"
										},
										{
											"begin": 5872,
											"end": 5889,
											"name": "GT"
										},
										{
											"begin": 5872,
											"end": 5889,
											"name": "PUSH [tag]",
											"value": "114"
										},
										{
											"begin": 5872,
											"end": 5889,
											"name": "JUMPI"
										},
										{
											"begin": 5872,
											"end": 5889,
											"name": "tag",
											"value": "113"
										},
										{
											"begin": 5872,
											"end": 5889,
											"name": "JUMPDEST"
										},
										{
											"begin": 5872,
											"end": 5889,
											"name": "POP"
										},
										{
											"begin": 5872,
											"end": 5889,
											"name": "POP"
										},
										{
											"begin": 5872,
											"end": 5889,
											"name": "POP"
										},
										{
											"begin": 5872,
											"end": 5889,
											"name": "POP"
										},
										{
											"begin": 5872,
											"end": 5889,
											"name": "POP"
										},
										{
											"begin": 5872,
											"end": 5889,
											"name": "SWAP1"
										},
										{
											"begin": 5872,
											"end": 5889,
											"name": "POP"
										},
										{
											"begin": 5806,
											"end": 5896,
											"name": "SWAP1"
										},
										{
											"begin": 5806,
											"end": 5896,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 6723,
											"end": 6867,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 6723,
											"end": 6867,
											"name": "JUMPDEST"
										},
										{
											"begin": 6789,
											"end": 6796,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6815,
											"end": 6829,
											"name": "DUP1"
										},
										{
											"begin": 6815,
											"end": 6841,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6830,
											"end": 6840,
											"name": "CALLER"
										},
										{
											"begin": 6815,
											"end": 6841,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6815,
											"end": 6841,
											"name": "AND"
										},
										{
											"begin": 6815,
											"end": 6841,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6815,
											"end": 6841,
											"name": "AND"
										},
										{
											"begin": 6815,
											"end": 6841,
											"name": "DUP2"
										},
										{
											"begin": 6815,
											"end": 6841,
											"name": "MSTORE"
										},
										{
											"begin": 6815,
											"end": 6841,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6815,
											"end": 6841,
											"name": "ADD"
										},
										{
											"begin": 6815,
											"end": 6841,
											"name": "SWAP1"
										},
										{
											"begin": 6815,
											"end": 6841,
											"name": "DUP2"
										},
										{
											"begin": 6815,
											"end": 6841,
											"name": "MSTORE"
										},
										{
											"begin": 6815,
											"end": 6841,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6815,
											"end": 6841,
											"name": "ADD"
										},
										{
											"begin": 6815,
											"end": 6841,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6815,
											"end": 6841,
											"name": "KECCAK256"
										},
										{
											"begin": 6815,
											"end": 6846,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6815,
											"end": 6846,
											"name": "ADD"
										},
										{
											"begin": 6815,
											"end": 6860,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6847,
											"end": 6859,
											"name": "DUP4"
										},
										{
											"begin": 6815,
											"end": 6860,
											"name": "DUP2"
										},
										{
											"begin": 6815,
											"end": 6860,
											"name": "MSTORE"
										},
										{
											"begin": 6815,
											"end": 6860,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6815,
											"end": 6860,
											"name": "ADD"
										},
										{
											"begin": 6815,
											"end": 6860,
											"name": "SWAP1"
										},
										{
											"begin": 6815,
											"end": 6860,
											"name": "DUP2"
										},
										{
											"begin": 6815,
											"end": 6860,
											"name": "MSTORE"
										},
										{
											"begin": 6815,
											"end": 6860,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6815,
											"end": 6860,
											"name": "ADD"
										},
										{
											"begin": 6815,
											"end": 6860,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6815,
											"end": 6860,
											"name": "KECCAK256"
										},
										{
											"begin": 6815,
											"end": 6860,
											"name": "SLOAD"
										},
										{
											"begin": 6808,
											"end": 6860,
											"name": "SWAP1"
										},
										{
											"begin": 6808,
											"end": 6860,
											"name": "POP"
										},
										{
											"begin": 6723,
											"end": 6867,
											"name": "SWAP2"
										},
										{
											"begin": 6723,
											"end": 6867,
											"name": "SWAP1"
										},
										{
											"begin": 6723,
											"end": 6867,
											"name": "POP"
										},
										{
											"begin": 6723,
											"end": 6867,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 6334,
											"end": 6446,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 6334,
											"end": 6446,
											"name": "JUMPDEST"
										},
										{
											"begin": 6393,
											"end": 6402,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 6421,
											"end": 6427,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 6421,
											"end": 6439,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6428,
											"end": 6438,
											"name": "DUP4"
										},
										{
											"begin": 6421,
											"end": 6439,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6421,
											"end": 6439,
											"name": "AND"
										},
										{
											"begin": 6421,
											"end": 6439,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6421,
											"end": 6439,
											"name": "AND"
										},
										{
											"begin": 6421,
											"end": 6439,
											"name": "DUP2"
										},
										{
											"begin": 6421,
											"end": 6439,
											"name": "MSTORE"
										},
										{
											"begin": 6421,
											"end": 6439,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6421,
											"end": 6439,
											"name": "ADD"
										},
										{
											"begin": 6421,
											"end": 6439,
											"name": "SWAP1"
										},
										{
											"begin": 6421,
											"end": 6439,
											"name": "DUP2"
										},
										{
											"begin": 6421,
											"end": 6439,
											"name": "MSTORE"
										},
										{
											"begin": 6421,
											"end": 6439,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6421,
											"end": 6439,
											"name": "ADD"
										},
										{
											"begin": 6421,
											"end": 6439,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6421,
											"end": 6439,
											"name": "KECCAK256"
										},
										{
											"begin": 6414,
											"end": 6439,
											"name": "DUP1"
										},
										{
											"begin": 6414,
											"end": 6439,
											"name": "SLOAD"
										},
										{
											"begin": 6414,
											"end": 6439,
											"name": "DUP1"
										},
										{
											"begin": 6414,
											"end": 6439,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6414,
											"end": 6439,
											"name": "MUL"
										},
										{
											"begin": 6414,
											"end": 6439,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6414,
											"end": 6439,
											"name": "ADD"
										},
										{
											"begin": 6414,
											"end": 6439,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6414,
											"end": 6439,
											"name": "MLOAD"
										},
										{
											"begin": 6414,
											"end": 6439,
											"name": "SWAP1"
										},
										{
											"begin": 6414,
											"end": 6439,
											"name": "DUP2"
										},
										{
											"begin": 6414,
											"end": 6439,
											"name": "ADD"
										},
										{
											"begin": 6414,
											"end": 6439,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6414,
											"end": 6439,
											"name": "MSTORE"
										},
										{
											"begin": 6414,
											"end": 6439,
											"name": "DUP1"
										},
										{
											"begin": 6414,
											"end": 6439,
											"name": "SWAP3"
										},
										{
											"begin": 6414,
											"end": 6439,
											"name": "SWAP2"
										},
										{
											"begin": 6414,
											"end": 6439,
											"name": "SWAP1"
										},
										{
											"begin": 6414,
											"end": 6439,
											"name": "DUP2"
										},
										{
											"begin": 6414,
											"end": 6439,
											"name": "DUP2"
										},
										{
											"begin": 6414,
											"end": 6439,
											"name": "MSTORE"
										},
										{
											"begin": 6414,
											"end": 6439,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6414,
											"end": 6439,
											"name": "ADD"
										},
										{
											"begin": 6414,
											"end": 6439,
											"name": "DUP3"
										},
										{
											"begin": 6414,
											"end": 6439,
											"name": "DUP1"
										},
										{
											"begin": 6414,
											"end": 6439,
											"name": "SLOAD"
										},
										{
											"begin": 6414,
											"end": 6439,
											"name": "DUP1"
										},
										{
											"begin": 6414,
											"end": 6439,
											"name": "ISZERO"
										},
										{
											"begin": 6414,
											"end": 6439,
											"name": "PUSH [tag]",
											"value": "117"
										},
										{
											"begin": 6414,
											"end": 6439,
											"name": "JUMPI"
										},
										{
											"begin": 6414,
											"end": 6439,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6414,
											"end": 6439,
											"name": "MUL"
										},
										{
											"begin": 6414,
											"end": 6439,
											"name": "DUP3"
										},
										{
											"begin": 6414,
											"end": 6439,
											"name": "ADD"
										},
										{
											"begin": 6414,
											"end": 6439,
											"name": "SWAP2"
										},
										{
											"begin": 6414,
											"end": 6439,
											"name": "SWAP1"
										},
										{
											"begin": 6414,
											"end": 6439,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6414,
											"end": 6439,
											"name": "MSTORE"
										},
										{
											"begin": 6414,
											"end": 6439,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6414,
											"end": 6439,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6414,
											"end": 6439,
											"name": "KECCAK256"
										},
										{
											"begin": 6414,
											"end": 6439,
											"name": "SWAP1"
										},
										{
											"begin": 6414,
											"end": 6439,
											"name": "tag",
											"value": "118"
										},
										{
											"begin": 6414,
											"end": 6439,
											"name": "JUMPDEST"
										},
										{
											"begin": 6414,
											"end": 6439,
											"name": "DUP2"
										},
										{
											"begin": 6414,
											"end": 6439,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6414,
											"end": 6439,
											"name": "SWAP1"
										},
										{
											"begin": 6414,
											"end": 6439,
											"name": "SLOAD"
										},
										{
											"begin": 6414,
											"end": 6439,
											"name": "SWAP1"
										},
										{
											"begin": 6414,
											"end": 6439,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 6414,
											"end": 6439,
											"name": "EXP"
										},
										{
											"begin": 6414,
											"end": 6439,
											"name": "SWAP1"
										},
										{
											"begin": 6414,
											"end": 6439,
											"name": "DIV"
										},
										{
											"begin": 6414,
											"end": 6439,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6414,
											"end": 6439,
											"name": "AND"
										},
										{
											"begin": 6414,
											"end": 6439,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6414,
											"end": 6439,
											"name": "AND"
										},
										{
											"begin": 6414,
											"end": 6439,
											"name": "DUP2"
										},
										{
											"begin": 6414,
											"end": 6439,
											"name": "MSTORE"
										},
										{
											"begin": 6414,
											"end": 6439,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6414,
											"end": 6439,
											"name": "ADD"
										},
										{
											"begin": 6414,
											"end": 6439,
											"name": "SWAP1"
										},
										{
											"begin": 6414,
											"end": 6439,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6414,
											"end": 6439,
											"name": "ADD"
										},
										{
											"begin": 6414,
											"end": 6439,
											"name": "SWAP1"
										},
										{
											"begin": 6414,
											"end": 6439,
											"name": "DUP1"
										},
										{
											"begin": 6414,
											"end": 6439,
											"name": "DUP4"
										},
										{
											"begin": 6414,
											"end": 6439,
											"name": "GT"
										},
										{
											"begin": 6414,
											"end": 6439,
											"name": "PUSH [tag]",
											"value": "118"
										},
										{
											"begin": 6414,
											"end": 6439,
											"name": "JUMPI"
										},
										{
											"begin": 6414,
											"end": 6439,
											"name": "tag",
											"value": "117"
										},
										{
											"begin": 6414,
											"end": 6439,
											"name": "JUMPDEST"
										},
										{
											"begin": 6414,
											"end": 6439,
											"name": "POP"
										},
										{
											"begin": 6414,
											"end": 6439,
											"name": "POP"
										},
										{
											"begin": 6414,
											"end": 6439,
											"name": "POP"
										},
										{
											"begin": 6414,
											"end": 6439,
											"name": "POP"
										},
										{
											"begin": 6414,
											"end": 6439,
											"name": "POP"
										},
										{
											"begin": 6414,
											"end": 6439,
											"name": "SWAP1"
										},
										{
											"begin": 6414,
											"end": 6439,
											"name": "POP"
										},
										{
											"begin": 6334,
											"end": 6446,
											"name": "SWAP2"
										},
										{
											"begin": 6334,
											"end": 6446,
											"name": "SWAP1"
										},
										{
											"begin": 6334,
											"end": 6446,
											"name": "POP"
										},
										{
											"begin": 6334,
											"end": 6446,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 6588,
											"end": 6717,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 6588,
											"end": 6717,
											"name": "JUMPDEST"
										},
										{
											"begin": 6643,
											"end": 6652,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 6671,
											"end": 6685,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6671,
											"end": 6697,
											"name": "DUP1"
										},
										{
											"begin": 6686,
											"end": 6696,
											"name": "CALLER"
										},
										{
											"begin": 6671,
											"end": 6697,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6671,
											"end": 6697,
											"name": "AND"
										},
										{
											"begin": 6671,
											"end": 6697,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6671,
											"end": 6697,
											"name": "AND"
										},
										{
											"begin": 6671,
											"end": 6697,
											"name": "DUP2"
										},
										{
											"begin": 6671,
											"end": 6697,
											"name": "MSTORE"
										},
										{
											"begin": 6671,
											"end": 6697,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6671,
											"end": 6697,
											"name": "ADD"
										},
										{
											"begin": 6671,
											"end": 6697,
											"name": "SWAP1"
										},
										{
											"begin": 6671,
											"end": 6697,
											"name": "DUP2"
										},
										{
											"begin": 6671,
											"end": 6697,
											"name": "MSTORE"
										},
										{
											"begin": 6671,
											"end": 6697,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6671,
											"end": 6697,
											"name": "ADD"
										},
										{
											"begin": 6671,
											"end": 6697,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6671,
											"end": 6697,
											"name": "KECCAK256"
										},
										{
											"begin": 6671,
											"end": 6710,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6671,
											"end": 6710,
											"name": "ADD"
										},
										{
											"begin": 6664,
											"end": 6710,
											"name": "DUP1"
										},
										{
											"begin": 6664,
											"end": 6710,
											"name": "SLOAD"
										},
										{
											"begin": 6664,
											"end": 6710,
											"name": "DUP1"
										},
										{
											"begin": 6664,
											"end": 6710,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6664,
											"end": 6710,
											"name": "MUL"
										},
										{
											"begin": 6664,
											"end": 6710,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6664,
											"end": 6710,
											"name": "ADD"
										},
										{
											"begin": 6664,
											"end": 6710,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6664,
											"end": 6710,
											"name": "MLOAD"
										},
										{
											"begin": 6664,
											"end": 6710,
											"name": "SWAP1"
										},
										{
											"begin": 6664,
											"end": 6710,
											"name": "DUP2"
										},
										{
											"begin": 6664,
											"end": 6710,
											"name": "ADD"
										},
										{
											"begin": 6664,
											"end": 6710,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6664,
											"end": 6710,
											"name": "MSTORE"
										},
										{
											"begin": 6664,
											"end": 6710,
											"name": "DUP1"
										},
										{
											"begin": 6664,
											"end": 6710,
											"name": "SWAP3"
										},
										{
											"begin": 6664,
											"end": 6710,
											"name": "SWAP2"
										},
										{
											"begin": 6664,
											"end": 6710,
											"name": "SWAP1"
										},
										{
											"begin": 6664,
											"end": 6710,
											"name": "DUP2"
										},
										{
											"begin": 6664,
											"end": 6710,
											"name": "DUP2"
										},
										{
											"begin": 6664,
											"end": 6710,
											"name": "MSTORE"
										},
										{
											"begin": 6664,
											"end": 6710,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6664,
											"end": 6710,
											"name": "ADD"
										},
										{
											"begin": 6664,
											"end": 6710,
											"name": "DUP3"
										},
										{
											"begin": 6664,
											"end": 6710,
											"name": "DUP1"
										},
										{
											"begin": 6664,
											"end": 6710,
											"name": "SLOAD"
										},
										{
											"begin": 6664,
											"end": 6710,
											"name": "DUP1"
										},
										{
											"begin": 6664,
											"end": 6710,
											"name": "ISZERO"
										},
										{
											"begin": 6664,
											"end": 6710,
											"name": "PUSH [tag]",
											"value": "120"
										},
										{
											"begin": 6664,
											"end": 6710,
											"name": "JUMPI"
										},
										{
											"begin": 6664,
											"end": 6710,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6664,
											"end": 6710,
											"name": "MUL"
										},
										{
											"begin": 6664,
											"end": 6710,
											"name": "DUP3"
										},
										{
											"begin": 6664,
											"end": 6710,
											"name": "ADD"
										},
										{
											"begin": 6664,
											"end": 6710,
											"name": "SWAP2"
										},
										{
											"begin": 6664,
											"end": 6710,
											"name": "SWAP1"
										},
										{
											"begin": 6664,
											"end": 6710,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6664,
											"end": 6710,
											"name": "MSTORE"
										},
										{
											"begin": 6664,
											"end": 6710,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6664,
											"end": 6710,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6664,
											"end": 6710,
											"name": "KECCAK256"
										},
										{
											"begin": 6664,
											"end": 6710,
											"name": "SWAP1"
										},
										{
											"begin": 6664,
											"end": 6710,
											"name": "tag",
											"value": "121"
										},
										{
											"begin": 6664,
											"end": 6710,
											"name": "JUMPDEST"
										},
										{
											"begin": 6664,
											"end": 6710,
											"name": "DUP2"
										},
										{
											"begin": 6664,
											"end": 6710,
											"name": "SLOAD"
										},
										{
											"begin": 6664,
											"end": 6710,
											"name": "DUP2"
										},
										{
											"begin": 6664,
											"end": 6710,
											"name": "MSTORE"
										},
										{
											"begin": 6664,
											"end": 6710,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6664,
											"end": 6710,
											"name": "ADD"
										},
										{
											"begin": 6664,
											"end": 6710,
											"name": "SWAP1"
										},
										{
											"begin": 6664,
											"end": 6710,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6664,
											"end": 6710,
											"name": "ADD"
										},
										{
											"begin": 6664,
											"end": 6710,
											"name": "SWAP1"
										},
										{
											"begin": 6664,
											"end": 6710,
											"name": "DUP1"
										},
										{
											"begin": 6664,
											"end": 6710,
											"name": "DUP4"
										},
										{
											"begin": 6664,
											"end": 6710,
											"name": "GT"
										},
										{
											"begin": 6664,
											"end": 6710,
											"name": "PUSH [tag]",
											"value": "121"
										},
										{
											"begin": 6664,
											"end": 6710,
											"name": "JUMPI"
										},
										{
											"begin": 6664,
											"end": 6710,
											"name": "tag",
											"value": "120"
										},
										{
											"begin": 6664,
											"end": 6710,
											"name": "JUMPDEST"
										},
										{
											"begin": 6664,
											"end": 6710,
											"name": "POP"
										},
										{
											"begin": 6664,
											"end": 6710,
											"name": "POP"
										},
										{
											"begin": 6664,
											"end": 6710,
											"name": "POP"
										},
										{
											"begin": 6664,
											"end": 6710,
											"name": "POP"
										},
										{
											"begin": 6664,
											"end": 6710,
											"name": "POP"
										},
										{
											"begin": 6664,
											"end": 6710,
											"name": "SWAP1"
										},
										{
											"begin": 6664,
											"end": 6710,
											"name": "POP"
										},
										{
											"begin": 6588,
											"end": 6717,
											"name": "SWAP1"
										},
										{
											"begin": 6588,
											"end": 6717,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 6176,
											"end": 6328,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 6176,
											"end": 6328,
											"name": "JUMPDEST"
										},
										{
											"begin": 6253,
											"end": 6260,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6279,
											"end": 6294,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6279,
											"end": 6306,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6295,
											"end": 6305,
											"name": "DUP5"
										},
										{
											"begin": 6279,
											"end": 6306,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6279,
											"end": 6306,
											"name": "AND"
										},
										{
											"begin": 6279,
											"end": 6306,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6279,
											"end": 6306,
											"name": "AND"
										},
										{
											"begin": 6279,
											"end": 6306,
											"name": "DUP2"
										},
										{
											"begin": 6279,
											"end": 6306,
											"name": "MSTORE"
										},
										{
											"begin": 6279,
											"end": 6306,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6279,
											"end": 6306,
											"name": "ADD"
										},
										{
											"begin": 6279,
											"end": 6306,
											"name": "SWAP1"
										},
										{
											"begin": 6279,
											"end": 6306,
											"name": "DUP2"
										},
										{
											"begin": 6279,
											"end": 6306,
											"name": "MSTORE"
										},
										{
											"begin": 6279,
											"end": 6306,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6279,
											"end": 6306,
											"name": "ADD"
										},
										{
											"begin": 6279,
											"end": 6306,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6279,
											"end": 6306,
											"name": "KECCAK256"
										},
										{
											"begin": 6279,
											"end": 6313,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 6279,
											"end": 6313,
											"name": "ADD"
										},
										{
											"begin": 6279,
											"end": 6321,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6314,
											"end": 6320,
											"name": "DUP4"
										},
										{
											"begin": 6279,
											"end": 6321,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6279,
											"end": 6321,
											"name": "AND"
										},
										{
											"begin": 6279,
											"end": 6321,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6279,
											"end": 6321,
											"name": "AND"
										},
										{
											"begin": 6279,
											"end": 6321,
											"name": "DUP2"
										},
										{
											"begin": 6279,
											"end": 6321,
											"name": "MSTORE"
										},
										{
											"begin": 6279,
											"end": 6321,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6279,
											"end": 6321,
											"name": "ADD"
										},
										{
											"begin": 6279,
											"end": 6321,
											"name": "SWAP1"
										},
										{
											"begin": 6279,
											"end": 6321,
											"name": "DUP2"
										},
										{
											"begin": 6279,
											"end": 6321,
											"name": "MSTORE"
										},
										{
											"begin": 6279,
											"end": 6321,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6279,
											"end": 6321,
											"name": "ADD"
										},
										{
											"begin": 6279,
											"end": 6321,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6279,
											"end": 6321,
											"name": "KECCAK256"
										},
										{
											"begin": 6279,
											"end": 6321,
											"name": "SLOAD"
										},
										{
											"begin": 6272,
											"end": 6321,
											"name": "SWAP1"
										},
										{
											"begin": 6272,
											"end": 6321,
											"name": "POP"
										},
										{
											"begin": 6176,
											"end": 6328,
											"name": "SWAP3"
										},
										{
											"begin": 6176,
											"end": 6328,
											"name": "SWAP2"
										},
										{
											"begin": 6176,
											"end": 6328,
											"name": "POP"
										},
										{
											"begin": 6176,
											"end": 6328,
											"name": "POP"
										},
										{
											"begin": 6176,
											"end": 6328,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1947,
											"end": 1974,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 1947,
											"end": 1974,
											"name": "JUMPDEST"
										},
										{
											"begin": 1947,
											"end": 1974,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1947,
											"end": 1974,
											"name": "DUP2"
										},
										{
											"begin": 1947,
											"end": 1974,
											"name": "DUP2"
										},
										{
											"begin": 1947,
											"end": 1974,
											"name": "SLOAD"
										},
										{
											"begin": 1947,
											"end": 1974,
											"name": "DUP2"
										},
										{
											"begin": 1947,
											"end": 1974,
											"name": "LT"
										},
										{
											"begin": 1947,
											"end": 1974,
											"name": "ISZERO"
										},
										{
											"begin": 1947,
											"end": 1974,
											"name": "ISZERO"
										},
										{
											"begin": 1947,
											"end": 1974,
											"name": "PUSH [tag]",
											"value": "123"
										},
										{
											"begin": 1947,
											"end": 1974,
											"name": "JUMPI"
										},
										{
											"begin": 1947,
											"end": 1974,
											"name": "INVALID"
										},
										{
											"begin": 1947,
											"end": 1974,
											"name": "tag",
											"value": "123"
										},
										{
											"begin": 1947,
											"end": 1974,
											"name": "JUMPDEST"
										},
										{
											"begin": 1947,
											"end": 1974,
											"name": "SWAP1"
										},
										{
											"begin": 1947,
											"end": 1974,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1947,
											"end": 1974,
											"name": "MSTORE"
										},
										{
											"begin": 1947,
											"end": 1974,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1947,
											"end": 1974,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1947,
											"end": 1974,
											"name": "KECCAK256"
										},
										{
											"begin": 1947,
											"end": 1974,
											"name": "ADD"
										},
										{
											"begin": 1947,
											"end": 1974,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1947,
											"end": 1974,
											"name": "SWAP2"
										},
										{
											"begin": 1947,
											"end": 1974,
											"name": "POP"
										},
										{
											"begin": 1947,
											"end": 1974,
											"name": "SLOAD"
										},
										{
											"begin": 1947,
											"end": 1974,
											"name": "SWAP1"
										},
										{
											"begin": 1947,
											"end": 1974,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1947,
											"end": 1974,
											"name": "EXP"
										},
										{
											"begin": 1947,
											"end": 1974,
											"name": "SWAP1"
										},
										{
											"begin": 1947,
											"end": 1974,
											"name": "DIV"
										},
										{
											"begin": 1947,
											"end": 1974,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1947,
											"end": 1974,
											"name": "AND"
										},
										{
											"begin": 1947,
											"end": 1974,
											"name": "DUP2"
										},
										{
											"begin": 1947,
											"end": 1974,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8530,
											"end": 8920,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 8530,
											"end": 8920,
											"name": "JUMPDEST"
										},
										{
											"begin": 8640,
											"end": 8651,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8608,
											"end": 8620,
											"name": "DUP3"
										},
										{
											"begin": 8622,
											"end": 8628,
											"name": "DUP3"
										},
										{
											"begin": 3404,
											"end": 3405,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3389,
											"end": 3401,
											"name": "DUP3"
										},
										{
											"begin": 3389,
											"end": 3405,
											"name": "GT"
										},
										{
											"begin": 3381,
											"end": 3406,
											"name": "ISZERO"
										},
										{
											"begin": 3381,
											"end": 3406,
											"name": "ISZERO"
										},
										{
											"begin": 3381,
											"end": 3406,
											"name": "PUSH [tag]",
											"value": "126"
										},
										{
											"begin": 3381,
											"end": 3406,
											"name": "JUMPI"
										},
										{
											"begin": 3381,
											"end": 3406,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3381,
											"end": 3406,
											"name": "DUP1"
										},
										{
											"begin": 3381,
											"end": 3406,
											"name": "REVERT"
										},
										{
											"begin": 3381,
											"end": 3406,
											"name": "tag",
											"value": "126"
										},
										{
											"begin": 3381,
											"end": 3406,
											"name": "JUMPDEST"
										},
										{
											"begin": 3440,
											"end": 3452,
											"name": "DUP2"
										},
										{
											"begin": 3424,
											"end": 3436,
											"name": "NUMBER"
										},
										{
											"begin": 3424,
											"end": 3452,
											"name": "LT"
										},
										{
											"begin": 3424,
											"end": 3452,
											"name": "ISZERO"
										},
										{
											"begin": 3416,
											"end": 3453,
											"name": "ISZERO"
										},
										{
											"begin": 3416,
											"end": 3453,
											"name": "ISZERO"
										},
										{
											"begin": 3416,
											"end": 3453,
											"name": "PUSH [tag]",
											"value": "127"
										},
										{
											"begin": 3416,
											"end": 3453,
											"name": "JUMPI"
										},
										{
											"begin": 3416,
											"end": 3453,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3416,
											"end": 3453,
											"name": "DUP1"
										},
										{
											"begin": 3416,
											"end": 3453,
											"name": "REVERT"
										},
										{
											"begin": 3416,
											"end": 3453,
											"name": "tag",
											"value": "127"
										},
										{
											"begin": 3416,
											"end": 3453,
											"name": "JUMPDEST"
										},
										{
											"begin": 3519,
											"end": 3520,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3471,
											"end": 3485,
											"name": "DUP1"
										},
										{
											"begin": 3471,
											"end": 3497,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3486,
											"end": 3496,
											"name": "CALLER"
										},
										{
											"begin": 3471,
											"end": 3497,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3471,
											"end": 3497,
											"name": "AND"
										},
										{
											"begin": 3471,
											"end": 3497,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3471,
											"end": 3497,
											"name": "AND"
										},
										{
											"begin": 3471,
											"end": 3497,
											"name": "DUP2"
										},
										{
											"begin": 3471,
											"end": 3497,
											"name": "MSTORE"
										},
										{
											"begin": 3471,
											"end": 3497,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3471,
											"end": 3497,
											"name": "ADD"
										},
										{
											"begin": 3471,
											"end": 3497,
											"name": "SWAP1"
										},
										{
											"begin": 3471,
											"end": 3497,
											"name": "DUP2"
										},
										{
											"begin": 3471,
											"end": 3497,
											"name": "MSTORE"
										},
										{
											"begin": 3471,
											"end": 3497,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3471,
											"end": 3497,
											"name": "ADD"
										},
										{
											"begin": 3471,
											"end": 3497,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3471,
											"end": 3497,
											"name": "KECCAK256"
										},
										{
											"begin": 3471,
											"end": 3502,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3471,
											"end": 3502,
											"name": "ADD"
										},
										{
											"begin": 3471,
											"end": 3516,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3503,
											"end": 3515,
											"name": "DUP5"
										},
										{
											"begin": 3471,
											"end": 3516,
											"name": "DUP2"
										},
										{
											"begin": 3471,
											"end": 3516,
											"name": "MSTORE"
										},
										{
											"begin": 3471,
											"end": 3516,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3471,
											"end": 3516,
											"name": "ADD"
										},
										{
											"begin": 3471,
											"end": 3516,
											"name": "SWAP1"
										},
										{
											"begin": 3471,
											"end": 3516,
											"name": "DUP2"
										},
										{
											"begin": 3471,
											"end": 3516,
											"name": "MSTORE"
										},
										{
											"begin": 3471,
											"end": 3516,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3471,
											"end": 3516,
											"name": "ADD"
										},
										{
											"begin": 3471,
											"end": 3516,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3471,
											"end": 3516,
											"name": "KECCAK256"
										},
										{
											"begin": 3471,
											"end": 3516,
											"name": "SLOAD"
										},
										{
											"begin": 3471,
											"end": 3520,
											"name": "GT"
										},
										{
											"begin": 3463,
											"end": 3521,
											"name": "ISZERO"
										},
										{
											"begin": 3463,
											"end": 3521,
											"name": "ISZERO"
										},
										{
											"begin": 3463,
											"end": 3521,
											"name": "PUSH [tag]",
											"value": "128"
										},
										{
											"begin": 3463,
											"end": 3521,
											"name": "JUMPI"
										},
										{
											"begin": 3463,
											"end": 3521,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3463,
											"end": 3521,
											"name": "DUP1"
										},
										{
											"begin": 3463,
											"end": 3521,
											"name": "REVERT"
										},
										{
											"begin": 3463,
											"end": 3521,
											"name": "tag",
											"value": "128"
										},
										{
											"begin": 3463,
											"end": 3521,
											"name": "JUMPDEST"
										},
										{
											"begin": 3590,
											"end": 3602,
											"name": "DUP2"
										},
										{
											"begin": 3539,
											"end": 3553,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3539,
											"end": 3565,
											"name": "DUP1"
										},
										{
											"begin": 3554,
											"end": 3564,
											"name": "CALLER"
										},
										{
											"begin": 3539,
											"end": 3565,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3539,
											"end": 3565,
											"name": "AND"
										},
										{
											"begin": 3539,
											"end": 3565,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3539,
											"end": 3565,
											"name": "AND"
										},
										{
											"begin": 3539,
											"end": 3565,
											"name": "DUP2"
										},
										{
											"begin": 3539,
											"end": 3565,
											"name": "MSTORE"
										},
										{
											"begin": 3539,
											"end": 3565,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3539,
											"end": 3565,
											"name": "ADD"
										},
										{
											"begin": 3539,
											"end": 3565,
											"name": "SWAP1"
										},
										{
											"begin": 3539,
											"end": 3565,
											"name": "DUP2"
										},
										{
											"begin": 3539,
											"end": 3565,
											"name": "MSTORE"
										},
										{
											"begin": 3539,
											"end": 3565,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3539,
											"end": 3565,
											"name": "ADD"
										},
										{
											"begin": 3539,
											"end": 3565,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3539,
											"end": 3565,
											"name": "KECCAK256"
										},
										{
											"begin": 3539,
											"end": 3578,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3539,
											"end": 3578,
											"name": "ADD"
										},
										{
											"begin": 3579,
											"end": 3585,
											"name": "DUP3"
										},
										{
											"begin": 3539,
											"end": 3586,
											"name": "DUP2"
										},
										{
											"begin": 3539,
											"end": 3586,
											"name": "SLOAD"
										},
										{
											"begin": 3539,
											"end": 3586,
											"name": "DUP2"
										},
										{
											"begin": 3539,
											"end": 3586,
											"name": "LT"
										},
										{
											"begin": 3539,
											"end": 3586,
											"name": "ISZERO"
										},
										{
											"begin": 3539,
											"end": 3586,
											"name": "ISZERO"
										},
										{
											"begin": 3539,
											"end": 3586,
											"name": "PUSH [tag]",
											"value": "129"
										},
										{
											"begin": 3539,
											"end": 3586,
											"name": "JUMPI"
										},
										{
											"begin": 3539,
											"end": 3586,
											"name": "INVALID"
										},
										{
											"begin": 3539,
											"end": 3586,
											"name": "tag",
											"value": "129"
										},
										{
											"begin": 3539,
											"end": 3586,
											"name": "JUMPDEST"
										},
										{
											"begin": 3539,
											"end": 3586,
											"name": "SWAP1"
										},
										{
											"begin": 3539,
											"end": 3586,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3539,
											"end": 3586,
											"name": "MSTORE"
										},
										{
											"begin": 3539,
											"end": 3586,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3539,
											"end": 3586,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3539,
											"end": 3586,
											"name": "KECCAK256"
										},
										{
											"begin": 3539,
											"end": 3586,
											"name": "ADD"
										},
										{
											"begin": 3539,
											"end": 3586,
											"name": "SLOAD"
										},
										{
											"begin": 3539,
											"end": 3602,
											"name": "EQ"
										},
										{
											"begin": 3531,
											"end": 3603,
											"name": "ISZERO"
										},
										{
											"begin": 3531,
											"end": 3603,
											"name": "ISZERO"
										},
										{
											"begin": 3531,
											"end": 3603,
											"name": "PUSH [tag]",
											"value": "131"
										},
										{
											"begin": 3531,
											"end": 3603,
											"name": "JUMPI"
										},
										{
											"begin": 3531,
											"end": 3603,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3531,
											"end": 3603,
											"name": "DUP1"
										},
										{
											"begin": 3531,
											"end": 3603,
											"name": "REVERT"
										},
										{
											"begin": 3531,
											"end": 3603,
											"name": "tag",
											"value": "131"
										},
										{
											"begin": 3531,
											"end": 3603,
											"name": "JUMPDEST"
										},
										{
											"begin": 8654,
											"end": 8668,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8654,
											"end": 8680,
											"name": "DUP1"
										},
										{
											"begin": 8669,
											"end": 8679,
											"name": "CALLER"
										},
										{
											"begin": 8654,
											"end": 8680,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8654,
											"end": 8680,
											"name": "AND"
										},
										{
											"begin": 8654,
											"end": 8680,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8654,
											"end": 8680,
											"name": "AND"
										},
										{
											"begin": 8654,
											"end": 8680,
											"name": "DUP2"
										},
										{
											"begin": 8654,
											"end": 8680,
											"name": "MSTORE"
										},
										{
											"begin": 8654,
											"end": 8680,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8654,
											"end": 8680,
											"name": "ADD"
										},
										{
											"begin": 8654,
											"end": 8680,
											"name": "SWAP1"
										},
										{
											"begin": 8654,
											"end": 8680,
											"name": "DUP2"
										},
										{
											"begin": 8654,
											"end": 8680,
											"name": "MSTORE"
										},
										{
											"begin": 8654,
											"end": 8680,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8654,
											"end": 8680,
											"name": "ADD"
										},
										{
											"begin": 8654,
											"end": 8680,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8654,
											"end": 8680,
											"name": "KECCAK256"
										},
										{
											"begin": 8654,
											"end": 8685,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8654,
											"end": 8685,
											"name": "ADD"
										},
										{
											"begin": 8654,
											"end": 8699,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8686,
											"end": 8698,
											"name": "DUP7"
										},
										{
											"begin": 8654,
											"end": 8699,
											"name": "DUP2"
										},
										{
											"begin": 8654,
											"end": 8699,
											"name": "MSTORE"
										},
										{
											"begin": 8654,
											"end": 8699,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8654,
											"end": 8699,
											"name": "ADD"
										},
										{
											"begin": 8654,
											"end": 8699,
											"name": "SWAP1"
										},
										{
											"begin": 8654,
											"end": 8699,
											"name": "DUP2"
										},
										{
											"begin": 8654,
											"end": 8699,
											"name": "MSTORE"
										},
										{
											"begin": 8654,
											"end": 8699,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8654,
											"end": 8699,
											"name": "ADD"
										},
										{
											"begin": 8654,
											"end": 8699,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8654,
											"end": 8699,
											"name": "KECCAK256"
										},
										{
											"begin": 8654,
											"end": 8699,
											"name": "SLOAD"
										},
										{
											"begin": 8640,
											"end": 8699,
											"name": "SWAP3"
										},
										{
											"begin": 8640,
											"end": 8699,
											"name": "POP"
										},
										{
											"begin": 8716,
											"end": 8730,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8716,
											"end": 8742,
											"name": "DUP1"
										},
										{
											"begin": 8731,
											"end": 8741,
											"name": "CALLER"
										},
										{
											"begin": 8716,
											"end": 8742,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8716,
											"end": 8742,
											"name": "AND"
										},
										{
											"begin": 8716,
											"end": 8742,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8716,
											"end": 8742,
											"name": "AND"
										},
										{
											"begin": 8716,
											"end": 8742,
											"name": "DUP2"
										},
										{
											"begin": 8716,
											"end": 8742,
											"name": "MSTORE"
										},
										{
											"begin": 8716,
											"end": 8742,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8716,
											"end": 8742,
											"name": "ADD"
										},
										{
											"begin": 8716,
											"end": 8742,
											"name": "SWAP1"
										},
										{
											"begin": 8716,
											"end": 8742,
											"name": "DUP2"
										},
										{
											"begin": 8716,
											"end": 8742,
											"name": "MSTORE"
										},
										{
											"begin": 8716,
											"end": 8742,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8716,
											"end": 8742,
											"name": "ADD"
										},
										{
											"begin": 8716,
											"end": 8742,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8716,
											"end": 8742,
											"name": "KECCAK256"
										},
										{
											"begin": 8716,
											"end": 8747,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8716,
											"end": 8747,
											"name": "ADD"
										},
										{
											"begin": 8716,
											"end": 8761,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8748,
											"end": 8760,
											"name": "DUP7"
										},
										{
											"begin": 8716,
											"end": 8761,
											"name": "DUP2"
										},
										{
											"begin": 8716,
											"end": 8761,
											"name": "MSTORE"
										},
										{
											"begin": 8716,
											"end": 8761,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8716,
											"end": 8761,
											"name": "ADD"
										},
										{
											"begin": 8716,
											"end": 8761,
											"name": "SWAP1"
										},
										{
											"begin": 8716,
											"end": 8761,
											"name": "DUP2"
										},
										{
											"begin": 8716,
											"end": 8761,
											"name": "MSTORE"
										},
										{
											"begin": 8716,
											"end": 8761,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8716,
											"end": 8761,
											"name": "ADD"
										},
										{
											"begin": 8716,
											"end": 8761,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8716,
											"end": 8761,
											"name": "KECCAK256"
										},
										{
											"begin": 8709,
											"end": 8761,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8709,
											"end": 8761,
											"name": "SWAP1"
										},
										{
											"begin": 8709,
											"end": 8761,
											"name": "SSTORE"
										},
										{
											"begin": 8778,
											"end": 8792,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8778,
											"end": 8804,
											"name": "DUP1"
										},
										{
											"begin": 8793,
											"end": 8803,
											"name": "CALLER"
										},
										{
											"begin": 8778,
											"end": 8804,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8778,
											"end": 8804,
											"name": "AND"
										},
										{
											"begin": 8778,
											"end": 8804,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8778,
											"end": 8804,
											"name": "AND"
										},
										{
											"begin": 8778,
											"end": 8804,
											"name": "DUP2"
										},
										{
											"begin": 8778,
											"end": 8804,
											"name": "MSTORE"
										},
										{
											"begin": 8778,
											"end": 8804,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8778,
											"end": 8804,
											"name": "ADD"
										},
										{
											"begin": 8778,
											"end": 8804,
											"name": "SWAP1"
										},
										{
											"begin": 8778,
											"end": 8804,
											"name": "DUP2"
										},
										{
											"begin": 8778,
											"end": 8804,
											"name": "MSTORE"
										},
										{
											"begin": 8778,
											"end": 8804,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8778,
											"end": 8804,
											"name": "ADD"
										},
										{
											"begin": 8778,
											"end": 8804,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8778,
											"end": 8804,
											"name": "KECCAK256"
										},
										{
											"begin": 8778,
											"end": 8817,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 8778,
											"end": 8817,
											"name": "ADD"
										},
										{
											"begin": 8818,
											"end": 8824,
											"name": "DUP5"
										},
										{
											"begin": 8778,
											"end": 8825,
											"name": "DUP2"
										},
										{
											"begin": 8778,
											"end": 8825,
											"name": "SLOAD"
										},
										{
											"begin": 8778,
											"end": 8825,
											"name": "DUP2"
										},
										{
											"begin": 8778,
											"end": 8825,
											"name": "LT"
										},
										{
											"begin": 8778,
											"end": 8825,
											"name": "ISZERO"
										},
										{
											"begin": 8778,
											"end": 8825,
											"name": "ISZERO"
										},
										{
											"begin": 8778,
											"end": 8825,
											"name": "PUSH [tag]",
											"value": "133"
										},
										{
											"begin": 8778,
											"end": 8825,
											"name": "JUMPI"
										},
										{
											"begin": 8778,
											"end": 8825,
											"name": "INVALID"
										},
										{
											"begin": 8778,
											"end": 8825,
											"name": "tag",
											"value": "133"
										},
										{
											"begin": 8778,
											"end": 8825,
											"name": "JUMPDEST"
										},
										{
											"begin": 8778,
											"end": 8825,
											"name": "SWAP1"
										},
										{
											"begin": 8778,
											"end": 8825,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8778,
											"end": 8825,
											"name": "MSTORE"
										},
										{
											"begin": 8778,
											"end": 8825,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8778,
											"end": 8825,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8778,
											"end": 8825,
											"name": "KECCAK256"
										},
										{
											"begin": 8778,
											"end": 8825,
											"name": "ADD"
										},
										{
											"begin": 8771,
											"end": 8825,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8771,
											"end": 8825,
											"name": "SWAP1"
										},
										{
											"begin": 8771,
											"end": 8825,
											"name": "SSTORE"
										},
										{
											"begin": 8835,
											"end": 8845,
											"name": "CALLER"
										},
										{
											"begin": 8835,
											"end": 8854,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8835,
											"end": 8854,
											"name": "AND"
										},
										{
											"begin": 8835,
											"end": 8859,
											"name": "PUSH",
											"value": "8FC"
										},
										{
											"begin": 8855,
											"end": 8858,
											"name": "DUP5"
										},
										{
											"begin": 8835,
											"end": 8859,
											"name": "SWAP1"
										},
										{
											"begin": 8835,
											"end": 8859,
											"name": "DUP2"
										},
										{
											"begin": 8835,
											"end": 8859,
											"name": "ISZERO"
										},
										{
											"begin": 8835,
											"end": 8859,
											"name": "MUL"
										},
										{
											"begin": 8835,
											"end": 8859,
											"name": "SWAP1"
										},
										{
											"begin": 8835,
											"end": 8859,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8835,
											"end": 8859,
											"name": "MLOAD"
										},
										{
											"begin": 8835,
											"end": 8859,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8835,
											"end": 8859,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8835,
											"end": 8859,
											"name": "MLOAD"
										},
										{
											"begin": 8835,
											"end": 8859,
											"name": "DUP1"
										},
										{
											"begin": 8835,
											"end": 8859,
											"name": "DUP4"
										},
										{
											"begin": 8835,
											"end": 8859,
											"name": "SUB"
										},
										{
											"begin": 8835,
											"end": 8859,
											"name": "DUP2"
										},
										{
											"begin": 8835,
											"end": 8859,
											"name": "DUP6"
										},
										{
											"begin": 8835,
											"end": 8859,
											"name": "DUP9"
										},
										{
											"begin": 8835,
											"end": 8859,
											"name": "DUP9"
										},
										{
											"begin": 8835,
											"end": 8859,
											"name": "CALL"
										},
										{
											"begin": 8835,
											"end": 8859,
											"name": "SWAP4"
										},
										{
											"begin": 8835,
											"end": 8859,
											"name": "POP"
										},
										{
											"begin": 8835,
											"end": 8859,
											"name": "POP"
										},
										{
											"begin": 8835,
											"end": 8859,
											"name": "POP"
										},
										{
											"begin": 8835,
											"end": 8859,
											"name": "POP"
										},
										{
											"begin": 8835,
											"end": 8859,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "135"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "135"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 8835,
											"end": 8859,
											"name": "POP"
										},
										{
											"begin": 8874,
											"end": 8913,
											"name": "PUSH",
											"value": "F279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568"
										},
										{
											"begin": 8883,
											"end": 8893,
											"name": "CALLER"
										},
										{
											"begin": 8895,
											"end": 8907,
											"name": "DUP7"
										},
										{
											"begin": 8909,
											"end": 8912,
											"name": "DUP6"
										},
										{
											"begin": 8874,
											"end": 8913,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8874,
											"end": 8913,
											"name": "MLOAD"
										},
										{
											"begin": 8874,
											"end": 8913,
											"name": "DUP1"
										},
										{
											"begin": 8874,
											"end": 8913,
											"name": "DUP5"
										},
										{
											"begin": 8874,
											"end": 8913,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8874,
											"end": 8913,
											"name": "AND"
										},
										{
											"begin": 8874,
											"end": 8913,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8874,
											"end": 8913,
											"name": "AND"
										},
										{
											"begin": 8874,
											"end": 8913,
											"name": "DUP2"
										},
										{
											"begin": 8874,
											"end": 8913,
											"name": "MSTORE"
										},
										{
											"begin": 8874,
											"end": 8913,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8874,
											"end": 8913,
											"name": "ADD"
										},
										{
											"begin": 8874,
											"end": 8913,
											"name": "DUP4"
										},
										{
											"begin": 8874,
											"end": 8913,
											"name": "DUP2"
										},
										{
											"begin": 8874,
											"end": 8913,
											"name": "MSTORE"
										},
										{
											"begin": 8874,
											"end": 8913,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8874,
											"end": 8913,
											"name": "ADD"
										},
										{
											"begin": 8874,
											"end": 8913,
											"name": "DUP3"
										},
										{
											"begin": 8874,
											"end": 8913,
											"name": "DUP2"
										},
										{
											"begin": 8874,
											"end": 8913,
											"name": "MSTORE"
										},
										{
											"begin": 8874,
											"end": 8913,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8874,
											"end": 8913,
											"name": "ADD"
										},
										{
											"begin": 8874,
											"end": 8913,
											"name": "SWAP4"
										},
										{
											"begin": 8874,
											"end": 8913,
											"name": "POP"
										},
										{
											"begin": 8874,
											"end": 8913,
											"name": "POP"
										},
										{
											"begin": 8874,
											"end": 8913,
											"name": "POP"
										},
										{
											"begin": 8874,
											"end": 8913,
											"name": "POP"
										},
										{
											"begin": 8874,
											"end": 8913,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8874,
											"end": 8913,
											"name": "MLOAD"
										},
										{
											"begin": 8874,
											"end": 8913,
											"name": "DUP1"
										},
										{
											"begin": 8874,
											"end": 8913,
											"name": "SWAP2"
										},
										{
											"begin": 8874,
											"end": 8913,
											"name": "SUB"
										},
										{
											"begin": 8874,
											"end": 8913,
											"name": "SWAP1"
										},
										{
											"begin": 8874,
											"end": 8913,
											"name": "LOG1"
										},
										{
											"begin": 8530,
											"end": 8920,
											"name": "POP"
										},
										{
											"begin": 8530,
											"end": 8920,
											"name": "POP"
										},
										{
											"begin": 8530,
											"end": 8920,
											"name": "POP"
										},
										{
											"begin": 8530,
											"end": 8920,
											"name": "POP"
										},
										{
											"begin": 8530,
											"end": 8920,
											"name": "POP"
										},
										{
											"begin": 8530,
											"end": 8920,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5902,
											"end": 6031,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 5902,
											"end": 6031,
											"name": "JUMPDEST"
										},
										{
											"begin": 5967,
											"end": 5974,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5993,
											"end": 6008,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5993,
											"end": 6020,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6009,
											"end": 6019,
											"name": "DUP4"
										},
										{
											"begin": 5993,
											"end": 6020,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5993,
											"end": 6020,
											"name": "AND"
										},
										{
											"begin": 5993,
											"end": 6020,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5993,
											"end": 6020,
											"name": "AND"
										},
										{
											"begin": 5993,
											"end": 6020,
											"name": "DUP2"
										},
										{
											"begin": 5993,
											"end": 6020,
											"name": "MSTORE"
										},
										{
											"begin": 5993,
											"end": 6020,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5993,
											"end": 6020,
											"name": "ADD"
										},
										{
											"begin": 5993,
											"end": 6020,
											"name": "SWAP1"
										},
										{
											"begin": 5993,
											"end": 6020,
											"name": "DUP2"
										},
										{
											"begin": 5993,
											"end": 6020,
											"name": "MSTORE"
										},
										{
											"begin": 5993,
											"end": 6020,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5993,
											"end": 6020,
											"name": "ADD"
										},
										{
											"begin": 5993,
											"end": 6020,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5993,
											"end": 6020,
											"name": "KECCAK256"
										},
										{
											"begin": 5993,
											"end": 6024,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5993,
											"end": 6024,
											"name": "ADD"
										},
										{
											"begin": 5993,
											"end": 6024,
											"name": "SLOAD"
										},
										{
											"begin": 5986,
											"end": 6024,
											"name": "SWAP1"
										},
										{
											"begin": 5986,
											"end": 6024,
											"name": "POP"
										},
										{
											"begin": 5902,
											"end": 6031,
											"name": "SWAP2"
										},
										{
											"begin": 5902,
											"end": 6031,
											"name": "SWAP1"
										},
										{
											"begin": 5902,
											"end": 6031,
											"name": "POP"
										},
										{
											"begin": 5902,
											"end": 6031,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5303,
											"end": 5800,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 5303,
											"end": 5800,
											"name": "JUMPDEST"
										},
										{
											"begin": 2431,
											"end": 2442,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 2431,
											"end": 2442,
											"name": "SLOAD"
										},
										{
											"begin": 2418,
											"end": 2427,
											"name": "CALLVALUE"
										},
										{
											"begin": 2418,
											"end": 2442,
											"name": "LT"
										},
										{
											"begin": 2418,
											"end": 2442,
											"name": "ISZERO"
										},
										{
											"begin": 2410,
											"end": 2443,
											"name": "ISZERO"
										},
										{
											"begin": 2410,
											"end": 2443,
											"name": "ISZERO"
										},
										{
											"begin": 2410,
											"end": 2443,
											"name": "PUSH [tag]",
											"value": "138"
										},
										{
											"begin": 2410,
											"end": 2443,
											"name": "JUMPI"
										},
										{
											"begin": 2410,
											"end": 2443,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2410,
											"end": 2443,
											"name": "DUP1"
										},
										{
											"begin": 2410,
											"end": 2443,
											"name": "REVERT"
										},
										{
											"begin": 2410,
											"end": 2443,
											"name": "tag",
											"value": "138"
										},
										{
											"begin": 2410,
											"end": 2443,
											"name": "JUMPDEST"
										},
										{
											"begin": 5391,
											"end": 5401,
											"name": "DUP1"
										},
										{
											"begin": 2788,
											"end": 2803,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2788,
											"end": 2815,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2804,
											"end": 2814,
											"name": "DUP3"
										},
										{
											"begin": 2788,
											"end": 2815,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2788,
											"end": 2815,
											"name": "AND"
										},
										{
											"begin": 2788,
											"end": 2815,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2788,
											"end": 2815,
											"name": "AND"
										},
										{
											"begin": 2788,
											"end": 2815,
											"name": "DUP2"
										},
										{
											"begin": 2788,
											"end": 2815,
											"name": "MSTORE"
										},
										{
											"begin": 2788,
											"end": 2815,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2788,
											"end": 2815,
											"name": "ADD"
										},
										{
											"begin": 2788,
											"end": 2815,
											"name": "SWAP1"
										},
										{
											"begin": 2788,
											"end": 2815,
											"name": "DUP2"
										},
										{
											"begin": 2788,
											"end": 2815,
											"name": "MSTORE"
										},
										{
											"begin": 2788,
											"end": 2815,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2788,
											"end": 2815,
											"name": "ADD"
										},
										{
											"begin": 2788,
											"end": 2815,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2788,
											"end": 2815,
											"name": "KECCAK256"
										},
										{
											"begin": 2788,
											"end": 2827,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2788,
											"end": 2827,
											"name": "ADD"
										},
										{
											"begin": 2788,
											"end": 2827,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 2788,
											"end": 2827,
											"name": "SWAP1"
										},
										{
											"begin": 2788,
											"end": 2827,
											"name": "SLOAD"
										},
										{
											"begin": 2788,
											"end": 2827,
											"name": "SWAP1"
										},
										{
											"begin": 2788,
											"end": 2827,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2788,
											"end": 2827,
											"name": "EXP"
										},
										{
											"begin": 2788,
											"end": 2827,
											"name": "SWAP1"
										},
										{
											"begin": 2788,
											"end": 2827,
											"name": "DIV"
										},
										{
											"begin": 2788,
											"end": 2827,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 2788,
											"end": 2827,
											"name": "AND"
										},
										{
											"begin": 2780,
											"end": 2828,
											"name": "ISZERO"
										},
										{
											"begin": 2780,
											"end": 2828,
											"name": "ISZERO"
										},
										{
											"begin": 2780,
											"end": 2828,
											"name": "PUSH [tag]",
											"value": "140"
										},
										{
											"begin": 2780,
											"end": 2828,
											"name": "JUMPI"
										},
										{
											"begin": 2780,
											"end": 2828,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2828,
											"name": "DUP1"
										},
										{
											"begin": 2780,
											"end": 2828,
											"name": "REVERT"
										},
										{
											"begin": 2780,
											"end": 2828,
											"name": "tag",
											"value": "140"
										},
										{
											"begin": 2780,
											"end": 2828,
											"name": "JUMPDEST"
										},
										{
											"begin": 5447,
											"end": 5493,
											"name": "PUSH [tag]",
											"value": "142"
										},
										{
											"begin": 5483,
											"end": 5492,
											"name": "CALLVALUE"
										},
										{
											"begin": 5447,
											"end": 5462,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5447,
											"end": 5474,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5463,
											"end": 5473,
											"name": "DUP6"
										},
										{
											"begin": 5447,
											"end": 5474,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5447,
											"end": 5474,
											"name": "AND"
										},
										{
											"begin": 5447,
											"end": 5474,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5447,
											"end": 5474,
											"name": "AND"
										},
										{
											"begin": 5447,
											"end": 5474,
											"name": "DUP2"
										},
										{
											"begin": 5447,
											"end": 5474,
											"name": "MSTORE"
										},
										{
											"begin": 5447,
											"end": 5474,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5447,
											"end": 5474,
											"name": "ADD"
										},
										{
											"begin": 5447,
											"end": 5474,
											"name": "SWAP1"
										},
										{
											"begin": 5447,
											"end": 5474,
											"name": "DUP2"
										},
										{
											"begin": 5447,
											"end": 5474,
											"name": "MSTORE"
										},
										{
											"begin": 5447,
											"end": 5474,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5447,
											"end": 5474,
											"name": "ADD"
										},
										{
											"begin": 5447,
											"end": 5474,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5447,
											"end": 5474,
											"name": "KECCAK256"
										},
										{
											"begin": 5447,
											"end": 5478,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5447,
											"end": 5478,
											"name": "ADD"
										},
										{
											"begin": 5447,
											"end": 5478,
											"name": "SLOAD"
										},
										{
											"begin": 5447,
											"end": 5482,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 5447,
											"end": 5482,
											"name": "SWAP1"
										},
										{
											"begin": 5447,
											"end": 5493,
											"name": "SWAP2"
										},
										{
											"begin": 5447,
											"end": 5493,
											"name": "SWAP1"
										},
										{
											"begin": 5447,
											"end": 5493,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5447,
											"end": 5493,
											"name": "AND"
										},
										{
											"begin": 5447,
											"end": 5493,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5447,
											"end": 5493,
											"name": "tag",
											"value": "142"
										},
										{
											"begin": 5447,
											"end": 5493,
											"name": "JUMPDEST"
										},
										{
											"begin": 5413,
											"end": 5428,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5413,
											"end": 5440,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5429,
											"end": 5439,
											"name": "DUP5"
										},
										{
											"begin": 5413,
											"end": 5440,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5413,
											"end": 5440,
											"name": "AND"
										},
										{
											"begin": 5413,
											"end": 5440,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5413,
											"end": 5440,
											"name": "AND"
										},
										{
											"begin": 5413,
											"end": 5440,
											"name": "DUP2"
										},
										{
											"begin": 5413,
											"end": 5440,
											"name": "MSTORE"
										},
										{
											"begin": 5413,
											"end": 5440,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5413,
											"end": 5440,
											"name": "ADD"
										},
										{
											"begin": 5413,
											"end": 5440,
											"name": "SWAP1"
										},
										{
											"begin": 5413,
											"end": 5440,
											"name": "DUP2"
										},
										{
											"begin": 5413,
											"end": 5440,
											"name": "MSTORE"
										},
										{
											"begin": 5413,
											"end": 5440,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5413,
											"end": 5440,
											"name": "ADD"
										},
										{
											"begin": 5413,
											"end": 5440,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5413,
											"end": 5440,
											"name": "KECCAK256"
										},
										{
											"begin": 5413,
											"end": 5444,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5413,
											"end": 5444,
											"name": "ADD"
										},
										{
											"begin": 5413,
											"end": 5493,
											"name": "DUP2"
										},
										{
											"begin": 5413,
											"end": 5493,
											"name": "SWAP1"
										},
										{
											"begin": 5413,
											"end": 5493,
											"name": "SSTORE"
										},
										{
											"begin": 5413,
											"end": 5493,
											"name": "POP"
										},
										{
											"begin": 5557,
											"end": 5558,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5507,
											"end": 5522,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5507,
											"end": 5534,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5523,
											"end": 5533,
											"name": "DUP5"
										},
										{
											"begin": 5507,
											"end": 5534,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5507,
											"end": 5534,
											"name": "AND"
										},
										{
											"begin": 5507,
											"end": 5534,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5507,
											"end": 5534,
											"name": "AND"
										},
										{
											"begin": 5507,
											"end": 5534,
											"name": "DUP2"
										},
										{
											"begin": 5507,
											"end": 5534,
											"name": "MSTORE"
										},
										{
											"begin": 5507,
											"end": 5534,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5507,
											"end": 5534,
											"name": "ADD"
										},
										{
											"begin": 5507,
											"end": 5534,
											"name": "SWAP1"
										},
										{
											"begin": 5507,
											"end": 5534,
											"name": "DUP2"
										},
										{
											"begin": 5507,
											"end": 5534,
											"name": "MSTORE"
										},
										{
											"begin": 5507,
											"end": 5534,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5507,
											"end": 5534,
											"name": "ADD"
										},
										{
											"begin": 5507,
											"end": 5534,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5507,
											"end": 5534,
											"name": "KECCAK256"
										},
										{
											"begin": 5507,
											"end": 5541,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5507,
											"end": 5541,
											"name": "ADD"
										},
										{
											"begin": 5507,
											"end": 5553,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5542,
											"end": 5552,
											"name": "CALLER"
										},
										{
											"begin": 5507,
											"end": 5553,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5507,
											"end": 5553,
											"name": "AND"
										},
										{
											"begin": 5507,
											"end": 5553,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5507,
											"end": 5553,
											"name": "AND"
										},
										{
											"begin": 5507,
											"end": 5553,
											"name": "DUP2"
										},
										{
											"begin": 5507,
											"end": 5553,
											"name": "MSTORE"
										},
										{
											"begin": 5507,
											"end": 5553,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5507,
											"end": 5553,
											"name": "ADD"
										},
										{
											"begin": 5507,
											"end": 5553,
											"name": "SWAP1"
										},
										{
											"begin": 5507,
											"end": 5553,
											"name": "DUP2"
										},
										{
											"begin": 5507,
											"end": 5553,
											"name": "MSTORE"
										},
										{
											"begin": 5507,
											"end": 5553,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5507,
											"end": 5553,
											"name": "ADD"
										},
										{
											"begin": 5507,
											"end": 5553,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5507,
											"end": 5553,
											"name": "KECCAK256"
										},
										{
											"begin": 5507,
											"end": 5553,
											"name": "SLOAD"
										},
										{
											"begin": 5507,
											"end": 5558,
											"name": "EQ"
										},
										{
											"begin": 5503,
											"end": 5620,
											"name": "ISZERO"
										},
										{
											"begin": 5503,
											"end": 5620,
											"name": "PUSH [tag]",
											"value": "143"
										},
										{
											"begin": 5503,
											"end": 5620,
											"name": "JUMPI"
										},
										{
											"begin": 5574,
											"end": 5580,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5574,
											"end": 5592,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5581,
											"end": 5591,
											"name": "DUP4"
										},
										{
											"begin": 5574,
											"end": 5592,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5574,
											"end": 5592,
											"name": "AND"
										},
										{
											"begin": 5574,
											"end": 5592,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5574,
											"end": 5592,
											"name": "AND"
										},
										{
											"begin": 5574,
											"end": 5592,
											"name": "DUP2"
										},
										{
											"begin": 5574,
											"end": 5592,
											"name": "MSTORE"
										},
										{
											"begin": 5574,
											"end": 5592,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5574,
											"end": 5592,
											"name": "ADD"
										},
										{
											"begin": 5574,
											"end": 5592,
											"name": "SWAP1"
										},
										{
											"begin": 5574,
											"end": 5592,
											"name": "DUP2"
										},
										{
											"begin": 5574,
											"end": 5592,
											"name": "MSTORE"
										},
										{
											"begin": 5574,
											"end": 5592,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5574,
											"end": 5592,
											"name": "ADD"
										},
										{
											"begin": 5574,
											"end": 5592,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5574,
											"end": 5592,
											"name": "KECCAK256"
										},
										{
											"begin": 5598,
											"end": 5608,
											"name": "CALLER"
										},
										{
											"begin": 5574,
											"end": 5609,
											"name": "SWAP1"
										},
										{
											"begin": 5574,
											"end": 5609,
											"name": "DUP1"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "SLOAD"
										},
										{
											"begin": 23,
											"end": 41,
											"name": "ADD"
										},
										{
											"begin": 57,
											"end": 67,
											"name": "DUP1"
										},
										{
											"begin": 52,
											"end": 55,
											"name": "DUP3"
										},
										{
											"begin": 45,
											"end": 68,
											"name": "SSTORE"
										},
										{
											"begin": 79,
											"end": 89,
											"name": "DUP1"
										},
										{
											"begin": 72,
											"end": 89,
											"name": "SWAP2"
										},
										{
											"begin": 72,
											"end": 89,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 93,
											"name": "POP"
										},
										{
											"begin": 5574,
											"end": 5609,
											"name": "SWAP1"
										},
										{
											"begin": 5574,
											"end": 5609,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5574,
											"end": 5609,
											"name": "DUP3"
										},
										{
											"begin": 5574,
											"end": 5609,
											"name": "SUB"
										},
										{
											"begin": 5574,
											"end": 5609,
											"name": "SWAP1"
										},
										{
											"begin": 5574,
											"end": 5609,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5574,
											"end": 5609,
											"name": "MSTORE"
										},
										{
											"begin": 5574,
											"end": 5609,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5574,
											"end": 5609,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5574,
											"end": 5609,
											"name": "KECCAK256"
										},
										{
											"begin": 5574,
											"end": 5609,
											"name": "ADD"
										},
										{
											"begin": 5574,
											"end": 5609,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5574,
											"end": 5609,
											"name": "SWAP1"
										},
										{
											"begin": 5574,
											"end": 5609,
											"name": "SWAP2"
										},
										{
											"begin": 5574,
											"end": 5609,
											"name": "SWAP3"
										},
										{
											"begin": 5574,
											"end": 5609,
											"name": "SWAP1"
										},
										{
											"begin": 5574,
											"end": 5609,
											"name": "SWAP2"
										},
										{
											"begin": 5574,
											"end": 5609,
											"name": "SWAP1"
										},
										{
											"begin": 5574,
											"end": 5609,
											"name": "SWAP2"
										},
										{
											"begin": 5574,
											"end": 5609,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5574,
											"end": 5609,
											"name": "EXP"
										},
										{
											"begin": 5574,
											"end": 5609,
											"name": "DUP2"
										},
										{
											"begin": 5574,
											"end": 5609,
											"name": "SLOAD"
										},
										{
											"begin": 5574,
											"end": 5609,
											"name": "DUP2"
										},
										{
											"begin": 5574,
											"end": 5609,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5574,
											"end": 5609,
											"name": "MUL"
										},
										{
											"begin": 5574,
											"end": 5609,
											"name": "NOT"
										},
										{
											"begin": 5574,
											"end": 5609,
											"name": "AND"
										},
										{
											"begin": 5574,
											"end": 5609,
											"name": "SWAP1"
										},
										{
											"begin": 5574,
											"end": 5609,
											"name": "DUP4"
										},
										{
											"begin": 5574,
											"end": 5609,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5574,
											"end": 5609,
											"name": "AND"
										},
										{
											"begin": 5574,
											"end": 5609,
											"name": "MUL"
										},
										{
											"begin": 5574,
											"end": 5609,
											"name": "OR"
										},
										{
											"begin": 5574,
											"end": 5609,
											"name": "SWAP1"
										},
										{
											"begin": 5574,
											"end": 5609,
											"name": "SSTORE"
										},
										{
											"begin": 5574,
											"end": 5609,
											"name": "POP"
										},
										{
											"begin": 5574,
											"end": 5609,
											"name": "POP"
										},
										{
											"begin": 5503,
											"end": 5620,
											"name": "tag",
											"value": "143"
										},
										{
											"begin": 5503,
											"end": 5620,
											"name": "JUMPDEST"
										},
										{
											"begin": 5678,
											"end": 5739,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 5729,
											"end": 5738,
											"name": "CALLVALUE"
										},
										{
											"begin": 5678,
											"end": 5693,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5678,
											"end": 5705,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5694,
											"end": 5704,
											"name": "DUP6"
										},
										{
											"begin": 5678,
											"end": 5705,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5678,
											"end": 5705,
											"name": "AND"
										},
										{
											"begin": 5678,
											"end": 5705,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5678,
											"end": 5705,
											"name": "AND"
										},
										{
											"begin": 5678,
											"end": 5705,
											"name": "DUP2"
										},
										{
											"begin": 5678,
											"end": 5705,
											"name": "MSTORE"
										},
										{
											"begin": 5678,
											"end": 5705,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5678,
											"end": 5705,
											"name": "ADD"
										},
										{
											"begin": 5678,
											"end": 5705,
											"name": "SWAP1"
										},
										{
											"begin": 5678,
											"end": 5705,
											"name": "DUP2"
										},
										{
											"begin": 5678,
											"end": 5705,
											"name": "MSTORE"
										},
										{
											"begin": 5678,
											"end": 5705,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5678,
											"end": 5705,
											"name": "ADD"
										},
										{
											"begin": 5678,
											"end": 5705,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5678,
											"end": 5705,
											"name": "KECCAK256"
										},
										{
											"begin": 5678,
											"end": 5712,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5678,
											"end": 5712,
											"name": "ADD"
										},
										{
											"begin": 5678,
											"end": 5724,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5713,
											"end": 5723,
											"name": "CALLER"
										},
										{
											"begin": 5678,
											"end": 5724,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5678,
											"end": 5724,
											"name": "AND"
										},
										{
											"begin": 5678,
											"end": 5724,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5678,
											"end": 5724,
											"name": "AND"
										},
										{
											"begin": 5678,
											"end": 5724,
											"name": "DUP2"
										},
										{
											"begin": 5678,
											"end": 5724,
											"name": "MSTORE"
										},
										{
											"begin": 5678,
											"end": 5724,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5678,
											"end": 5724,
											"name": "ADD"
										},
										{
											"begin": 5678,
											"end": 5724,
											"name": "SWAP1"
										},
										{
											"begin": 5678,
											"end": 5724,
											"name": "DUP2"
										},
										{
											"begin": 5678,
											"end": 5724,
											"name": "MSTORE"
										},
										{
											"begin": 5678,
											"end": 5724,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5678,
											"end": 5724,
											"name": "ADD"
										},
										{
											"begin": 5678,
											"end": 5724,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5678,
											"end": 5724,
											"name": "KECCAK256"
										},
										{
											"begin": 5678,
											"end": 5724,
											"name": "SLOAD"
										},
										{
											"begin": 5678,
											"end": 5728,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 5678,
											"end": 5728,
											"name": "SWAP1"
										},
										{
											"begin": 5678,
											"end": 5739,
											"name": "SWAP2"
										},
										{
											"begin": 5678,
											"end": 5739,
											"name": "SWAP1"
										},
										{
											"begin": 5678,
											"end": 5739,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5678,
											"end": 5739,
											"name": "AND"
										},
										{
											"begin": 5678,
											"end": 5739,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5678,
											"end": 5739,
											"name": "tag",
											"value": "145"
										},
										{
											"begin": 5678,
											"end": 5739,
											"name": "JUMPDEST"
										},
										{
											"begin": 5629,
											"end": 5644,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5629,
											"end": 5656,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5645,
											"end": 5655,
											"name": "DUP5"
										},
										{
											"begin": 5629,
											"end": 5656,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5629,
											"end": 5656,
											"name": "AND"
										},
										{
											"begin": 5629,
											"end": 5656,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5629,
											"end": 5656,
											"name": "AND"
										},
										{
											"begin": 5629,
											"end": 5656,
											"name": "DUP2"
										},
										{
											"begin": 5629,
											"end": 5656,
											"name": "MSTORE"
										},
										{
											"begin": 5629,
											"end": 5656,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5629,
											"end": 5656,
											"name": "ADD"
										},
										{
											"begin": 5629,
											"end": 5656,
											"name": "SWAP1"
										},
										{
											"begin": 5629,
											"end": 5656,
											"name": "DUP2"
										},
										{
											"begin": 5629,
											"end": 5656,
											"name": "MSTORE"
										},
										{
											"begin": 5629,
											"end": 5656,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5629,
											"end": 5656,
											"name": "ADD"
										},
										{
											"begin": 5629,
											"end": 5656,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5629,
											"end": 5656,
											"name": "KECCAK256"
										},
										{
											"begin": 5629,
											"end": 5663,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5629,
											"end": 5663,
											"name": "ADD"
										},
										{
											"begin": 5629,
											"end": 5675,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5664,
											"end": 5674,
											"name": "CALLER"
										},
										{
											"begin": 5629,
											"end": 5675,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5629,
											"end": 5675,
											"name": "AND"
										},
										{
											"begin": 5629,
											"end": 5675,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5629,
											"end": 5675,
											"name": "AND"
										},
										{
											"begin": 5629,
											"end": 5675,
											"name": "DUP2"
										},
										{
											"begin": 5629,
											"end": 5675,
											"name": "MSTORE"
										},
										{
											"begin": 5629,
											"end": 5675,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5629,
											"end": 5675,
											"name": "ADD"
										},
										{
											"begin": 5629,
											"end": 5675,
											"name": "SWAP1"
										},
										{
											"begin": 5629,
											"end": 5675,
											"name": "DUP2"
										},
										{
											"begin": 5629,
											"end": 5675,
											"name": "MSTORE"
										},
										{
											"begin": 5629,
											"end": 5675,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5629,
											"end": 5675,
											"name": "ADD"
										},
										{
											"begin": 5629,
											"end": 5675,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5629,
											"end": 5675,
											"name": "KECCAK256"
										},
										{
											"begin": 5629,
											"end": 5739,
											"name": "DUP2"
										},
										{
											"begin": 5629,
											"end": 5739,
											"name": "SWAP1"
										},
										{
											"begin": 5629,
											"end": 5739,
											"name": "SSTORE"
										},
										{
											"begin": 5629,
											"end": 5739,
											"name": "POP"
										},
										{
											"begin": 5754,
											"end": 5793,
											"name": "PUSH",
											"value": "66A9138482C99E9BAF08860110EF332CC0C23B4A199A53593D8DB0FC8F96FBFC"
										},
										{
											"begin": 5759,
											"end": 5769,
											"name": "CALLER"
										},
										{
											"begin": 5771,
											"end": 5781,
											"name": "DUP4"
										},
										{
											"begin": 5783,
											"end": 5792,
											"name": "CALLVALUE"
										},
										{
											"begin": 5754,
											"end": 5793,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5754,
											"end": 5793,
											"name": "MLOAD"
										},
										{
											"begin": 5754,
											"end": 5793,
											"name": "DUP1"
										},
										{
											"begin": 5754,
											"end": 5793,
											"name": "DUP5"
										},
										{
											"begin": 5754,
											"end": 5793,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5754,
											"end": 5793,
											"name": "AND"
										},
										{
											"begin": 5754,
											"end": 5793,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5754,
											"end": 5793,
											"name": "AND"
										},
										{
											"begin": 5754,
											"end": 5793,
											"name": "DUP2"
										},
										{
											"begin": 5754,
											"end": 5793,
											"name": "MSTORE"
										},
										{
											"begin": 5754,
											"end": 5793,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5754,
											"end": 5793,
											"name": "ADD"
										},
										{
											"begin": 5754,
											"end": 5793,
											"name": "DUP4"
										},
										{
											"begin": 5754,
											"end": 5793,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5754,
											"end": 5793,
											"name": "AND"
										},
										{
											"begin": 5754,
											"end": 5793,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5754,
											"end": 5793,
											"name": "AND"
										},
										{
											"begin": 5754,
											"end": 5793,
											"name": "DUP2"
										},
										{
											"begin": 5754,
											"end": 5793,
											"name": "MSTORE"
										},
										{
											"begin": 5754,
											"end": 5793,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5754,
											"end": 5793,
											"name": "ADD"
										},
										{
											"begin": 5754,
											"end": 5793,
											"name": "DUP3"
										},
										{
											"begin": 5754,
											"end": 5793,
											"name": "DUP2"
										},
										{
											"begin": 5754,
											"end": 5793,
											"name": "MSTORE"
										},
										{
											"begin": 5754,
											"end": 5793,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5754,
											"end": 5793,
											"name": "ADD"
										},
										{
											"begin": 5754,
											"end": 5793,
											"name": "SWAP4"
										},
										{
											"begin": 5754,
											"end": 5793,
											"name": "POP"
										},
										{
											"begin": 5754,
											"end": 5793,
											"name": "POP"
										},
										{
											"begin": 5754,
											"end": 5793,
											"name": "POP"
										},
										{
											"begin": 5754,
											"end": 5793,
											"name": "POP"
										},
										{
											"begin": 5754,
											"end": 5793,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5754,
											"end": 5793,
											"name": "MLOAD"
										},
										{
											"begin": 5754,
											"end": 5793,
											"name": "DUP1"
										},
										{
											"begin": 5754,
											"end": 5793,
											"name": "SWAP2"
										},
										{
											"begin": 5754,
											"end": 5793,
											"name": "SUB"
										},
										{
											"begin": 5754,
											"end": 5793,
											"name": "SWAP1"
										},
										{
											"begin": 5754,
											"end": 5793,
											"name": "LOG1"
										},
										{
											"begin": 2453,
											"end": 2454,
											"name": "POP"
										},
										{
											"begin": 5303,
											"end": 5800,
											"name": "POP"
										},
										{
											"begin": 5303,
											"end": 5800,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1981,
											"end": 2014,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 1981,
											"end": 2014,
											"name": "JUMPDEST"
										},
										{
											"begin": 1981,
											"end": 2014,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1981,
											"end": 2014,
											"name": "SLOAD"
										},
										{
											"begin": 1981,
											"end": 2014,
											"name": "DUP2"
										},
										{
											"begin": 1981,
											"end": 2014,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2170,
											"end": 2203,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 2170,
											"end": 2203,
											"name": "JUMPDEST"
										},
										{
											"begin": 2170,
											"end": 2203,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 2170,
											"end": 2203,
											"name": "SLOAD"
										},
										{
											"begin": 2170,
											"end": 2203,
											"name": "DUP2"
										},
										{
											"begin": 2170,
											"end": 2203,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7545,
											"end": 8524,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 7545,
											"end": 8524,
											"name": "JUMPDEST"
										},
										{
											"begin": 7756,
											"end": 7765,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7941,
											"end": 7952,
											"name": "DUP1"
										},
										{
											"begin": 8201,
											"end": 8228,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7598,
											"end": 7608,
											"name": "DUP4"
										},
										{
											"begin": 2561,
											"end": 2571,
											"name": "CALLER"
										},
										{
											"begin": 2524,
											"end": 2571,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2524,
											"end": 2571,
											"name": "AND"
										},
										{
											"begin": 2524,
											"end": 2539,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2524,
											"end": 2551,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2540,
											"end": 2550,
											"name": "DUP4"
										},
										{
											"begin": 2524,
											"end": 2551,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2524,
											"end": 2551,
											"name": "AND"
										},
										{
											"begin": 2524,
											"end": 2551,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2524,
											"end": 2551,
											"name": "AND"
										},
										{
											"begin": 2524,
											"end": 2551,
											"name": "DUP2"
										},
										{
											"begin": 2524,
											"end": 2551,
											"name": "MSTORE"
										},
										{
											"begin": 2524,
											"end": 2551,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2524,
											"end": 2551,
											"name": "ADD"
										},
										{
											"begin": 2524,
											"end": 2551,
											"name": "SWAP1"
										},
										{
											"begin": 2524,
											"end": 2551,
											"name": "DUP2"
										},
										{
											"begin": 2524,
											"end": 2551,
											"name": "MSTORE"
										},
										{
											"begin": 2524,
											"end": 2551,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2524,
											"end": 2551,
											"name": "ADD"
										},
										{
											"begin": 2524,
											"end": 2551,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2524,
											"end": 2551,
											"name": "KECCAK256"
										},
										{
											"begin": 2524,
											"end": 2557,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2524,
											"end": 2557,
											"name": "ADD"
										},
										{
											"begin": 2524,
											"end": 2557,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2524,
											"end": 2557,
											"name": "SWAP1"
										},
										{
											"begin": 2524,
											"end": 2557,
											"name": "SLOAD"
										},
										{
											"begin": 2524,
											"end": 2557,
											"name": "SWAP1"
										},
										{
											"begin": 2524,
											"end": 2557,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2524,
											"end": 2557,
											"name": "EXP"
										},
										{
											"begin": 2524,
											"end": 2557,
											"name": "SWAP1"
										},
										{
											"begin": 2524,
											"end": 2557,
											"name": "DIV"
										},
										{
											"begin": 2524,
											"end": 2557,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2524,
											"end": 2557,
											"name": "AND"
										},
										{
											"begin": 2524,
											"end": 2571,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2524,
											"end": 2571,
											"name": "AND"
										},
										{
											"begin": 2524,
											"end": 2571,
											"name": "EQ"
										},
										{
											"begin": 2516,
											"end": 2572,
											"name": "ISZERO"
										},
										{
											"begin": 2516,
											"end": 2572,
											"name": "ISZERO"
										},
										{
											"begin": 2516,
											"end": 2572,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 2516,
											"end": 2572,
											"name": "JUMPI"
										},
										{
											"begin": 2516,
											"end": 2572,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2516,
											"end": 2572,
											"name": "DUP1"
										},
										{
											"begin": 2516,
											"end": 2572,
											"name": "REVERT"
										},
										{
											"begin": 2516,
											"end": 2572,
											"name": "tag",
											"value": "147"
										},
										{
											"begin": 2516,
											"end": 2572,
											"name": "JUMPDEST"
										},
										{
											"begin": 7624,
											"end": 7634,
											"name": "DUP5"
										},
										{
											"begin": 2657,
											"end": 2672,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2657,
											"end": 2684,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2673,
											"end": 2683,
											"name": "DUP3"
										},
										{
											"begin": 2657,
											"end": 2684,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2657,
											"end": 2684,
											"name": "AND"
										},
										{
											"begin": 2657,
											"end": 2684,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2657,
											"end": 2684,
											"name": "AND"
										},
										{
											"begin": 2657,
											"end": 2684,
											"name": "DUP2"
										},
										{
											"begin": 2657,
											"end": 2684,
											"name": "MSTORE"
										},
										{
											"begin": 2657,
											"end": 2684,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2657,
											"end": 2684,
											"name": "ADD"
										},
										{
											"begin": 2657,
											"end": 2684,
											"name": "SWAP1"
										},
										{
											"begin": 2657,
											"end": 2684,
											"name": "DUP2"
										},
										{
											"begin": 2657,
											"end": 2684,
											"name": "MSTORE"
										},
										{
											"begin": 2657,
											"end": 2684,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2657,
											"end": 2684,
											"name": "ADD"
										},
										{
											"begin": 2657,
											"end": 2684,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2657,
											"end": 2684,
											"name": "KECCAK256"
										},
										{
											"begin": 2657,
											"end": 2696,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2657,
											"end": 2696,
											"name": "ADD"
										},
										{
											"begin": 2657,
											"end": 2696,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 2657,
											"end": 2696,
											"name": "SWAP1"
										},
										{
											"begin": 2657,
											"end": 2696,
											"name": "SLOAD"
										},
										{
											"begin": 2657,
											"end": 2696,
											"name": "SWAP1"
										},
										{
											"begin": 2657,
											"end": 2696,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2657,
											"end": 2696,
											"name": "EXP"
										},
										{
											"begin": 2657,
											"end": 2696,
											"name": "SWAP1"
										},
										{
											"begin": 2657,
											"end": 2696,
											"name": "DIV"
										},
										{
											"begin": 2657,
											"end": 2696,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 2657,
											"end": 2696,
											"name": "AND"
										},
										{
											"begin": 2649,
											"end": 2697,
											"name": "ISZERO"
										},
										{
											"begin": 2649,
											"end": 2697,
											"name": "ISZERO"
										},
										{
											"begin": 2649,
											"end": 2697,
											"name": "PUSH [tag]",
											"value": "149"
										},
										{
											"begin": 2649,
											"end": 2697,
											"name": "JUMPI"
										},
										{
											"begin": 2649,
											"end": 2697,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2649,
											"end": 2697,
											"name": "DUP1"
										},
										{
											"begin": 2649,
											"end": 2697,
											"name": "REVERT"
										},
										{
											"begin": 2649,
											"end": 2697,
											"name": "tag",
											"value": "149"
										},
										{
											"begin": 2649,
											"end": 2697,
											"name": "JUMPDEST"
										},
										{
											"begin": 7688,
											"end": 7693,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7646,
											"end": 7661,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 7646,
											"end": 7673,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7662,
											"end": 7672,
											"name": "DUP9"
										},
										{
											"begin": 7646,
											"end": 7673,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7646,
											"end": 7673,
											"name": "AND"
										},
										{
											"begin": 7646,
											"end": 7673,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7646,
											"end": 7673,
											"name": "AND"
										},
										{
											"begin": 7646,
											"end": 7673,
											"name": "DUP2"
										},
										{
											"begin": 7646,
											"end": 7673,
											"name": "MSTORE"
										},
										{
											"begin": 7646,
											"end": 7673,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7646,
											"end": 7673,
											"name": "ADD"
										},
										{
											"begin": 7646,
											"end": 7673,
											"name": "SWAP1"
										},
										{
											"begin": 7646,
											"end": 7673,
											"name": "DUP2"
										},
										{
											"begin": 7646,
											"end": 7673,
											"name": "MSTORE"
										},
										{
											"begin": 7646,
											"end": 7673,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7646,
											"end": 7673,
											"name": "ADD"
										},
										{
											"begin": 7646,
											"end": 7673,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7646,
											"end": 7673,
											"name": "KECCAK256"
										},
										{
											"begin": 7646,
											"end": 7685,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7646,
											"end": 7685,
											"name": "ADD"
										},
										{
											"begin": 7646,
											"end": 7685,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 7646,
											"end": 7693,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 7646,
											"end": 7693,
											"name": "EXP"
										},
										{
											"begin": 7646,
											"end": 7693,
											"name": "DUP2"
										},
										{
											"begin": 7646,
											"end": 7693,
											"name": "SLOAD"
										},
										{
											"begin": 7646,
											"end": 7693,
											"name": "DUP2"
										},
										{
											"begin": 7646,
											"end": 7693,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 7646,
											"end": 7693,
											"name": "MUL"
										},
										{
											"begin": 7646,
											"end": 7693,
											"name": "NOT"
										},
										{
											"begin": 7646,
											"end": 7693,
											"name": "AND"
										},
										{
											"begin": 7646,
											"end": 7693,
											"name": "SWAP1"
										},
										{
											"begin": 7646,
											"end": 7693,
											"name": "DUP4"
										},
										{
											"begin": 7646,
											"end": 7693,
											"name": "ISZERO"
										},
										{
											"begin": 7646,
											"end": 7693,
											"name": "ISZERO"
										},
										{
											"begin": 7646,
											"end": 7693,
											"name": "MUL"
										},
										{
											"begin": 7646,
											"end": 7693,
											"name": "OR"
										},
										{
											"begin": 7646,
											"end": 7693,
											"name": "SWAP1"
										},
										{
											"begin": 7646,
											"end": 7693,
											"name": "SSTORE"
										},
										{
											"begin": 7646,
											"end": 7693,
											"name": "POP"
										},
										{
											"begin": 7720,
											"end": 7741,
											"name": "PUSH [tag]",
											"value": "151"
										},
										{
											"begin": 7739,
											"end": 7740,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 7720,
											"end": 7734,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7720,
											"end": 7734,
											"name": "SLOAD"
										},
										{
											"begin": 7720,
											"end": 7738,
											"name": "PUSH [tag]",
											"value": "104"
										},
										{
											"begin": 7720,
											"end": 7738,
											"name": "SWAP1"
										},
										{
											"begin": 7720,
											"end": 7741,
											"name": "SWAP2"
										},
										{
											"begin": 7720,
											"end": 7741,
											"name": "SWAP1"
										},
										{
											"begin": 7720,
											"end": 7741,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 7720,
											"end": 7741,
											"name": "AND"
										},
										{
											"begin": 7720,
											"end": 7741,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7720,
											"end": 7741,
											"name": "tag",
											"value": "151"
										},
										{
											"begin": 7720,
											"end": 7741,
											"name": "JUMPDEST"
										},
										{
											"begin": 7703,
											"end": 7717,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7703,
											"end": 7741,
											"name": "DUP2"
										},
										{
											"begin": 7703,
											"end": 7741,
											"name": "SWAP1"
										},
										{
											"begin": 7703,
											"end": 7741,
											"name": "SSTORE"
										},
										{
											"begin": 7703,
											"end": 7741,
											"name": "POP"
										},
										{
											"begin": 7768,
											"end": 7769,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7756,
											"end": 7769,
											"name": "SWAP5"
										},
										{
											"begin": 7756,
											"end": 7769,
											"name": "POP"
										},
										{
											"begin": 7751,
											"end": 7932,
											"name": "tag",
											"value": "152"
										},
										{
											"begin": 7751,
											"end": 7932,
											"name": "JUMPDEST"
										},
										{
											"begin": 7775,
											"end": 7785,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 7775,
											"end": 7792,
											"name": "DUP1"
										},
										{
											"begin": 7775,
											"end": 7792,
											"name": "SLOAD"
										},
										{
											"begin": 7775,
											"end": 7792,
											"name": "SWAP1"
										},
										{
											"begin": 7775,
											"end": 7792,
											"name": "POP"
										},
										{
											"begin": 7771,
											"end": 7772,
											"name": "DUP6"
										},
										{
											"begin": 7771,
											"end": 7792,
											"name": "LT"
										},
										{
											"begin": 7751,
											"end": 7932,
											"name": "ISZERO"
										},
										{
											"begin": 7751,
											"end": 7932,
											"name": "PUSH [tag]",
											"value": "153"
										},
										{
											"begin": 7751,
											"end": 7932,
											"name": "JUMPI"
										},
										{
											"begin": 7834,
											"end": 7844,
											"name": "DUP6"
										},
										{
											"begin": 7817,
											"end": 7844,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7817,
											"end": 7844,
											"name": "AND"
										},
										{
											"begin": 7817,
											"end": 7827,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 7828,
											"end": 7829,
											"name": "DUP7"
										},
										{
											"begin": 7817,
											"end": 7830,
											"name": "DUP2"
										},
										{
											"begin": 7817,
											"end": 7830,
											"name": "SLOAD"
										},
										{
											"begin": 7817,
											"end": 7830,
											"name": "DUP2"
										},
										{
											"begin": 7817,
											"end": 7830,
											"name": "LT"
										},
										{
											"begin": 7817,
											"end": 7830,
											"name": "ISZERO"
										},
										{
											"begin": 7817,
											"end": 7830,
											"name": "ISZERO"
										},
										{
											"begin": 7817,
											"end": 7830,
											"name": "PUSH [tag]",
											"value": "155"
										},
										{
											"begin": 7817,
											"end": 7830,
											"name": "JUMPI"
										},
										{
											"begin": 7817,
											"end": 7830,
											"name": "INVALID"
										},
										{
											"begin": 7817,
											"end": 7830,
											"name": "tag",
											"value": "155"
										},
										{
											"begin": 7817,
											"end": 7830,
											"name": "JUMPDEST"
										},
										{
											"begin": 7817,
											"end": 7830,
											"name": "SWAP1"
										},
										{
											"begin": 7817,
											"end": 7830,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7817,
											"end": 7830,
											"name": "MSTORE"
										},
										{
											"begin": 7817,
											"end": 7830,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7817,
											"end": 7830,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7817,
											"end": 7830,
											"name": "KECCAK256"
										},
										{
											"begin": 7817,
											"end": 7830,
											"name": "ADD"
										},
										{
											"begin": 7817,
											"end": 7830,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7817,
											"end": 7830,
											"name": "SWAP1"
										},
										{
											"begin": 7817,
											"end": 7830,
											"name": "SLOAD"
										},
										{
											"begin": 7817,
											"end": 7830,
											"name": "SWAP1"
										},
										{
											"begin": 7817,
											"end": 7830,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 7817,
											"end": 7830,
											"name": "EXP"
										},
										{
											"begin": 7817,
											"end": 7830,
											"name": "SWAP1"
										},
										{
											"begin": 7817,
											"end": 7830,
											"name": "DIV"
										},
										{
											"begin": 7817,
											"end": 7830,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7817,
											"end": 7830,
											"name": "AND"
										},
										{
											"begin": 7817,
											"end": 7844,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7817,
											"end": 7844,
											"name": "AND"
										},
										{
											"begin": 7817,
											"end": 7844,
											"name": "EQ"
										},
										{
											"begin": 7813,
											"end": 7922,
											"name": "ISZERO"
										},
										{
											"begin": 7813,
											"end": 7922,
											"name": "PUSH [tag]",
											"value": "157"
										},
										{
											"begin": 7813,
											"end": 7922,
											"name": "JUMPI"
										},
										{
											"begin": 7871,
											"end": 7881,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 7882,
											"end": 7883,
											"name": "DUP6"
										},
										{
											"begin": 7871,
											"end": 7884,
											"name": "DUP2"
										},
										{
											"begin": 7871,
											"end": 7884,
											"name": "SLOAD"
										},
										{
											"begin": 7871,
											"end": 7884,
											"name": "DUP2"
										},
										{
											"begin": 7871,
											"end": 7884,
											"name": "LT"
										},
										{
											"begin": 7871,
											"end": 7884,
											"name": "ISZERO"
										},
										{
											"begin": 7871,
											"end": 7884,
											"name": "ISZERO"
										},
										{
											"begin": 7871,
											"end": 7884,
											"name": "PUSH [tag]",
											"value": "158"
										},
										{
											"begin": 7871,
											"end": 7884,
											"name": "JUMPI"
										},
										{
											"begin": 7871,
											"end": 7884,
											"name": "INVALID"
										},
										{
											"begin": 7871,
											"end": 7884,
											"name": "tag",
											"value": "158"
										},
										{
											"begin": 7871,
											"end": 7884,
											"name": "JUMPDEST"
										},
										{
											"begin": 7871,
											"end": 7884,
											"name": "SWAP1"
										},
										{
											"begin": 7871,
											"end": 7884,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7871,
											"end": 7884,
											"name": "MSTORE"
										},
										{
											"begin": 7871,
											"end": 7884,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7871,
											"end": 7884,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7871,
											"end": 7884,
											"name": "KECCAK256"
										},
										{
											"begin": 7871,
											"end": 7884,
											"name": "ADD"
										},
										{
											"begin": 7871,
											"end": 7884,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7864,
											"end": 7884,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 7864,
											"end": 7884,
											"name": "EXP"
										},
										{
											"begin": 7864,
											"end": 7884,
											"name": "DUP2"
										},
										{
											"begin": 7864,
											"end": 7884,
											"name": "SLOAD"
										},
										{
											"begin": 7864,
											"end": 7884,
											"name": "SWAP1"
										},
										{
											"begin": 7864,
											"end": 7884,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7864,
											"end": 7884,
											"name": "MUL"
										},
										{
											"begin": 7864,
											"end": 7884,
											"name": "NOT"
										},
										{
											"begin": 7864,
											"end": 7884,
											"name": "AND"
										},
										{
											"begin": 7864,
											"end": 7884,
											"name": "SWAP1"
										},
										{
											"begin": 7864,
											"end": 7884,
											"name": "SSTORE"
										},
										{
											"begin": 7902,
											"end": 7907,
											"name": "PUSH [tag]",
											"value": "153"
										},
										{
											"begin": 7902,
											"end": 7907,
											"name": "JUMP"
										},
										{
											"begin": 7813,
											"end": 7922,
											"name": "tag",
											"value": "157"
										},
										{
											"begin": 7813,
											"end": 7922,
											"name": "JUMPDEST"
										},
										{
											"begin": 7794,
											"end": 7797,
											"name": "DUP5"
										},
										{
											"begin": 7794,
											"end": 7797,
											"name": "DUP1"
										},
										{
											"begin": 7794,
											"end": 7797,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 7794,
											"end": 7797,
											"name": "ADD"
										},
										{
											"begin": 7794,
											"end": 7797,
											"name": "SWAP6"
										},
										{
											"begin": 7794,
											"end": 7797,
											"name": "POP"
										},
										{
											"begin": 7794,
											"end": 7797,
											"name": "POP"
										},
										{
											"begin": 7751,
											"end": 7932,
											"name": "PUSH [tag]",
											"value": "152"
										},
										{
											"begin": 7751,
											"end": 7932,
											"name": "JUMP"
										},
										{
											"begin": 7751,
											"end": 7932,
											"name": "tag",
											"value": "153"
										},
										{
											"begin": 7751,
											"end": 7932,
											"name": "JUMPDEST"
										},
										{
											"begin": 7955,
											"end": 7970,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 7955,
											"end": 7982,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7971,
											"end": 7981,
											"name": "DUP8"
										},
										{
											"begin": 7955,
											"end": 7982,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7955,
											"end": 7982,
											"name": "AND"
										},
										{
											"begin": 7955,
											"end": 7982,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7955,
											"end": 7982,
											"name": "AND"
										},
										{
											"begin": 7955,
											"end": 7982,
											"name": "DUP2"
										},
										{
											"begin": 7955,
											"end": 7982,
											"name": "MSTORE"
										},
										{
											"begin": 7955,
											"end": 7982,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7955,
											"end": 7982,
											"name": "ADD"
										},
										{
											"begin": 7955,
											"end": 7982,
											"name": "SWAP1"
										},
										{
											"begin": 7955,
											"end": 7982,
											"name": "DUP2"
										},
										{
											"begin": 7955,
											"end": 7982,
											"name": "MSTORE"
										},
										{
											"begin": 7955,
											"end": 7982,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7955,
											"end": 7982,
											"name": "ADD"
										},
										{
											"begin": 7955,
											"end": 7982,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7955,
											"end": 7982,
											"name": "KECCAK256"
										},
										{
											"begin": 7955,
											"end": 7989,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 7955,
											"end": 7989,
											"name": "ADD"
										},
										{
											"begin": 7955,
											"end": 8001,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7990,
											"end": 8000,
											"name": "CALLER"
										},
										{
											"begin": 7955,
											"end": 8001,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7955,
											"end": 8001,
											"name": "AND"
										},
										{
											"begin": 7955,
											"end": 8001,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7955,
											"end": 8001,
											"name": "AND"
										},
										{
											"begin": 7955,
											"end": 8001,
											"name": "DUP2"
										},
										{
											"begin": 7955,
											"end": 8001,
											"name": "MSTORE"
										},
										{
											"begin": 7955,
											"end": 8001,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7955,
											"end": 8001,
											"name": "ADD"
										},
										{
											"begin": 7955,
											"end": 8001,
											"name": "SWAP1"
										},
										{
											"begin": 7955,
											"end": 8001,
											"name": "DUP2"
										},
										{
											"begin": 7955,
											"end": 8001,
											"name": "MSTORE"
										},
										{
											"begin": 7955,
											"end": 8001,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7955,
											"end": 8001,
											"name": "ADD"
										},
										{
											"begin": 7955,
											"end": 8001,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7955,
											"end": 8001,
											"name": "KECCAK256"
										},
										{
											"begin": 7955,
											"end": 8001,
											"name": "SLOAD"
										},
										{
											"begin": 7941,
											"end": 8001,
											"name": "SWAP4"
										},
										{
											"begin": 7941,
											"end": 8001,
											"name": "POP"
										},
										{
											"begin": 8045,
											"end": 8085,
											"name": "PUSH [tag]",
											"value": "160"
										},
										{
											"begin": 8081,
											"end": 8084,
											"name": "DUP5"
										},
										{
											"begin": 8045,
											"end": 8060,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 8045,
											"end": 8072,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8061,
											"end": 8071,
											"name": "DUP10"
										},
										{
											"begin": 8045,
											"end": 8072,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8045,
											"end": 8072,
											"name": "AND"
										},
										{
											"begin": 8045,
											"end": 8072,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8045,
											"end": 8072,
											"name": "AND"
										},
										{
											"begin": 8045,
											"end": 8072,
											"name": "DUP2"
										},
										{
											"begin": 8045,
											"end": 8072,
											"name": "MSTORE"
										},
										{
											"begin": 8045,
											"end": 8072,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8045,
											"end": 8072,
											"name": "ADD"
										},
										{
											"begin": 8045,
											"end": 8072,
											"name": "SWAP1"
										},
										{
											"begin": 8045,
											"end": 8072,
											"name": "DUP2"
										},
										{
											"begin": 8045,
											"end": 8072,
											"name": "MSTORE"
										},
										{
											"begin": 8045,
											"end": 8072,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8045,
											"end": 8072,
											"name": "ADD"
										},
										{
											"begin": 8045,
											"end": 8072,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8045,
											"end": 8072,
											"name": "KECCAK256"
										},
										{
											"begin": 8045,
											"end": 8076,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 8045,
											"end": 8076,
											"name": "ADD"
										},
										{
											"begin": 8045,
											"end": 8076,
											"name": "SLOAD"
										},
										{
											"begin": 8045,
											"end": 8080,
											"name": "PUSH [tag]",
											"value": "104"
										},
										{
											"begin": 8045,
											"end": 8080,
											"name": "SWAP1"
										},
										{
											"begin": 8045,
											"end": 8085,
											"name": "SWAP2"
										},
										{
											"begin": 8045,
											"end": 8085,
											"name": "SWAP1"
										},
										{
											"begin": 8045,
											"end": 8085,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8045,
											"end": 8085,
											"name": "AND"
										},
										{
											"begin": 8045,
											"end": 8085,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8045,
											"end": 8085,
											"name": "tag",
											"value": "160"
										},
										{
											"begin": 8045,
											"end": 8085,
											"name": "JUMPDEST"
										},
										{
											"begin": 8011,
											"end": 8026,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 8011,
											"end": 8038,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8027,
											"end": 8037,
											"name": "DUP9"
										},
										{
											"begin": 8011,
											"end": 8038,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8011,
											"end": 8038,
											"name": "AND"
										},
										{
											"begin": 8011,
											"end": 8038,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8011,
											"end": 8038,
											"name": "AND"
										},
										{
											"begin": 8011,
											"end": 8038,
											"name": "DUP2"
										},
										{
											"begin": 8011,
											"end": 8038,
											"name": "MSTORE"
										},
										{
											"begin": 8011,
											"end": 8038,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8011,
											"end": 8038,
											"name": "ADD"
										},
										{
											"begin": 8011,
											"end": 8038,
											"name": "SWAP1"
										},
										{
											"begin": 8011,
											"end": 8038,
											"name": "DUP2"
										},
										{
											"begin": 8011,
											"end": 8038,
											"name": "MSTORE"
										},
										{
											"begin": 8011,
											"end": 8038,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8011,
											"end": 8038,
											"name": "ADD"
										},
										{
											"begin": 8011,
											"end": 8038,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8011,
											"end": 8038,
											"name": "KECCAK256"
										},
										{
											"begin": 8011,
											"end": 8042,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 8011,
											"end": 8042,
											"name": "ADD"
										},
										{
											"begin": 8011,
											"end": 8085,
											"name": "DUP2"
										},
										{
											"begin": 8011,
											"end": 8085,
											"name": "SWAP1"
										},
										{
											"begin": 8011,
											"end": 8085,
											"name": "SSTORE"
										},
										{
											"begin": 8011,
											"end": 8085,
											"name": "POP"
										},
										{
											"begin": 8144,
											"end": 8145,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8095,
											"end": 8110,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 8095,
											"end": 8122,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8111,
											"end": 8121,
											"name": "DUP9"
										},
										{
											"begin": 8095,
											"end": 8122,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8095,
											"end": 8122,
											"name": "AND"
										},
										{
											"begin": 8095,
											"end": 8122,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8095,
											"end": 8122,
											"name": "AND"
										},
										{
											"begin": 8095,
											"end": 8122,
											"name": "DUP2"
										},
										{
											"begin": 8095,
											"end": 8122,
											"name": "MSTORE"
										},
										{
											"begin": 8095,
											"end": 8122,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8095,
											"end": 8122,
											"name": "ADD"
										},
										{
											"begin": 8095,
											"end": 8122,
											"name": "SWAP1"
										},
										{
											"begin": 8095,
											"end": 8122,
											"name": "DUP2"
										},
										{
											"begin": 8095,
											"end": 8122,
											"name": "MSTORE"
										},
										{
											"begin": 8095,
											"end": 8122,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8095,
											"end": 8122,
											"name": "ADD"
										},
										{
											"begin": 8095,
											"end": 8122,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8095,
											"end": 8122,
											"name": "KECCAK256"
										},
										{
											"begin": 8095,
											"end": 8129,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 8095,
											"end": 8129,
											"name": "ADD"
										},
										{
											"begin": 8095,
											"end": 8141,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8130,
											"end": 8140,
											"name": "CALLER"
										},
										{
											"begin": 8095,
											"end": 8141,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8095,
											"end": 8141,
											"name": "AND"
										},
										{
											"begin": 8095,
											"end": 8141,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8095,
											"end": 8141,
											"name": "AND"
										},
										{
											"begin": 8095,
											"end": 8141,
											"name": "DUP2"
										},
										{
											"begin": 8095,
											"end": 8141,
											"name": "MSTORE"
										},
										{
											"begin": 8095,
											"end": 8141,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8095,
											"end": 8141,
											"name": "ADD"
										},
										{
											"begin": 8095,
											"end": 8141,
											"name": "SWAP1"
										},
										{
											"begin": 8095,
											"end": 8141,
											"name": "DUP2"
										},
										{
											"begin": 8095,
											"end": 8141,
											"name": "MSTORE"
										},
										{
											"begin": 8095,
											"end": 8141,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8095,
											"end": 8141,
											"name": "ADD"
										},
										{
											"begin": 8095,
											"end": 8141,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8095,
											"end": 8141,
											"name": "KECCAK256"
										},
										{
											"begin": 8095,
											"end": 8145,
											"name": "DUP2"
										},
										{
											"begin": 8095,
											"end": 8145,
											"name": "SWAP1"
										},
										{
											"begin": 8095,
											"end": 8145,
											"name": "SSTORE"
										},
										{
											"begin": 8095,
											"end": 8145,
											"name": "POP"
										},
										{
											"begin": 8231,
											"end": 8271,
											"name": "PUSH [tag]",
											"value": "161"
										},
										{
											"begin": 8258,
											"end": 8270,
											"name": "NUMBER"
										},
										{
											"begin": 8231,
											"end": 8253,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 8231,
											"end": 8253,
											"name": "SLOAD"
										},
										{
											"begin": 8231,
											"end": 8257,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 8231,
											"end": 8257,
											"name": "SWAP1"
										},
										{
											"begin": 8231,
											"end": 8271,
											"name": "SWAP2"
										},
										{
											"begin": 8231,
											"end": 8271,
											"name": "SWAP1"
										},
										{
											"begin": 8231,
											"end": 8271,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8231,
											"end": 8271,
											"name": "AND"
										},
										{
											"begin": 8231,
											"end": 8271,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8231,
											"end": 8271,
											"name": "tag",
											"value": "161"
										},
										{
											"begin": 8231,
											"end": 8271,
											"name": "JUMPDEST"
										},
										{
											"begin": 8201,
											"end": 8271,
											"name": "SWAP3"
										},
										{
											"begin": 8201,
											"end": 8271,
											"name": "POP"
										},
										{
											"begin": 8336,
											"end": 8397,
											"name": "PUSH [tag]",
											"value": "162"
										},
										{
											"begin": 8393,
											"end": 8396,
											"name": "DUP5"
										},
										{
											"begin": 8336,
											"end": 8350,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8336,
											"end": 8362,
											"name": "DUP1"
										},
										{
											"begin": 8351,
											"end": 8361,
											"name": "CALLER"
										},
										{
											"begin": 8336,
											"end": 8362,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8336,
											"end": 8362,
											"name": "AND"
										},
										{
											"begin": 8336,
											"end": 8362,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8336,
											"end": 8362,
											"name": "AND"
										},
										{
											"begin": 8336,
											"end": 8362,
											"name": "DUP2"
										},
										{
											"begin": 8336,
											"end": 8362,
											"name": "MSTORE"
										},
										{
											"begin": 8336,
											"end": 8362,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8336,
											"end": 8362,
											"name": "ADD"
										},
										{
											"begin": 8336,
											"end": 8362,
											"name": "SWAP1"
										},
										{
											"begin": 8336,
											"end": 8362,
											"name": "DUP2"
										},
										{
											"begin": 8336,
											"end": 8362,
											"name": "MSTORE"
										},
										{
											"begin": 8336,
											"end": 8362,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8336,
											"end": 8362,
											"name": "ADD"
										},
										{
											"begin": 8336,
											"end": 8362,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8336,
											"end": 8362,
											"name": "KECCAK256"
										},
										{
											"begin": 8336,
											"end": 8367,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8336,
											"end": 8367,
											"name": "ADD"
										},
										{
											"begin": 8336,
											"end": 8388,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8368,
											"end": 8387,
											"name": "DUP7"
										},
										{
											"begin": 8336,
											"end": 8388,
											"name": "DUP2"
										},
										{
											"begin": 8336,
											"end": 8388,
											"name": "MSTORE"
										},
										{
											"begin": 8336,
											"end": 8388,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8336,
											"end": 8388,
											"name": "ADD"
										},
										{
											"begin": 8336,
											"end": 8388,
											"name": "SWAP1"
										},
										{
											"begin": 8336,
											"end": 8388,
											"name": "DUP2"
										},
										{
											"begin": 8336,
											"end": 8388,
											"name": "MSTORE"
										},
										{
											"begin": 8336,
											"end": 8388,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8336,
											"end": 8388,
											"name": "ADD"
										},
										{
											"begin": 8336,
											"end": 8388,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8336,
											"end": 8388,
											"name": "KECCAK256"
										},
										{
											"begin": 8336,
											"end": 8388,
											"name": "SLOAD"
										},
										{
											"begin": 8336,
											"end": 8392,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 8336,
											"end": 8392,
											"name": "SWAP1"
										},
										{
											"begin": 8336,
											"end": 8397,
											"name": "SWAP2"
										},
										{
											"begin": 8336,
											"end": 8397,
											"name": "SWAP1"
										},
										{
											"begin": 8336,
											"end": 8397,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8336,
											"end": 8397,
											"name": "AND"
										},
										{
											"begin": 8336,
											"end": 8397,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8336,
											"end": 8397,
											"name": "tag",
											"value": "162"
										},
										{
											"begin": 8336,
											"end": 8397,
											"name": "JUMPDEST"
										},
										{
											"begin": 8281,
											"end": 8295,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8281,
											"end": 8307,
											"name": "DUP1"
										},
										{
											"begin": 8296,
											"end": 8306,
											"name": "CALLER"
										},
										{
											"begin": 8281,
											"end": 8307,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8281,
											"end": 8307,
											"name": "AND"
										},
										{
											"begin": 8281,
											"end": 8307,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8281,
											"end": 8307,
											"name": "AND"
										},
										{
											"begin": 8281,
											"end": 8307,
											"name": "DUP2"
										},
										{
											"begin": 8281,
											"end": 8307,
											"name": "MSTORE"
										},
										{
											"begin": 8281,
											"end": 8307,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8281,
											"end": 8307,
											"name": "ADD"
										},
										{
											"begin": 8281,
											"end": 8307,
											"name": "SWAP1"
										},
										{
											"begin": 8281,
											"end": 8307,
											"name": "DUP2"
										},
										{
											"begin": 8281,
											"end": 8307,
											"name": "MSTORE"
										},
										{
											"begin": 8281,
											"end": 8307,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8281,
											"end": 8307,
											"name": "ADD"
										},
										{
											"begin": 8281,
											"end": 8307,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8281,
											"end": 8307,
											"name": "KECCAK256"
										},
										{
											"begin": 8281,
											"end": 8312,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8281,
											"end": 8312,
											"name": "ADD"
										},
										{
											"begin": 8281,
											"end": 8333,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8313,
											"end": 8332,
											"name": "DUP6"
										},
										{
											"begin": 8281,
											"end": 8333,
											"name": "DUP2"
										},
										{
											"begin": 8281,
											"end": 8333,
											"name": "MSTORE"
										},
										{
											"begin": 8281,
											"end": 8333,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8281,
											"end": 8333,
											"name": "ADD"
										},
										{
											"begin": 8281,
											"end": 8333,
											"name": "SWAP1"
										},
										{
											"begin": 8281,
											"end": 8333,
											"name": "DUP2"
										},
										{
											"begin": 8281,
											"end": 8333,
											"name": "MSTORE"
										},
										{
											"begin": 8281,
											"end": 8333,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8281,
											"end": 8333,
											"name": "ADD"
										},
										{
											"begin": 8281,
											"end": 8333,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8281,
											"end": 8333,
											"name": "KECCAK256"
										},
										{
											"begin": 8281,
											"end": 8397,
											"name": "DUP2"
										},
										{
											"begin": 8281,
											"end": 8397,
											"name": "SWAP1"
										},
										{
											"begin": 8281,
											"end": 8397,
											"name": "SSTORE"
										},
										{
											"begin": 8281,
											"end": 8397,
											"name": "POP"
										},
										{
											"begin": 8407,
											"end": 8421,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8407,
											"end": 8433,
											"name": "DUP1"
										},
										{
											"begin": 8422,
											"end": 8432,
											"name": "CALLER"
										},
										{
											"begin": 8407,
											"end": 8433,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8407,
											"end": 8433,
											"name": "AND"
										},
										{
											"begin": 8407,
											"end": 8433,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8407,
											"end": 8433,
											"name": "AND"
										},
										{
											"begin": 8407,
											"end": 8433,
											"name": "DUP2"
										},
										{
											"begin": 8407,
											"end": 8433,
											"name": "MSTORE"
										},
										{
											"begin": 8407,
											"end": 8433,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8407,
											"end": 8433,
											"name": "ADD"
										},
										{
											"begin": 8407,
											"end": 8433,
											"name": "SWAP1"
										},
										{
											"begin": 8407,
											"end": 8433,
											"name": "DUP2"
										},
										{
											"begin": 8407,
											"end": 8433,
											"name": "MSTORE"
										},
										{
											"begin": 8407,
											"end": 8433,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8407,
											"end": 8433,
											"name": "ADD"
										},
										{
											"begin": 8407,
											"end": 8433,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8407,
											"end": 8433,
											"name": "KECCAK256"
										},
										{
											"begin": 8407,
											"end": 8446,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 8407,
											"end": 8446,
											"name": "ADD"
										},
										{
											"begin": 8452,
											"end": 8471,
											"name": "DUP4"
										},
										{
											"begin": 8407,
											"end": 8472,
											"name": "SWAP1"
										},
										{
											"begin": 8407,
											"end": 8472,
											"name": "DUP1"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "SLOAD"
										},
										{
											"begin": 23,
											"end": 41,
											"name": "ADD"
										},
										{
											"begin": 57,
											"end": 67,
											"name": "DUP1"
										},
										{
											"begin": 52,
											"end": 55,
											"name": "DUP3"
										},
										{
											"begin": 45,
											"end": 68,
											"name": "SSTORE"
										},
										{
											"begin": 79,
											"end": 89,
											"name": "DUP1"
										},
										{
											"begin": 72,
											"end": 89,
											"name": "SWAP2"
										},
										{
											"begin": 72,
											"end": 89,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 93,
											"name": "POP"
										},
										{
											"begin": 8407,
											"end": 8472,
											"name": "SWAP1"
										},
										{
											"begin": 8407,
											"end": 8472,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 8407,
											"end": 8472,
											"name": "DUP3"
										},
										{
											"begin": 8407,
											"end": 8472,
											"name": "SUB"
										},
										{
											"begin": 8407,
											"end": 8472,
											"name": "SWAP1"
										},
										{
											"begin": 8407,
											"end": 8472,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8407,
											"end": 8472,
											"name": "MSTORE"
										},
										{
											"begin": 8407,
											"end": 8472,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8407,
											"end": 8472,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8407,
											"end": 8472,
											"name": "KECCAK256"
										},
										{
											"begin": 8407,
											"end": 8472,
											"name": "ADD"
										},
										{
											"begin": 8407,
											"end": 8472,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8407,
											"end": 8472,
											"name": "SWAP1"
										},
										{
											"begin": 8407,
											"end": 8472,
											"name": "SWAP2"
										},
										{
											"begin": 8407,
											"end": 8472,
											"name": "SWAP3"
										},
										{
											"begin": 8407,
											"end": 8472,
											"name": "SWAP1"
										},
										{
											"begin": 8407,
											"end": 8472,
											"name": "SWAP2"
										},
										{
											"begin": 8407,
											"end": 8472,
											"name": "SWAP1"
										},
										{
											"begin": 8407,
											"end": 8472,
											"name": "SWAP2"
										},
										{
											"begin": 8407,
											"end": 8472,
											"name": "POP"
										},
										{
											"begin": 8407,
											"end": 8472,
											"name": "SSTORE"
										},
										{
											"begin": 8407,
											"end": 8472,
											"name": "POP"
										},
										{
											"begin": 8487,
											"end": 8517,
											"name": "PUSH",
											"value": "4EDF3E325D0063213A39F9085522994A1C44BEA5F39E7D63EF61260A1E58C6D3"
										},
										{
											"begin": 8494,
											"end": 8504,
											"name": "CALLER"
										},
										{
											"begin": 8506,
											"end": 8516,
											"name": "DUP8"
										},
										{
											"begin": 8487,
											"end": 8517,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8487,
											"end": 8517,
											"name": "MLOAD"
										},
										{
											"begin": 8487,
											"end": 8517,
											"name": "DUP1"
										},
										{
											"begin": 8487,
											"end": 8517,
											"name": "DUP4"
										},
										{
											"begin": 8487,
											"end": 8517,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8487,
											"end": 8517,
											"name": "AND"
										},
										{
											"begin": 8487,
											"end": 8517,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8487,
											"end": 8517,
											"name": "AND"
										},
										{
											"begin": 8487,
											"end": 8517,
											"name": "DUP2"
										},
										{
											"begin": 8487,
											"end": 8517,
											"name": "MSTORE"
										},
										{
											"begin": 8487,
											"end": 8517,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8487,
											"end": 8517,
											"name": "ADD"
										},
										{
											"begin": 8487,
											"end": 8517,
											"name": "DUP3"
										},
										{
											"begin": 8487,
											"end": 8517,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8487,
											"end": 8517,
											"name": "AND"
										},
										{
											"begin": 8487,
											"end": 8517,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8487,
											"end": 8517,
											"name": "AND"
										},
										{
											"begin": 8487,
											"end": 8517,
											"name": "DUP2"
										},
										{
											"begin": 8487,
											"end": 8517,
											"name": "MSTORE"
										},
										{
											"begin": 8487,
											"end": 8517,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8487,
											"end": 8517,
											"name": "ADD"
										},
										{
											"begin": 8487,
											"end": 8517,
											"name": "SWAP3"
										},
										{
											"begin": 8487,
											"end": 8517,
											"name": "POP"
										},
										{
											"begin": 8487,
											"end": 8517,
											"name": "POP"
										},
										{
											"begin": 8487,
											"end": 8517,
											"name": "POP"
										},
										{
											"begin": 8487,
											"end": 8517,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8487,
											"end": 8517,
											"name": "MLOAD"
										},
										{
											"begin": 8487,
											"end": 8517,
											"name": "DUP1"
										},
										{
											"begin": 8487,
											"end": 8517,
											"name": "SWAP2"
										},
										{
											"begin": 8487,
											"end": 8517,
											"name": "SUB"
										},
										{
											"begin": 8487,
											"end": 8517,
											"name": "SWAP1"
										},
										{
											"begin": 8487,
											"end": 8517,
											"name": "LOG1"
										},
										{
											"begin": 2582,
											"end": 2583,
											"name": "POP"
										},
										{
											"begin": 7545,
											"end": 8524,
											"name": "POP"
										},
										{
											"begin": 7545,
											"end": 8524,
											"name": "POP"
										},
										{
											"begin": 7545,
											"end": 8524,
											"name": "POP"
										},
										{
											"begin": 7545,
											"end": 8524,
											"name": "POP"
										},
										{
											"begin": 7545,
											"end": 8524,
											"name": "POP"
										},
										{
											"begin": 7545,
											"end": 8524,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 6037,
											"end": 6170,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 6037,
											"end": 6170,
											"name": "JUMPDEST"
										},
										{
											"begin": 6104,
											"end": 6111,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6130,
											"end": 6145,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6130,
											"end": 6157,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6146,
											"end": 6156,
											"name": "DUP4"
										},
										{
											"begin": 6130,
											"end": 6157,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6130,
											"end": 6157,
											"name": "AND"
										},
										{
											"begin": 6130,
											"end": 6157,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6130,
											"end": 6157,
											"name": "AND"
										},
										{
											"begin": 6130,
											"end": 6157,
											"name": "DUP2"
										},
										{
											"begin": 6130,
											"end": 6157,
											"name": "MSTORE"
										},
										{
											"begin": 6130,
											"end": 6157,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6130,
											"end": 6157,
											"name": "ADD"
										},
										{
											"begin": 6130,
											"end": 6157,
											"name": "SWAP1"
										},
										{
											"begin": 6130,
											"end": 6157,
											"name": "DUP2"
										},
										{
											"begin": 6130,
											"end": 6157,
											"name": "MSTORE"
										},
										{
											"begin": 6130,
											"end": 6157,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6130,
											"end": 6157,
											"name": "ADD"
										},
										{
											"begin": 6130,
											"end": 6157,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6130,
											"end": 6157,
											"name": "KECCAK256"
										},
										{
											"begin": 6130,
											"end": 6163,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6130,
											"end": 6163,
											"name": "ADD"
										},
										{
											"begin": 6130,
											"end": 6163,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6130,
											"end": 6163,
											"name": "SWAP1"
										},
										{
											"begin": 6130,
											"end": 6163,
											"name": "SLOAD"
										},
										{
											"begin": 6130,
											"end": 6163,
											"name": "SWAP1"
										},
										{
											"begin": 6130,
											"end": 6163,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 6130,
											"end": 6163,
											"name": "EXP"
										},
										{
											"begin": 6130,
											"end": 6163,
											"name": "SWAP1"
										},
										{
											"begin": 6130,
											"end": 6163,
											"name": "DIV"
										},
										{
											"begin": 6130,
											"end": 6163,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6130,
											"end": 6163,
											"name": "AND"
										},
										{
											"begin": 6123,
											"end": 6163,
											"name": "SWAP1"
										},
										{
											"begin": 6123,
											"end": 6163,
											"name": "POP"
										},
										{
											"begin": 6037,
											"end": 6170,
											"name": "SWAP2"
										},
										{
											"begin": 6037,
											"end": 6170,
											"name": "SWAP1"
										},
										{
											"begin": 6037,
											"end": 6170,
											"name": "POP"
										},
										{
											"begin": 6037,
											"end": 6170,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2088,
											"end": 2121,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 2088,
											"end": 2121,
											"name": "JUMPDEST"
										},
										{
											"begin": 2088,
											"end": 2121,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 2088,
											"end": 2121,
											"name": "SLOAD"
										},
										{
											"begin": 2088,
											"end": 2121,
											"name": "DUP2"
										},
										{
											"begin": 2088,
											"end": 2121,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2127,
											"end": 2164,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 2127,
											"end": 2164,
											"name": "JUMPDEST"
										},
										{
											"begin": 2127,
											"end": 2164,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 2127,
											"end": 2164,
											"name": "SLOAD"
										},
										{
											"begin": 2127,
											"end": 2164,
											"name": "DUP2"
										},
										{
											"begin": 2127,
											"end": 2164,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 6452,
											"end": 6582,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 6452,
											"end": 6582,
											"name": "JUMPDEST"
										},
										{
											"begin": 6513,
											"end": 6517,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6536,
											"end": 6551,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6536,
											"end": 6563,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6552,
											"end": 6562,
											"name": "DUP4"
										},
										{
											"begin": 6536,
											"end": 6563,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6536,
											"end": 6563,
											"name": "AND"
										},
										{
											"begin": 6536,
											"end": 6563,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6536,
											"end": 6563,
											"name": "AND"
										},
										{
											"begin": 6536,
											"end": 6563,
											"name": "DUP2"
										},
										{
											"begin": 6536,
											"end": 6563,
											"name": "MSTORE"
										},
										{
											"begin": 6536,
											"end": 6563,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6536,
											"end": 6563,
											"name": "ADD"
										},
										{
											"begin": 6536,
											"end": 6563,
											"name": "SWAP1"
										},
										{
											"begin": 6536,
											"end": 6563,
											"name": "DUP2"
										},
										{
											"begin": 6536,
											"end": 6563,
											"name": "MSTORE"
										},
										{
											"begin": 6536,
											"end": 6563,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6536,
											"end": 6563,
											"name": "ADD"
										},
										{
											"begin": 6536,
											"end": 6563,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6536,
											"end": 6563,
											"name": "KECCAK256"
										},
										{
											"begin": 6536,
											"end": 6575,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6536,
											"end": 6575,
											"name": "ADD"
										},
										{
											"begin": 6536,
											"end": 6575,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 6536,
											"end": 6575,
											"name": "SWAP1"
										},
										{
											"begin": 6536,
											"end": 6575,
											"name": "SLOAD"
										},
										{
											"begin": 6536,
											"end": 6575,
											"name": "SWAP1"
										},
										{
											"begin": 6536,
											"end": 6575,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 6536,
											"end": 6575,
											"name": "EXP"
										},
										{
											"begin": 6536,
											"end": 6575,
											"name": "SWAP1"
										},
										{
											"begin": 6536,
											"end": 6575,
											"name": "DIV"
										},
										{
											"begin": 6536,
											"end": 6575,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 6536,
											"end": 6575,
											"name": "AND"
										},
										{
											"begin": 6529,
											"end": 6575,
											"name": "SWAP1"
										},
										{
											"begin": 6529,
											"end": 6575,
											"name": "POP"
										},
										{
											"begin": 6452,
											"end": 6582,
											"name": "SWAP2"
										},
										{
											"begin": 6452,
											"end": 6582,
											"name": "SWAP1"
										},
										{
											"begin": 6452,
											"end": 6582,
											"name": "POP"
										},
										{
											"begin": 6452,
											"end": 6582,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "JUMPDEST"
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "SLOAD"
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "DUP2"
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2056,
											"end": 2082,
											"name": "tag",
											"value": "88"
										},
										{
											"begin": 2056,
											"end": 2082,
											"name": "JUMPDEST"
										},
										{
											"begin": 2056,
											"end": 2082,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 2056,
											"end": 2082,
											"name": "SLOAD"
										},
										{
											"begin": 2056,
											"end": 2082,
											"name": "DUP2"
										},
										{
											"begin": 2056,
											"end": 2082,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1014,
											"end": 1143,
											"name": "tag",
											"value": "95"
										},
										{
											"begin": 1014,
											"end": 1143,
											"name": "JUMPDEST"
										},
										{
											"begin": 1072,
											"end": 1079,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1087,
											"end": 1096,
											"name": "DUP1"
										},
										{
											"begin": 1103,
											"end": 1104,
											"name": "DUP3"
										},
										{
											"begin": 1099,
											"end": 1100,
											"name": "DUP5"
										},
										{
											"begin": 1099,
											"end": 1104,
											"name": "ADD"
										},
										{
											"begin": 1087,
											"end": 1104,
											"name": "SWAP1"
										},
										{
											"begin": 1087,
											"end": 1104,
											"name": "POP"
										},
										{
											"begin": 1122,
											"end": 1123,
											"name": "DUP4"
										},
										{
											"begin": 1117,
											"end": 1118,
											"name": "DUP2"
										},
										{
											"begin": 1117,
											"end": 1123,
											"name": "LT"
										},
										{
											"begin": 1117,
											"end": 1123,
											"name": "ISZERO"
										},
										{
											"begin": 1110,
											"end": 1124,
											"name": "ISZERO"
										},
										{
											"begin": 1110,
											"end": 1124,
											"name": "ISZERO"
										},
										{
											"begin": 1110,
											"end": 1124,
											"name": "PUSH [tag]",
											"value": "167"
										},
										{
											"begin": 1110,
											"end": 1124,
											"name": "JUMPI"
										},
										{
											"begin": 1110,
											"end": 1124,
											"name": "INVALID"
										},
										{
											"begin": 1110,
											"end": 1124,
											"name": "tag",
											"value": "167"
										},
										{
											"begin": 1110,
											"end": 1124,
											"name": "JUMPDEST"
										},
										{
											"begin": 1137,
											"end": 1138,
											"name": "DUP1"
										},
										{
											"begin": 1130,
											"end": 1138,
											"name": "SWAP2"
										},
										{
											"begin": 1130,
											"end": 1138,
											"name": "POP"
										},
										{
											"begin": 1014,
											"end": 1143,
											"name": "POP"
										},
										{
											"begin": 1014,
											"end": 1143,
											"name": "SWAP3"
										},
										{
											"begin": 1014,
											"end": 1143,
											"name": "SWAP2"
										},
										{
											"begin": 1014,
											"end": 1143,
											"name": "POP"
										},
										{
											"begin": 1014,
											"end": 1143,
											"name": "POP"
										},
										{
											"begin": 1014,
											"end": 1143,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 842,
											"end": 952,
											"name": "tag",
											"value": "104"
										},
										{
											"begin": 842,
											"end": 952,
											"name": "JUMPDEST"
										},
										{
											"begin": 900,
											"end": 907,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 927,
											"end": 928,
											"name": "DUP3"
										},
										{
											"begin": 922,
											"end": 923,
											"name": "DUP3"
										},
										{
											"begin": 922,
											"end": 928,
											"name": "GT"
										},
										{
											"begin": 922,
											"end": 928,
											"name": "ISZERO"
										},
										{
											"begin": 915,
											"end": 929,
											"name": "ISZERO"
										},
										{
											"begin": 915,
											"end": 929,
											"name": "ISZERO"
										},
										{
											"begin": 915,
											"end": 929,
											"name": "PUSH [tag]",
											"value": "169"
										},
										{
											"begin": 915,
											"end": 929,
											"name": "JUMPI"
										},
										{
											"begin": 915,
											"end": 929,
											"name": "INVALID"
										},
										{
											"begin": 915,
											"end": 929,
											"name": "tag",
											"value": "169"
										},
										{
											"begin": 915,
											"end": 929,
											"name": "JUMPDEST"
										},
										{
											"begin": 946,
											"end": 947,
											"name": "DUP2"
										},
										{
											"begin": 942,
											"end": 943,
											"name": "DUP4"
										},
										{
											"begin": 942,
											"end": 947,
											"name": "SUB"
										},
										{
											"begin": 935,
											"end": 947,
											"name": "SWAP1"
										},
										{
											"begin": 935,
											"end": 947,
											"name": "POP"
										},
										{
											"begin": 842,
											"end": 952,
											"name": "SWAP3"
										},
										{
											"begin": 842,
											"end": 952,
											"name": "SWAP2"
										},
										{
											"begin": 842,
											"end": 952,
											"name": "POP"
										},
										{
											"begin": 842,
											"end": 952,
											"name": "POP"
										},
										{
											"begin": 842,
											"end": 952,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"candidateCount()": "a9a981a3",
							"candidateWithdrawDelay()": "d161c767",
							"candidates(uint256)": "3477ee2e",
							"getCandidateCap(address)": "58e7525f",
							"getCandidateOwner(address)": "b642facd",
							"getCandidates()": "06a49fce",
							"getVoterCap(address,address)": "302b6872",
							"getVoters(address)": "2d15cc04",
							"getWithdrawBlockNumbers()": "2f9c4bba",
							"getWithdrawCap(uint256)": "15febd68",
							"isCandidate(address)": "d51b9e93",
							"maxValidatorNumber()": "d09f1ab4",
							"minCandidateCap()": "d55b7dff",
							"minVoterCap()": "f8ac9dd5",
							"propose(address)": "01267951",
							"resign(address)": "ae6e43f5",
							"unvote(address,uint256)": "02aa9be2",
							"vote(address)": "6dd7d8ea",
							"voterWithdrawDelay()": "a9ff959e",
							"withdraw(uint256,uint256)": "441a3e70"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_candidate\",\"type\":\"address\"}],\"name\":\"propose\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_candidate\",\"type\":\"address\"},{\"name\":\"_cap\",\"type\":\"uint256\"}],\"name\":\"unvote\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCandidates\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"getWithdrawCap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_candidate\",\"type\":\"address\"}],\"name\":\"getVoters\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getWithdrawBlockNumbers\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_candidate\",\"type\":\"address\"},{\"name\":\"_voter\",\"type\":\"address\"}],\"name\":\"getVoterCap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"candidates\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_blockNumber\",\"type\":\"uint256\"},{\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_candidate\",\"type\":\"address\"}],\"name\":\"getCandidateCap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_candidate\",\"type\":\"address\"}],\"name\":\"vote\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"candidateCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"voterWithdrawDelay\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_candidate\",\"type\":\"address\"}],\"name\":\"resign\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_candidate\",\"type\":\"address\"}],\"name\":\"getCandidateOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxValidatorNumber\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"candidateWithdrawDelay\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_candidate\",\"type\":\"address\"}],\"name\":\"isCandidate\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minCandidateCap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minVoterCap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_candidates\",\"type\":\"address[]\"},{\"name\":\"_caps\",\"type\":\"uint256[]\"},{\"name\":\"_firstOwner\",\"type\":\"address\"},{\"name\":\"_minCandidateCap\",\"type\":\"uint256\"},{\"name\":\"_minVoterCap\",\"type\":\"uint256\"},{\"name\":\"_maxValidatorNumber\",\"type\":\"uint256\"},{\"name\":\"_candidateWithdrawDelay\",\"type\":\"uint256\"},{\"name\":\"_voterWithdrawDelay\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_voter\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_candidate\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_cap\",\"type\":\"uint256\"}],\"name\":\"Vote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_voter\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_candidate\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_cap\",\"type\":\"uint256\"}],\"name\":\"Unvote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_candidate\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_cap\",\"type\":\"uint256\"}],\"name\":\"Propose\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_candidate\",\"type\":\"address\"}],\"name\":\"Resign\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_blockNumber\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_cap\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/ss.sol\":\"WethioValidator\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ss.sol\":{\"keccak256\":\"0xc2a58f09227223ef1739da1a912ccf24e184c06df440a118ae2ed4ebbb7edb5d\",\"urls\":[\"bzzr://b129a3f6ac3ea53f5ccac2b419895fc5ecb63132367ccbafd4803bd6ef8231bb\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"formattedMessage": "contracts/ss.sol:131:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead.\n    function WethioValidator (\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead.",
				"severity": "warning",
				"sourceLocation": {
					"end": 4652,
					"file": "contracts/ss.sol",
					"start": 3627
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/ss.sol": {
				"ast": {
					"absolutePath": "contracts/ss.sol",
					"exportedSymbols": {
						"SafeMath": [
							93
						],
						"WethioValidator": [
							982
						]
					},
					"id": 983,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@title SafeMath\n@dev Math operations with safety checks that throw on error",
							"fullyImplemented": true,
							"id": 93,
							"linearizedBaseContracts": [
								93
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 33,
										"nodeType": "Block",
										"src": "270:106:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 12,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 10,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "280:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 11,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "285:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "280:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 16,
												"nodeType": "IfStatement",
												"src": "276:35:0",
												"trueBody": {
													"id": 15,
													"nodeType": "Block",
													"src": "288:23:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 13,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "303:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 9,
															"id": 14,
															"nodeType": "Return",
															"src": "296:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													18
												],
												"declarations": [
													{
														"constant": false,
														"id": 18,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 34,
														"src": "316:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 17,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "316:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 22,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 21,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 19,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "328:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 20,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "332:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "328:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "316:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 28,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 26,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 24,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "346:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 25,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "350:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "346:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 27,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "355:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "346:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 23,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 986,
														"src": "339:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 29,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "339:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 30,
												"nodeType": "ExpressionStatement",
												"src": "339:18:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 31,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 18,
													"src": "370:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 9,
												"id": 32,
												"nodeType": "Return",
												"src": "363:8:0"
											}
										]
									},
									"documentation": "@dev Multiplies two numbers, throws on overflow.",
									"id": 34,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "216:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "216:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "227:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "227:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "215:22:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "261:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 7,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "261:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "260:9:0"
									},
									"scope": 93,
									"src": "203:173:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 47,
										"nodeType": "Block",
										"src": "525:205:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 45,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 43,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 36,
														"src": "720:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 44,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 38,
														"src": "724:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "720:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 42,
												"id": 46,
												"nodeType": "Return",
												"src": "713:12:0"
											}
										]
									},
									"documentation": "@dev Integer division of two numbers, truncating the quotient.",
									"id": 48,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "471:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 35,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "471:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "482:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "482:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "470:22:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "516:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 40,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "516:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "515:9:0"
									},
									"scope": 93,
									"src": "458:272:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "909:43:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 60,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 58,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 52,
																"src": "922:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 59,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 50,
																"src": "927:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "922:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 57,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 986,
														"src": "915:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 61,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "915:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 62,
												"nodeType": "ExpressionStatement",
												"src": "915:14:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 63,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 50,
														"src": "942:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 64,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 52,
														"src": "946:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "942:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 56,
												"id": 66,
												"nodeType": "Return",
												"src": "935:12:0"
											}
										]
									},
									"documentation": "@dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).",
									"id": 68,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "855:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "855:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 52,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "866:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "866:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "854:22:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "900:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 54,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "899:9:0"
									},
									"scope": 93,
									"src": "842:110:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 91,
										"nodeType": "Block",
										"src": "1081:62:0",
										"statements": [
											{
												"assignments": [
													78
												],
												"declarations": [
													{
														"constant": false,
														"id": 78,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 92,
														"src": "1087:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 77,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1087:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 82,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 79,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 70,
														"src": "1099:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 80,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 72,
														"src": "1103:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1099:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1087:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 86,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 84,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 78,
																"src": "1117:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 85,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 70,
																"src": "1122:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1117:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 83,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 986,
														"src": "1110:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 87,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1110:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 88,
												"nodeType": "ExpressionStatement",
												"src": "1110:14:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 89,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 78,
													"src": "1137:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 76,
												"id": 90,
												"nodeType": "Return",
												"src": "1130:8:0"
											}
										]
									},
									"documentation": "@dev Adds two numbers, throws on overflow.",
									"id": 92,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "1027:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 69,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "1038:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1038:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1026:22:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 75,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "1072:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 74,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1072:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1071:9:0"
									},
									"scope": 93,
									"src": "1014:129:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 983,
							"src": "117:1028:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 982,
							"linearizedBaseContracts": [
								982
							],
							"name": "WethioValidator",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 96,
									"libraryName": {
										"contractScope": null,
										"id": 94,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 93,
										"src": "1184:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$93",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1178:27:0",
									"typeName": {
										"id": 95,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1197:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 104,
									"name": "Vote",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 98,
												"indexed": false,
												"name": "_voter",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1222:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 100,
												"indexed": false,
												"name": "_candidate",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1238:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 99,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1238:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 102,
												"indexed": false,
												"name": "_cap",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1258:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1258:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1221:50:0"
									},
									"src": "1211:61:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 112,
									"name": "Unvote",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 106,
												"indexed": false,
												"name": "_voter",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "1290:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1290:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 108,
												"indexed": false,
												"name": "_candidate",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "1306:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 107,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1306:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 110,
												"indexed": false,
												"name": "_cap",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "1326:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1326:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1289:50:0"
									},
									"src": "1277:63:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 120,
									"name": "Propose",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"indexed": false,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "1359:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1359:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"indexed": false,
												"name": "_candidate",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "1375:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1375:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 118,
												"indexed": false,
												"name": "_cap",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "1395:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1395:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1358:50:0"
									},
									"src": "1345:64:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 126,
									"name": "Resign",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"indexed": false,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "1427:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1427:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 124,
												"indexed": false,
												"name": "_candidate",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "1443:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1443:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1426:36:0"
									},
									"src": "1414:49:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 134,
									"name": "Withdraw",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"indexed": false,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "1483:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1483:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 130,
												"indexed": false,
												"name": "_blockNumber",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "1499:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1499:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 132,
												"indexed": false,
												"name": "_cap",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "1521:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1521:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1482:52:0"
									},
									"src": "1468:67:0"
								},
								{
									"canonicalName": "WethioValidator.ValidatorState",
									"id": 145,
									"members": [
										{
											"constant": false,
											"id": 136,
											"name": "owner",
											"nodeType": "VariableDeclaration",
											"scope": 145,
											"src": "1573:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 135,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1573:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 138,
											"name": "isCandidate",
											"nodeType": "VariableDeclaration",
											"scope": 145,
											"src": "1596:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 137,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1596:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 140,
											"name": "cap",
											"nodeType": "VariableDeclaration",
											"scope": 145,
											"src": "1622:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 139,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1622:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 144,
											"name": "voters",
											"nodeType": "VariableDeclaration",
											"scope": 145,
											"src": "1643:34:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"typeName": {
												"id": 143,
												"keyType": {
													"id": 141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1651:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1643:27:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												},
												"valueType": {
													"id": 142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1662:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "ValidatorState",
									"nodeType": "StructDefinition",
									"scope": 982,
									"src": "1541:143:0",
									"visibility": "public"
								},
								{
									"canonicalName": "WethioValidator.WithdrawState",
									"id": 153,
									"members": [
										{
											"constant": false,
											"id": 149,
											"name": "caps",
											"nodeType": "VariableDeclaration",
											"scope": 153,
											"src": "1719:32:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
												"typeString": "mapping(uint256 => uint256)"
											},
											"typeName": {
												"id": 148,
												"keyType": {
													"id": 146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1727:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "Mapping",
												"src": "1719:27:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
													"typeString": "mapping(uint256 => uint256)"
												},
												"valueType": {
													"id": 147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1738:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 152,
											"name": "blockNumbers",
											"nodeType": "VariableDeclaration",
											"scope": 153,
											"src": "1759:22:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											},
											"typeName": {
												"baseType": {
													"id": 150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1759:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 151,
												"length": null,
												"nodeType": "ArrayTypeName",
												"src": "1759:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "WithdrawState",
									"nodeType": "StructDefinition",
									"scope": 982,
									"src": "1690:98:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 157,
									"name": "withdrawsState",
									"nodeType": "VariableDeclaration",
									"scope": 982,
									"src": "1794:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WithdrawState_$153_storage_$",
										"typeString": "mapping(address => struct WethioValidator.WithdrawState)"
									},
									"typeName": {
										"id": 156,
										"keyType": {
											"id": 154,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1802:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1794:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WithdrawState_$153_storage_$",
											"typeString": "mapping(address => struct WethioValidator.WithdrawState)"
										},
										"valueType": {
											"contractScope": null,
											"id": 155,
											"name": "WithdrawState",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 153,
											"src": "1813:13:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_WithdrawState_$153_storage_ptr",
												"typeString": "struct WethioValidator.WithdrawState"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 161,
									"name": "validatorsState",
									"nodeType": "VariableDeclaration",
									"scope": 982,
									"src": "1849:50:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidatorState_$145_storage_$",
										"typeString": "mapping(address => struct WethioValidator.ValidatorState)"
									},
									"typeName": {
										"id": 160,
										"keyType": {
											"id": 158,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1857:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1849:34:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidatorState_$145_storage_$",
											"typeString": "mapping(address => struct WethioValidator.ValidatorState)"
										},
										"valueType": {
											"contractScope": null,
											"id": 159,
											"name": "ValidatorState",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 145,
											"src": "1868:14:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_ValidatorState_$145_storage_ptr",
												"typeString": "struct WethioValidator.ValidatorState"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 166,
									"name": "voters",
									"nodeType": "VariableDeclaration",
									"scope": 982,
									"src": "1905:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
										"typeString": "mapping(address => address[])"
									},
									"typeName": {
										"id": 165,
										"keyType": {
											"id": 162,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1913:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1905:29:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
											"typeString": "mapping(address => address[])"
										},
										"valueType": {
											"baseType": {
												"id": 163,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1924:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"id": 164,
											"length": null,
											"nodeType": "ArrayTypeName",
											"src": "1924:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
												"typeString": "address[]"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 169,
									"name": "candidates",
									"nodeType": "VariableDeclaration",
									"scope": 982,
									"src": "1947:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 167,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1947:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 168,
										"length": null,
										"nodeType": "ArrayTypeName",
										"src": "1947:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 172,
									"name": "candidateCount",
									"nodeType": "VariableDeclaration",
									"scope": 982,
									"src": "1981:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 170,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1981:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30",
										"id": 171,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2013:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 174,
									"name": "minCandidateCap",
									"nodeType": "VariableDeclaration",
									"scope": 982,
									"src": "2020:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 173,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2020:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 176,
									"name": "minVoterCap",
									"nodeType": "VariableDeclaration",
									"scope": 982,
									"src": "2056:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 175,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2056:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 178,
									"name": "maxValidatorNumber",
									"nodeType": "VariableDeclaration",
									"scope": 982,
									"src": "2088:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 177,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2088:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 180,
									"name": "candidateWithdrawDelay",
									"nodeType": "VariableDeclaration",
									"scope": 982,
									"src": "2127:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 179,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2127:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 182,
									"name": "voterWithdrawDelay",
									"nodeType": "VariableDeclaration",
									"scope": 982,
									"src": "2170:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 181,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2170:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "2241:126:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 188,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 185,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 997,
																	"src": "2320:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 186,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2320:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 187,
																"name": "minCandidateCap",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 174,
																"src": "2333:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2320:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 184,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1000,
															1001
														],
														"referencedDeclaration": 1000,
														"src": "2312:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2312:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 190,
												"nodeType": "ExpressionStatement",
												"src": "2312:37:0"
											},
											{
												"id": 191,
												"nodeType": "PlaceholderStatement",
												"src": "2359:1:0"
											}
										]
									},
									"documentation": null,
									"id": 193,
									"name": "onlyValidCandidateCap",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2241:0:0"
									},
									"src": "2210:157:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 203,
										"nodeType": "Block",
										"src": "2400:61:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 199,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 196,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 997,
																	"src": "2418:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 197,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2418:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 198,
																"name": "minVoterCap",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 176,
																"src": "2431:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2418:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 195,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1000,
															1001
														],
														"referencedDeclaration": 1000,
														"src": "2410:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2410:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 201,
												"nodeType": "ExpressionStatement",
												"src": "2410:33:0"
											},
											{
												"id": 202,
												"nodeType": "PlaceholderStatement",
												"src": "2453:1:0"
											}
										]
									},
									"documentation": null,
									"id": 204,
									"name": "onlyValidVoterCap",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2400:0:0"
									},
									"src": "2373:88:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 219,
										"nodeType": "Block",
										"src": "2506:84:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 209,
																		"name": "validatorsState",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 161,
																		"src": "2524:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidatorState_$145_storage_$",
																			"typeString": "mapping(address => struct WethioValidator.ValidatorState storage ref)"
																		}
																	},
																	"id": 211,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 210,
																		"name": "_candidate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 206,
																		"src": "2540:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2524:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_ValidatorState_$145_storage",
																		"typeString": "struct WethioValidator.ValidatorState storage ref"
																	}
																},
																"id": 212,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "owner",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 136,
																"src": "2524:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 213,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 997,
																	"src": "2561:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 214,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2561:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2524:47:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 208,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1000,
															1001
														],
														"referencedDeclaration": 1000,
														"src": "2516:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2516:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 217,
												"nodeType": "ExpressionStatement",
												"src": "2516:56:0"
											},
											{
												"id": 218,
												"nodeType": "PlaceholderStatement",
												"src": "2582:1:0"
											}
										]
									},
									"documentation": null,
									"id": 220,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"name": "_candidate",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "2486:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2486:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2485:20:0"
									},
									"src": "2467:123:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 232,
										"nodeType": "Block",
										"src": "2639:76:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 225,
																	"name": "validatorsState",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "2657:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidatorState_$145_storage_$",
																		"typeString": "mapping(address => struct WethioValidator.ValidatorState storage ref)"
																	}
																},
																"id": 227,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 226,
																	"name": "_candidate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 222,
																	"src": "2673:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2657:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ValidatorState_$145_storage",
																	"typeString": "struct WethioValidator.ValidatorState storage ref"
																}
															},
															"id": 228,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "isCandidate",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 138,
															"src": "2657:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 224,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1000,
															1001
														],
														"referencedDeclaration": 1000,
														"src": "2649:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2649:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 230,
												"nodeType": "ExpressionStatement",
												"src": "2649:48:0"
											},
											{
												"id": 231,
												"nodeType": "PlaceholderStatement",
												"src": "2707:1:0"
											}
										]
									},
									"documentation": null,
									"id": 233,
									"name": "onlyCandidate",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"name": "_candidate",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "2619:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2619:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2618:20:0"
									},
									"src": "2596:119:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 245,
										"nodeType": "Block",
										"src": "2770:76:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 238,
																	"name": "validatorsState",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "2788:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidatorState_$145_storage_$",
																		"typeString": "mapping(address => struct WethioValidator.ValidatorState storage ref)"
																	}
																},
																"id": 240,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 239,
																	"name": "_candidate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 235,
																	"src": "2804:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2788:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ValidatorState_$145_storage",
																	"typeString": "struct WethioValidator.ValidatorState storage ref"
																}
															},
															"id": 241,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "isCandidate",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 138,
															"src": "2788:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 237,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1000,
															1001
														],
														"referencedDeclaration": 1000,
														"src": "2780:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2780:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 243,
												"nodeType": "ExpressionStatement",
												"src": "2780:48:0"
											},
											{
												"id": 244,
												"nodeType": "PlaceholderStatement",
												"src": "2838:1:0"
											}
										]
									},
									"documentation": null,
									"id": 246,
									"name": "onlyValidCandidate",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"name": "_candidate",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "2750:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2750:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2749:20:0"
									},
									"src": "2721:125:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 259,
										"nodeType": "Block",
										"src": "2899:77:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 255,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2917:40:0",
															"subExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 251,
																		"name": "validatorsState",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 161,
																		"src": "2918:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidatorState_$145_storage_$",
																			"typeString": "mapping(address => struct WethioValidator.ValidatorState storage ref)"
																		}
																	},
																	"id": 253,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 252,
																		"name": "_candidate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 248,
																		"src": "2934:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2918:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_ValidatorState_$145_storage",
																		"typeString": "struct WethioValidator.ValidatorState storage ref"
																	}
																},
																"id": 254,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "isCandidate",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 138,
																"src": "2918:39:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 250,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1000,
															1001
														],
														"referencedDeclaration": 1000,
														"src": "2909:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2909:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "2909:49:0"
											},
											{
												"id": 258,
												"nodeType": "PlaceholderStatement",
												"src": "2968:1:0"
											}
										]
									},
									"documentation": null,
									"id": 260,
									"name": "onlyNotCandidate",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"name": "_candidate",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "2879:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2879:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2878:20:0"
									},
									"src": "2852:124:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 303,
										"nodeType": "Block",
										"src": "3040:262:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 275,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 267,
																			"name": "validatorsState",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 161,
																			"src": "3058:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidatorState_$145_storage_$",
																				"typeString": "mapping(address => struct WethioValidator.ValidatorState storage ref)"
																			}
																		},
																		"id": 269,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 268,
																			"name": "_candidate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 262,
																			"src": "3074:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3058:27:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ValidatorState_$145_storage",
																			"typeString": "struct WethioValidator.ValidatorState storage ref"
																		}
																	},
																	"id": 270,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "voters",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 144,
																	"src": "3058:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 273,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 271,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 997,
																		"src": "3093:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 272,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "3093:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3058:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 274,
																"name": "_cap",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 264,
																"src": "3108:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3058:54:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 266,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1000,
															1001
														],
														"referencedDeclaration": 1000,
														"src": "3050:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3050:63:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 277,
												"nodeType": "ExpressionStatement",
												"src": "3050:63:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 278,
																"name": "validatorsState",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 161,
																"src": "3127:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidatorState_$145_storage_$",
																	"typeString": "mapping(address => struct WethioValidator.ValidatorState storage ref)"
																}
															},
															"id": 280,
															"indexExpression": {
																"argumentTypes": null,
																"id": 279,
																"name": "_candidate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 262,
																"src": "3143:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3127:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ValidatorState_$145_storage",
																"typeString": "struct WethioValidator.ValidatorState storage ref"
															}
														},
														"id": 281,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 136,
														"src": "3127:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 282,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 997,
															"src": "3164:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 283,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "3164:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3127:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 301,
												"nodeType": "IfStatement",
												"src": "3123:162:0",
												"trueBody": {
													"id": 300,
													"nodeType": "Block",
													"src": "3176:109:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 297,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 294,
																					"name": "_cap",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 264,
																					"src": "3249:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"baseExpression": {
																						"argumentTypes": null,
																						"expression": {
																							"argumentTypes": null,
																							"baseExpression": {
																								"argumentTypes": null,
																								"id": 286,
																								"name": "validatorsState",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 161,
																								"src": "3198:15:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidatorState_$145_storage_$",
																									"typeString": "mapping(address => struct WethioValidator.ValidatorState storage ref)"
																								}
																							},
																							"id": 288,
																							"indexExpression": {
																								"argumentTypes": null,
																								"id": 287,
																								"name": "_candidate",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 262,
																								"src": "3214:10:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "3198:27:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_ValidatorState_$145_storage",
																								"typeString": "struct WethioValidator.ValidatorState storage ref"
																							}
																						},
																						"id": 289,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "voters",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 144,
																						"src": "3198:34:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																							"typeString": "mapping(address => uint256)"
																						}
																					},
																					"id": 292,
																					"indexExpression": {
																						"argumentTypes": null,
																						"expression": {
																							"argumentTypes": null,
																							"id": 290,
																							"name": "msg",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 997,
																							"src": "3233:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_message",
																								"typeString": "msg"
																							}
																						},
																						"id": 291,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "sender",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": null,
																						"src": "3233:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "3198:46:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 293,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sub",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 68,
																				"src": "3198:50:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 295,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3198:56:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 296,
																			"name": "minCandidateCap",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 174,
																			"src": "3258:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3198:75:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 285,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1000,
																		1001
																	],
																	"referencedDeclaration": 1000,
																	"src": "3190:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																		"typeString": "function (bool) pure"
																	}
																},
																"id": 298,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3190:84:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 299,
															"nodeType": "ExpressionStatement",
															"src": "3190:84:0"
														}
													]
												}
											},
											{
												"id": 302,
												"nodeType": "PlaceholderStatement",
												"src": "3294:1:0"
											}
										]
									},
									"documentation": null,
									"id": 304,
									"name": "onlyValidVote",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"name": "_candidate",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "3006:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3006:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"name": "_cap",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "3026:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3026:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3005:34:0"
									},
									"src": "2982:320:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 348,
										"nodeType": "Block",
										"src": "3371:250:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 313,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 311,
																"name": "_blockNumber",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 306,
																"src": "3389:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 312,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3404:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3389:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 310,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1000,
															1001
														],
														"referencedDeclaration": 1000,
														"src": "3381:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3381:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 315,
												"nodeType": "ExpressionStatement",
												"src": "3381:25:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 320,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 317,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 987,
																	"src": "3424:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 318,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "number",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "3424:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 319,
																"name": "_blockNumber",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 306,
																"src": "3440:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3424:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 316,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1000,
															1001
														],
														"referencedDeclaration": 1000,
														"src": "3416:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 322,
												"nodeType": "ExpressionStatement",
												"src": "3416:37:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 332,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 324,
																			"name": "withdrawsState",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 157,
																			"src": "3471:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WithdrawState_$153_storage_$",
																				"typeString": "mapping(address => struct WethioValidator.WithdrawState storage ref)"
																			}
																		},
																		"id": 327,
																		"indexExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 325,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 997,
																				"src": "3486:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 326,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "3486:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3471:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_WithdrawState_$153_storage",
																			"typeString": "struct WethioValidator.WithdrawState storage ref"
																		}
																	},
																	"id": 328,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "caps",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 149,
																	"src": "3471:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 330,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 329,
																	"name": "_blockNumber",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 306,
																	"src": "3503:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3471:45:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 331,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3519:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3471:49:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 323,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1000,
															1001
														],
														"referencedDeclaration": 1000,
														"src": "3463:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3463:58:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "3463:58:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 344,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 336,
																			"name": "withdrawsState",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 157,
																			"src": "3539:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WithdrawState_$153_storage_$",
																				"typeString": "mapping(address => struct WethioValidator.WithdrawState storage ref)"
																			}
																		},
																		"id": 339,
																		"indexExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 337,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 997,
																				"src": "3554:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 338,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "3554:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3539:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_WithdrawState_$153_storage",
																			"typeString": "struct WethioValidator.WithdrawState storage ref"
																		}
																	},
																	"id": 340,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "blockNumbers",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 152,
																	"src": "3539:39:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																		"typeString": "uint256[] storage ref"
																	}
																},
																"id": 342,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 341,
																	"name": "_index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 308,
																	"src": "3579:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3539:47:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 343,
																"name": "_blockNumber",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 306,
																"src": "3590:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3539:63:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 335,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1000,
															1001
														],
														"referencedDeclaration": 1000,
														"src": "3531:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3531:72:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 346,
												"nodeType": "ExpressionStatement",
												"src": "3531:72:0"
											},
											{
												"id": 347,
												"nodeType": "PlaceholderStatement",
												"src": "3613:1:0"
											}
										]
									},
									"documentation": null,
									"id": 349,
									"name": "onlyValidWithdraw",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"name": "_blockNumber",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "3336:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3336:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 308,
												"name": "_index",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "3358:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 307,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3358:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3335:35:0"
									},
									"src": "3308:313:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 450,
										"nodeType": "Block",
										"src": "3930:722:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 370,
														"name": "minCandidateCap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "3940:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 371,
														"name": "_minCandidateCap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 359,
														"src": "3958:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3940:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 373,
												"nodeType": "ExpressionStatement",
												"src": "3940:34:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 374,
														"name": "minVoterCap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "3984:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 375,
														"name": "_minVoterCap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 361,
														"src": "3998:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3984:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 377,
												"nodeType": "ExpressionStatement",
												"src": "3984:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 378,
														"name": "maxValidatorNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 178,
														"src": "4020:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 379,
														"name": "_maxValidatorNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 363,
														"src": "4041:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4020:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 381,
												"nodeType": "ExpressionStatement",
												"src": "4020:40:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 382,
														"name": "candidateWithdrawDelay",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 180,
														"src": "4070:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 383,
														"name": "_candidateWithdrawDelay",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 365,
														"src": "4095:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4070:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 385,
												"nodeType": "ExpressionStatement",
												"src": "4070:48:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 386,
														"name": "voterWithdrawDelay",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 182,
														"src": "4128:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 387,
														"name": "_voterWithdrawDelay",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 367,
														"src": "4149:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4128:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 389,
												"nodeType": "ExpressionStatement",
												"src": "4128:40:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 390,
														"name": "candidateCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "4178:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 391,
															"name": "_candidates",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 352,
															"src": "4195:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 392,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "4195:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4178:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 394,
												"nodeType": "ExpressionStatement",
												"src": "4178:35:0"
											},
											{
												"body": {
													"id": 448,
													"nodeType": "Block",
													"src": "4273:373:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 409,
																			"name": "_candidates",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 352,
																			"src": "4303:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 411,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 410,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 396,
																			"src": "4315:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4303:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 406,
																		"name": "candidates",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 169,
																		"src": "4287:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 408,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "4287:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) returns (uint256)"
																	}
																},
																"id": 412,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4287:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 413,
															"nodeType": "ExpressionStatement",
															"src": "4287:31:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 426,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 414,
																		"name": "validatorsState",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 161,
																		"src": "4332:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidatorState_$145_storage_$",
																			"typeString": "mapping(address => struct WethioValidator.ValidatorState storage ref)"
																		}
																	},
																	"id": 418,
																	"indexExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 415,
																			"name": "_candidates",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 352,
																			"src": "4348:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 417,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 416,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 396,
																			"src": "4360:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4348:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4332:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_ValidatorState_$145_storage",
																		"typeString": "struct WethioValidator.ValidatorState storage ref"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 420,
																			"name": "_firstOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 357,
																			"src": "4406:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"hexValue": "74727565",
																			"id": 421,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4448:4:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "true"
																		},
																		{
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 422,
																				"name": "_caps",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 355,
																				"src": "4475:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 424,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 423,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 396,
																				"src": "4481:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4475:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 419,
																		"name": "ValidatorState",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 145,
																		"src": "4366:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_struct$_ValidatorState_$145_storage_ptr_$",
																			"typeString": "type(struct WethioValidator.ValidatorState storage pointer)"
																		}
																	},
																	"id": 425,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "structConstructorCall",
																	"lValueRequested": false,
																	"names": [
																		"owner",
																		"isCandidate",
																		"cap"
																	],
																	"nodeType": "FunctionCall",
																	"src": "4366:132:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_ValidatorState_$145_memory",
																		"typeString": "struct WethioValidator.ValidatorState memory"
																	}
																},
																"src": "4332:166:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ValidatorState_$145_storage",
																	"typeString": "struct WethioValidator.ValidatorState storage ref"
																}
															},
															"id": 427,
															"nodeType": "ExpressionStatement",
															"src": "4332:166:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 434,
																		"name": "_firstOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 357,
																		"src": "4540:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 428,
																			"name": "voters",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 166,
																			"src": "4512:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
																				"typeString": "mapping(address => address[] storage ref)"
																			}
																		},
																		"id": 432,
																		"indexExpression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 429,
																				"name": "_candidates",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 352,
																				"src": "4519:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																					"typeString": "address[] memory"
																				}
																			},
																			"id": 431,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 430,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 396,
																				"src": "4531:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4519:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4512:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 433,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "4512:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) returns (uint256)"
																	}
																},
																"id": 435,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4512:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 436,
															"nodeType": "ExpressionStatement",
															"src": "4512:40:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 446,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 437,
																				"name": "validatorsState",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 161,
																				"src": "4566:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidatorState_$145_storage_$",
																					"typeString": "mapping(address => struct WethioValidator.ValidatorState storage ref)"
																				}
																			},
																			"id": 441,
																			"indexExpression": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 438,
																					"name": "_candidates",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 352,
																					"src": "4582:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																						"typeString": "address[] memory"
																					}
																				},
																				"id": 440,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 439,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 396,
																					"src": "4594:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "4582:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4566:31:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_ValidatorState_$145_storage",
																				"typeString": "struct WethioValidator.ValidatorState storage ref"
																			}
																		},
																		"id": 442,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "voters",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 144,
																		"src": "4566:38:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 444,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 443,
																		"name": "_firstOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 357,
																		"src": "4605:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4566:51:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 445,
																	"name": "minCandidateCap",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 174,
																	"src": "4620:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4566:69:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 447,
															"nodeType": "ExpressionStatement",
															"src": "4566:69:0"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 399,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 396,
														"src": "4244:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 400,
															"name": "_candidates",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 352,
															"src": "4248:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 401,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "4248:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4244:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 449,
												"initializationExpression": {
													"assignments": [
														396
													],
													"declarations": [
														{
															"constant": false,
															"id": 396,
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 451,
															"src": "4229:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 395,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4229:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 398,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 397,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4241:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4229:13:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 404,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4268:3:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 403,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "4268:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 405,
													"nodeType": "ExpressionStatement",
													"src": "4268:3:0"
												},
												"nodeType": "ForStatement",
												"src": "4224:422:0"
											}
										]
									},
									"documentation": null,
									"id": 451,
									"implemented": true,
									"isConstructor": true,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "WethioValidator",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"name": "_candidates",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "3662:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 350,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3662:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 351,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "3662:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 355,
												"name": "_caps",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "3693:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 353,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3693:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 354,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "3693:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 357,
												"name": "_firstOwner",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "3718:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 356,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3718:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"name": "_minCandidateCap",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "3747:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 358,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3747:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 361,
												"name": "_minVoterCap",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "3781:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3781:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 363,
												"name": "_maxValidatorNumber",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "3811:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 362,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3811:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 365,
												"name": "_candidateWithdrawDelay",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "3848:31:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3848:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 367,
												"name": "_voterWithdrawDelay",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "3889:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3889:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3652:270:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3930:0:0"
									},
									"scope": 982,
									"src": "3627:1025:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 532,
										"nodeType": "Block",
										"src": "4763:534:0",
										"statements": [
											{
												"assignments": [
													462
												],
												"declarations": [
													{
														"constant": false,
														"id": 462,
														"name": "cap",
														"nodeType": "VariableDeclaration",
														"scope": 533,
														"src": "4773:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 461,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4773:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 471,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 468,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 997,
																"src": "4823:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 469,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "4823:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 463,
																	"name": "validatorsState",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "4787:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidatorState_$145_storage_$",
																		"typeString": "mapping(address => struct WethioValidator.ValidatorState storage ref)"
																	}
																},
																"id": 465,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 464,
																	"name": "_candidate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 453,
																	"src": "4803:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4787:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ValidatorState_$145_storage",
																	"typeString": "struct WethioValidator.ValidatorState storage ref"
																}
															},
															"id": 466,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "cap",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 140,
															"src": "4787:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 467,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 92,
														"src": "4787:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4787:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4773:60:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 475,
															"name": "_candidate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4859:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 472,
															"name": "candidates",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "4843:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 474,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "4843:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) returns (uint256)"
														}
													},
													"id": 476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4843:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 477,
												"nodeType": "ExpressionStatement",
												"src": "4843:27:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 478,
															"name": "validatorsState",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 161,
															"src": "4880:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidatorState_$145_storage_$",
																"typeString": "mapping(address => struct WethioValidator.ValidatorState storage ref)"
															}
														},
														"id": 480,
														"indexExpression": {
															"argumentTypes": null,
															"id": 479,
															"name": "_candidate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4896:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4880:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ValidatorState_$145_storage",
															"typeString": "struct WethioValidator.ValidatorState storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 482,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 997,
																	"src": "4946:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4946:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "74727565",
																"id": 484,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4983:4:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															{
																"argumentTypes": null,
																"id": 485,
																"name": "cap",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 462,
																"src": "5006:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 481,
															"name": "ValidatorState",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 145,
															"src": "4910:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_ValidatorState_$145_storage_ptr_$",
																"typeString": "type(struct WethioValidator.ValidatorState storage pointer)"
															}
														},
														"id": 486,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"names": [
															"owner",
															"isCandidate",
															"cap"
														],
														"nodeType": "FunctionCall",
														"src": "4910:110:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ValidatorState_$145_memory",
															"typeString": "struct WethioValidator.ValidatorState memory"
														}
													},
													"src": "4880:140:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ValidatorState_$145_storage",
														"typeString": "struct WethioValidator.ValidatorState storage ref"
													}
												},
												"id": 488,
												"nodeType": "ExpressionStatement",
												"src": "4880:140:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 489,
																	"name": "validatorsState",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "5030:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidatorState_$145_storage_$",
																		"typeString": "mapping(address => struct WethioValidator.ValidatorState storage ref)"
																	}
																},
																"id": 491,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 490,
																	"name": "_candidate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 453,
																	"src": "5046:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5030:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ValidatorState_$145_storage",
																	"typeString": "struct WethioValidator.ValidatorState storage ref"
																}
															},
															"id": 492,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "voters",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 144,
															"src": "5030:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 495,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 493,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 997,
																"src": "5065:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "5065:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5030:46:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 504,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 997,
																	"src": "5130:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 505,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "5130:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 496,
																			"name": "validatorsState",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 161,
																			"src": "5079:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidatorState_$145_storage_$",
																				"typeString": "mapping(address => struct WethioValidator.ValidatorState storage ref)"
																			}
																		},
																		"id": 498,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 497,
																			"name": "_candidate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 453,
																			"src": "5095:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5079:27:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ValidatorState_$145_storage",
																			"typeString": "struct WethioValidator.ValidatorState storage ref"
																		}
																	},
																	"id": 499,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "voters",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 144,
																	"src": "5079:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 502,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 500,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 997,
																		"src": "5114:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 501,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "5114:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5079:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 92,
															"src": "5079:50:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 506,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5079:61:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5030:110:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 508,
												"nodeType": "ExpressionStatement",
												"src": "5030:110:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 509,
														"name": "candidateCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "5150:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "31",
																"id": 512,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5186:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 510,
																"name": "candidateCount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 172,
																"src": "5167:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 511,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 92,
															"src": "5167:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 513,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5167:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5150:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 515,
												"nodeType": "ExpressionStatement",
												"src": "5150:38:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 520,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 997,
																"src": "5222:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 521,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "5222:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 516,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 166,
																"src": "5198:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
																	"typeString": "mapping(address => address[] storage ref)"
																}
															},
															"id": 518,
															"indexExpression": {
																"argumentTypes": null,
																"id": 517,
																"name": "_candidate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 453,
																"src": "5205:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5198:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 519,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "5198:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) returns (uint256)"
														}
													},
													"id": 522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5198:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 523,
												"nodeType": "ExpressionStatement",
												"src": "5198:35:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 525,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 997,
																"src": "5256:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 526,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "5256:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 527,
															"name": "_candidate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "5268:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 528,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 997,
																"src": "5280:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 529,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "5280:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 524,
														"name": "Propose",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 120,
														"src": "5248:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5248:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 531,
												"nodeType": "EmitStatement",
												"src": "5243:47:0"
											}
										]
									},
									"documentation": null,
									"id": 533,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 456,
											"modifierName": {
												"argumentTypes": null,
												"id": 455,
												"name": "onlyValidCandidateCap",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 193,
												"src": "4712:21:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "4712:21:0"
										},
										{
											"arguments": [
												{
													"argumentTypes": null,
													"id": 458,
													"name": "_candidate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 453,
													"src": "4751:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 459,
											"modifierName": {
												"argumentTypes": null,
												"id": 457,
												"name": "onlyNotCandidate",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 260,
												"src": "4734:16:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_address_$",
													"typeString": "modifier (address)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "4734:28:0"
										}
									],
									"name": "propose",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"name": "_candidate",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "4675:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4675:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4674:20:0"
									},
									"payable": true,
									"returnParameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4763:0:0"
									},
									"scope": 982,
									"src": "4658:639:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 604,
										"nodeType": "Block",
										"src": "5403:397:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 543,
																"name": "validatorsState",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 161,
																"src": "5413:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidatorState_$145_storage_$",
																	"typeString": "mapping(address => struct WethioValidator.ValidatorState storage ref)"
																}
															},
															"id": 545,
															"indexExpression": {
																"argumentTypes": null,
																"id": 544,
																"name": "_candidate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 535,
																"src": "5429:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5413:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ValidatorState_$145_storage",
																"typeString": "struct WethioValidator.ValidatorState storage ref"
															}
														},
														"id": 546,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "cap",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 140,
														"src": "5413:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 552,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 997,
																	"src": "5483:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 553,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "5483:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 547,
																		"name": "validatorsState",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 161,
																		"src": "5447:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidatorState_$145_storage_$",
																			"typeString": "mapping(address => struct WethioValidator.ValidatorState storage ref)"
																		}
																	},
																	"id": 549,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 548,
																		"name": "_candidate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 535,
																		"src": "5463:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5447:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_ValidatorState_$145_storage",
																		"typeString": "struct WethioValidator.ValidatorState storage ref"
																	}
																},
																"id": 550,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "cap",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 140,
																"src": "5447:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 551,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 92,
															"src": "5447:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 554,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5447:46:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5413:80:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 556,
												"nodeType": "ExpressionStatement",
												"src": "5413:80:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 557,
																	"name": "validatorsState",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "5507:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidatorState_$145_storage_$",
																		"typeString": "mapping(address => struct WethioValidator.ValidatorState storage ref)"
																	}
																},
																"id": 559,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 558,
																	"name": "_candidate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 535,
																	"src": "5523:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5507:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ValidatorState_$145_storage",
																	"typeString": "struct WethioValidator.ValidatorState storage ref"
																}
															},
															"id": 560,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "voters",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 144,
															"src": "5507:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 563,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 561,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 997,
																"src": "5542:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 562,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "5542:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5507:46:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 564,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5557:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5507:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 575,
												"nodeType": "IfStatement",
												"src": "5503:117:0",
												"trueBody": {
													"id": 574,
													"nodeType": "Block",
													"src": "5560:60:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 570,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 997,
																			"src": "5598:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 571,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "5598:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 566,
																			"name": "voters",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 166,
																			"src": "5574:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
																				"typeString": "mapping(address => address[] storage ref)"
																			}
																		},
																		"id": 568,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 567,
																			"name": "_candidate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 535,
																			"src": "5581:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5574:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 569,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "5574:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) returns (uint256)"
																	}
																},
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5574:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 573,
															"nodeType": "ExpressionStatement",
															"src": "5574:35:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 576,
																	"name": "validatorsState",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "5629:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidatorState_$145_storage_$",
																		"typeString": "mapping(address => struct WethioValidator.ValidatorState storage ref)"
																	}
																},
																"id": 578,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 577,
																	"name": "_candidate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 535,
																	"src": "5645:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5629:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ValidatorState_$145_storage",
																	"typeString": "struct WethioValidator.ValidatorState storage ref"
																}
															},
															"id": 579,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "voters",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 144,
															"src": "5629:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 582,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 580,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 997,
																"src": "5664:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 581,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "5664:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5629:46:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 591,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 997,
																	"src": "5729:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 592,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "5729:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 583,
																			"name": "validatorsState",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 161,
																			"src": "5678:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidatorState_$145_storage_$",
																				"typeString": "mapping(address => struct WethioValidator.ValidatorState storage ref)"
																			}
																		},
																		"id": 585,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 584,
																			"name": "_candidate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 535,
																			"src": "5694:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5678:27:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ValidatorState_$145_storage",
																			"typeString": "struct WethioValidator.ValidatorState storage ref"
																		}
																	},
																	"id": 586,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "voters",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 144,
																	"src": "5678:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 589,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 587,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 997,
																		"src": "5713:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 588,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "5713:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5678:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 590,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 92,
															"src": "5678:50:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 593,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5678:61:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5629:110:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 595,
												"nodeType": "ExpressionStatement",
												"src": "5629:110:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 597,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 997,
																"src": "5759:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "5759:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 599,
															"name": "_candidate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 535,
															"src": "5771:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 600,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 997,
																"src": "5783:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 601,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "5783:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 596,
														"name": "Vote",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 104,
														"src": "5754:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5754:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 603,
												"nodeType": "EmitStatement",
												"src": "5749:44:0"
											}
										]
									},
									"documentation": null,
									"id": 605,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 538,
											"modifierName": {
												"argumentTypes": null,
												"id": 537,
												"name": "onlyValidVoterCap",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 204,
												"src": "5354:17:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "5354:17:0"
										},
										{
											"arguments": [
												{
													"argumentTypes": null,
													"id": 540,
													"name": "_candidate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 535,
													"src": "5391:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 541,
											"modifierName": {
												"argumentTypes": null,
												"id": 539,
												"name": "onlyValidCandidate",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 246,
												"src": "5372:18:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_address_$",
													"typeString": "modifier (address)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "5372:30:0"
										}
									],
									"name": "vote",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"name": "_candidate",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "5317:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 534,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5317:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5316:20:0"
									},
									"payable": true,
									"returnParameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5403:0:0"
									},
									"scope": 982,
									"src": "5303:497:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 613,
										"nodeType": "Block",
										"src": "5862:34:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 611,
													"name": "candidates",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "5879:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"functionReturnParameters": 610,
												"id": 612,
												"nodeType": "Return",
												"src": "5872:17:0"
											}
										]
									},
									"documentation": null,
									"id": 614,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "getCandidates",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5828:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "5851:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 607,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "5851:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 608,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "5851:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5850:11:0"
									},
									"scope": 982,
									"src": "5806:90:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 626,
										"nodeType": "Block",
										"src": "5976:55:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 621,
															"name": "validatorsState",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 161,
															"src": "5993:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidatorState_$145_storage_$",
																"typeString": "mapping(address => struct WethioValidator.ValidatorState storage ref)"
															}
														},
														"id": 623,
														"indexExpression": {
															"argumentTypes": null,
															"id": 622,
															"name": "_candidate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "6009:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5993:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ValidatorState_$145_storage",
															"typeString": "struct WethioValidator.ValidatorState storage ref"
														}
													},
													"id": 624,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "cap",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 140,
													"src": "5993:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 620,
												"id": 625,
												"nodeType": "Return",
												"src": "5986:38:0"
											}
										]
									},
									"documentation": null,
									"id": 627,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "getCandidateCap",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 616,
												"name": "_candidate",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "5927:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 615,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5927:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5926:20:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 619,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "5967:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 618,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5967:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5966:9:0"
									},
									"scope": 982,
									"src": "5902:129:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 639,
										"nodeType": "Block",
										"src": "6113:57:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 634,
															"name": "validatorsState",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 161,
															"src": "6130:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidatorState_$145_storage_$",
																"typeString": "mapping(address => struct WethioValidator.ValidatorState storage ref)"
															}
														},
														"id": 636,
														"indexExpression": {
															"argumentTypes": null,
															"id": 635,
															"name": "_candidate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 629,
															"src": "6146:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6130:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ValidatorState_$145_storage",
															"typeString": "struct WethioValidator.ValidatorState storage ref"
														}
													},
													"id": 637,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 136,
													"src": "6130:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 633,
												"id": 638,
												"nodeType": "Return",
												"src": "6123:40:0"
											}
										]
									},
									"documentation": null,
									"id": 640,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "getCandidateOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 629,
												"name": "_candidate",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "6064:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 628,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6064:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6063:20:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 632,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "6104:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 631,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6104:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6103:9:0"
									},
									"scope": 982,
									"src": "6037:133:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 656,
										"nodeType": "Block",
										"src": "6262:66:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 649,
																"name": "validatorsState",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 161,
																"src": "6279:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidatorState_$145_storage_$",
																	"typeString": "mapping(address => struct WethioValidator.ValidatorState storage ref)"
																}
															},
															"id": 651,
															"indexExpression": {
																"argumentTypes": null,
																"id": 650,
																"name": "_candidate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 642,
																"src": "6295:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6279:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ValidatorState_$145_storage",
																"typeString": "struct WethioValidator.ValidatorState storage ref"
															}
														},
														"id": 652,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "voters",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 144,
														"src": "6279:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 654,
													"indexExpression": {
														"argumentTypes": null,
														"id": 653,
														"name": "_voter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 644,
														"src": "6314:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6279:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 648,
												"id": 655,
												"nodeType": "Return",
												"src": "6272:49:0"
											}
										]
									},
									"documentation": null,
									"id": 657,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "getVoterCap",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"name": "_candidate",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "6197:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6197:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"name": "_voter",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "6217:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 643,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6217:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6196:36:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 647,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "6253:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 646,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6253:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6252:9:0"
									},
									"scope": 982,
									"src": "6176:152:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 669,
										"nodeType": "Block",
										"src": "6404:42:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 665,
														"name": "voters",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 166,
														"src": "6421:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
															"typeString": "mapping(address => address[] storage ref)"
														}
													},
													"id": 667,
													"indexExpression": {
														"argumentTypes": null,
														"id": 666,
														"name": "_candidate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 659,
														"src": "6428:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6421:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"functionReturnParameters": 664,
												"id": 668,
												"nodeType": "Return",
												"src": "6414:25:0"
											}
										]
									},
									"documentation": null,
									"id": 670,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "getVoters",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 659,
												"name": "_candidate",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "6353:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6353:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6352:20:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 663,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "6393:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 661,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "6393:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 662,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "6393:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6392:11:0"
									},
									"scope": 982,
									"src": "6334:112:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 682,
										"nodeType": "Block",
										"src": "6519:63:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 677,
															"name": "validatorsState",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 161,
															"src": "6536:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidatorState_$145_storage_$",
																"typeString": "mapping(address => struct WethioValidator.ValidatorState storage ref)"
															}
														},
														"id": 679,
														"indexExpression": {
															"argumentTypes": null,
															"id": 678,
															"name": "_candidate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 672,
															"src": "6552:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6536:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ValidatorState_$145_storage",
															"typeString": "struct WethioValidator.ValidatorState storage ref"
														}
													},
													"id": 680,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "isCandidate",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 138,
													"src": "6536:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 676,
												"id": 681,
												"nodeType": "Return",
												"src": "6529:46:0"
											}
										]
									},
									"documentation": null,
									"id": 683,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "isCandidate",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 672,
												"name": "_candidate",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "6473:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 671,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6473:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6472:20:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "6513:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 674,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6513:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6512:6:0"
									},
									"scope": 982,
									"src": "6452:130:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 695,
										"nodeType": "Block",
										"src": "6654:63:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 689,
															"name": "withdrawsState",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 157,
															"src": "6671:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WithdrawState_$153_storage_$",
																"typeString": "mapping(address => struct WethioValidator.WithdrawState storage ref)"
															}
														},
														"id": 692,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 690,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 997,
																"src": "6686:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 691,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "6686:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6671:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_WithdrawState_$153_storage",
															"typeString": "struct WethioValidator.WithdrawState storage ref"
														}
													},
													"id": 693,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "blockNumbers",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 152,
													"src": "6671:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
														"typeString": "uint256[] storage ref"
													}
												},
												"functionReturnParameters": 688,
												"id": 694,
												"nodeType": "Return",
												"src": "6664:46:0"
											}
										]
									},
									"documentation": null,
									"id": 696,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "getWithdrawBlockNumbers",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6620:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 687,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "6643:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 685,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6643:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 686,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "6643:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6642:11:0"
									},
									"scope": 982,
									"src": "6588:129:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 711,
										"nodeType": "Block",
										"src": "6798:69:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 703,
																"name": "withdrawsState",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 157,
																"src": "6815:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WithdrawState_$153_storage_$",
																	"typeString": "mapping(address => struct WethioValidator.WithdrawState storage ref)"
																}
															},
															"id": 706,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 704,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 997,
																	"src": "6830:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "6830:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6815:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_WithdrawState_$153_storage",
																"typeString": "struct WethioValidator.WithdrawState storage ref"
															}
														},
														"id": 707,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "caps",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 149,
														"src": "6815:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 709,
													"indexExpression": {
														"argumentTypes": null,
														"id": 708,
														"name": "_blockNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 698,
														"src": "6847:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6815:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 702,
												"id": 710,
												"nodeType": "Return",
												"src": "6808:52:0"
											}
										]
									},
									"documentation": null,
									"id": 712,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "getWithdrawCap",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 698,
												"name": "_blockNumber",
												"nodeType": "VariableDeclaration",
												"scope": 712,
												"src": "6747:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 697,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6747:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6746:22:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 701,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 712,
												"src": "6789:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 700,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6789:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6788:9:0"
									},
									"scope": 982,
									"src": "6723:144:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 798,
										"nodeType": "Block",
										"src": "6962:577:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 723,
																"name": "validatorsState",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 161,
																"src": "6972:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidatorState_$145_storage_$",
																	"typeString": "mapping(address => struct WethioValidator.ValidatorState storage ref)"
																}
															},
															"id": 725,
															"indexExpression": {
																"argumentTypes": null,
																"id": 724,
																"name": "_candidate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 714,
																"src": "6988:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6972:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ValidatorState_$145_storage",
																"typeString": "struct WethioValidator.ValidatorState storage ref"
															}
														},
														"id": 726,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "cap",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 140,
														"src": "6972:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 732,
																"name": "_cap",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 716,
																"src": "7042:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 727,
																		"name": "validatorsState",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 161,
																		"src": "7006:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidatorState_$145_storage_$",
																			"typeString": "mapping(address => struct WethioValidator.ValidatorState storage ref)"
																		}
																	},
																	"id": 729,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 728,
																		"name": "_candidate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 714,
																		"src": "7022:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7006:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_ValidatorState_$145_storage",
																		"typeString": "struct WethioValidator.ValidatorState storage ref"
																	}
																},
																"id": 730,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "cap",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 140,
																"src": "7006:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 731,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 68,
															"src": "7006:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 733,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7006:41:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6972:75:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 735,
												"nodeType": "ExpressionStatement",
												"src": "6972:75:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 736,
																	"name": "validatorsState",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "7057:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidatorState_$145_storage_$",
																		"typeString": "mapping(address => struct WethioValidator.ValidatorState storage ref)"
																	}
																},
																"id": 738,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 737,
																	"name": "_candidate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 714,
																	"src": "7073:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7057:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ValidatorState_$145_storage",
																	"typeString": "struct WethioValidator.ValidatorState storage ref"
																}
															},
															"id": 739,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "voters",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 144,
															"src": "7057:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 742,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 740,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 997,
																"src": "7092:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 741,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "7092:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7057:46:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 751,
																"name": "_cap",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 716,
																"src": "7157:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 743,
																			"name": "validatorsState",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 161,
																			"src": "7106:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidatorState_$145_storage_$",
																				"typeString": "mapping(address => struct WethioValidator.ValidatorState storage ref)"
																			}
																		},
																		"id": 745,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 744,
																			"name": "_candidate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 714,
																			"src": "7122:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7106:27:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ValidatorState_$145_storage",
																			"typeString": "struct WethioValidator.ValidatorState storage ref"
																		}
																	},
																	"id": 746,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "voters",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 144,
																	"src": "7106:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 749,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 747,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 997,
																		"src": "7141:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 748,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "7141:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7106:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 750,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 68,
															"src": "7106:50:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 752,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7106:56:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7057:105:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 754,
												"nodeType": "ExpressionStatement",
												"src": "7057:105:0"
											},
											{
												"assignments": [
													756
												],
												"declarations": [
													{
														"constant": false,
														"id": 756,
														"name": "withdrawBlockNumber",
														"nodeType": "VariableDeclaration",
														"scope": 799,
														"src": "7212:27:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 755,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7212:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 762,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 759,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 987,
																"src": "7265:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 760,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "7265:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 757,
															"name": "voterWithdrawDelay",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 182,
															"src": "7242:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 758,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 92,
														"src": "7242:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7242:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7212:66:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 763,
																	"name": "withdrawsState",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 157,
																	"src": "7288:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WithdrawState_$153_storage_$",
																		"typeString": "mapping(address => struct WethioValidator.WithdrawState storage ref)"
																	}
																},
																"id": 766,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 764,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 997,
																		"src": "7303:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 765,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "7303:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7288:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_WithdrawState_$153_storage",
																	"typeString": "struct WethioValidator.WithdrawState storage ref"
																}
															},
															"id": 767,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "caps",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 149,
															"src": "7288:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 769,
														"indexExpression": {
															"argumentTypes": null,
															"id": 768,
															"name": "withdrawBlockNumber",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 756,
															"src": "7320:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7288:52:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 778,
																"name": "_cap",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 716,
																"src": "7400:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 770,
																			"name": "withdrawsState",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 157,
																			"src": "7343:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WithdrawState_$153_storage_$",
																				"typeString": "mapping(address => struct WethioValidator.WithdrawState storage ref)"
																			}
																		},
																		"id": 773,
																		"indexExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 771,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 997,
																				"src": "7358:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 772,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "7358:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7343:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_WithdrawState_$153_storage",
																			"typeString": "struct WethioValidator.WithdrawState storage ref"
																		}
																	},
																	"id": 774,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "caps",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 149,
																	"src": "7343:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 776,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 775,
																	"name": "withdrawBlockNumber",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 756,
																	"src": "7375:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7343:52:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 777,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 92,
															"src": "7343:56:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 779,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7343:62:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7288:117:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 781,
												"nodeType": "ExpressionStatement",
												"src": "7288:117:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 788,
															"name": "withdrawBlockNumber",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 756,
															"src": "7460:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 782,
																	"name": "withdrawsState",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 157,
																	"src": "7415:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WithdrawState_$153_storage_$",
																		"typeString": "mapping(address => struct WethioValidator.WithdrawState storage ref)"
																	}
																},
																"id": 785,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 783,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 997,
																		"src": "7430:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 784,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "7430:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7415:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_WithdrawState_$153_storage",
																	"typeString": "struct WethioValidator.WithdrawState storage ref"
																}
															},
															"id": 786,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "blockNumbers",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 152,
															"src": "7415:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 787,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "7415:44:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) returns (uint256)"
														}
													},
													"id": 789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7415:65:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 790,
												"nodeType": "ExpressionStatement",
												"src": "7415:65:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 792,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 997,
																"src": "7503:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 793,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "7503:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 794,
															"name": "_candidate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 714,
															"src": "7515:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 795,
															"name": "_cap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 716,
															"src": "7527:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 791,
														"name": "Unvote",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 112,
														"src": "7496:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7496:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 797,
												"nodeType": "EmitStatement",
												"src": "7491:41:0"
											}
										]
									},
									"documentation": null,
									"id": 799,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"id": 719,
													"name": "_candidate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 714,
													"src": "6944:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"argumentTypes": null,
													"id": 720,
													"name": "_cap",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 716,
													"src": "6956:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 721,
											"modifierName": {
												"argumentTypes": null,
												"id": 718,
												"name": "onlyValidVote",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 304,
												"src": "6930:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_address_$_t_uint256_$",
													"typeString": "modifier (address,uint256)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "6930:31:0"
										}
									],
									"name": "unvote",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"name": "_candidate",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "6889:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 713,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6889:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 716,
												"name": "_cap",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "6909:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 715,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6909:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6888:34:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6962:0:0"
									},
									"scope": 982,
									"src": "6873:666:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 925,
										"nodeType": "Block",
										"src": "7636:888:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 810,
																"name": "validatorsState",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 161,
																"src": "7646:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidatorState_$145_storage_$",
																	"typeString": "mapping(address => struct WethioValidator.ValidatorState storage ref)"
																}
															},
															"id": 812,
															"indexExpression": {
																"argumentTypes": null,
																"id": 811,
																"name": "_candidate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 801,
																"src": "7662:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7646:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ValidatorState_$145_storage",
																"typeString": "struct WethioValidator.ValidatorState storage ref"
															}
														},
														"id": 813,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "isCandidate",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 138,
														"src": "7646:39:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 814,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7688:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "7646:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 816,
												"nodeType": "ExpressionStatement",
												"src": "7646:47:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 822,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 817,
														"name": "candidateCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "7703:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "31",
																"id": 820,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7739:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 818,
																"name": "candidateCount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 172,
																"src": "7720:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 819,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 68,
															"src": "7720:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 821,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7720:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7703:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 823,
												"nodeType": "ExpressionStatement",
												"src": "7703:38:0"
											},
											{
												"body": {
													"id": 848,
													"nodeType": "Block",
													"src": "7799:133:0",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 839,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 835,
																		"name": "candidates",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 169,
																		"src": "7817:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 837,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 836,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 825,
																		"src": "7828:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7817:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 838,
																	"name": "_candidate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 801,
																	"src": "7834:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7817:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 847,
															"nodeType": "IfStatement",
															"src": "7813:109:0",
															"trueBody": {
																"id": 846,
																"nodeType": "Block",
																"src": "7846:76:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 843,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "delete",
																			"prefix": true,
																			"src": "7864:20:0",
																			"subExpression": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 840,
																					"name": "candidates",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 169,
																					"src": "7871:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 842,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 841,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 825,
																					"src": "7882:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "7871:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 844,
																		"nodeType": "ExpressionStatement",
																		"src": "7864:20:0"
																	},
																	{
																		"id": 845,
																		"nodeType": "Break",
																		"src": "7902:5:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 831,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 828,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 825,
														"src": "7771:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 829,
															"name": "candidates",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "7775:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 830,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "7775:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7771:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 849,
												"initializationExpression": {
													"assignments": [
														825
													],
													"declarations": [
														{
															"constant": false,
															"id": 825,
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 926,
															"src": "7756:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 824,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "7756:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 827,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 826,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7768:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "7756:13:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 833,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "7794:3:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 832,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 825,
															"src": "7794:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 834,
													"nodeType": "ExpressionStatement",
													"src": "7794:3:0"
												},
												"nodeType": "ForStatement",
												"src": "7751:181:0"
											},
											{
												"assignments": [
													851
												],
												"declarations": [
													{
														"constant": false,
														"id": 851,
														"name": "cap",
														"nodeType": "VariableDeclaration",
														"scope": 926,
														"src": "7941:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 850,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7941:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 859,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 852,
																"name": "validatorsState",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 161,
																"src": "7955:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidatorState_$145_storage_$",
																	"typeString": "mapping(address => struct WethioValidator.ValidatorState storage ref)"
																}
															},
															"id": 854,
															"indexExpression": {
																"argumentTypes": null,
																"id": 853,
																"name": "_candidate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 801,
																"src": "7971:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7955:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ValidatorState_$145_storage",
																"typeString": "struct WethioValidator.ValidatorState storage ref"
															}
														},
														"id": 855,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "voters",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 144,
														"src": "7955:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 858,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 856,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 997,
															"src": "7990:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 857,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "7990:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7955:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7941:60:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 860,
																"name": "validatorsState",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 161,
																"src": "8011:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidatorState_$145_storage_$",
																	"typeString": "mapping(address => struct WethioValidator.ValidatorState storage ref)"
																}
															},
															"id": 862,
															"indexExpression": {
																"argumentTypes": null,
																"id": 861,
																"name": "_candidate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 801,
																"src": "8027:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8011:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ValidatorState_$145_storage",
																"typeString": "struct WethioValidator.ValidatorState storage ref"
															}
														},
														"id": 863,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "cap",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 140,
														"src": "8011:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 869,
																"name": "cap",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 851,
																"src": "8081:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 864,
																		"name": "validatorsState",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 161,
																		"src": "8045:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidatorState_$145_storage_$",
																			"typeString": "mapping(address => struct WethioValidator.ValidatorState storage ref)"
																		}
																	},
																	"id": 866,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 865,
																		"name": "_candidate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 801,
																		"src": "8061:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "8045:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_ValidatorState_$145_storage",
																		"typeString": "struct WethioValidator.ValidatorState storage ref"
																	}
																},
																"id": 867,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "cap",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 140,
																"src": "8045:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 868,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 68,
															"src": "8045:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 870,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8045:40:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8011:74:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 872,
												"nodeType": "ExpressionStatement",
												"src": "8011:74:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 873,
																	"name": "validatorsState",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "8095:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidatorState_$145_storage_$",
																		"typeString": "mapping(address => struct WethioValidator.ValidatorState storage ref)"
																	}
																},
																"id": 875,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 874,
																	"name": "_candidate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 801,
																	"src": "8111:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8095:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ValidatorState_$145_storage",
																	"typeString": "struct WethioValidator.ValidatorState storage ref"
																}
															},
															"id": 876,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "voters",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 144,
															"src": "8095:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 879,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 877,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 997,
																"src": "8130:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 878,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "8130:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8095:46:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 880,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8144:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8095:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 882,
												"nodeType": "ExpressionStatement",
												"src": "8095:50:0"
											},
											{
												"assignments": [
													884
												],
												"declarations": [
													{
														"constant": false,
														"id": 884,
														"name": "withdrawBlockNumber",
														"nodeType": "VariableDeclaration",
														"scope": 926,
														"src": "8201:27:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 883,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8201:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 890,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 887,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 987,
																"src": "8258:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 888,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "8258:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 885,
															"name": "candidateWithdrawDelay",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "8231:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 886,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 92,
														"src": "8231:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8231:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8201:70:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 891,
																	"name": "withdrawsState",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 157,
																	"src": "8281:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WithdrawState_$153_storage_$",
																		"typeString": "mapping(address => struct WethioValidator.WithdrawState storage ref)"
																	}
																},
																"id": 894,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 892,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 997,
																		"src": "8296:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 893,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "8296:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8281:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_WithdrawState_$153_storage",
																	"typeString": "struct WethioValidator.WithdrawState storage ref"
																}
															},
															"id": 895,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "caps",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 149,
															"src": "8281:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 897,
														"indexExpression": {
															"argumentTypes": null,
															"id": 896,
															"name": "withdrawBlockNumber",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 884,
															"src": "8313:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8281:52:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 906,
																"name": "cap",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 851,
																"src": "8393:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 898,
																			"name": "withdrawsState",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 157,
																			"src": "8336:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WithdrawState_$153_storage_$",
																				"typeString": "mapping(address => struct WethioValidator.WithdrawState storage ref)"
																			}
																		},
																		"id": 901,
																		"indexExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 899,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 997,
																				"src": "8351:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 900,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "8351:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8336:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_WithdrawState_$153_storage",
																			"typeString": "struct WethioValidator.WithdrawState storage ref"
																		}
																	},
																	"id": 902,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "caps",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 149,
																	"src": "8336:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 904,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 903,
																	"name": "withdrawBlockNumber",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 884,
																	"src": "8368:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8336:52:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 905,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 92,
															"src": "8336:56:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 907,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8336:61:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8281:116:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 909,
												"nodeType": "ExpressionStatement",
												"src": "8281:116:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 916,
															"name": "withdrawBlockNumber",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 884,
															"src": "8452:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 910,
																	"name": "withdrawsState",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 157,
																	"src": "8407:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WithdrawState_$153_storage_$",
																		"typeString": "mapping(address => struct WethioValidator.WithdrawState storage ref)"
																	}
																},
																"id": 913,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 911,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 997,
																		"src": "8422:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 912,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "8422:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8407:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_WithdrawState_$153_storage",
																	"typeString": "struct WethioValidator.WithdrawState storage ref"
																}
															},
															"id": 914,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "blockNumbers",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 152,
															"src": "8407:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 915,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "8407:44:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) returns (uint256)"
														}
													},
													"id": 917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8407:65:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 918,
												"nodeType": "ExpressionStatement",
												"src": "8407:65:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 920,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 997,
																"src": "8494:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 921,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "8494:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 922,
															"name": "_candidate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 801,
															"src": "8506:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 919,
														"name": "Resign",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 126,
														"src": "8487:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8487:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 924,
												"nodeType": "EmitStatement",
												"src": "8482:35:0"
											}
										]
									},
									"documentation": null,
									"id": 926,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"id": 804,
													"name": "_candidate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 801,
													"src": "7598:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 805,
											"modifierName": {
												"argumentTypes": null,
												"id": 803,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 220,
												"src": "7588:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_address_$",
													"typeString": "modifier (address)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "7588:21:0"
										},
										{
											"arguments": [
												{
													"argumentTypes": null,
													"id": 807,
													"name": "_candidate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 801,
													"src": "7624:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 808,
											"modifierName": {
												"argumentTypes": null,
												"id": 806,
												"name": "onlyCandidate",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 233,
												"src": "7610:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_address_$",
													"typeString": "modifier (address)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "7610:25:0"
										}
									],
									"name": "resign",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 801,
												"name": "_candidate",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "7561:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 800,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7561:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7560:20:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7636:0:0"
									},
									"scope": 982,
									"src": "7545:979:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 980,
										"nodeType": "Block",
										"src": "8630:290:0",
										"statements": [
											{
												"assignments": [
													938
												],
												"declarations": [
													{
														"constant": false,
														"id": 938,
														"name": "cap",
														"nodeType": "VariableDeclaration",
														"scope": 981,
														"src": "8640:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 937,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8640:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 946,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 939,
																"name": "withdrawsState",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 157,
																"src": "8654:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WithdrawState_$153_storage_$",
																	"typeString": "mapping(address => struct WethioValidator.WithdrawState storage ref)"
																}
															},
															"id": 942,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 940,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 997,
																	"src": "8669:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 941,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "8669:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8654:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_WithdrawState_$153_storage",
																"typeString": "struct WethioValidator.WithdrawState storage ref"
															}
														},
														"id": 943,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "caps",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 149,
														"src": "8654:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 945,
													"indexExpression": {
														"argumentTypes": null,
														"id": 944,
														"name": "_blockNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 928,
														"src": "8686:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8654:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8640:59:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 954,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "8709:52:0",
													"subExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 947,
																	"name": "withdrawsState",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 157,
																	"src": "8716:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WithdrawState_$153_storage_$",
																		"typeString": "mapping(address => struct WethioValidator.WithdrawState storage ref)"
																	}
																},
																"id": 950,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 948,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 997,
																		"src": "8731:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 949,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "8731:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8716:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_WithdrawState_$153_storage",
																	"typeString": "struct WethioValidator.WithdrawState storage ref"
																}
															},
															"id": 951,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "caps",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 149,
															"src": "8716:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 953,
														"indexExpression": {
															"argumentTypes": null,
															"id": 952,
															"name": "_blockNumber",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 928,
															"src": "8748:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8716:45:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 955,
												"nodeType": "ExpressionStatement",
												"src": "8709:52:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "8771:54:0",
													"subExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 956,
																	"name": "withdrawsState",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 157,
																	"src": "8778:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WithdrawState_$153_storage_$",
																		"typeString": "mapping(address => struct WethioValidator.WithdrawState storage ref)"
																	}
																},
																"id": 959,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 957,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 997,
																		"src": "8793:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 958,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "8793:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8778:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_WithdrawState_$153_storage",
																	"typeString": "struct WethioValidator.WithdrawState storage ref"
																}
															},
															"id": 960,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "blockNumbers",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 152,
															"src": "8778:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 962,
														"indexExpression": {
															"argumentTypes": null,
															"id": 961,
															"name": "_index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 930,
															"src": "8818:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8778:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 964,
												"nodeType": "ExpressionStatement",
												"src": "8771:54:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 970,
															"name": "cap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 938,
															"src": "8855:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 965,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 997,
																"src": "8835:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 968,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "8835:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 969,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "8835:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8835:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 972,
												"nodeType": "ExpressionStatement",
												"src": "8835:24:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 974,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 997,
																"src": "8883:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 975,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "8883:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 976,
															"name": "_blockNumber",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 928,
															"src": "8895:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 977,
															"name": "cap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 938,
															"src": "8909:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 973,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 134,
														"src": "8874:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8874:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 979,
												"nodeType": "EmitStatement",
												"src": "8869:44:0"
											}
										]
									},
									"documentation": null,
									"id": 981,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"id": 933,
													"name": "_blockNumber",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 928,
													"src": "8608:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												{
													"argumentTypes": null,
													"id": 934,
													"name": "_index",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 930,
													"src": "8622:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 935,
											"modifierName": {
												"argumentTypes": null,
												"id": 932,
												"name": "onlyValidWithdraw",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 349,
												"src": "8590:17:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_uint256_$_t_uint256_$",
													"typeString": "modifier (uint256,uint256)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "8590:39:0"
										}
									],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 928,
												"name": "_blockNumber",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "8548:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 927,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8548:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 930,
												"name": "_index",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "8570:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 929,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8570:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8547:35:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 936,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8630:0:0"
									},
									"scope": 982,
									"src": "8530:390:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 983,
							"src": "1147:7775:0"
						}
					],
					"src": "0:8923:0"
				},
				"id": 0
			}
		}
	}
}